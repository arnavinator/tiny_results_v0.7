   1                             		.file	"quantize.cc"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text._ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcm,"ax",@progbits
   6                             	__ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcm:
   7                             	.LFB2229:
   8                             		.file 1 "../src/tensorflow/lite/micro/kernels/quantize.cc"
   1:../src/tensorflow/lite/micro/kernels/quantize.cc **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
   3:../src/tensorflow/lite/micro/kernels/quantize.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow/lite/micro/kernels/quantize.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow/lite/micro/kernels/quantize.cc **** You may obtain a copy of the License at
   6:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
   7:../src/tensorflow/lite/micro/kernels/quantize.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
   9:../src/tensorflow/lite/micro/kernels/quantize.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow/lite/micro/kernels/quantize.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow/lite/micro/kernels/quantize.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow/lite/micro/kernels/quantize.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow/lite/micro/kernels/quantize.cc **** limitations under the License.
  14:../src/tensorflow/lite/micro/kernels/quantize.cc **** ==============================================================================*/
  15:../src/tensorflow/lite/micro/kernels/quantize.cc **** #include "tensorflow/lite/kernels/internal/reference/quantize.h"
  16:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  17:../src/tensorflow/lite/micro/kernels/quantize.cc **** #include "tensorflow/lite/c/common.h"
  18:../src/tensorflow/lite/micro/kernels/quantize.cc **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  19:../src/tensorflow/lite/micro/kernels/quantize.cc **** #include "tensorflow/lite/kernels/internal/reference/requantize.h"
  20:../src/tensorflow/lite/micro/kernels/quantize.cc **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  21:../src/tensorflow/lite/micro/kernels/quantize.cc **** #include "tensorflow/lite/kernels/kernel_util.h"
  22:../src/tensorflow/lite/micro/kernels/quantize.cc **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  23:../src/tensorflow/lite/micro/kernels/quantize.cc **** #include "tensorflow/lite/micro/micro_utils.h"
  24:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  25:../src/tensorflow/lite/micro/kernels/quantize.cc **** namespace tflite {
  26:../src/tensorflow/lite/micro/kernels/quantize.cc **** namespace {
  27:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  28:../src/tensorflow/lite/micro/kernels/quantize.cc **** struct OpData {
  29:../src/tensorflow/lite/micro/kernels/quantize.cc ****   tflite::QuantizationParams quantization_params;
  30:../src/tensorflow/lite/micro/kernels/quantize.cc ****   // The scaling factor from input to output (aka the 'real multiplier') can
  31:../src/tensorflow/lite/micro/kernels/quantize.cc ****   // be represented as a fixed point multiplier plus a left shift.
  32:../src/tensorflow/lite/micro/kernels/quantize.cc ****   int32_t output_multiplier;
  33:../src/tensorflow/lite/micro/kernels/quantize.cc ****   int output_shift;
  34:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  35:../src/tensorflow/lite/micro/kernels/quantize.cc ****   int32_t input_zero_point;
  36:../src/tensorflow/lite/micro/kernels/quantize.cc **** };
  37:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  38:../src/tensorflow/lite/micro/kernels/quantize.cc **** void* Init(TfLiteContext* context, const char* buffer, size_t length) {
   9                             		.loc 1 38 71
  10                             	.LVL0:
  39:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  11                             		.loc 1 39 3
  12 0000 AB 95                   		mov.L	56[r1], r5
  13 0002 61 05                   		cmp	#0, r5
  14 0004 17                      		beq	.L4
  40:../src/tensorflow/lite/micro/kernels/quantize.cc ****   return context->AllocatePersistentBuffer(context, sizeof(OpData));
  15                             		.loc 1 40 3
  16                             		.loc 1 40 43 is_stmt 0
  17 0005 75 42 14                		mov.L	#20, r2
  18                             	.LVL1:
  19 0008 7F 15                   		jsr	r5
  20                             	.LVL2:
  41:../src/tensorflow/lite/micro/kernels/quantize.cc **** }
  21                             		.loc 1 41 1
  22 000a 02                      		rts
  23                             	.LVL3:
  24                             	.L4:
  39:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  25                             		.loc 1 39 3 discriminator 1
  26 000b 05 00 00 00             		bsr	_abort
  27                             	.LVL4:
  28                             	.LFE2229:
  30                             		.section	.text._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode,"ax",@progbits
  32                             	__ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode:
  33                             	.LFB2230:
  42:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  43:../src/tensorflow/lite/micro/kernels/quantize.cc **** TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {
  34                             		.loc 1 43 64 is_stmt 1
  35                             	.LVL5:
  36 0000 6E 6C                   		pushm	r6-r12
  37                             	.LCFI0:
  38 0002 71 00 E4                		add	#-28, r0
  39                             	.LCFI1:
  44:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
  40                             		.loc 1 44 3
  41 0005 A9 26                   		mov.L	16[r2], r6
  42 0007 61 06                   		cmp	#0, r6
  43 0009 3A 11 02                		beq	.L34
  44 000c EF 27                   		mov.L	r2, r7
  45 000e EF 1A                   		mov.L	r1, r10
  45:../src/tensorflow/lite/micro/kernels/quantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
  46                             		.loc 1 45 3
  47                             	.LVL6:
  46:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  47:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);
  48                             		.loc 1 47 3
  49                             		.loc 1 47 3
  50                             	.LBB180:
  51                             	.LBB181:
  52                             		.file 2 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
  53                             		.loc 2 152 48
  54                             		.loc 2 152 69 is_stmt 0
  55 0010 EC 25                   		mov.L	[r2], r5
  56 0012 EC 55                   		mov.L	[r5], r5
  57                             	.LBE181:
  58                             	.LBE180:
  59                             		.loc 1 47 3
  60 0014 61 15                   		cmp	#1, r5
  61 0016 21 39                   		bne	.L35
  48:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  62                             		.loc 1 48 3 is_stmt 1
  63                             		.loc 1 48 3
  64                             	.LVL7:
  65                             	.LBB182:
  66                             	.LBB183:
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
  67                             		.loc 2 153 49
  68                             		.loc 2 153 71 is_stmt 0
  69 0018 A8 2C                   		mov.L	4[r2], r4
  70 001a EC 4B                   		mov.L	[r4], r11
  71                             	.LBE183:
  72                             	.LBE182:
  73                             		.loc 1 48 3
  74 001c 61 1B                   		cmp	#1, r11
  75 001e 20 60                   		beq	.L9
  76                             		.loc 1 48 3 is_stmt 1 discriminator 1
  77                             		.loc 1 48 3 discriminator 1
  78                             	.LVL8:
  79                             		.loc 2 153 49 discriminator 1
  80                             		.loc 1 48 3 is_stmt 0 discriminator 1
  81 0020 ED 1A 05                		mov.L	20[r1], r10
  82 0023 A1 85                   		mov.L	r5, 24[r0]
  83 0025 E7 0B 05                		mov.L	r11, 20[r0]
  84 0028 F9 02 04 00 00 00 00    		mov.L	#.LC1, 16[r0]
  85 002f F9 02 03 5D 00 00 00    		mov.L	#.LC5, 12[r0]
  86 0036 3E 02 30                		mov.L	#48, 8[r0]
  87 0039 F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
  88 0040 EF 57                   		mov.L	r5, r7
  89 0042 F8 02 43 00 00 00       		mov.L	#.LC4, [r0]
  90 0048 7F 1A                   		jsr	r10
  91                             	.LVL9:
  92                             		.loc 1 48 3 is_stmt 1 discriminator 1
  93                             		.balign 8,3,1
  94                             	.L5:
  49:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  50:../src/tensorflow/lite/micro/kernels/quantize.cc ****   const TfLiteTensor* input = GetInput(context, node, 0);
  51:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, input != nullptr);
  52:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TfLiteTensor* output = GetOutput(context, node, 0);
  53:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, output != nullptr);
  54:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  55:../src/tensorflow/lite/micro/kernels/quantize.cc ****   // TODO(b/128934713): Add support for fixed-point per-channel quantization.
  56:../src/tensorflow/lite/micro/kernels/quantize.cc ****   // Currently this only support affine per-layer quantization.
  57:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE_EQ(context, output->quantization.type,
  58:../src/tensorflow/lite/micro/kernels/quantize.cc ****                     kTfLiteAffineQuantization);
  59:../src/tensorflow/lite/micro/kernels/quantize.cc ****   const auto* affine_quantization =
  60:../src/tensorflow/lite/micro/kernels/quantize.cc ****       reinterpret_cast<TfLiteAffineQuantization*>(output->quantization.params);
  61:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization);
  62:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale);
  63:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale->size == 1);
  64:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  65:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, input->type == kTfLiteFloat32 ||
  66:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               input->type == kTfLiteInt16 ||
  67:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               input->type == kTfLiteInt8);
  68:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, output->type == kTfLiteUInt8 ||
  69:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               output->type == kTfLiteInt8 ||
  70:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               output->type == kTfLiteInt16 ||
  71:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               output->type == kTfLiteInt32);
  72:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  73:../src/tensorflow/lite/micro/kernels/quantize.cc ****   if ((input->type == kTfLiteInt16 && output->type == kTfLiteInt8) ||
  74:../src/tensorflow/lite/micro/kernels/quantize.cc ****       (input->type == kTfLiteInt8 && output->type == kTfLiteInt8) ||
  75:../src/tensorflow/lite/micro/kernels/quantize.cc ****       (input->type == kTfLiteInt16 && output->type == kTfLiteInt16) ||
  76:../src/tensorflow/lite/micro/kernels/quantize.cc ****       (input->type == kTfLiteInt16 && output->type == kTfLiteInt32)) {
  77:../src/tensorflow/lite/micro/kernels/quantize.cc ****     double effective_scale = static_cast<double>(input->params.scale) /
  78:../src/tensorflow/lite/micro/kernels/quantize.cc ****                              static_cast<double>(output->params.scale);
  79:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  80:../src/tensorflow/lite/micro/kernels/quantize.cc ****     QuantizeMultiplier(effective_scale, &data->output_multiplier,
  81:../src/tensorflow/lite/micro/kernels/quantize.cc ****                        &data->output_shift);
  82:../src/tensorflow/lite/micro/kernels/quantize.cc ****   }
  83:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  84:../src/tensorflow/lite/micro/kernels/quantize.cc ****   data->quantization_params.zero_point = output->params.zero_point;
  85:../src/tensorflow/lite/micro/kernels/quantize.cc ****   data->quantization_params.scale = static_cast<double>(output->params.scale);
  86:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  87:../src/tensorflow/lite/micro/kernels/quantize.cc ****   data->input_zero_point = input->params.zero_point;
  88:../src/tensorflow/lite/micro/kernels/quantize.cc ****   return kTfLiteOk;
  89:../src/tensorflow/lite/micro/kernels/quantize.cc **** }
  95                             		.loc 1 89 1 is_stmt 0
  96 004a EF 71                   		mov.L	r7, r1
  97 004c 3F 6C 0E                		rtsd	#56, r6-r12
  98                             	.LVL10:
  99                             	.L35:
  47:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 100                             		.loc 1 47 3 is_stmt 1 discriminator 1
  47:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 101                             		.loc 1 47 3 discriminator 1
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 102                             		.loc 2 152 48 discriminator 1
  47:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 103                             		.loc 1 47 3 is_stmt 0 discriminator 1
 104 004f ED 1A 05                		mov.L	20[r1], r10
 105 0052 3E 06 01                		mov.L	#1, 24[r0]
 106 0055 A1 0D                   		mov.L	r5, 20[r0]
 107 0057 F9 02 04 00 00 00 00    		mov.L	#.LC1, 16[r0]
 108 005e F9 02 03 02 00 00 00    		mov.L	#.LC2, 12[r0]
 109 0065 3E 02 2F                		mov.L	#47, 8[r0]
 110 0068 F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 111 006f 66 17                   		mov.L	#1, r7
 112 0071 F8 02 43 00 00 00       		mov.L	#.LC4, [r0]
 113 0077 7F 1A                   		jsr	r10
 114                             	.LVL11:
  47:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 115                             		.loc 1 47 3 is_stmt 1 discriminator 1
 116                             		.loc 1 89 1 is_stmt 0 discriminator 1
 117 0079 EF 71                   		mov.L	r7, r1
 118 007b 3F 6C 0E                		rtsd	#56, r6-r12
 119                             	.LVL12:
 120                             	.L9:
  50:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, input != nullptr);
 121                             		.loc 1 50 3 is_stmt 1
  50:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, input != nullptr);
 122                             		.loc 1 50 39 is_stmt 0
 123 007e 66 03                   		mov.L	#0, r3
 124 0080 05 00 00 00             		bsr	__ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 125                             	.LVL13:
  51:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TfLiteTensor* output = GetOutput(context, node, 0);
 126                             		.loc 1 51 3
 127 0084 71 19 00                		add	#0, r1, r9
 128 0087 20 50                   		beq	.L36
  52:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, output != nullptr);
 129                             		.loc 1 52 3 is_stmt 1
  52:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, output != nullptr);
 130                             		.loc 1 52 35 is_stmt 0
 131 0089 66 03                   		mov.L	#0, r3
 132 008b EF 72                   		mov.L	r7, r2
 133 008d EF A1                   		mov.L	r10, r1
 134 008f 05 00 00 00             		bsr	__ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
 135                             	.LVL14:
  53:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 136                             		.loc 1 53 3
 137 0093 71 1C 00                		add	#0, r1, r12
 138 0096 3A 93 00                		beq	.L37
  57:../src/tensorflow/lite/micro/kernels/quantize.cc ****                     kTfLiteAffineQuantization);
 139                             		.loc 1 57 3 is_stmt 1
  57:../src/tensorflow/lite/micro/kernels/quantize.cc ****                     kTfLiteAffineQuantization);
 140                             		.loc 1 57 3
 141 0099 ED C7 0C                		mov.L	48[r12], r7
 142                             	.LVL15:
 143 009c 61 17                   		cmp	#1, r7
 144 009e 21 5C                   		bne	.L38
  59:../src/tensorflow/lite/micro/kernels/quantize.cc ****       reinterpret_cast<TfLiteAffineQuantization*>(output->quantization.params);
 145                             		.loc 1 59 3
  60:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization);
 146                             		.loc 1 60 72 is_stmt 0
 147 00a0 ED C5 0D                		mov.L	52[r12], r5
 148                             	.LVL16:
  61:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale);
 149                             		.loc 1 61 3 is_stmt 1
  61:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale);
 150                             		.loc 1 61 3
 151 00a3 61 05                   		cmp	#0, r5
 152 00a5 3A 0C 01                		beq	.L39
  62:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale->size == 1);
 153                             		.loc 1 62 3
  62:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale->size == 1);
 154                             		.loc 1 62 3
 155 00a8 EC 55                   		mov.L	[r5], r5
 156                             	.LVL17:
 157 00aa 61 05                   		cmp	#0, r5
 158 00ac 3A 26 01                		beq	.L40
  63:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 159                             		.loc 1 63 3
  63:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 160                             		.loc 1 63 3
 161 00af EC 55                   		mov.L	[r5], r5
 162 00b1 61 15                   		cmp	#1, r5
 163 00b3 3A 85 00                		beq	.L15
  63:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 164                             		.loc 1 63 3 discriminator 1
  63:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 165                             		.loc 1 63 3 discriminator 1
 166 00b6 ED A5 05                		mov.L	20[r10], r5
 167 00b9 F9 02 03 0B 01 00 00    		mov.L	#.LC13, 12[r0]
 168                             	.LVL18:
 169 00c0 3E 02 3F                		mov.L	#63, 8[r0]
 170 00c3 F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 171 00ca EF A1                   		mov.L	r10, r1
 172 00cc F8 02 7F 00 00 00       		mov.L	#.LC7, [r0]
 173 00d2 7F 15                   		jsr	r5
 174                             	.LVL19:
  63:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 175                             		.loc 1 63 3 discriminator 1
 176 00d4 38 76 FF                		bra	.L5
 177                             	.LVL20:
 178                             	.L36:
  51:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TfLiteTensor* output = GetOutput(context, node, 0);
 179                             		.loc 1 51 3 discriminator 1
  51:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TfLiteTensor* output = GetOutput(context, node, 0);
 180                             		.loc 1 51 3 discriminator 1
 181 00d7 ED A5 05                		mov.L	20[r10], r5
 182 00da F9 02 03 6E 00 00 00    		mov.L	#.LC6, 12[r0]
 183 00e1 3E 02 33                		mov.L	#51, 8[r0]
 184                             	.L33:
  53:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 185                             		.loc 1 53 3 is_stmt 0 discriminator 1
 186 00e4 F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 187 00eb EF A1                   		mov.L	r10, r1
 188 00ed F8 02 7F 00 00 00       		mov.L	#.LC7, [r0]
 189 00f3 EF B7                   		mov.L	r11, r7
 190                             	.LVL21:
 191 00f5 7F 15                   		jsr	r5
 192                             	.LVL22:
  53:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 193                             		.loc 1 53 3 is_stmt 1 discriminator 1
 194 00f7 38 53 FF                		bra	.L5
 195                             	.L38:
  57:../src/tensorflow/lite/micro/kernels/quantize.cc ****                     kTfLiteAffineQuantization);
 196                             		.loc 1 57 3 discriminator 1
  57:../src/tensorflow/lite/micro/kernels/quantize.cc ****                     kTfLiteAffineQuantization);
 197                             		.loc 1 57 3 discriminator 1
 198 00fa ED A5 05                		mov.L	20[r10], r5
 199 00fd A1 0F                   		mov.L	r7, 20[r0]
 200 00ff E7 0B 06                		mov.L	r11, 24[r0]
 201 0102 F9 02 04 A8 00 00 00    		mov.L	#.LC9, 16[r0]
 202 0109 F9 02 03 C2 00 00 00    		mov.L	#.LC10, 12[r0]
 203 0110 3E 02 3A                		mov.L	#58, 8[r0]
 204 0113 F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 205 011a EF A1                   		mov.L	r10, r1
 206 011c F8 02 43 00 00 00       		mov.L	#.LC4, [r0]
 207 0122 EF B7                   		mov.L	r11, r7
 208 0124 7F 15                   		jsr	r5
 209                             	.LVL23:
  57:../src/tensorflow/lite/micro/kernels/quantize.cc ****                     kTfLiteAffineQuantization);
 210                             		.loc 1 57 3 discriminator 1
 211 0126 38 24 FF                		bra	.L5
 212                             	.LVL24:
 213                             	.L37:
  53:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 214                             		.loc 1 53 3 discriminator 1
  53:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 215                             		.loc 1 53 3 discriminator 1
 216 0129 ED A5 05                		mov.L	20[r10], r5
 217 012c F9 02 03 96 00 00 00    		mov.L	#.LC8, 12[r0]
 218 0133 3E 02 35                		mov.L	#53, 8[r0]
 219 0136 2E AE                   		bra	.L33
 220                             	.LVL25:
 221                             	.L15:
  65:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               input->type == kTfLiteInt16 ||
 222                             		.loc 1 65 3
  65:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               input->type == kTfLiteInt16 ||
 223                             		.loc 1 65 3
 224 0138 EC 95                   		mov.L	[r9], r5
 225 013a EF 54                   		mov.L	r5, r4
 226 013c 7A 34                   		bclr	#3, r4
 227 013e 61 14                   		cmp	#1, r4
 228 0140 20 27                   		beq	.L16
  65:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               input->type == kTfLiteInt16 ||
 229                             		.loc 1 65 3 is_stmt 0 discriminator 1
 230 0142 61 75                   		cmp	#7, r5
 231 0144 20 23                   		beq	.L16
  65:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               input->type == kTfLiteInt16 ||
 232                             		.loc 1 65 3 is_stmt 1 discriminator 3
  65:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               input->type == kTfLiteInt16 ||
 233                             		.loc 1 65 3 discriminator 3
 234 0146 ED A5 05                		mov.L	20[r10], r5
 235 0149 F9 02 03 31 01 00 00    		mov.L	#.LC14, 12[r0]
 236                             	.LVL26:
 237 0150 3E 02 43                		mov.L	#0x43, 8[r0]
 238 0153 F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 239 015a EF A1                   		mov.L	r10, r1
 240 015c F8 02 7F 00 00 00       		mov.L	#.LC7, [r0]
 241 0162 7F 15                   		jsr	r5
 242                             	.LVL27:
  65:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               input->type == kTfLiteInt16 ||
 243                             		.loc 1 65 3 discriminator 3
 244 0164 38 E6 FE                		bra	.L5
 245                             	.LVL28:
 246                             	.L16:
  68:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               output->type == kTfLiteInt8 ||
 247                             		.loc 1 68 3
  68:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               output->type == kTfLiteInt8 ||
 248                             		.loc 1 68 3
 249 0167 EC C4                   		mov.L	[r12], r4
 250 0169 61 94                   		cmp	#9, r4
 251 016b 24 0D                   		bgtu	.L17
  68:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               output->type == kTfLiteInt8 ||
 252                             		.loc 1 68 3 is_stmt 0 discriminator 3
 253 016d FB 3A 8C 02             		mov.L	#0x28c, r3
 254 0171 FD 60 43                		shlr	r4, r3
 255 0174 7C 03                   		btst	#0, r3
 256 0176 21 23                   		bne	.L18
 257                             		.balign 8,3,1
 258                             	.L17:
  68:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               output->type == kTfLiteInt8 ||
 259                             		.loc 1 68 3 is_stmt 1 discriminator 4
  68:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               output->type == kTfLiteInt8 ||
 260                             		.loc 1 68 3 discriminator 4
 261 0178 ED A5 05                		mov.L	20[r10], r5
 262 017b F9 02 03 8C 01 00 00    		mov.L	#.LC15, 12[r0]
 263                             	.LVL29:
 264 0182 3E 02 47                		mov.L	#0x47, 8[r0]
 265 0185 F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 266 018c EF A1                   		mov.L	r10, r1
 267 018e F8 02 7F 00 00 00       		mov.L	#.LC7, [r0]
 268 0194 7F 15                   		jsr	r5
 269                             	.LVL30:
  68:../src/tensorflow/lite/micro/kernels/quantize.cc ****                               output->type == kTfLiteInt8 ||
 270                             		.loc 1 68 3 discriminator 4
 271 0196 38 B4 FE                		bra	.L5
 272                             	.LVL31:
 273                             	.L18:
  73:../src/tensorflow/lite/micro/kernels/quantize.cc ****       (input->type == kTfLiteInt8 && output->type == kTfLiteInt8) ||
 274                             		.loc 1 73 3
 275                             	.LBB184:
 276 0199 61 75                   		cmp	#7, r5
 277 019b 20 72                   		beq	.L19
  73:../src/tensorflow/lite/micro/kernels/quantize.cc ****       (input->type == kTfLiteInt8 && output->type == kTfLiteInt8) ||
 278                             		.loc 1 73 68 is_stmt 0 discriminator 2
 279 019d 61 95                   		cmp	#9, r5
 280 019f 20 54                   		beq	.L41
 281                             	.LVL32:
 282                             		.balign 8,3,1
 283                             	.L21:
 284                             	.LBE184:
  84:../src/tensorflow/lite/micro/kernels/quantize.cc ****   data->quantization_params.scale = static_cast<double>(output->params.scale);
 285                             		.loc 1 84 3 is_stmt 1
  84:../src/tensorflow/lite/micro/kernels/quantize.cc ****   data->quantization_params.scale = static_cast<double>(output->params.scale);
 286                             		.loc 1 84 40 is_stmt 0
 287 01a1 E1 C6 04                		mov.L	16[r12], [r6]
  85:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 288                             		.loc 1 85 3 is_stmt 1
  85:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 289                             		.loc 1 85 35 is_stmt 0
 290 01a4 E5 C6 03 01             		mov.L	12[r12], 4[r6]
  87:../src/tensorflow/lite/micro/kernels/quantize.cc ****   return kTfLiteOk;
 291                             		.loc 1 87 3 is_stmt 1
  87:../src/tensorflow/lite/micro/kernels/quantize.cc ****   return kTfLiteOk;
 292                             		.loc 1 87 26 is_stmt 0
 293 01a8 E5 96 04 04             		mov.L	16[r9], 16[r6]
  88:../src/tensorflow/lite/micro/kernels/quantize.cc **** }
 294                             		.loc 1 88 3 is_stmt 1
  88:../src/tensorflow/lite/micro/kernels/quantize.cc **** }
 295                             		.loc 1 88 10 is_stmt 0
 296 01ac 66 07                   		mov.L	#0, r7
 297 01ae 38 9C FE                		bra	.L5
 298                             	.LVL33:
 299                             	.L39:
  61:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale);
 300                             		.loc 1 61 3 is_stmt 1 discriminator 1
  61:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale);
 301                             		.loc 1 61 3 discriminator 1
 302 01b1 ED A5 05                		mov.L	20[r10], r5
 303                             	.LVL34:
 304 01b4 F9 02 03 DC 00 00 00    		mov.L	#.LC11, 12[r0]
 305                             	.LVL35:
 306 01bb 3E 02 3D                		mov.L	#61, 8[r0]
 307 01be F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 308 01c5 EF A1                   		mov.L	r10, r1
 309 01c7 F8 02 7F 00 00 00       		mov.L	#.LC7, [r0]
 310 01cd 7F 15                   		jsr	r5
 311                             	.LVL36:
  61:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale);
 312                             		.loc 1 61 3 discriminator 1
 313 01cf 38 7B FE                		bra	.L5
 314                             	.LVL37:
 315                             	.L40:
  62:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale->size == 1);
 316                             		.loc 1 62 3 discriminator 1
  62:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale->size == 1);
 317                             		.loc 1 62 3 discriminator 1
 318 01d2 ED A5 05                		mov.L	20[r10], r5
 319 01d5 F9 02 03 F0 00 00 00    		mov.L	#.LC12, 12[r0]
 320                             	.LVL38:
 321 01dc 3E 02 3E                		mov.L	#62, 8[r0]
 322 01df F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 323 01e6 EF A1                   		mov.L	r10, r1
 324 01e8 F8 02 7F 00 00 00       		mov.L	#.LC7, [r0]
 325 01ee 7F 15                   		jsr	r5
 326                             	.LVL39:
  62:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale->size == 1);
 327                             		.loc 1 62 3 discriminator 1
 328 01f0 38 5A FE                		bra	.L5
 329                             	.LVL40:
 330                             	.L41:
 331                             	.LBB186:
  73:../src/tensorflow/lite/micro/kernels/quantize.cc ****       (input->type == kTfLiteInt8 && output->type == kTfLiteInt8) ||
 332                             		.loc 1 73 68 is_stmt 0
 333 01f3 61 94                   		cmp	#9, r4
 334 01f5 21 AC                   		bne	.L21
 335 01f7 03                      		.balign 8,3,1
 336                             	.L22:
 337                             	.LBB185:
  77:../src/tensorflow/lite/micro/kernels/quantize.cc ****                              static_cast<double>(output->params.scale);
 338                             		.loc 1 77 5 is_stmt 1
 339                             	.LVL41:
  80:../src/tensorflow/lite/micro/kernels/quantize.cc ****                        &data->output_shift);
 340                             		.loc 1 80 5
  77:../src/tensorflow/lite/micro/kernels/quantize.cc ****                              static_cast<double>(output->params.scale);
 341                             		.loc 1 77 12 is_stmt 0
 342 01f8 ED 91 03                		mov.L	12[r9], r1
 343 01fb ED C7 03                		mov.L	12[r12], r7
  80:../src/tensorflow/lite/micro/kernels/quantize.cc ****                        &data->output_shift);
 344                             		.loc 1 80 23
 345 01fe 71 63 0C                		add	#12, r6, r3
 346 0201 71 62 08                		add	#8, r6, r2
 347 0204 FC 93 71                		fdiv	r7, r1
 348                             	.LVL42:
 349 0207 05 00 00 00             		bsr	__ZN6tflite18QuantizeMultiplierEdPlPi
 350                             	.LVL43:
 351 020b 2E 96                   		bra	.L21
 352                             	.LVL44:
 353                             	.L19:
 354                             	.LBE185:
  76:../src/tensorflow/lite/micro/kernels/quantize.cc ****     double effective_scale = static_cast<double>(input->params.scale) /
 355                             		.loc 1 76 36
 356 020d FB 7A 84 02             		mov.L	#0x284, r7
 357 0211 FD 60 47                		shlr	r4, r7
 358 0214 7C 07                   		btst	#0, r7
 359 0216 21 E2                   		bne	.L22
 360 0218 2E 89                   		bra	.L21
 361                             	.LVL45:
 362                             	.L34:
 363                             	.LBE186:
  44:../src/tensorflow/lite/micro/kernels/quantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 364                             		.loc 1 44 3 discriminator 1
 365 021a 05 00 00 00             		bsr	_abort
 366                             	.LVL46:
 367                             	.LFE2230:
 369 021e EF 00                   		.section	.text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode,"ax",@progbits
 371                             	__ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:
 372                             	.LFB2231:
  90:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  91:../src/tensorflow/lite/micro/kernels/quantize.cc **** TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
 373                             		.loc 1 91 61 is_stmt 1
 374                             	.LVL47:
 375 0000 6E 6D                   		pushm	r6-r13
 376                             	.LCFI2:
 377 0002 72 00 4C FF             		add	#-180, r0
 378                             	.LCFI3:
  92:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
 379                             		.loc 1 92 3
 380 0006 ED 2B 04                		mov.L	16[r2], r11
 381 0009 61 0B                   		cmp	#0, r11
 382 000b 3A 77 05                		beq	.L44
 383                             	.LBB439:
 384                             	.LBB440:
 385                             	.LBB441:
 386                             		.file 3 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
 387                             		.loc 3 33 3 is_stmt 0
 388 000e 71 16 00                		add	#0, r1, r6
 389 0011 3A 71 05                		beq	.L44
 390 0014 EF 27                   		mov.L	r2, r7
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 391                             		.loc 3 34 3 is_stmt 1
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 392                             		.loc 3 35 3
 393                             		.loc 3 35 32 is_stmt 0
 394 0016 EC 25                   		mov.L	[r2], r5
 395 0018 ED 6A 15                		mov.L	84[r6], r10
 396 001b A8 5A                   		mov.L	4[r5], r2
 397                             	.LVL48:
 398 001d 7F 1A                   		jsr	r10
 399                             	.LVL49:
 400 001f EF 1C                   		mov.L	r1, r12
 401                             	.LVL50:
 402                             	.LBE441:
 403                             	.LBE440:
 404                             	.LBE439:
  93:../src/tensorflow/lite/micro/kernels/quantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
  94:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  95:../src/tensorflow/lite/micro/kernels/quantize.cc ****   const TfLiteEvalTensor* input = tflite::micro::GetEvalInput(context, node, 0);
  96:../src/tensorflow/lite/micro/kernels/quantize.cc ****   TfLiteEvalTensor* output = tflite::micro::GetEvalOutput(context, node, 0);
 405                             		.loc 1 96 3 is_stmt 1
 406                             	.LBB442:
 407                             	.LBB443:
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
 408                             		.loc 3 47 3
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 409                             		.loc 3 48 3
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
 410                             		.loc 3 49 3
 411                             		.loc 3 49 32 is_stmt 0
 412 0021 ED 7A 01                		mov.L	4[r7], r10
 413 0024 AD 6F                   		mov.L	84[r6], r7
 414                             	.LVL51:
 415 0026 EF 61                   		mov.L	r6, r1
 416                             	.LVL52:
 417 0028 ED A2 01                		mov.L	4[r10], r2
 418 002b 7F 17                   		jsr	r7
 419                             	.LVL53:
 420 002d EF 17                   		mov.L	r1, r7
 421                             	.LVL54:
 422                             	.LBE443:
 423                             	.LBE442:
  97:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
  98:../src/tensorflow/lite/micro/kernels/quantize.cc ****   if (input->type == kTfLiteFloat32) {
 424                             		.loc 1 98 3 is_stmt 1
 425                             	.LBB444:
 426                             		.loc 1 98 14 is_stmt 0
 427 002f ED CA 02                		mov.L	8[r12], r10
 428                             		.loc 1 98 3
 429 0032 61 1A                   		cmp	#1, r10
 430 0034 3A 0C 01                		beq	.L208
 431                             	.LBE444:
  99:../src/tensorflow/lite/micro/kernels/quantize.cc ****     switch (output->type) {
 100:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt8:
 101:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::AffineQuantize(
 102:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params, tflite::micro::GetTensorShape(input),
 103:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<float>(input),
 104:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorShape(output),
 105:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int8_t>(output));
 106:../src/tensorflow/lite/micro/kernels/quantize.cc ****         break;
 107:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteUInt8:
 108:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::AffineQuantize(
 109:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params, tflite::micro::GetTensorShape(input),
 110:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<float>(input),
 111:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorShape(output),
 112:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<uint8_t>(output));
 113:../src/tensorflow/lite/micro/kernels/quantize.cc ****         break;
 114:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt16:
 115:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::AffineQuantize(
 116:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params, tflite::micro::GetTensorShape(input),
 117:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<float>(input),
 118:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorShape(output),
 119:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(output));
 120:../src/tensorflow/lite/micro/kernels/quantize.cc ****         return kTfLiteOk;
 121:../src/tensorflow/lite/micro/kernels/quantize.cc ****       default:
 122:../src/tensorflow/lite/micro/kernels/quantize.cc ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 123:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(input->type),
 124:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(output->type));
 125:../src/tensorflow/lite/micro/kernels/quantize.cc ****         return kTfLiteError;
 126:../src/tensorflow/lite/micro/kernels/quantize.cc ****     }
 127:../src/tensorflow/lite/micro/kernels/quantize.cc ****   } else if (input->type == kTfLiteInt16) {
 432                             		.loc 1 127 10 is_stmt 1
 433                             	.LBB1001:
 434                             	.LBB445:
 435 0037 61 7A                   		cmp	#7, r10
 436 0039 3A 1F 01                		beq	.L209
 437                             	.LBE445:
 438                             	.LBE1001:
 128:../src/tensorflow/lite/micro/kernels/quantize.cc ****     size_t size = ElementCount(*input->dims);
 129:../src/tensorflow/lite/micro/kernels/quantize.cc ****     switch (output->type) {
 130:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt8:
 131:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::Requantize(tflite::micro::GetTensorData<int16_t>(input),
 132:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   size, data->output_multiplier,
 133:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   data->output_shift, data->input_zero_point,
 134:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   data->quantization_params.zero_point,
 135:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   tflite::micro::GetTensorData<int8_t>(output));
 136:../src/tensorflow/lite/micro/kernels/quantize.cc ****         break;
 137:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt16:
 138:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::Requantize(
 139:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), size,
 140:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->output_multiplier, data->output_shift, data->input_zero_point,
 141:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params.zero_point,
 142:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(output));
 143:../src/tensorflow/lite/micro/kernels/quantize.cc ****         return kTfLiteOk;
 144:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt32:
 145:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::Requantize(
 146:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), size,
 147:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->output_multiplier, data->output_shift, data->input_zero_point,
 148:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params.zero_point,
 149:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int32_t>(output));
 150:../src/tensorflow/lite/micro/kernels/quantize.cc ****         return kTfLiteOk;
 151:../src/tensorflow/lite/micro/kernels/quantize.cc ****       default:
 152:../src/tensorflow/lite/micro/kernels/quantize.cc ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 153:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(input->type),
 154:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(output->type));
 155:../src/tensorflow/lite/micro/kernels/quantize.cc ****         return kTfLiteError;
 156:../src/tensorflow/lite/micro/kernels/quantize.cc ****     }
 157:../src/tensorflow/lite/micro/kernels/quantize.cc ****   }
 158:../src/tensorflow/lite/micro/kernels/quantize.cc ****   else if (input->type == kTfLiteInt8)
 439                             		.loc 1 158 8
 440                             	.LBB1002:
 441                             	.LBB657:
 442                             	.LBB446:
 443 003c 61 9A                   		cmp	#9, r10
 444 003e 3B DA 00                		bne	.L126
 445                             	.LBB447:
 159:../src/tensorflow/lite/micro/kernels/quantize.cc ****   {
 160:../src/tensorflow/lite/micro/kernels/quantize.cc ****     // Int8 to Int8 requantization, required if the input and output tensors
 161:../src/tensorflow/lite/micro/kernels/quantize.cc ****     // have different scales and/or zero points.
 162:../src/tensorflow/lite/micro/kernels/quantize.cc ****     size_t size = ElementCount(*input->dims);
 446                             		.loc 1 162 5
 447                             		.loc 1 162 31 is_stmt 0
 448 0041 ED C1 01                		mov.L	4[r12], r1
 449                             	.LVL55:
 450 0044 05 00 00 00             		bsr	__ZN6tflite12ElementCountERK14TfLiteIntArray
 451                             	.LVL56:
 163:../src/tensorflow/lite/micro/kernels/quantize.cc ****     switch (output->type)
 452                             		.loc 1 163 5 is_stmt 1
 453 0048 ED 7A 02                		mov.L	8[r7], r10
 454 004b 61 9A                   		cmp	#9, r10
 455 004d 3B 24 01                		bne	.L127
 164:../src/tensorflow/lite/micro/kernels/quantize.cc ****     {
 165:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt8:
 456                             		.loc 1 165 7
 166:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::Requantize(tflite::micro::GetTensorData<int8_t>(input),
 457                             		.loc 1 166 9
 458                             	.LVL57:
 459                             	.LBB448:
 460                             	.LBB449:
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns const data for a TfLiteEvalTensor struct.
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** const T* GetTensorData(const TfLiteEvalTensor* tensor) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(tensor != nullptr);
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 461                             		.loc 3 62 53 is_stmt 0
 462 0050 EC C4                   		mov.L	[r12], r4
 463                             	.LVL58:
 464                             	.LBE449:
 465                             	.LBE448:
 466                             		.loc 1 166 34
 467 0052 ED BE 02                		mov.L	8[r11], r14
 167:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   size, data->output_multiplier,
 168:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   data->output_shift, data->input_zero_point,
 468                             		.loc 1 168 41
 469 0055 ED BA 03                		mov.L	12[r11], r10
 166:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   size, data->output_multiplier,
 470                             		.loc 1 166 34
 471 0058 ED B9 04                		mov.L	16[r11], r9
 472 005b EC B8                   		mov.L	[r11], r8
 473                             	.LVL59:
 474                             	.LBB450:
 475                             	.LBB451:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 476                             		.loc 3 55 28
 477 005d EC 7F                   		mov.L	[r7], r15
 478                             	.LVL60:
 479                             	.LBE451:
 480                             	.LBE450:
 481                             	.LBB452:
 482                             	.LBB453:
 483                             	.LBB454:
 484                             		.file 4 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_REQUANTIZE_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_REQUANTIZE_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** //#include "ruy/profiler/instrumentation.h"  // from @ruy
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** #include "tensorflow/lite/kernels/internal/common.h"
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** #include "tensorflow/lite/kernels/internal/types.h"
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** namespace tflite {
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** namespace reference_ops {
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** template <typename input_type, typename output_type>
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** inline void Requantize(const input_type* input_data, int32_t size,
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****                        int32_t effective_scale_multiplier,
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****                        int32_t effective_scale_shift, int32_t input_zeropoint,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****                        int32_t output_zeropoint, output_type* output_data) {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   //ruy::profiler::ScopeLabel label("Requantize");
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   const bool same_scale =
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****       (effective_scale_multiplier == 1 << 30 && effective_scale_shift == 1);
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   if (same_scale) {
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const bool mixed_type_int8_uint8 =
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::is_same<input_type, int8_t>::value &&
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::is_same<output_type, uint8_t>::value;
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const bool mixed_type_uint8_int8 =
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::is_same<input_type, uint8_t>::value &&
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::is_same<output_type, int8_t>::value;
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t zero_point_diff = input_zeropoint - output_zeropoint;
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     // Fast path to do requantization for the case when just a shift of 128 is
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     // needed.
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     if ((mixed_type_int8_uint8 && zero_point_diff == -128) ||
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         (mixed_type_uint8_int8 && zero_point_diff == 128)) {
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****       for (int i = 0; i < size; ++i) {
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         output_data[i] = input_data[i] ^ 0x80;
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****       }
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     }
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   }
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   static constexpr int32_t kMinOutput = std::numeric_limits<output_type>::min();
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   static constexpr int32_t kMaxOutput = std::numeric_limits<output_type>::max();
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   for (int i = 0; i < size; ++i) {
 485                             		.loc 4 52 21
 486 005f 61 01                   		cmp	#0, r1
 487 0061 2A 05 38 4B 01          		ble	.L103
 488                             	.LBB455:
 489                             	.LBB456:
 490                             	.LBB457:
 491                             		.file 5 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifndef ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifdef GEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #define ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include <functional>
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "fixedpoint/fixedpoint.h"
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/types.h"
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** namespace tflite {
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** constexpr int kReverseShift = -1;
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline void GetActivationMinMax(FusedActivationFunctionType ac,
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_min,
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_max) {
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   switch (ac) {
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kNone:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = std::numeric_limits<float>::lowest();
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu:
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu1:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = -1.f;
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 1.f;
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu6:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 6.f;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** template <typename T>
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline T ActivationFunctionWithMinMax(T x, T output_activation_min,
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                       T output_activation_max) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using std::max;
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using std::min;
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return min(max(x, output_activation_min), output_activation_max);
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** // Legacy function, left for compatibility only.
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** template <FusedActivationFunctionType Ac>
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** float ActivationFunction(float x) {
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float output_activation_min, output_activation_max;
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   GetActivationMinMax(Ac, &output_activation_min, &output_activation_max);
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return ActivationFunctionWithMinMax(x, output_activation_min,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                       output_activation_max);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                          const float* bias_data, int array_size,
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                          float* array_data) {
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // Note: see b/132215220: in May 2019 we thought it would be OK to replace
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // this with the Eigen one-liner:
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   //   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // This turned out to severely regress performance: +4ms (i.e. 8%) on
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // MobileNet v2 / 1.0 / 224. So we keep custom NEON code for now.
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   TFLITE_DCHECK_EQ((array_size % bias_size), 0);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifdef USE_NEON
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float* array_ptr = array_data;
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float* array_end_ptr = array_ptr + array_size;
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_min_vec = vdupq_n_f32(clamp_min);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_max_vec = vdupq_n_f32(clamp_max);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   for (; array_ptr != array_end_ptr; array_ptr += bias_size) {
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int i = 0;
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 16; i += 16) {
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b0 = vld1q_f32(bias_data + i);
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b1 = vld1q_f32(bias_data + i + 4);
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b2 = vld1q_f32(bias_data + i + 8);
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b3 = vld1q_f32(bias_data + i + 12);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a0 = vld1q_f32(array_ptr + i);
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a1 = vld1q_f32(array_ptr + i + 4);
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a2 = vld1q_f32(array_ptr + i + 8);
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a3 = vld1q_f32(array_ptr + i + 12);
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x0 = vaddq_f32(a0, b0);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x1 = vaddq_f32(a1, b1);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x2 = vaddq_f32(a2, b2);
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x3 = vaddq_f32(a3, b3);
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x0 = vmaxq_f32(clamp_min_vec, x0);
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x1 = vmaxq_f32(clamp_min_vec, x1);
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x2 = vmaxq_f32(clamp_min_vec, x2);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x3 = vmaxq_f32(clamp_min_vec, x3);
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x0 = vminq_f32(clamp_max_vec, x0);
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x1 = vminq_f32(clamp_max_vec, x1);
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x2 = vminq_f32(clamp_max_vec, x2);
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x3 = vminq_f32(clamp_max_vec, x3);
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x0);
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 4, x1);
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 8, x2);
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 12, x3);
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 4; i += 4) {
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b = vld1q_f32(bias_data + i);
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a = vld1q_f32(array_ptr + i);
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x = vaddq_f32(a, b);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x = vmaxq_f32(clamp_min_vec, x);
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x = vminq_f32(clamp_max_vec, x);
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x);
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i < bias_size; i++) {
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       array_ptr[i] = ActivationFunctionWithMinMax(array_ptr[i] + bias_data[i],
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                                   clamp_min, clamp_max);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #else  // not NEON
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   for (int array_offset = 0; array_offset < array_size;
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****        array_offset += bias_size) {
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (int i = 0; i < bias_size; i++) {
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       array_data[array_offset + i] = ActivationFunctionWithMinMax(
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****           array_data[array_offset + i] + bias_data[i], clamp_min, clamp_max);
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierSmallerThanOneExp(
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       SaturatingRoundingDoublingHighMul(x, quantized_multiplier), -left_shift);
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierGreaterThanOne(
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return SaturatingRoundingDoublingHighMul(x * (1 << left_shift),
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                            quantized_multiplier);
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplier(int32_t x,
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                              int32_t quantized_multiplier,
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                              int shift) {
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 492                             		.loc 5 162 31
 493 0066 FC 07 A7                		neg	r10, r7
 494                             	.LVL61:
 495 0069 61 0A                   		cmp	#0, r10
 496 006b 2B 04                   		ble 1f
 497 006d 66 07                   		mov #0, r7
 498                             	1:
 499                             	.LBB458:
 500                             	.LBB459:
 501                             		.file 6 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\thi
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Copyright 2015 The Gemmlowp Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // fixedpoint.h: fixed-point arithmetic, with basic operations and
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // a few math functions such as tanh.
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #ifndef GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <algorithm>
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cassert>
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cmath>
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cstdint>
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <limits>
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include "../internal/detect_platform.h"
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** namespace gemmlowp {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Part 1: Low-level integer-arithmetic primitives.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The implementations here are generic implementations valid for
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // scalar types (e.g. std::int32_t). Architecture-specific SIMD types
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // (e.g. NEON int32x4_t) may be supported by providing
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // specializations for them in separate files.
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The purpose of these primitives is two-fold:
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be used to implement higher-level fixed-point
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    abstractions, namely the FixedPoint class and its arithmetic
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    operators.
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be directly used to implement some more involved
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    fixed-point computations, e.g. the fixed-point implementation
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    of math functions such as tanh.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Some compile-time traits around raw types to handle SIMD aspects:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // number of lanes, underlying scalar type.
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits {};
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int32_t> {
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int32_t ScalarRawType;
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int16_t> {
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int16_t ScalarRawType;
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns a SIMD value duplicating a scalar value across all lanes.
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tRawType Dup(typename FixedPointRawTypeTraits<tRawType>::ScalarRawType x) {
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return x;
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise AND
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitAnd(tIntegerType a, tIntegerType b) {
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a & b;
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise OR
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitOr(tIntegerType a, tIntegerType b) {
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a | b;
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise XOR
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitXor(tIntegerType a, tIntegerType b) {
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a ^ b;
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise NOT
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitNot(tIntegerType a) {
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return ~a;
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer addition. Not saturating. Overflow is undefined behavior.
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Add(tIntegerType a, tIntegerType b) {
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a + b;
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer multiplication. Not saturating. Overflow is undefined behavior.
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Mul(tIntegerType a, tIntegerType b) {
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a * b;
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer subtraction. Not saturating. Overflow is undefined behavior.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Sub(tIntegerType a, tIntegerType b) {
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a - b;
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer unary negative. Not saturating. Overflow is undefined behavior.
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Neg(tIntegerType a) {
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return -a;
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic left-shift, equivalent to multiplying with a power of two.
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Negative values are OK. In case of overflow, no Undefined
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Behavior, but the results are implementation-defined (in practice,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // they currently are saturated, but we make no commitment to that). The idea
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // is that the caller will want to implement the overflowing cases with
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // saturation with compare-and-mask, so we don't care about the results
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // in the overflow case, we just want to avoid undefined behavior.
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerType may be int32 or any narrower signed type.
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType, typename OffsetType>
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftLeft(tIntegerType a, OffsetType offset) {
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_a = static_cast<std::int64_t>(a);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_shifted = wide_a * (1 << offset);
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const auto max = std::numeric_limits<tIntegerType>::max();
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return wide_shifted < min
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              ? min
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic right-shift. Not rounding.
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Relying on implementation-defined, but in-practice-consistent,
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // C++ compiler behavior.
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftRight(tIntegerType a, int offset) {
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a >> offset;
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Each bit of the result is set to the corresponding bit of either then_val or
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // else_val depending on whether the corresponding bit of if_mask is set.
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to the VBSL instruction in ARM NEON.
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType SelectUsingMask(tIntegerType if_mask, tIntegerType then_val,
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                              tIntegerType else_val) {
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return BitXor(BitAnd(if_mask, then_val), BitAnd(BitNot(if_mask), else_val));
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is non-zero.
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNonZero(tIntegerType a) {
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr tIntegerType zero = 0;
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a ? BitNot(zero) : zero;
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is zero.
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfZero(tIntegerType a) {
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(!a);
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are equal.
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfEqual(tIntegerType a, tIntegerType b) {
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a == b);
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are not equal.
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNotEqual(tIntegerType a, tIntegerType b) {
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a != b);
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a > b.
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThan(tIntegerType a, tIntegerType b) {
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a > b);
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a >= b.
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThanOrEqual(tIntegerType a, tIntegerType b) {
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a >= b);
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a < b.
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThan(tIntegerType a, tIntegerType b) {
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a < b);
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a <= b.
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThanOrEqual(tIntegerType a, tIntegerType b) {
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a <= b);
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if all of the input scalars are nonzero.
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool All(tIntegerType a) {
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if any of the input scalars are nonzero.
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool Any(tIntegerType a) {
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns (a+b)/2, rounded to the nearest integer.
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to VRHADD in the ARM NEON instruction set.
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType RoundingHalfSum(IntegerType a, IntegerType b) {
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t RoundingHalfSum(std::int32_t a, std::int32_t b) {
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a64 = a;
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sum = a64 + b64;
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sign = sum >= 0 ? 1 : -1;
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t RoundingHalfSum(std::int16_t a, std::int16_t b) {
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sign = sum >= 0 ? 1 : -1;
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingAdd(IntegerType a, IntegerType b) {
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // So far this is only needed for int16.
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingAdd(std::int16_t a, std::int16_t b) {
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                std::max(static_cast<std::int32_t>(-32768), sum)));
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int8_t SaturatingAdd(std::int8_t a, std::int8_t b) {
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t a16 = a;
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t b16 = b;
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t sum = a16 + b16;
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int8_t>(std::min(
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<int16_t>(std::numeric_limits<int8_t>::max()),
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::max(static_cast<int16_t>(std::numeric_limits<int8_t>::min()), sum)));
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns a+b, saturating if the integers are 16bit or narrower,
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // otherwise just a plain addition.
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, bool Is16Bit>
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl {
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) { return Add(a, b); }
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 288:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 289:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl<IntegerType, true> {
 290:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) {
 291:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return SaturatingAdd(a, b);
 292:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 293:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 294:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 295:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType AddSaturatingIf16Bit(IntegerType a, IntegerType b) {
 296:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   using ScalarType =
 297:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 298:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16BitImpl<IntegerType, sizeof(ScalarType) == 2>::Run(a,
 299:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                                              b);
 300:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 301:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 302:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns the integer that represents the product of two fixed-point
 303:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // numbers, interpreting all integers as fixed-point values in the
 304:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1), rounding to the nearest value, and saturating
 305:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // -1 * -1 to the maximum value (since 1 is not in the half-open
 306:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1)).
 307:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 308:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // [The explanation below specializes to std::int32_t for example purpose.]
 309:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 310:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The mapping between IntegerType and the interval [-1, 1) is unique and
 311:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // implied by IntegerType, which is assumed to be signed. For example,
 312:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // for IntegerType==std::int32_t, the mapping is
 313:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   real_value = integer_value / 2^31.
 314:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // So in this case, and leaving aside rounding and saturating, this
 315:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // function computes ((a / 2^31) * (b / 2^31)) * 2^31, which simplifies to
 316:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^31.
 317:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 318:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The 'doubling' part in the name of this function comes from the fact that
 319:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // this operation is very close to a "multiply-high" operation, keeping only
 320:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // the top half bits, except that that would be effectively computing
 321:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^32,
 322:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // so here we are computing 2x that, since
 323:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   1/2^31 = 2 * 1/2^32.
 324:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The idea is to use all of the available 32 bits in the destination int32
 325:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // value.
 326:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 327:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // [End of the explanation specializing to int32.]
 328:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 329:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This is equivalent to the VQRDMULH instruction in ARM NEON.
 330:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 331:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingDoublingHighMul(IntegerType a, IntegerType b) {
 332:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 333:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 334:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 335:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 336:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 337:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function implements the same computation as the ARMv7 NEON VQRDMULH
 338:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // instruction.
 339:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 340:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t SaturatingRoundingDoublingHighMul(std::int32_t a,
 341:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int32_t b) {
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int32_t>::min();
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 350:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 351:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 352:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 353:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingRoundingDoublingHighMul(std::int16_t a,
 354:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int16_t b) {
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int16_t>::min();
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 363:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 364:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 365:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Correctly-rounded-to-nearest division by a power-of-two.
 366:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Also known as a rounding arithmetic right shift.
 367:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, typename ExponentType>
 368:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline IntegerType RoundingDivideByPOT(IntegerType x, ExponentType exponent) {
 369:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent >= 0);
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 502                             		.loc 6 371 50
 503 006f 71 75 E0                		add	#-32, r7, r5
 504 0072 26 05 38 D8 05          		bn	.L128
 505 0077 66 06                   		mov.L	#0, r6
 506                             	.LVL62:
 507                             		.balign 8,3,3
 508                             	.L129:
 509 0079 FD 74 4A 00             		max	#0, r10
 510                             	.LVL63:
 511                             		.loc 6 371 63
 512 007d 60 16                   		sub	#1, r6
 513                             	.LBB460:
 514                             	.LBB461:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 515                             		.loc 6 142 15
 516 007f FD A1 6D                		shar	#1, r6, r13
 517 0082 75 57 1F                		cmp	#31, r7
 518 0085 2B 05 38 E7 07          		bgt	.L93
 519 008a 4B 41                   		add	r4, r1
 520                             	.LVL64:
 521                             	.LBE461:
 522                             	.LBE460:
 523                             	.LBE459:
 524                             	.LBE458:
 525                             	.LBB476:
 526                             	.LBB477:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 527                             		.loc 6 349 19
 528 008c E7 0D 29                		mov.L	r13, 164[r0]
 529 008f 2E 49                   		bra	.L138
 530                             	.LVL65:
 531                             	.L130:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 532                             		.loc 6 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 533                             		.loc 6 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 534                             		.loc 6 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 535                             		.loc 6 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 536                             		.loc 6 346 35 is_stmt 0
 537 0091 61 0C                   		cmp	#0, r12
 538 0093 28 05 38 20 01          		blt	.L169
 539                             	.LVL66:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 540                             		.loc 6 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 541                             		.loc 6 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 542                             		.loc 6 348 40 is_stmt 0
 543 0098 EF C5                   		mov.L	r12, r5
 544                             	.LVL67:
 545 009a 70 BB 00 00 00 40       		add	#0x40000000, r11
 546 00a0 FD 74 25 00             		adc	#0, r5
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 547                             		.loc 6 348 49
 548 00a4 6C 15                   		shll	#1, r5
 549 00a6 FD 9F B3                		shlr	#31, r11, r3
 550 00a9 57 35                   		or	r3, r5
 551                             	.LVL68:
 552                             		.balign 8,3,2
 553                             	.L133:
 554                             	.LBE477:
 555                             	.LBE476:
 556                             	.LBB480:
 557                             	.LBB474:
 558                             	.LBB462:
 559                             	.LBB463:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 560                             		.loc 6 71 14
 561 00ab FD 9F 53                		shlr	#31, r5, r3
 562                             	.LBE463:
 563                             	.LBE462:
 564                             	.LBB464:
 565                             	.LBB465:
 566 00ae FF 4B 56                		and	r5, r6, r11
 567                             	.LVL69:
 568                             	.LBE465:
 569                             	.LBE464:
 570                             	.LBB466:
 571                             	.LBB467:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 572                             		.loc 6 95 14
 573 00b1 06 89 03 29             		add	164[r0], r3
 574                             	.LBE467:
 575                             	.LBE466:
 576                             	.LBB468:
 577                             	.LBB469:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 578                             		.loc 6 142 15
 579 00b5 EF 52                   		mov.L	r5, r2
 580 00b7 FD 61 72                		shar	r7, r2
 581                             	.LBE469:
 582                             	.LBE468:
 583                             	.LBB470:
 584                             	.LBB471:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 585                             		.loc 6 71 14
 586 00ba 47 B3                   		cmp	r11, r3
 587 00bc FC DB 59                		sclt.L	r5
 588                             	.LVL70:
 589                             	.LBE471:
 590                             	.LBE470:
 591                             	.LBB472:
 592                             	.LBB473:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 593                             		.loc 6 95 14
 594 00bf 4B 25                   		add	r2, r5
 595                             	.LBE473:
 596                             	.LBE472:
 597                             	.LBE474:
 598                             	.LBE480:
 599                             	.LBE457:
 600                             	.LBE456:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         MultiplyByQuantizedMultiplier(input, effective_scale_multiplier,
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****                                       effective_scale_shift) +
 601                             		.loc 4 56 62
 602 00c1 4B 85                   		add	r8, r5
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         output_zeropoint;
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t clamped_output =
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::max(std::min(output, kMaxOutput), kMinOutput);
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     output_data[i] = static_cast<output_type>(clamped_output);
 603                             		.loc 4 60 5
 604 00c3 FD 74 45 80             		max	#-128, r5
 605 00c7 FD 74 55 7F             		min	#0x7f, r5
 606 00cb FD 20 F5                		mov.B	r5, [r15+]
 607                             	.LVL71:
 608                             	.LBE455:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 609                             		.loc 4 52 21
 610 00ce 47 14                   		cmp	r1, r4
 611 00d0 3A DE 00                		beq	.L103
 612                             	.LVL72:
 613 00d3 77 10 01 00 00          		.balign 8,3,5
 614                             	.L138:
 615                             	.LBB492:
 616                             	.LBB488:
 617                             	.LBB484:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 618                             		.loc 5 159 3 is_stmt 1
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 619                             		.loc 5 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 620                             		.loc 5 161 3
 621                             		.loc 5 162 3
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 622                             		.loc 5 163 3
 623                             	.LBE484:
 624                             	.LBE488:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 625                             		.loc 4 53 37 is_stmt 0
 626 00d8 FD 28 45                		mov.B	[r4+], r5
 627                             	.LVL73:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 628                             		.loc 4 53 19
 629 00db 43 95                   		sub	r9, r5
 630                             	.LVL74:
 631                             	.LBB489:
 632                             	.LBB485:
 633                             		.loc 5 163 29
 634 00dd FD 62 A5                		shll	r10, r5
 635                             	.LVL75:
 636                             	.LBB481:
 637                             	.LBB478:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 638                             		.loc 6 342 3 is_stmt 1
 639 00e0 EF 5B                   		mov.L	r5, r11
 640 00e2 FC 1B EB                		emul	r14, r11
 641 00e5 EF B2                   		mov.L	r11, r2
 642 00e7 EF C3                   		mov.L	r12, r3
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 643                             		.loc 6 342 26 is_stmt 0
 644 00e9 47 5E                   		cmp	r5, r14
 645 00eb 21 A6                   		bne	.L130
 646                             	.LVL76:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 647                             		.loc 6 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 648                             		.loc 6 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 649                             		.loc 6 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 650                             		.loc 6 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 651                             		.loc 6 346 35 is_stmt 0
 652 00ed 61 0C                   		cmp	#0, r12
 653 00ef FB C2 01 00 00 C0       		mov.L	#-1073741823, r12
 654 00f5 29 08                   		blt 1f
 655 00f7 FB C2 00 00 00 40       		mov #0x40000000, r12
 656                             	1:
 657 00fd E7 0C 28                		mov.L	r12, 160[r0]
 658 0100 FB 56 FF                		mov.L	#-1, r5
 659                             	.LVL77:
 660 0103 29 04                   		blt 1f
 661 0105 66 05                   		mov #0, r5
 662                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 663                             		.loc 6 347 3 is_stmt 1
 664                             	.LVL78:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 665                             		.loc 6 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 666                             		.loc 6 349 19 is_stmt 0
 667 0107 74 0E 00 00 00 80       		cmp	#-2147483648, r14
 668 010d 3B B3 00                		bne	.L136
 669 0110 FB 52 FF FF FF 7F       		mov.L	#0x7fffffff, r5
 670                             	.LVL79:
 671 0116 2E 95                   		bra	.L133
 672                             	.LVL80:
 673                             	.L126:
 674                             	.LBE478:
 675                             	.LBE481:
 676                             	.LBE485:
 677                             	.LBE489:
 678                             	.LBE492:
 679                             	.LBE454:
 680                             	.LBE453:
 681                             	.LBE452:
 682                             	.LBE447:
 169:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   data->quantization_params.zero_point,
 170:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   tflite::micro::GetTensorData<int8_t>(output));
 171:../src/tensorflow/lite/micro/kernels/quantize.cc ****         break;
 172:../src/tensorflow/lite/micro/kernels/quantize.cc ****       default:
 173:../src/tensorflow/lite/micro/kernels/quantize.cc ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 174:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(input->type),
 175:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(output->type));
 176:../src/tensorflow/lite/micro/kernels/quantize.cc ****         return kTfLiteError;
 177:../src/tensorflow/lite/micro/kernels/quantize.cc ****     }
 178:../src/tensorflow/lite/micro/kernels/quantize.cc ****   }
 179:../src/tensorflow/lite/micro/kernels/quantize.cc ****   else {
 180:../src/tensorflow/lite/micro/kernels/quantize.cc ****     TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 683                             		.loc 1 180 5 is_stmt 1
 684                             		.loc 1 180 5
 685 0118 EF A1                   		mov.L	r10, r1
 686                             	.LVL81:
 687                             		.balign 8,3,1
 688                             	.L205:
 689 011a ED 6B 05                		mov.L	20[r6], r11
 181:../src/tensorflow/lite/micro/kernels/quantize.cc ****                        TfLiteTypeGetName(input->type),
 182:../src/tensorflow/lite/micro/kernels/quantize.cc ****                        TfLiteTypeGetName(output->type));
 183:../src/tensorflow/lite/micro/kernels/quantize.cc ****     return kTfLiteError;
 690                             		.loc 1 183 12 is_stmt 0
 691 011d 66 1A                   		mov.L	#1, r10
 692 011f 03                      		.balign 8,3,3
 693                             	.L206:
 180:../src/tensorflow/lite/micro/kernels/quantize.cc ****                        TfLiteTypeGetName(input->type),
 694                             		.loc 1 180 5
 695 0120 05 00 00 00             		bsr	_TfLiteTypeGetName
 696                             	.LVL82:
 697 0124 EF 1C                   		mov.L	r1, r12
 698                             	.LVL83:
 699 0126 A8 F1                   		mov.L	8[r7], r1
 700 0128 05 00 00 00             		bsr	_TfLiteTypeGetName
 701                             	.LVL84:
 702 012c A0 81                   		mov.L	r1, 8[r0]
 703 012e E7 0C 01                		mov.L	r12, 4[r0]
 704 0131 EF 61                   		mov.L	r6, r1
 705 0133 F8 02 00 00 00 00       		mov.L	#.LC16, [r0]
 706 0139 7F 1B                   		jsr	r11
 707                             	.LVL85:
 708                             		.loc 1 183 5 is_stmt 1
 709                             	.LBE446:
 710                             	.LBE657:
 711                             	.LBE1002:
 184:../src/tensorflow/lite/micro/kernels/quantize.cc ****   }
 185:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 186:../src/tensorflow/lite/micro/kernels/quantize.cc ****   return kTfLiteOk;
 187:../src/tensorflow/lite/micro/kernels/quantize.cc **** }
 712                             		.loc 1 187 1 is_stmt 0
 713 013b EF A1                   		mov.L	r10, r1
 714 013d 3F 6D 35                		rtsd	#212, r6-r13
 715                             	.LVL86:
 716                             	.L208:
 717                             	.LBB1003:
  99:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt8:
 718                             		.loc 1 99 5 is_stmt 1
  99:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt8:
 719                             		.loc 1 99 21 is_stmt 0
 720 0140 A8 95                   		mov.L	8[r1], r5
  99:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt8:
 721                             		.loc 1 99 5
 722 0142 61 75                   		cmp	#7, r5
 723 0144 3A A3 00                		beq	.L46
 724 0147 61 95                   		cmp	#9, r5
 725 0149 3A 49 02                		beq	.L47
 726 014c 61 35                   		cmp	#3, r5
 727 014e 3A 5F 01                		beq	.L210
 121:../src/tensorflow/lite/micro/kernels/quantize.cc ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 728                             		.loc 1 121 7 is_stmt 1
 122:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(input->type),
 729                             		.loc 1 122 9
 122:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(input->type),
 730                             		.loc 1 122 9
 731 0151 EF A1                   		mov.L	r10, r1
 732                             	.LVL87:
 733 0153 ED 6B 05                		mov.L	20[r6], r11
 734 0156 2E CA                   		bra	.L206
 735                             	.LVL88:
 736                             	.L209:
 737                             	.LBB658:
 738                             	.LBB504:
 128:../src/tensorflow/lite/micro/kernels/quantize.cc ****     switch (output->type) {
 739                             		.loc 1 128 5
 128:../src/tensorflow/lite/micro/kernels/quantize.cc ****     switch (output->type) {
 740                             		.loc 1 128 31 is_stmt 0
 741 0158 ED C1 01                		mov.L	4[r12], r1
 742                             	.LVL89:
 743 015b 05 00 00 00             		bsr	__ZN6tflite12ElementCountERK14TfLiteIntArray
 744                             	.LVL90:
 129:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt8:
 745                             		.loc 1 129 5 is_stmt 1
 129:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt8:
 746                             		.loc 1 129 21 is_stmt 0
 747 015f ED 7A 02                		mov.L	8[r7], r10
 129:../src/tensorflow/lite/micro/kernels/quantize.cc ****       case kTfLiteInt8:
 748                             		.loc 1 129 5
 749 0162 61 7A                   		cmp	#7, r10
 750 0164 3A D9 05                		beq	.L86
 751 0167 61 9A                   		cmp	#9, r10
 752 0169 3A EB 04                		beq	.L87
 753 016c 61 2A                   		cmp	#2, r10
 754 016e 3A 0D 03                		beq	.L211
 755                             	.LVL91:
 756                             		.balign 8,3,1
 757                             	.L127:
 758                             	.LBE504:
 759                             	.LBB650:
 760                             	.LBB501:
 172:../src/tensorflow/lite/micro/kernels/quantize.cc ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 761                             		.loc 1 172 7 is_stmt 1
 173:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(input->type),
 762                             		.loc 1 173 9
 173:../src/tensorflow/lite/micro/kernels/quantize.cc ****                            TfLiteTypeGetName(input->type),
 763                             		.loc 1 173 9
 764 0171 ED C1 02                		mov.L	8[r12], r1
 765 0174 2E A6                   		bra	.L205
 766                             	.LVL92:
 767                             	.L73:
 768                             	.LBE501:
 769                             	.LBE650:
 770                             	.LBE658:
 771                             	.LBB659:
 772                             	.LBB660:
 773                             	.LBB661:
 774                             	.LBB662:
 775                             	.LBB663:
 776                             	.LBB664:
 777                             	.LBB665:
 778                             		.file 7 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3.
   1:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
   3:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // Copyright (C) 1997-2018 Free Software Foundation, Inc.
   4:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** //
   5:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // terms of the GNU General Public License as published by the
   8:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // any later version.
  10:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  11:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // GNU General Public License for more details.
  15:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  16:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  20:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  25:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** /** @file include/cmath
  26:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *
  29:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  as macros in C).
  33:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  */
  34:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  35:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** //
  36:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** //
  38:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  39:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #pragma GCC system_header
  40:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  41:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include <bits/c++config.h>
  42:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include <ext/type_traits.h>
  44:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include_next <math.h>
  46:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include <bits/std_abs.h>
  48:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  49:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  52:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef div
  54:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef acos
  55:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef asin
  56:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef atan
  57:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef atan2
  58:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef ceil
  59:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef cos
  60:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef cosh
  61:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef exp
  62:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fabs
  63:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef floor
  64:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fmod
  65:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef frexp
  66:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef ldexp
  67:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log
  68:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log10
  69:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef modf
  70:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef pow
  71:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef sin
  72:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef sinh
  73:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef sqrt
  74:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef tan
  75:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef tanh
  76:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  77:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** extern "C++"
  78:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** {
  79:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** {
  81:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  83:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::acos;
  84:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  85:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   acos(float __x)
  88:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_acosf(__x); }
  89:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  90:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   acos(long double __x)
  92:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_acosl(__x); }
  93:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
  94:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  95:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
  96:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
  99:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     acos(_Tp __x)
 100:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_acos(__x); }
 101:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 102:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::asin;
 103:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 104:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   asin(float __x)
 107:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_asinf(__x); }
 108:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 109:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   asin(long double __x)
 111:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_asinl(__x); }
 112:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 113:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 114:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 115:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 118:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     asin(_Tp __x)
 119:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_asin(__x); }
 120:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 121:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::atan;
 122:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 123:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atan(float __x)
 126:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atanf(__x); }
 127:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 128:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atan(long double __x)
 130:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atanl(__x); }
 131:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 132:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 133:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 134:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 137:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     atan(_Tp __x)
 138:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_atan(__x); }
 139:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 140:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::atan2;
 141:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 142:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atan2(float __y, float __x)
 145:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 147:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atan2(long double __y, long double __x)
 149:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 151:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 152:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 153:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 157:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 160:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 161:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::ceil;
 162:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 163:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ceil(float __x)
 166:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 168:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ceil(long double __x)
 170:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ceill(__x); }
 171:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 172:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 173:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 174:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 177:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     ceil(_Tp __x)
 178:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_ceil(__x); }
 179:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 180:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::cos;
 181:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 182:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cos(float __x)
 185:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_cosf(__x); }
 186:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 187:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cos(long double __x)
 189:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_cosl(__x); }
 190:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 191:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 192:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 193:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 196:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     cos(_Tp __x)
 197:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_cos(__x); }
 198:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 199:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::cosh;
 200:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 201:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cosh(float __x)
 204:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_coshf(__x); }
 205:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 206:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cosh(long double __x)
 208:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_coshl(__x); }
 209:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 210:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 211:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 212:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 215:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     cosh(_Tp __x)
 216:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_cosh(__x); }
 217:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 218:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::exp;
 219:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 220:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   exp(float __x)
 223:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_expf(__x); }
 224:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 225:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   exp(long double __x)
 227:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_expl(__x); }
 228:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 229:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 230:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 231:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 234:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     exp(_Tp __x)
 235:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_exp(__x); }
 236:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 237:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fabs;
 238:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 239:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fabs(float __x)
 242:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 244:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fabs(long double __x)
 246:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 248:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 249:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 250:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 253:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fabs(_Tp __x)
 254:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_fabs(__x); }
 255:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 256:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::floor;
 257:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 258:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   floor(float __x)
 261:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_floorf(__x); }
 262:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 263:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   floor(long double __x)
 265:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_floorl(__x); }
 266:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 267:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 268:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 269:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 272:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     floor(_Tp __x)
 273:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_floor(__x); }
 274:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 275:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fmod;
 276:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 277:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fmod(float __x, float __y)
 280:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 282:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fmod(long double __x, long double __y)
 284:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 286:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 287:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 288:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 292:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 295:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 296:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::frexp;
 297:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 298:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline float
 300:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   frexp(float __x, int* __exp)
 301:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 303:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline long double
 304:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   frexp(long double __x, int* __exp)
 305:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 307:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 308:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 309:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 312:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 315:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::ldexp;
 316:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 317:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ldexp(float __x, int __exp)
 320:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 322:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ldexp(long double __x, int __exp)
 324:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 326:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 327:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 328:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 331:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 334:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log;
 335:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 336:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log(float __x)
 339:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_logf(__x); }
 340:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 341:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log(long double __x)
 343:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_logl(__x); }
 344:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 345:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 346:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 347:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 350:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     log(_Tp __x)
 351:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_log(__x); }
 352:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 353:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log10;
 354:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 355:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log10(float __x)
 358:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_log10f(__x); }
 359:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 360:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log10(long double __x)
 362:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_log10l(__x); }
 363:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 364:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 365:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 366:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 369:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     log10(_Tp __x)
 370:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_log10(__x); }
 371:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 372:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::modf;
 373:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 374:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline float
 376:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   modf(float __x, float* __iptr)
 377:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 379:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline long double
 380:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 383:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 384:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::pow;
 385:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 386:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(float __x, float __y)
 389:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 391:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(long double __x, long double __y)
 393:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 395:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #if __cplusplus < 201103L
 396:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline double
 399:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(double __x, int __i)
 400:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 402:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline float
 403:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(float __x, int __n)
 404:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 406:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline long double
 407:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(long double __x, int __n)
 408:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 410:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 411:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 412:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 413:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 417:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 420:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 421:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::sin;
 422:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 423:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sin(float __x)
 426:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sinf(__x); }
 427:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 428:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sin(long double __x)
 430:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sinl(__x); }
 431:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 432:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 433:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 434:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 435:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 437:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     sin(_Tp __x)
 438:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_sin(__x); }
 439:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 440:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::sinh;
 441:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 442:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sinh(float __x)
 445:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sinhf(__x); }
 446:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 447:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sinh(long double __x)
 449:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sinhl(__x); }
 450:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 451:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 452:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 453:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 454:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 456:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     sinh(_Tp __x)
 457:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_sinh(__x); }
 458:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 459:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::sqrt;
 460:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 461:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sqrt(float __x)
 464:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sqrtf(__x); }
 465:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 466:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sqrt(long double __x)
 468:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sqrtl(__x); }
 469:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 470:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 471:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 472:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 473:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 475:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     sqrt(_Tp __x)
 476:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_sqrt(__x); }
 477:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 478:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::tan;
 479:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 480:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   tan(float __x)
 483:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_tanf(__x); }
 484:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 485:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   tan(long double __x)
 487:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_tanl(__x); }
 488:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 489:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 490:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 491:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 492:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 494:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     tan(_Tp __x)
 495:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_tan(__x); }
 496:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 497:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::tanh;
 498:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 499:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   tanh(float __x)
 502:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_tanhf(__x); }
 503:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 504:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   tanh(long double __x)
 506:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_tanhl(__x); }
 507:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 508:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 509:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 510:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 511:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 513:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     tanh(_Tp __x)
 514:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_tanh(__x); }
 515:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 516:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #if _GLIBCXX_USE_C99_MATH
 517:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 519:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // These are possible macros imported from C99-land.
 520:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fpclassify
 521:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef isfinite
 522:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef isinf
 523:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef isnan
 524:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef isnormal
 525:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef signbit
 526:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef isgreater
 527:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef isgreaterequal
 528:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef isless
 529:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef islessequal
 530:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef islessgreater
 531:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef isunordered
 532:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 533:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #if __cplusplus >= 201103L
 534:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 535:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr int
 537:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fpclassify(float __x)
 538:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 541:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr int
 542:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fpclassify(double __x)
 543:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 546:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr int
 547:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fpclassify(long double __x)
 548:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 551:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 552:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 554:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               int>::__type
 556:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fpclassify(_Tp __x)
 557:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 559:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 560:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 562:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isfinite(float __x)
 563:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isfinite(__x); }
 564:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 565:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 566:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isfinite(double __x)
 567:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isfinite(__x); }
 568:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 569:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 570:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isfinite(long double __x)
 571:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isfinite(__x); }
 572:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 573:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 574:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 576:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               bool>::__type
 578:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isfinite(_Tp __x)
 579:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return true; }
 580:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 581:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 582:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 584:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isinf(float __x)
 585:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isinf(__x); }
 586:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 587:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::isinf;
 590:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #else
 591:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 592:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isinf(double __x)
 593:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isinf(__x); }
 594:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 595:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 596:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 597:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isinf(long double __x)
 598:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isinf(__x); }
 599:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 600:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 601:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 603:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               bool>::__type
 605:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isinf(_Tp __x)
 606:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return false; }
 607:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 608:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 609:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 611:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isnan(float __x)
 612:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isnan(__x); }
 613:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 614:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::isnan;
 617:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #else
 618:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 619:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isnan(double __x)
 620:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isnan(__x); }
 621:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 622:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 623:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 624:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isnan(long double __x)
 625:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isnan(__x); }
 626:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 627:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 628:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 630:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               bool>::__type
 632:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isnan(_Tp __x)
 633:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return false; }
 634:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 635:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 636:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 638:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isnormal(float __x)
 639:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isnormal(__x); }
 640:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 641:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 642:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isnormal(double __x)
 643:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isnormal(__x); }
 644:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 645:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 646:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isnormal(long double __x)
 647:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isnormal(__x); }
 648:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 649:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 650:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 652:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               bool>::__type
 654:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isnormal(_Tp __x)
 655:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __x != 0 ? true : false; }
 656:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 657:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 658:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 661:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   signbit(float __x)
 662:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_signbit(__x); }
 663:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 664:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 665:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   signbit(double __x)
 666:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_signbit(__x); }
 667:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 668:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 669:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   signbit(long double __x)
 670:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_signbit(__x); }
 671:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 672:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 673:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 675:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               bool>::__type
 677:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     signbit(_Tp __x)
 678:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __x < 0 ? true : false; }
 679:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 680:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 681:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 683:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isgreater(float __x, float __y)
 684:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isgreater(__x, __y); }
 685:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 686:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 687:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isgreater(double __x, double __y)
 688:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isgreater(__x, __y); }
 689:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 690:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 691:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isgreater(long double __x, long double __y)
 692:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isgreater(__x, __y); }
 693:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 694:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 695:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 697:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename
 698:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isgreater(_Tp __x, _Up __y)
 701:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 702:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 705:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 706:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 707:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 709:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isgreaterequal(float __x, float __y)
 710:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 712:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 713:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isgreaterequal(double __x, double __y)
 714:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 716:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 717:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isgreaterequal(long double __x, long double __y)
 718:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 720:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 721:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 723:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename
 724:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 728:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 731:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 732:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 733:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 735:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isless(float __x, float __y)
 736:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isless(__x, __y); }
 737:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 738:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 739:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isless(double __x, double __y)
 740:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isless(__x, __y); }
 741:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 742:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 743:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isless(long double __x, long double __y)
 744:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isless(__x, __y); }
 745:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 746:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 747:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 749:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename
 750:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isless(_Tp __x, _Up __y)
 753:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 754:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 757:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 758:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 759:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 761:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   islessequal(float __x, float __y)
 762:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_islessequal(__x, __y); }
 763:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 764:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 765:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   islessequal(double __x, double __y)
 766:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_islessequal(__x, __y); }
 767:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 768:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 769:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   islessequal(long double __x, long double __y)
 770:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_islessequal(__x, __y); }
 771:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 772:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 773:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 775:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename
 776:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     islessequal(_Tp __x, _Up __y)
 779:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 780:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 783:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 784:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 785:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 787:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   islessgreater(float __x, float __y)
 788:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 790:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 791:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   islessgreater(double __x, double __y)
 792:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 794:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 795:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   islessgreater(long double __x, long double __y)
 796:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 798:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 799:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 801:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename
 802:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     islessgreater(_Tp __x, _Up __y)
 805:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 806:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 809:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 810:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 811:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 813:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isunordered(float __x, float __y)
 814:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isunordered(__x, __y); }
 815:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 816:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 817:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isunordered(double __x, double __y)
 818:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isunordered(__x, __y); }
 819:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 820:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr bool
 821:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   isunordered(long double __x, long double __y)
 822:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_isunordered(__x, __y); }
 823:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 824:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 825:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 827:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename
 828:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isunordered(_Tp __x, _Up __y)
 831:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 832:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 835:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 836:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 837:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #else
 838:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 839:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 840:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 842:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fpclassify(_Tp __f)
 843:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 844:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 848:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 849:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 850:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 852:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isfinite(_Tp __f)
 853:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 854:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isfinite(__type(__f));
 856:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 857:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 858:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 859:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 861:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isinf(_Tp __f)
 862:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 863:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isinf(__type(__f));
 865:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 866:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 867:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 868:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 870:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isnan(_Tp __f)
 871:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 872:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isnan(__type(__f));
 874:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 875:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 876:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 877:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 879:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isnormal(_Tp __f)
 880:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 881:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isnormal(__type(__f));
 883:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 884:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 885:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 886:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 888:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     signbit(_Tp __f)
 889:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 890:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_signbit(__type(__f));
 892:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 893:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 894:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 895:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 897:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 899:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 902:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 903:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 904:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 906:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 908:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 911:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 912:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 913:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 915:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isless(_Tp __f1, _Tp __f2)
 916:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 917:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 920:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 921:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 922:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 924:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 926:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 929:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 930:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 931:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 933:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 935:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 938:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 939:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 940:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 					   int>::__type
 942:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 944:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 947:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 948:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif // C++11
 949:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 952:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #if __cplusplus >= 201103L
 953:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 954:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 956:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef acosh
 957:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef acoshf
 958:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef acoshl
 959:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef asinh
 960:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef asinhf
 961:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef asinhl
 962:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef atanh
 963:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef atanhf
 964:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef atanhl
 965:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef cbrt
 966:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef cbrtf
 967:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef cbrtl
 968:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef copysign
 969:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef copysignf
 970:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef copysignl
 971:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef erf
 972:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef erff
 973:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef erfl
 974:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef erfc
 975:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef erfcf
 976:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef erfcl
 977:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef exp2
 978:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef exp2f
 979:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef exp2l
 980:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef expm1
 981:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef expm1f
 982:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef expm1l
 983:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fdim
 984:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fdimf
 985:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fdiml
 986:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fma
 987:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fmaf
 988:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fmal
 989:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fmax
 990:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fmaxf
 991:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fmaxl
 992:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fmin
 993:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fminf
 994:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fminl
 995:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef hypot
 996:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef hypotf
 997:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef hypotl
 998:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef ilogb
 999:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef ilogbf
1000:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef ilogbl
1001:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef lgamma
1002:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef lgammaf
1003:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef lgammal
1004:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef llrint
1006:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef llrintf
1007:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef llrintl
1008:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef llround
1009:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef llroundf
1010:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef llroundl
1011:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1012:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log1p
1013:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log1pf
1014:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log1pl
1015:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log2
1016:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log2f
1017:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log2l
1018:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef logb
1019:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef logbf
1020:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef logbl
1021:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef lrint
1022:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef lrintf
1023:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef lrintl
1024:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef lround
1025:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef lroundf
1026:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef lroundl
1027:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nan
1028:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nanf
1029:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nanl
1030:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nearbyint
1031:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nearbyintf
1032:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nearbyintl
1033:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nextafter
1034:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nextafterf
1035:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nextafterl
1036:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nexttoward
1037:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nexttowardf
1038:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef nexttowardl
1039:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef remainder
1040:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef remainderf
1041:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef remainderl
1042:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef remquo
1043:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef remquof
1044:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef remquol
1045:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef rint
1046:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef rintf
1047:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef rintl
1048:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef round
1049:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef roundf
1050:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef roundl
1051:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef scalbln
1052:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef scalblnf
1053:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef scalblnl
1054:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef scalbn
1055:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef scalbnf
1056:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef scalbnl
1057:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef tgamma
1058:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef tgammaf
1059:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef tgammal
1060:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef trunc
1061:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef truncf
1062:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef truncl
1063:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1064:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   // types
1065:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::double_t;
1066:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::float_t;
1067:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1068:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   // functions
1069:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::acosh;
1070:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::acoshf;
1071:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::acoshl;
1072:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1073:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::asinh;
1074:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::asinhf;
1075:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::asinhl;
1076:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1077:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::atanh;
1078:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::atanhf;
1079:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::atanhl;
1080:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1081:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::cbrt;
1082:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::cbrtf;
1083:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::cbrtl;
1084:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1085:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::copysign;
1086:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::copysignf;
1087:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::copysignl;
1088:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1089:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::erf;
1090:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::erff;
1091:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::erfl;
1092:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1093:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::erfc;
1094:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::erfcf;
1095:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::erfcl;
1096:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1097:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::exp2;
1098:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::exp2f;
1099:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::exp2l;
1100:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1101:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::expm1;
1102:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::expm1f;
1103:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::expm1l;
1104:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1105:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fdim;
1106:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fdimf;
1107:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fdiml;
1108:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1109:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fma;
1110:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fmaf;
1111:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fmal;
1112:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1113:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fmax;
1114:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fmaxf;
1115:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fmaxl;
1116:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1117:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fmin;
1118:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fminf;
1119:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fminl;
1120:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1121:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::hypot;
1122:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::hypotf;
1123:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::hypotl;
1124:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1125:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::ilogb;
1126:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::ilogbf;
1127:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::ilogbl;
1128:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1129:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::lgamma;
1130:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::lgammaf;
1131:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::lgammal;
1132:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1133:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::llrint;
1135:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::llrintf;
1136:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::llrintl;
1137:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1138:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::llround;
1139:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::llroundf;
1140:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::llroundl;
1141:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1142:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1143:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log1p;
1144:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log1pf;
1145:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log1pl;
1146:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1147:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log2;
1148:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log2f;
1149:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log2l;
1150:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1151:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::logb;
1152:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::logbf;
1153:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::logbl;
1154:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1155:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::lrint;
1156:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::lrintf;
1157:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::lrintl;
1158:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1159:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::lround;
1160:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::lroundf;
1161:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::lroundl;
1162:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1163:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nan;
1164:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nanf;
1165:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nanl;
1166:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1167:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nearbyint;
1168:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nearbyintf;
1169:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nearbyintl;
1170:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1171:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nextafter;
1172:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nextafterf;
1173:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nextafterl;
1174:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1175:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nexttoward;
1176:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nexttowardf;
1177:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::nexttowardl;
1178:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1179:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::remainder;
1180:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::remainderf;
1181:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::remainderl;
1182:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1183:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::remquo;
1184:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::remquof;
1185:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::remquol;
1186:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1187:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::rint;
1188:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::rintf;
1189:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::rintl;
1190:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1191:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::round;
1192:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::roundf;
1193:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::roundl;
1194:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1195:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::scalbln;
1196:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::scalblnf;
1197:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::scalblnl;
1198:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1199:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::scalbn;
1200:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::scalbnf;
1201:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::scalbnl;
1202:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1203:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::tgamma;
1204:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::tgammaf;
1205:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::tgammal;
1206:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1207:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::trunc;
1208:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::truncf;
1209:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::truncl;
1210:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1211:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   /// Additional overloads.
1212:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1214:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   acosh(float __x)
1215:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_acoshf(__x); }
1216:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1217:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1218:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   acosh(long double __x)
1219:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_acoshl(__x); }
1220:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1221:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1222:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1224:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1226:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     acosh(_Tp __x)
1227:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_acosh(__x); }
1228:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1229:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1230:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1232:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   asinh(float __x)
1233:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_asinhf(__x); }
1234:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1235:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1236:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   asinh(long double __x)
1237:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_asinhl(__x); }
1238:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1239:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1240:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1242:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1244:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     asinh(_Tp __x)
1245:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_asinh(__x); }
1246:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1247:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1248:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1250:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atanh(float __x)
1251:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atanhf(__x); }
1252:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1253:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1254:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atanh(long double __x)
1255:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atanhl(__x); }
1256:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1257:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1258:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1260:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1262:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     atanh(_Tp __x)
1263:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_atanh(__x); }
1264:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1265:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1266:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1268:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cbrt(float __x)
1269:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_cbrtf(__x); }
1270:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1271:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1272:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cbrt(long double __x)
1273:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_cbrtl(__x); }
1274:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1275:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1276:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1278:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1280:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     cbrt(_Tp __x)
1281:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_cbrt(__x); }
1282:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1283:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1284:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1286:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   copysign(float __x, float __y)
1287:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_copysignf(__x, __y); }
1288:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1289:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1290:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   copysign(long double __x, long double __y)
1291:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_copysignl(__x, __y); }
1292:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1293:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1294:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
1296:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     copysign(_Tp __x, _Up __y)
1298:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
1299:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return copysign(__type(__x), __type(__y));
1301:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
1302:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1303:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1304:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1306:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   erf(float __x)
1307:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_erff(__x); }
1308:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1309:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1310:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   erf(long double __x)
1311:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_erfl(__x); }
1312:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1313:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1314:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1316:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1318:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     erf(_Tp __x)
1319:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_erf(__x); }
1320:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1321:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1322:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1324:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   erfc(float __x)
1325:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_erfcf(__x); }
1326:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1327:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1328:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   erfc(long double __x)
1329:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_erfcl(__x); }
1330:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1331:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1332:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1334:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1336:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     erfc(_Tp __x)
1337:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_erfc(__x); }
1338:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1339:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1340:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1342:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   exp2(float __x)
1343:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_exp2f(__x); }
1344:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1345:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1346:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   exp2(long double __x)
1347:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_exp2l(__x); }
1348:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1349:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1350:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1352:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1354:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     exp2(_Tp __x)
1355:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_exp2(__x); }
1356:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1357:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1358:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1360:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   expm1(float __x)
1361:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_expm1f(__x); }
1362:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1363:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1364:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   expm1(long double __x)
1365:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_expm1l(__x); }
1366:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1367:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1368:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1370:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1372:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     expm1(_Tp __x)
1373:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_expm1(__x); }
1374:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1375:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1376:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1378:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fdim(float __x, float __y)
1379:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fdimf(__x, __y); }
1380:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1381:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1382:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fdim(long double __x, long double __y)
1383:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fdiml(__x, __y); }
1384:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1385:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1386:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
1388:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fdim(_Tp __x, _Up __y)
1390:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
1391:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return fdim(__type(__x), __type(__y));
1393:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
1394:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1395:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1396:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1398:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fma(float __x, float __y, float __z)
1399:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1401:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1402:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fma(long double __x, long double __y, long double __z)
1403:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1405:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1406:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
1411:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
1414:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1415:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1416:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1418:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fmax(float __x, float __y)
1419:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1421:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1422:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fmax(long double __x, long double __y)
1423:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1425:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1426:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
1428:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fmax(_Tp __x, _Up __y)
1430:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
1431:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return fmax(__type(__x), __type(__y));
1433:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
1434:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1435:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1436:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1438:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fmin(float __x, float __y)
1439:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fminf(__x, __y); }
1440:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1441:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1442:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fmin(long double __x, long double __y)
1443:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fminl(__x, __y); }
1444:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1445:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1446:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
1448:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fmin(_Tp __x, _Up __y)
1450:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
1451:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return fmin(__type(__x), __type(__y));
1453:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
1454:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1455:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1456:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1458:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   hypot(float __x, float __y)
1459:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_hypotf(__x, __y); }
1460:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1461:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1462:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   hypot(long double __x, long double __y)
1463:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_hypotl(__x, __y); }
1464:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1465:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1466:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
1468:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     hypot(_Tp __x, _Up __y)
1470:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
1471:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return hypot(__type(__x), __type(__y));
1473:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
1474:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1475:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1476:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr int
1478:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ilogb(float __x)
1479:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ilogbf(__x); }
1480:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1481:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr int
1482:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ilogb(long double __x)
1483:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ilogbl(__x); }
1484:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1485:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1486:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1488:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr
1489:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     int>::__type
1491:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     ilogb(_Tp __x)
1492:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_ilogb(__x); }
1493:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1494:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1495:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1497:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   lgamma(float __x)
1498:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_lgammaf(__x); }
1499:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1500:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1501:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   lgamma(long double __x)
1502:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_lgammal(__x); }
1503:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1504:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1505:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1507:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1509:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     lgamma(_Tp __x)
1510:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_lgamma(__x); }
1511:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1512:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1513:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long long
1515:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   llrint(float __x)
1516:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_llrintf(__x); }
1517:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1518:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long long
1519:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   llrint(long double __x)
1520:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_llrintl(__x); }
1521:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1522:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1523:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1525:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               long long>::__type
1527:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     llrint(_Tp __x)
1528:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_llrint(__x); }
1529:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1530:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1531:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long long
1533:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   llround(float __x)
1534:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_llroundf(__x); }
1535:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1536:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long long
1537:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   llround(long double __x)
1538:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_llroundl(__x); }
1539:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1540:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1541:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1543:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               long long>::__type
1545:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     llround(_Tp __x)
1546:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_llround(__x); }
1547:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1548:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1549:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1551:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log1p(float __x)
1552:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_log1pf(__x); }
1553:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1554:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1555:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log1p(long double __x)
1556:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_log1pl(__x); }
1557:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1558:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1559:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1561:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1563:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     log1p(_Tp __x)
1564:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_log1p(__x); }
1565:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1566:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1567:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   // DR 568.
1569:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1570:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log2(float __x)
1571:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_log2f(__x); }
1572:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1573:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1574:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log2(long double __x)
1575:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_log2l(__x); }
1576:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1577:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1578:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1580:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1582:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     log2(_Tp __x)
1583:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_log2(__x); }
1584:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1585:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1586:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1588:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   logb(float __x)
1589:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_logbf(__x); }
1590:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1591:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1592:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   logb(long double __x)
1593:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_logbl(__x); }
1594:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1595:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1596:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1598:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1600:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     logb(_Tp __x)
1601:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_logb(__x); }
1602:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1603:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1604:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long
1606:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   lrint(float __x)
1607:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_lrintf(__x); }
1608:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1609:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long
1610:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   lrint(long double __x)
1611:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_lrintl(__x); }
1612:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1613:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1614:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1616:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               long>::__type
1618:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     lrint(_Tp __x)
1619:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_lrint(__x); }
1620:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1621:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1622:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long
1624:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   lround(float __x)
1625:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_lroundf(__x); }
1626:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1627:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long
1628:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   lround(long double __x)
1629:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_lroundl(__x); }
1630:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1631:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1632:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1634:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               long>::__type
1636:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     lround(_Tp __x)
1637:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_lround(__x); }
1638:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1639:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1640:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1642:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   nearbyint(float __x)
1643:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_nearbyintf(__x); }
1644:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1645:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1646:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   nearbyint(long double __x)
1647:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_nearbyintl(__x); }
1648:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1649:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1650:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1652:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1654:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     nearbyint(_Tp __x)
1655:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_nearbyint(__x); }
1656:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1657:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1658:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1660:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   nextafter(float __x, float __y)
1661:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1663:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1664:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   nextafter(long double __x, long double __y)
1665:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1667:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1668:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
1670:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     nextafter(_Tp __x, _Up __y)
1672:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
1673:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return nextafter(__type(__x), __type(__y));
1675:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
1676:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1677:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1678:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1680:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   nexttoward(float __x, long double __y)
1681:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1683:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1684:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   nexttoward(long double __x, long double __y)
1685:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1687:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1688:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1690:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1692:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     nexttoward(_Tp __x, long double __y)
1693:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1695:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1696:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1698:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   remainder(float __x, float __y)
1699:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_remainderf(__x, __y); }
1700:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1701:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1702:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   remainder(long double __x, long double __y)
1703:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_remainderl(__x, __y); }
1704:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1705:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1706:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
1708:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     remainder(_Tp __x, _Up __y)
1710:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
1711:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return remainder(__type(__x), __type(__y));
1713:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
1714:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1715:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1716:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline float
1718:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   remquo(float __x, float __y, int* __pquo)
1719:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1721:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline long double
1722:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1725:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1726:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
1728:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
1731:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
1734:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1735:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1736:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1738:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   rint(float __x)
1739:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_rintf(__x); }
1740:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1741:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr long double
1742:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   rint(long double __x)
1743:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_rintl(__x); }
1744:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1745:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1746:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
1748:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                               double>::__type
1750:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     rint(_Tp __x)
1751:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_rint(__x); }
1752:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
1753:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
1754:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   constexpr float
1756:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   round(float __x)
1757:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_roundf(__x); }
 779                             		.loc 7 1757 5
 780                             	.LBE665:
 781                             	.LBE664:
 782                             	.LBE663:
 783                             		.file 8 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_QUANTIZE_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_QUANTIZE_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** #include <algorithm>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** #include <limits>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** #include "tensorflow/lite/kernels/internal/common.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** #include "tensorflow/lite/kernels/internal/types.h"
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** namespace tflite {
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** 
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** namespace reference_ops {
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** 
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** template <typename InputT, typename OutputT>
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** inline void AffineQuantize(const tflite::QuantizationParams& op_params,
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****                            const RuntimeShape& input_shape,
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****                            const InputT* input_data,
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****                            const RuntimeShape& output_shape,
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****                            OutputT* output_data) {
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   const int32_t zero_point = op_params.zero_point;
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   const double scale = op_params.scale;
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   static constexpr int32_t min_val = std::numeric_limits<OutputT>::min();
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   static constexpr int32_t max_val = std::numeric_limits<OutputT>::max();
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h **** 
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   for (int i = 0; i < flat_size; i++) {
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     int32_t unclamped =
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****         static_cast<int32_t>(TfLiteRound(val / static_cast<float>(scale))) +
 784                             		.loc 8 45 41 is_stmt 0
 785 0176 EC 81                   		mov.L	[r8], r1
 786                             	.LBB672:
 787                             	.LBB669:
 788                             	.LBB666:
 789                             		.loc 7 1757 28
 790 0178 FC 93 B1                		fdiv	r11, r1
 791                             	.LVL93:
 792 017b 05 00 00 00             		bsr	_roundf
 793                             	.LVL94:
 794                             	.LBE666:
 795                             	.LBE669:
 796                             	.LBE672:
 797                             		.loc 8 45 76
 798 017f FC 97 11                		ftoi	r1, r1
 799                             	.LVL95:
 800 0182 4B 1C                   		add	r1, r12
 801                             	.LVL96:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****         zero_point;
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     int32_t clamped = std::min(std::max(unclamped, min_val), max_val);
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     output_data[i] = clamped;
 802                             		.loc 8 48 5
 803 0184 FD 78 5C FF 7F          		min	#0x7fff, r12
 804                             	.LVL97:
 805 0189 FD 78 4C 00 80          		max	#-32768, r12
 806 018e D3 AC                   		mov.W	r12, [r10]
 807                             	.LVL98:
 808                             		.balign 8,3,1
 809                             	.L82:
 810                             	.LBE662:
 811                             	.LBE661:
 812                             	.LBE660:
 813                             	.LBE659:
 814                             	.LBB760:
 815                             	.LBB761:
 816                             		.file 9 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <algorithm>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstring>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <initializer_list>
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FusedActivationFunctionType : uint8_t {
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kNone,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu6,
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu1,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class PaddingType : uint8_t { kNone, kSame, kValid };
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct PaddingValues {
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // This enumeration allows for non-default formats for the weights array
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // of a fully-connected operator, allowing the use of special optimized
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // runtime paths.
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FullyConnectedWeightsFormat : uint8_t {
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Default format (flat 2D layout, the inner contiguous dimension
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is input_depth, the outer non-contiguous dimension is output_depth)
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kDefault,
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Summary: optimized layout for fast CPU runtime implementation,
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // aimed specifically at ARM CPUs at the moment, and specialized for
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 8-bit quantized layers.
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The use case we're concerned with here is: 8-bit quantization,
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // large weights matrix that doesn't fit in cache (e.g. 4096x2048 in
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // a key application that drove this), very small batch size (e.g. 1 -- 4).
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Even with 8-bit quantization of weights, the performance of memory
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses to the weights can become the dominant issue when
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the batch size is small, so each weight value is used in only a few
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // arithmetic ops, i.e. the fully-connected node has a low arithmetic
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // intensity. The specific issues that arise are of three kinds:
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (1) One may, ideally, max out DRAM bandwidth, i.e. be truly memory
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     bound. That's the "good" issue to run into.
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (2) One may run into sub-optimal pre-fetching: the data hasn't been
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     prefetched into the cache by the time we need it.
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (3) One may run into cache aliasing: multiple values that are
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     pre-fetched, alias each other in the L1 cache (which typically
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     has only 4-way set associativity in ARM CPUs) and thus evict
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     each other before we get to using them.
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The point of this shuffling is to avoid issues (2) and (3) so that
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // we get as fast as possible given only the hard constraint (1).
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This is achieved by turning the difficulty into a solution: the
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // difficulty, that each value loaded from memory is used only in
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // one kernel iteration, making this operation memory-intensive, hints at
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the solution, of shuffling the weights so that they are stored in the
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // exact order as the kernel needs to load them, so that the memory
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses made by the kernel are trivial. This solves (2) because the
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // trivial memory access pattern allows the CPU's automatic prefetching
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to perform very well (no need even for preload instructions), and this
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // solves (3) because the values being loaded concurrently are now
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // contiguous in the address space, thus don't alias each other in the cache.
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // On ARM, we typically want our kernel to process a 4x16 block of weights
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // at a time, because:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 16 is the number of bytes in a NEON register.
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 4 is how many rows we need to handle concurrently in the kernel in
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     order to have sufficient mutual independence of instructions to
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     maximize arithmetic throughput.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Finally, the 'Int8' part in the name refers to the fact that this
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // weights format has each weights value encoded as a signed int8_t value,
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // even if the data type of the weights buffer is uint8_t.  This is intended
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to save runtime kernels the effort to have to XOR the top bit of these
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // bytes before using them in signed arithmetic, see this file for more
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // explanations on the 'signed int8_t trick' in matrix multiplication kernels:
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   tensorflow/lite/toco/graph_transformations/ensure_uint8_weights_safe_for_fast_int8_kernels.c
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kShuffled4x16Int8,
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Quantization parameters, determining the mapping of quantized values
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // to real values (i.e. determining how quantized values are mathematically
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // interpreted).
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // The correspondence is as follows:
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //   real_value = scale * (quantized_value - zero_point);
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // In other words, zero_point designates which quantized value corresponds to
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // the real 0 value, and scale designates the difference between the real values
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // corresponding to consecutive quantized values differing by 1.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct QuantizationParams {
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t zero_point = 0;
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   double scale = 0.0;
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool operator==(const QuantizationParams& qp1,
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const QuantizationParams& qp2) {
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return qp1.zero_point == qp2.zero_point && qp1.scale == qp2.scale;
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct Dims {
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int sizes[N];
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int strides[N];
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** class RuntimeShape {
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  public:
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Shapes with dimensions up to 5 are stored directly in the structure, while
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // larger shapes are separately allocated.
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   static constexpr int kMaxSmallSize = 5;
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape& operator=(RuntimeShape const&) = delete;
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape() : size_(0) {}
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   explicit RuntimeShape(int dimensions_count) : size_(dimensions_count) {
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int shape_size, int32_t value) : size_(0) {
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(shape_size);
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < shape_size; ++i) {
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, value);
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int dimensions_count, const int32_t* dims_data) : size_(0) {
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     ReplaceWith(dimensions_count, dims_data);
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(const std::initializer_list<int> init_list) : size_(0) {
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom(init_list);
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Avoid using this constructor.  We should be able to delete it when C++17
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // rolls out.
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(RuntimeShape const& other) : size_(other.DimensionsCount()) {
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[size_];
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData(), other.DimsData(), sizeof(int32_t) * size_);
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator==(const RuntimeShape& comp) const {
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return this->size_ == comp.size_ &&
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****            std::memcmp(DimsData(), comp.DimsData(), size_ * sizeof(int32_t)) ==
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                0;
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   ~RuntimeShape() {
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 817                             		.loc 9 185 5 is_stmt 1
 818 0190 61 56                   		cmp	#5, r6
 819 0192 2B 0F                   		ble	.L79
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 820                             		.loc 9 189 7
 821                             		.loc 9 189 16 is_stmt 0
 822 0194 A9 01                   		mov.L	16[r0], r1
 823                             		.loc 9 189 29
 824 0196 61 01                   		cmp	#0, r1
 825 0198 20 0D                   		beq	.L139
 826                             		.loc 9 189 16
 827 019a 05 00 00 00             		bsr	__ZdaPv
 828                             	.LVL99:
 829 019e ED 0D 09                		mov.L	36[r0], r13
 830                             		.balign 8,3,1
 831                             	.L79:
 832                             	.LVL100:
 833                             	.LBE761:
 834                             	.LBE760:
 835                             	.LBB762:
 836                             	.LBB763:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 837                             		.loc 9 185 5 is_stmt 1
 838 01a1 61 5D                   		cmp	#5, r13
 839 01a3 2B 0B                   		ble	.L103
 840                             	.LVL101:
 841                             		.balign 8,3,1
 842                             	.L139:
 843                             		.loc 9 189 7
 844                             		.loc 9 189 16 is_stmt 0
 845 01a5 AA 81                   		mov.L	40[r0], r1
 846                             		.loc 9 189 29
 847 01a7 61 01                   		cmp	#0, r1
 848 01a9 15                      		beq	.L103
 849                             		.loc 9 189 16
 850 01aa 05 00 00 00             		bsr	__ZdaPv
 851                             	.LVL102:
 852                             	.LBE763:
 853                             	.LBE762:
 120:../src/tensorflow/lite/micro/kernels/quantize.cc ****       default:
 854                             		.loc 1 120 9 is_stmt 1
 855                             		.balign 8,3,1
 856                             	.L103:
 857                             	.LBE1003:
 186:../src/tensorflow/lite/micro/kernels/quantize.cc **** }
 858                             		.loc 1 186 10 is_stmt 0
 859 01ae 66 0A                   		mov.L	#0, r10
 860                             		.loc 1 187 1
 861 01b0 EF A1                   		mov.L	r10, r1
 862 01b2 3F 6D 35                		rtsd	#212, r6-r13
 863                             	.LVL103:
 864                             	.L169:
 865                             	.LBB1004:
 866                             	.LBB766:
 867                             	.LBB651:
 868                             	.LBB502:
 869                             	.LBB499:
 870                             	.LBB497:
 871                             	.LBB495:
 872                             	.LBB493:
 873                             	.LBB490:
 874                             	.LBB486:
 875                             	.LBB482:
 876                             	.LBB479:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 877                             		.loc 6 346 35
 878 01b5 F9 02 28 01 00 00 C0    		mov.L	#-1073741823, 160[r0]
 879 01bc FB 56 FF                		mov.L	#-1, r5
 880                             	.LVL104:
 881 01bf 03                      		.balign 8,3,2
 882                             	.L136:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 883                             		.loc 6 348 49
 884 01c0 ED 0B 28                		mov.L	160[r0], r11
 885 01c3 FF 2D 2B                		add	r2, r11, r13
 886 01c6 FC 0B 35                		adc	r3, r5
 887 01c9 E7 0D 27                		mov.L	r13, 156[r0]
 888 01cc 26 0F                   		bpz	.L134
 889 01ce 70 D2 FF FF FF 7F       		add	#0x7fffffff, r13, r2
 890 01d4 FD 74 25 00             		adc	#0, r5
 891 01d8 E7 02 27                		mov.L	r2, 156[r0]
 892                             		.balign 8,3,1
 893                             	.L134:
 894 01db 6C 15                   		shll	#1, r5
 895 01dd ED 0B 27                		mov.L	156[r0], r11
 896 01e0 69 FB                   		shlr	#31, r11
 897 01e2 57 B5                   		or	r11, r5
 898 01e4 38 C7 FE                		bra	.L133
 899                             	.LVL105:
 900                             	.L46:
 901                             	.LBE479:
 902                             	.LBE482:
 903                             	.LBE486:
 904                             	.LBE490:
 905                             	.LBE493:
 906                             	.LBE495:
 907                             	.LBE497:
 908                             	.LBE499:
 909                             	.LBE502:
 910                             	.LBE651:
 911                             	.LBE766:
 114:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::AffineQuantize(
 912                             		.loc 1 114 7 is_stmt 1
 115:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params, tflite::micro::GetTensorShape(input),
 913                             		.loc 1 115 9
 116:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<float>(input),
 914                             		.loc 1 116 69 is_stmt 0
 915 01e7 71 0F 24                		add	#36, r0, r15
 916 01ea EF C1                   		mov.L	r12, r1
 917                             	.LVL106:
 918 01ec 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 919                             	.LVL107:
 118:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(output));
 920                             		.loc 1 118 42
 921 01f0 66 CF                   		mov.L	#12, r15
 922 01f2 4B 0F                   		add	r0, r15
 923 01f4 EF 71                   		mov.L	r7, r1
 924                             	.LBB767:
 925                             	.LBB768:
 926                             		.loc 3 62 53
 927 01f6 EC C8                   		mov.L	[r12], r8
 928                             	.LVL108:
 929                             	.LBE768:
 930                             	.LBE767:
 118:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(output));
 931                             		.loc 1 118 42
 932 01f8 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 933                             	.LVL109:
 934                             	.LBB769:
 935                             	.LBB755:
 936                             	.LBB676:
 937                             	.LBB677:
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t DimensionsCount() const { return size_; }
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void SetDim(int i, int32_t val) {
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_[i] = val;
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_[i] = val;
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t* DimsData() {
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsData() const {
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The caller must ensure that the shape is no bigger than 5-D.
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsDataUpTo5D() const { return dims_; }
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void Resize(int dimensions_count) {
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     size_ = dimensions_count;
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void ReplaceWith(int dimensions_count, const int32_t* dims_data) {
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   template <typename T>
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const T& src_iterable) {
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int dimensions_count =
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         std::distance(src_iterable.begin(), src_iterable.end());
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* data = DimsData();
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (auto it : src_iterable) {
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       *data = it;
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       ++data;
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This will probably be factored out. Old code made substantial use of 4-D
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // shapes, and so this function is used to extend smaller shapes. Note that
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (a) as Dims<4>-dependent code is eliminated, the reliance on this should be
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // reduced, and (b) some kernels are stricly 4-D, but then the shapes of their
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // inputs should already be 4-D, so this function should not be needed.
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline static RuntimeShape ExtendedShape(int new_shape_size,
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                            const RuntimeShape& shape) {
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return RuntimeShape(new_shape_size, shape, 1);
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const std::initializer_list<int> init_list) {
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom<const std::initializer_list<int>>(init_list);
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Returns the total count of elements, that is the size when flattened into a
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // vector.
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int FlatSize() const {
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int buffer_size = 1;
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return buffer_size;
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator!=(const RuntimeShape& comp) const { return !((*this) == comp); }
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  private:
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // For use only by ExtendedShape(), written to guarantee (return-value) copy
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // elision in C++17.
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This creates a shape padded to the desired size with the specified value.
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int new_shape_size, const RuntimeShape& shape, int pad_value)
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       : size_(0) {
 288:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // If the following check fails, it is likely because a 4D-only kernel is
 289:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // being used with an array of larger dimension count.
 290:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_CHECK_GE(new_shape_size, shape.DimensionsCount());
 291:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(new_shape_size);
 292:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int size_increase = new_shape_size - shape.DimensionsCount();
 293:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_increase; ++i) {
 294:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, pad_value);
 295:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 296:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData() + size_increase, shape.DimsData(),
 297:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                 sizeof(int32_t) * shape.DimensionsCount());
 298:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 299:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 300:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t size_;
 301:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   union {
 302:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t dims_[kMaxSmallSize];
 303:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dims_pointer_;
 304:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   };
 305:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 306:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 307:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Converts inference-style shape to legacy tflite::Dims<4>.
 308:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline tflite::Dims<4> ToRuntimeDims(const tflite::RuntimeShape& array_shape) {
 309:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   tflite::Dims<4> result;
 310:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dimensions_count = array_shape.DimensionsCount();
 311:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_LE(dimensions_count, 4);
 312:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int cum_prod = 1;
 313:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < 4; i++) {
 314:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int new_dim =
 315:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         (i < dimensions_count) ? array_shape.Dims(dimensions_count - 1 - i) : 1;
 316:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.sizes[i] = new_dim;
 317:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.strides[i] = cum_prod;
 318:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     cum_prod *= new_dim;
 319:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 320:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return result;
 321:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 322:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 323:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(b/80418076): Move to legacy ops file, update invocations.
 324:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline RuntimeShape DimsToShape(const tflite::Dims<4>& dims) {
 325:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return RuntimeShape(
 326:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       {dims.sizes[3], dims.sizes[2], dims.sizes[1], dims.sizes[0]});
 327:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 328:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 329:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets next index to iterate through a multidimensional array.
 330:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool NextIndex(const int num_dims, const int* dims, int* current) {
 331:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 332:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return false;
 333:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 334:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 335:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(current != nullptr);
 336:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int carry = 1;
 337:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = num_dims - 1; idx >= 0; --idx) {
 338:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int current_val = current[idx] + carry;
 339:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(dims[idx], current_val);
 340:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dims[idx] == current_val) {
 341:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = 0;
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = current_val;
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       carry = 0;
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       break;
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return (carry == 0);
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 350:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 351:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets offset of index if reducing on axis. When reducing, the flattened offset
 352:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // will not change, if the input index changes on the given axis. For example,
 353:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // if you have a 3D tensor and you are reducing to 2D by eliminating axis 0,
 354:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // then index (0, 1, 2) and index (1, 1, 2) will map to the same flattened
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // offset.
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(kanlig): uses Dims to represent dimensions.
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline size_t ReducedOutputOffset(const int num_dims, const int* dims,
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* index, const int num_axis,
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* axis) {
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return 0;
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 363:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 364:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index != nullptr);
 365:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   size_t offset = 0;
 366:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = 0; idx < num_dims; ++idx) {
 367:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // if we need to skip this axis
 368:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     bool is_axis = false;
 369:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (axis != nullptr) {
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       for (int axis_idx = 0; axis_idx < num_axis; ++axis_idx) {
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         if (idx == axis[axis_idx]) {
 372:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           is_axis = true;
 373:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           break;
 374:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         }
 375:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       }
 376:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 377:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (!is_axis) {
 378:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       offset = offset * static_cast<size_t>(dims[idx]) +
 379:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                static_cast<size_t>(index[idx]);
 380:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 381:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 382:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return offset;
 383:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 384:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 385:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int i0, int i1, int i2, int i3) {
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), 4);
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 393:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 394:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 395:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int i0, int i1, int i2, int i3) {
 396:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims.sizes[0]);
 397:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims.sizes[1]);
 398:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims.sizes[2]);
 399:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims.sizes[3]);
 400:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return i0 * dims.strides[0] + i1 * dims.strides[1] + i2 * dims.strides[2] +
 401:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****          i3 * dims.strides[3];
 402:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 403:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 404:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int* index) {
 405:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(dims, index[0], index[1], index[2], index[3]);
 406:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 407:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 408:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int* index) {
 409:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(shape, index[0], index[1], index[2], index[3]);
 410:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 411:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 412:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get array size, DCHECKing that the dim index is in range.
 413:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 414:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Note that this will be phased out with Dims<4>, since RuntimeShape::Dims()
 415:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // already performs this check.
 416:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 417:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int ArraySize(const Dims<N>& array, int index) {
 418:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index >= 0 && index < N);
 419:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return array.sizes[index];
 420:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 421:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 422:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common array size, DCHECKing that they all agree.
 423:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2>
 424:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 425:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2) {
 426:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 427:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ArraySize(array1, index1);
 428:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 429:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 430:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2, typename... Args>
 431:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 432:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2, Args... args) {
 433:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 434:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingArraySize(array1, index1, args...);
 435:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 436:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 437:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common shape dim, DCHECKing that they all agree.
 438:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingDim(const RuntimeShape& shape1, int index1,
 439:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const RuntimeShape& shape2, int index2) {
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 441:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 442:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 443:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 444:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename... Args>
 445:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingDim(const RuntimeShape& shape1, int index1,
 446:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                 const RuntimeShape& shape2, int index2, Args... args) {
 447:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 448:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingDim(shape1, index1, args...);
 449:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 450:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 451:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Will be phased out with Dims<4>, replaced by RuntimeShape::FlatSize().
 452:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 453:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int FlatSize(const Dims<N>& dims) {
 454:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 455:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 456:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= dims.sizes[i];
 457:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 458:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return flat_size;
 459:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 460:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 461:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** TFLITE_DEPRECATED("Prefer FlatSize.")
 462:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int RequiredBufferSizeForDims(const Dims<4>& dims) {
 463:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return FlatSize(dims);
 464:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 465:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 466:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 467:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0) {
 468:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 469:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 470:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 471:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 472:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 473:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 474:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 475:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0,
 476:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_1) {
 477:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 478:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 479:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_3 = check_shape_1.FlatSize();
 480:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 481:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_2, size_3);
 482:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 483:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 484:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 485:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Flat size calculation, checking that dimensions match with one or more other
 486:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // arrays.
 487:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const RuntimeShape& shape,
 488:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_0) {
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), check_shape_0.DimensionsCount());
 938                             		.loc 9 489 3
 939 01fc ED 0D 09                		mov.L	36[r0], r13
 940 01ff A8 8E                   		mov.L	12[r0], r6
 941                             	.LBE677:
 942                             	.LBE676:
 943                             	.LBE755:
 944                             	.LBE769:
 945                             	.LBB770:
 946                             	.LBB771:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 947                             		.loc 3 55 28
 948 0201 EC 7A                   		mov.L	[r7], r10
 949                             	.LVL110:
 950                             	.LBE771:
 951                             	.LBE770:
 952                             	.LBB772:
 953                             	.LBB756:
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   const double scale = op_params.scale;
 954                             		.loc 8 36 17
 955 0203 EC BC                   		mov.L	[r11], r12
 956                             	.LVL111:
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
 957                             		.loc 8 37 16
 958 0205 ED BB 01                		mov.L	4[r11], r11
 959                             	.LVL112:
 960                             	.LBB750:
 961                             	.LBB746:
 962                             		.loc 9 489 3 is_stmt 1
 963                             	.LBE746:
 964                             	.LBE750:
 965                             	.LBE756:
 966                             	.LBE772:
 967                             	.LBE1004:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 968                             		.loc 9 194 44
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 969                             		.loc 9 194 44
 970                             	.LBB1005:
 971                             	.LBB773:
 972                             	.LBB757:
 973                             	.LBB751:
 974                             	.LBB747:
 975                             		.loc 9 489 3 is_stmt 0
 976 0208 47 6D                   		cmp	r6, r13
 977 020a 3B 78 03                		bne	.L44
 978                             	.LVL113:
 979                             	.LBB678:
 490:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 980                             		.loc 9 491 21
 981 020d 61 0D                   		cmp	#0, r13
 982 020f 2A 05 38 65 FF          		ble	.L73
 983                             	.LBB679:
 984                             	.LBB680:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 985                             		.loc 9 198 36
 986 0214 AA 84                   		mov.L	40[r0], r4
 987                             	.LBE680:
 988                             	.LBE679:
 989                             	.LBB693:
 990                             	.LBB694:
 991 0216 A9 07                   		mov.L	16[r0], r7
 992                             	.LVL114:
 993 0218 61 5D                   		cmp	#5, r13
 994 021a 2A 05 38 6A 03          		ble	.L212
 995                             	.LBE694:
 996                             	.LBE693:
 492:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 997                             		.loc 9 492 5 is_stmt 1
 998                             	.LVL115:
 999                             	.LBB707:
 1000                             	.LBB681:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1001                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1002                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1003                             		.loc 9 198 5
 1004                             	.LBE681:
 1005                             	.LBE707:
 1006                             	.LBB708:
 1007                             	.LBB695:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1008                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1009                             		.loc 9 197 5
 1010                             	.LBE695:
 1011                             	.LBE708:
 1012                             		.loc 9 492 5 is_stmt 0
 1013 021f EC 75                   		mov.L	[r7], r5
 1014 0221 06 84 45                		cmp	[r4].L, r5
 1015 0224 3B 5E 03                		bne	.L44
 1016                             	.LVL116:
 1017                             		.loc 9 492 5 is_stmt 1
 1018                             	.LBB709:
 1019                             	.LBB682:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1020                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1021                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1022                             		.loc 9 198 5
 1023                             	.LBE682:
 1024                             	.LBE709:
 1025                             	.LBB710:
 1026                             	.LBB696:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1027                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1028                             		.loc 9 197 5
 1029                             	.LBE696:
 1030                             	.LBE710:
 1031                             		.loc 9 492 5 is_stmt 0
 1032 0227 A8 7D                   		mov.L	4[r7], r5
 1033 0229 06 85 45 01             		cmp	4[r4].L, r5
 1034 022d 3B 55 03                		bne	.L44
 1035                             	.LVL117:
 1036                             		.loc 9 492 5 is_stmt 1
 1037                             	.LBB711:
 1038                             	.LBB683:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1039                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1040                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1041                             		.loc 9 198 5
 1042                             	.LBE683:
 1043                             	.LBE711:
 1044                             	.LBB712:
 1045                             	.LBB697:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1046                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1047                             		.loc 9 197 5
 1048                             	.LBE697:
 1049                             	.LBE712:
 1050                             		.loc 9 492 5 is_stmt 0
 1051 0230 A8 F5                   		mov.L	8[r7], r5
 1052 0232 06 85 45 02             		cmp	8[r4].L, r5
 1053 0236 3B 4C 03                		bne	.L44
 1054                             	.LVL118:
 1055                             		.loc 9 492 5 is_stmt 1
 1056                             	.LBB713:
 1057                             	.LBB684:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1058                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1059                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1060                             		.loc 9 198 5
 1061                             	.LBE684:
 1062                             	.LBE713:
 1063                             	.LBB714:
 1064                             	.LBB698:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1065                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1066                             		.loc 9 197 5
 1067                             	.LBE698:
 1068                             	.LBE714:
 1069                             		.loc 9 492 5 is_stmt 0
 1070 0239 A8 CD                   		mov.L	12[r4], r5
 1071 023b 06 85 75 03             		cmp	12[r7].L, r5
 1072 023f 3B 43 03                		bne	.L44
 1073                             	.LVL119:
 1074                             		.loc 9 492 5 is_stmt 1
 1075                             	.LBB715:
 1076                             	.LBB685:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1077                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1078                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1079                             		.loc 9 198 5
 1080                             	.LBE685:
 1081                             	.LBE715:
 1082                             	.LBB716:
 1083                             	.LBB699:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1084                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1085                             		.loc 9 197 5
 1086                             	.LBE699:
 1087                             	.LBE716:
 1088                             		.loc 9 492 5 is_stmt 0
 1089 0242 A9 75                   		mov.L	16[r7], r5
 1090 0244 06 85 45 04             		cmp	16[r4].L, r5
 1091 0248 3B 3A 03                		bne	.L44
 1092                             	.LVL120:
 1093                             		.loc 9 492 5 is_stmt 1
 1094                             	.LBB717:
 1095                             	.LBB686:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1096                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1097                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1098                             		.loc 9 198 5
 1099                             	.LBE686:
 1100                             	.LBE717:
 1101                             	.LBB718:
 1102                             	.LBB700:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1103                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1104                             		.loc 9 197 5
 1105                             	.LBE700:
 1106                             	.LBE718:
 1107                             		.loc 9 492 5 is_stmt 0
 1108 024b A9 7D                   		mov.L	20[r7], r5
 1109 024d 06 85 45 05             		cmp	20[r4].L, r5
 1110 0251 3B 31 03                		bne	.L44
 1111                             	.LVL121:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1112                             		.loc 9 491 21
 1113 0254 61 6D                   		cmp	#6, r13
 1114 0256 20 1A                   		beq	.L75
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1115                             		.loc 9 491 3
 1116 0258 66 65                   		mov.L	#6, r5
 1117                             	.LVL122:
 1118                             		.balign 8,3,3
 1119                             	.L76:
 1120                             		.loc 9 492 5 is_stmt 1
 1121                             	.LBB719:
 1122                             	.LBB687:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1123                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1124                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1125                             		.loc 9 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1126                             		.loc 9 198 34 is_stmt 0
 1127 025a FE 65 43                		mov.L	[r5,r4], r3
 1128                             	.LVL123:
 1129                             	.LBE687:
 1130                             	.LBE719:
 1131                             	.LBB720:
 1132                             	.LBB701:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1133                             		.loc 9 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1134                             		.loc 9 197 5
 1135 025d 47 56                   		cmp	r5, r6
 1136 025f 3A 23 03                		beq	.L44
 1137                             	.LVL124:
 1138                             	.LBE701:
 1139                             	.LBE720:
 1140                             		.loc 9 492 5 is_stmt 0
 1141 0262 FE 65 72                		mov.L	[r5,r7], r2
 1142 0265 47 32                   		cmp	r3, r2
 1143 0267 3B 1B 03                		bne	.L44
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1144                             		.loc 9 491 3
 1145 026a 62 15                   		add	#1, r5
 1146                             	.LVL125:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1147                             		.loc 9 491 21
 1148 026c 47 5D                   		cmp	r5, r13
 1149 026e 21 EC                   		bne	.L76
 1150                             	.LVL126:
 1151                             		.balign 8,3,1
 1152                             	.L75:
 1153                             	.LBE678:
 1154                             	.LBB731:
 1155                             	.LBB732:
 1156                             	.LBB733:
 1157                             	.LBB734:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1158                             		.loc 9 214 34
 1159 0270 66 19                   		mov.L	#1, r9
 1160 0272 66 07                   		mov.L	#0, r7
 1161                             		.balign 8,3,3
 1162                             	.L81:
 1163                             	.LVL127:
 1164                             	.LBE734:
 1165                             	.LBE733:
 1166                             	.LBB737:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1167                             		.loc 9 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1168                             		.loc 9 275 19 is_stmt 0
 1169 0274 FE 67 45                		mov.L	[r7,r4], r5
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1170                             		.loc 9 274 5
 1171 0277 62 17                   		add	#1, r7
 1172                             	.LVL128:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1173                             		.loc 9 275 19
 1174 0279 4F 59                   		mul	r5, r9
 1175                             	.LVL129:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1176                             		.loc 9 274 23
 1177 027b 47 7D                   		cmp	r7, r13
 1178 027d 2A F7                   		bgt	.L81
 1179                             	.LVL130:
 1180                             	.LBE737:
 1181                             	.LBE732:
 1182                             	.LBE731:
 1183                             	.LBE747:
 1184                             	.LBE751:
 1185                             	.LBB752:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
 1186                             		.loc 8 42 21
 1187 027f 61 09                   		cmp	#0, r9
 1188 0281 2A 05 38 0D FF          		ble	.L82
 1189 0286 66 07                   		mov.L	#0, r7
 1190                             	.LVL131:
 1191                             		.balign 8,3,3
 1192                             	.L77:
 1193                             	.LBB675:
 1194                             	.LBB673:
 1195                             	.LBB670:
 1196                             	.LBB667:
 1197                             		.loc 7 1757 5 is_stmt 1
 1198                             	.LBE667:
 1199                             	.LBE670:
 1200                             	.LBE673:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****         zero_point;
 1201                             		.loc 8 45 41 is_stmt 0
 1202 0288 FE 67 81                		mov.L	[r7,r8], r1
 1203                             	.LBB674:
 1204                             	.LBB671:
 1205                             	.LBB668:
 1206                             		.loc 7 1757 28
 1207 028b FC 93 B1                		fdiv	r11, r1
 1208 028e 05 00 00 00             		bsr	_roundf
 1209                             	.LVL132:
 1210                             	.LBE668:
 1211                             	.LBE671:
 1212                             	.LBE674:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****         zero_point;
 1213                             		.loc 8 45 76
 1214 0292 FC 97 11                		ftoi	r1, r1
 1215                             	.LVL133:
 1216 0295 4B C1                   		add	r12, r1
 1217                             	.LVL134:
 1218                             		.loc 8 48 5
 1219 0297 FD 78 51 FF 7F          		min	#0x7fff, r1
 1220                             	.LVL135:
 1221 029c FD 78 41 00 80          		max	#-32768, r1
 1222 02a1 FE 17 A1                		mov.W	r1, [r7,r10]
 1223                             	.LBE675:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
 1224                             		.loc 8 42 3
 1225 02a4 62 17                   		add	#1, r7
 1226                             	.LVL136:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
 1227                             		.loc 8 42 21
 1228 02a6 47 97                   		cmp	r9, r7
 1229 02a8 29 E0                   		blt	.L77
 1230 02aa 38 E6 FE                		bra	.L82
 1231                             	.LVL137:
 1232                             	.L210:
 1233                             	.LBE752:
 1234                             	.LBE757:
 1235                             	.LBE773:
 107:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::AffineQuantize(
 1236                             		.loc 1 107 7 is_stmt 1
 108:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params, tflite::micro::GetTensorShape(input),
 1237                             		.loc 1 108 9
 109:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<float>(input),
 1238                             		.loc 1 109 69 is_stmt 0
 1239 02ad 71 0F 54                		add	#0x54, r0, r15
 1240 02b0 EF C1                   		mov.L	r12, r1
 1241                             	.LVL138:
 1242 02b2 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1243                             	.LVL139:
 111:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<uint8_t>(output));
 1244                             		.loc 1 111 42
 1245 02b6 71 0F 3C                		add	#60, r0, r15
 1246 02b9 EF 71                   		mov.L	r7, r1
 1247                             	.LBB774:
 1248                             	.LBB775:
 1249                             		.loc 3 62 53
 1250 02bb EC C6                   		mov.L	[r12], r6
 1251                             	.LVL140:
 1252                             	.LBE775:
 1253                             	.LBE774:
 111:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<uint8_t>(output));
 1254                             		.loc 1 111 42
 1255 02bd 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1256                             	.LVL141:
 1257                             	.LBB776:
 1258                             	.LBB777:
 1259                             	.LBB778:
 1260                             	.LBB779:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1261                             		.loc 9 489 3
 1262 02c1 AD 0C                   		mov.L	84[r0], r4
 1263 02c3 AB 8A                   		mov.L	60[r0], r2
 1264                             	.LBE779:
 1265                             	.LBE778:
 1266                             	.LBE777:
 1267                             	.LBE776:
 1268                             	.LBB874:
 1269                             	.LBB875:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1270                             		.loc 3 55 28
 1271 02c5 EC 79                   		mov.L	[r7], r9
 1272                             	.LVL142:
 1273                             	.LBE875:
 1274                             	.LBE874:
 1275                             	.LBB876:
 1276                             	.LBB870:
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   const double scale = op_params.scale;
 1277                             		.loc 8 36 17
 1278 02c7 EC BC                   		mov.L	[r11], r12
 1279                             	.LVL143:
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
 1280                             		.loc 8 37 16
 1281 02c9 ED BB 01                		mov.L	4[r11], r11
 1282                             	.LVL144:
 1283                             	.LBB855:
 1284                             	.LBB850:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1285                             		.loc 9 489 3 is_stmt 1
 1286                             	.LBE850:
 1287                             	.LBE855:
 1288                             	.LBE870:
 1289                             	.LBE876:
 1290                             	.LBE1005:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1291                             		.loc 9 194 44
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1292                             		.loc 9 194 44
 1293                             	.LBB1006:
 1294                             	.LBB877:
 1295                             	.LBB871:
 1296                             	.LBB856:
 1297                             	.LBB851:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1298                             		.loc 9 489 3 is_stmt 0
 1299 02cc 47 24                   		cmp	r2, r4
 1300 02ce 3B B4 02                		bne	.L44
 1301                             	.LVL145:
 1302                             	.LBB780:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1303                             		.loc 9 491 21
 1304 02d1 61 04                   		cmp	#0, r4
 1305 02d3 2B 76                   		ble	.L62
 1306                             	.LBB781:
 1307                             	.LBB782:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1308                             		.loc 9 198 36
 1309 02d5 AD 83                   		mov.L	88[r0], r3
 1310                             	.LBE782:
 1311                             	.LBE781:
 1312                             	.LBB795:
 1313                             	.LBB796:
 1314 02d7 AC 07                   		mov.L	64[r0], r7
 1315                             	.LVL146:
 1316 02d9 61 54                   		cmp	#5, r4
 1317 02db 2A 05 38 69 02          		ble	.L213
 1318                             	.LBE796:
 1319                             	.LBE795:
 1320                             		.loc 9 492 5 is_stmt 1
 1321                             	.LVL147:
 1322                             	.LBB809:
 1323                             	.LBB783:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1324                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1325                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1326                             		.loc 9 198 5
 1327                             	.LBE783:
 1328                             	.LBE809:
 1329                             	.LBB810:
 1330                             	.LBB797:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1331                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1332                             		.loc 9 197 5
 1333                             	.LBE797:
 1334                             	.LBE810:
 1335                             		.loc 9 492 5 is_stmt 0
 1336 02e0 EC 3A                   		mov.L	[r3], r10
 1337 02e2 06 84 7A                		cmp	[r7].L, r10
 1338 02e5 3B 9D 02                		bne	.L44
 1339                             	.LVL148:
 1340                             		.loc 9 492 5 is_stmt 1
 1341                             	.LBB811:
 1342                             	.LBB784:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1343                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1344                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1345                             		.loc 9 198 5
 1346                             	.LBE784:
 1347                             	.LBE811:
 1348                             	.LBB812:
 1349                             	.LBB798:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1350                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1351                             		.loc 9 197 5
 1352                             	.LBE798:
 1353                             	.LBE812:
 1354                             		.loc 9 492 5 is_stmt 0
 1355 02e8 ED 7A 01                		mov.L	4[r7], r10
 1356 02eb 06 85 3A 01             		cmp	4[r3].L, r10
 1357 02ef 3B 93 02                		bne	.L44
 1358                             	.LVL149:
 1359                             		.loc 9 492 5 is_stmt 1
 1360                             	.LBB813:
 1361                             	.LBB785:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1362                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1363                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1364                             		.loc 9 198 5
 1365                             	.LBE785:
 1366                             	.LBE813:
 1367                             	.LBB814:
 1368                             	.LBB799:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1369                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1370                             		.loc 9 197 5
 1371                             	.LBE799:
 1372                             	.LBE814:
 1373                             		.loc 9 492 5 is_stmt 0
 1374 02f2 ED 7A 02                		mov.L	8[r7], r10
 1375 02f5 06 85 3A 02             		cmp	8[r3].L, r10
 1376 02f9 3B 89 02                		bne	.L44
 1377                             	.LVL150:
 1378                             		.loc 9 492 5 is_stmt 1
 1379                             	.LBB815:
 1380                             	.LBB786:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1381                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1382                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1383                             		.loc 9 198 5
 1384                             	.LBE786:
 1385                             	.LBE815:
 1386                             	.LBB816:
 1387                             	.LBB800:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1388                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1389                             		.loc 9 197 5
 1390                             	.LBE800:
 1391                             	.LBE816:
 1392                             		.loc 9 492 5 is_stmt 0
 1393 02fc ED 3A 03                		mov.L	12[r3], r10
 1394 02ff 06 85 7A 03             		cmp	12[r7].L, r10
 1395 0303 3B 7F 02                		bne	.L44
 1396                             	.LVL151:
 1397                             		.loc 9 492 5 is_stmt 1
 1398                             	.LBB817:
 1399                             	.LBB787:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1400                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1401                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1402                             		.loc 9 198 5
 1403                             	.LBE787:
 1404                             	.LBE817:
 1405                             	.LBB818:
 1406                             	.LBB801:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1407                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1408                             		.loc 9 197 5
 1409                             	.LBE801:
 1410                             	.LBE818:
 1411                             		.loc 9 492 5 is_stmt 0
 1412 0306 ED 7A 04                		mov.L	16[r7], r10
 1413 0309 06 85 3A 04             		cmp	16[r3].L, r10
 1414 030d 3B 75 02                		bne	.L44
 1415                             	.LVL152:
 1416                             		.loc 9 492 5 is_stmt 1
 1417                             	.LBB819:
 1418                             	.LBB788:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1419                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1420                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1421                             		.loc 9 198 5
 1422                             	.LBE788:
 1423                             	.LBE819:
 1424                             	.LBB820:
 1425                             	.LBB802:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1426                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1427                             		.loc 9 197 5
 1428                             	.LBE802:
 1429                             	.LBE820:
 1430                             		.loc 9 492 5 is_stmt 0
 1431 0310 ED 7A 05                		mov.L	20[r7], r10
 1432 0313 06 85 3A 05             		cmp	20[r3].L, r10
 1433 0317 3B 6B 02                		bne	.L44
 1434                             	.LVL153:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1435                             		.loc 9 491 21
 1436 031a 61 64                   		cmp	#6, r4
 1437 031c 20 1A                   		beq	.L64
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1438                             		.loc 9 491 3
 1439 031e 66 6A                   		mov.L	#6, r10
 1440                             	.LVL154:
 1441                             		.balign 8,3,3
 1442                             	.L66:
 1443                             		.loc 9 492 5 is_stmt 1
 1444                             	.LBB821:
 1445                             	.LBB789:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1446                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1447                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1448                             		.loc 9 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1449                             		.loc 9 198 34 is_stmt 0
 1450 0320 FE 6A 35                		mov.L	[r10,r3], r5
 1451                             	.LVL155:
 1452                             	.LBE789:
 1453                             	.LBE821:
 1454                             	.LBB822:
 1455                             	.LBB803:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1456                             		.loc 9 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1457                             		.loc 9 197 5
 1458 0323 47 A2                   		cmp	r10, r2
 1459 0325 3A 5D 02                		beq	.L44
 1460                             	.LVL156:
 1461                             	.LBE803:
 1462                             	.LBE822:
 1463                             		.loc 9 492 5 is_stmt 0
 1464 0328 FE 6A 71                		mov.L	[r10,r7], r1
 1465 032b 47 51                   		cmp	r5, r1
 1466 032d 3B 55 02                		bne	.L44
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1467                             		.loc 9 491 3
 1468 0330 62 1A                   		add	#1, r10
 1469                             	.LVL157:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1470                             		.loc 9 491 21
 1471 0332 47 A4                   		cmp	r10, r4
 1472 0334 21 EC                   		bne	.L66
 1473                             	.LVL158:
 1474                             		.balign 8,3,1
 1475                             	.L64:
 1476                             	.LBE780:
 1477                             	.LBB833:
 1478                             	.LBB834:
 1479                             	.LBB835:
 1480                             	.LBB836:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1481                             		.loc 9 214 34
 1482 0336 66 1A                   		mov.L	#1, r10
 1483 0338 66 07                   		mov.L	#0, r7
 1484                             		.balign 8,3,3
 1485                             	.L69:
 1486                             	.LVL159:
 1487                             	.LBE836:
 1488                             	.LBE835:
 1489                             	.LBB839:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1490                             		.loc 9 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1491                             		.loc 9 275 19 is_stmt 0
 1492 033a FE 67 35                		mov.L	[r7,r3], r5
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1493                             		.loc 9 274 5
 1494 033d 62 17                   		add	#1, r7
 1495                             	.LVL160:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1496                             		.loc 9 275 19
 1497 033f 4F 5A                   		mul	r5, r10
 1498                             	.LVL161:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1499                             		.loc 9 274 23
 1500 0341 47 74                   		cmp	r7, r4
 1501 0343 2A F7                   		bgt	.L69
 1502                             	.LVL162:
 1503                             	.LBE839:
 1504                             	.LBE834:
 1505                             	.LBE833:
 1506                             	.LBE851:
 1507                             	.LBE856:
 1508                             	.LBB857:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
 1509                             		.loc 8 42 21
 1510 0345 61 0A                   		cmp	#0, r10
 1511 0347 2B 27                   		ble	.L67
 1512                             	.LVL163:
 1513                             		.balign 8,3,1
 1514                             	.L62:
 1515                             	.LBE857:
 1516                             	.LBB866:
 1517                             	.LBB852:
 1518                             	.LBB845:
 1519                             	.LBB842:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 1520                             		.loc 9 272 9
 1521 0349 66 07                   		mov.L	#0, r7
 1522                             	.LVL164:
 1523                             		.balign 8,3,3
 1524                             	.L70:
 1525                             	.LBE842:
 1526                             	.LBE845:
 1527                             	.LBE852:
 1528                             	.LBE866:
 1529                             	.LBB867:
 1530                             	.LBB858:
 1531                             	.LBB859:
 1532                             	.LBB860:
 1533                             	.LBB861:
 1534                             		.loc 7 1757 5 is_stmt 1
 1535                             	.LBE861:
 1536                             	.LBE860:
 1537                             	.LBE859:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****         zero_point;
 1538                             		.loc 8 45 41 is_stmt 0
 1539 034b FE 67 61                		mov.L	[r7,r6], r1
 1540                             	.LBE858:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
 1541                             		.loc 8 42 3
 1542 034e 62 17                   		add	#1, r7
 1543                             	.LVL165:
 1544                             	.LBB865:
 1545                             	.LBB864:
 1546                             	.LBB863:
 1547                             	.LBB862:
 1548                             		.loc 7 1757 28
 1549 0350 FC 93 B1                		fdiv	r11, r1
 1550 0353 05 00 00 00             		bsr	_roundf
 1551                             	.LVL166:
 1552                             	.LBE862:
 1553                             	.LBE863:
 1554                             	.LBE864:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****         zero_point;
 1555                             		.loc 8 45 76
 1556 0357 FC 97 11                		ftoi	r1, r1
 1557                             	.LVL167:
 1558 035a 4B C1                   		add	r12, r1
 1559                             	.LVL168:
 1560                             		.loc 8 48 5
 1561 035c FD 78 51 FF 00          		min	#0xff, r1
 1562                             	.LVL169:
 1563 0361 FD 74 41 00             		max	#0, r1
 1564 0365 FD 20 91                		mov.B	r1, [r9+]
 1565                             	.LVL170:
 1566                             	.LBE865:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
 1567                             		.loc 8 42 21
 1568 0368 47 A7                   		cmp	r10, r7
 1569 036a 29 E1                   		blt	.L70
 1570 036c AB 8A                   		mov.L	60[r0], r2
 1571                             	.LVL171:
 1572                             		.balign 8,3,1
 1573                             	.L67:
 1574                             	.LBE867:
 1575                             	.LBE871:
 1576                             	.LBE877:
 1577                             	.LBB878:
 1578                             	.LBB879:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1579                             		.loc 9 185 5 is_stmt 1
 1580 036e 61 52                   		cmp	#5, r2
 1581 0370 2B 0B                   		ble	.L71
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1582                             		.loc 9 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1583                             		.loc 9 189 16 is_stmt 0
 1584 0372 AC 01                   		mov.L	64[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1585                             		.loc 9 189 29
 1586 0374 61 01                   		cmp	#0, r1
 1587 0376 15                      		beq	.L71
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1588                             		.loc 9 189 16
 1589 0377 05 00 00 00             		bsr	__ZdaPv
 1590                             	.LVL172:
 1591                             		.balign 8,3,1
 1592                             	.L71:
 1593                             	.LBE879:
 1594                             	.LBE878:
 1595                             	.LBB880:
 1596                             	.LBB881:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1597                             		.loc 9 185 5 is_stmt 1
 1598 037b AD 0F                   		mov.L	84[r0], r7
 1599 037d 61 57                   		cmp	#5, r7
 1600 037f 2A 05 38 2D FE          		ble	.L103
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1601                             		.loc 9 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1602                             		.loc 9 189 16 is_stmt 0
 1603 0384 AD 81                   		mov.L	88[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1604                             		.loc 9 189 29
 1605 0386 61 01                   		cmp	#0, r1
 1606 0388 3A 26 FE                		beq	.L103
 1607                             	.LBE881:
 1608                             	.LBE880:
 1609                             	.LBB882:
 1610                             	.LBB764:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1611                             		.loc 9 189 16
 1612 038b 05 00 00 00             		bsr	__ZdaPv
 1613                             	.LVL173:
 1614                             	.LBE764:
 1615                             	.LBE882:
 120:../src/tensorflow/lite/micro/kernels/quantize.cc ****       default:
 1616                             		.loc 1 120 9 is_stmt 1
 1617 038f 38 1F FE                		bra	.L103
 1618                             	.LVL174:
 1619                             	.L47:
 100:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::AffineQuantize(
 1620                             		.loc 1 100 7
 101:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params, tflite::micro::GetTensorShape(input),
 1621                             		.loc 1 101 9
 102:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<float>(input),
 1622                             		.loc 1 102 69 is_stmt 0
 1623 0392 72 0F 84 00             		add	#0x84, r0, r15
 1624 0396 EF C1                   		mov.L	r12, r1
 1625                             	.LVL175:
 1626 0398 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1627                             	.LVL176:
 104:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int8_t>(output));
 1628                             		.loc 1 104 42
 1629 039c 71 0F 6C                		add	#0x6c, r0, r15
 1630 039f EF 71                   		mov.L	r7, r1
 1631                             	.LBB883:
 1632                             	.LBB884:
 1633                             		.loc 3 62 53
 1634 03a1 EC C6                   		mov.L	[r12], r6
 1635                             	.LVL177:
 1636                             	.LBE884:
 1637                             	.LBE883:
 104:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int8_t>(output));
 1638                             		.loc 1 104 42
 1639 03a3 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1640                             	.LVL178:
 1641                             	.LBB885:
 1642                             	.LBB886:
 1643                             	.LBB887:
 1644                             	.LBB888:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1645                             		.loc 9 489 3
 1646 03a7 ED 04 21                		mov.L	132[r0], r4
 1647 03aa AE 8A                   		mov.L	108[r0], r2
 1648                             	.LBE888:
 1649                             	.LBE887:
 1650                             	.LBE886:
 1651                             	.LBE885:
 1652                             	.LBB983:
 1653                             	.LBB984:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1654                             		.loc 3 55 28
 1655 03ac EC 79                   		mov.L	[r7], r9
 1656                             	.LVL179:
 1657                             	.LBE984:
 1658                             	.LBE983:
 1659                             	.LBB985:
 1660                             	.LBB979:
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   const double scale = op_params.scale;
 1661                             		.loc 8 36 17
 1662 03ae EC BC                   		mov.L	[r11], r12
 1663                             	.LVL180:
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
 1664                             		.loc 8 37 16
 1665 03b0 ED BB 01                		mov.L	4[r11], r11
 1666                             	.LVL181:
 1667                             	.LBB964:
 1668                             	.LBB959:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1669                             		.loc 9 489 3 is_stmt 1
 1670                             	.LBE959:
 1671                             	.LBE964:
 1672                             	.LBE979:
 1673                             	.LBE985:
 1674                             	.LBE1006:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1675                             		.loc 9 194 44
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1676                             		.loc 9 194 44
 1677                             	.LBB1007:
 1678                             	.LBB986:
 1679                             	.LBB980:
 1680                             	.LBB965:
 1681                             	.LBB960:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1682                             		.loc 9 489 3 is_stmt 0
 1683 03b3 47 24                   		cmp	r2, r4
 1684 03b5 3B CD 01                		bne	.L44
 1685                             	.LVL182:
 1686                             	.LBB889:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1687                             		.loc 9 491 21
 1688 03b8 61 04                   		cmp	#0, r4
 1689 03ba 2B 77                   		ble	.L50
 1690                             	.LBB890:
 1691                             	.LBB891:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1692                             		.loc 9 198 36
 1693 03bc ED 03 22                		mov.L	136[r0], r3
 1694                             	.LBE891:
 1695                             	.LBE890:
 1696                             	.LBB904:
 1697                             	.LBB905:
 1698 03bf AF 07                   		mov.L	112[r0], r7
 1699                             	.LVL183:
 1700 03c1 61 54                   		cmp	#5, r4
 1701 03c3 2A 05 38 01 02          		ble	.L214
 1702                             	.LBE905:
 1703                             	.LBE904:
 1704                             		.loc 9 492 5 is_stmt 1
 1705                             	.LVL184:
 1706                             	.LBB918:
 1707                             	.LBB892:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1708                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1709                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1710                             		.loc 9 198 5
 1711                             	.LBE892:
 1712                             	.LBE918:
 1713                             	.LBB919:
 1714                             	.LBB906:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1715                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1716                             		.loc 9 197 5
 1717                             	.LBE906:
 1718                             	.LBE919:
 1719                             		.loc 9 492 5 is_stmt 0
 1720 03c8 EC 7A                   		mov.L	[r7], r10
 1721 03ca 06 84 3A                		cmp	[r3].L, r10
 1722 03cd 3B B5 01                		bne	.L44
 1723                             	.LVL185:
 1724                             		.loc 9 492 5 is_stmt 1
 1725                             	.LBB920:
 1726                             	.LBB893:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1727                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1728                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1729                             		.loc 9 198 5
 1730                             	.LBE893:
 1731                             	.LBE920:
 1732                             	.LBB921:
 1733                             	.LBB907:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1734                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1735                             		.loc 9 197 5
 1736                             	.LBE907:
 1737                             	.LBE921:
 1738                             		.loc 9 492 5 is_stmt 0
 1739 03d0 ED 7A 01                		mov.L	4[r7], r10
 1740 03d3 06 85 3A 01             		cmp	4[r3].L, r10
 1741 03d7 3B AB 01                		bne	.L44
 1742                             	.LVL186:
 1743                             		.loc 9 492 5 is_stmt 1
 1744                             	.LBB922:
 1745                             	.LBB894:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1746                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1747                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1748                             		.loc 9 198 5
 1749                             	.LBE894:
 1750                             	.LBE922:
 1751                             	.LBB923:
 1752                             	.LBB908:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1753                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1754                             		.loc 9 197 5
 1755                             	.LBE908:
 1756                             	.LBE923:
 1757                             		.loc 9 492 5 is_stmt 0
 1758 03da ED 7A 02                		mov.L	8[r7], r10
 1759 03dd 06 85 3A 02             		cmp	8[r3].L, r10
 1760 03e1 3B A1 01                		bne	.L44
 1761                             	.LVL187:
 1762                             		.loc 9 492 5 is_stmt 1
 1763                             	.LBB924:
 1764                             	.LBB895:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1765                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1766                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1767                             		.loc 9 198 5
 1768                             	.LBE895:
 1769                             	.LBE924:
 1770                             	.LBB925:
 1771                             	.LBB909:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1772                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1773                             		.loc 9 197 5
 1774                             	.LBE909:
 1775                             	.LBE925:
 1776                             		.loc 9 492 5 is_stmt 0
 1777 03e4 ED 7A 03                		mov.L	12[r7], r10
 1778 03e7 06 85 3A 03             		cmp	12[r3].L, r10
 1779 03eb 3B 97 01                		bne	.L44
 1780                             	.LVL188:
 1781                             		.loc 9 492 5 is_stmt 1
 1782                             	.LBB926:
 1783                             	.LBB896:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1784                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1785                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1786                             		.loc 9 198 5
 1787                             	.LBE896:
 1788                             	.LBE926:
 1789                             	.LBB927:
 1790                             	.LBB910:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1791                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1792                             		.loc 9 197 5
 1793                             	.LBE910:
 1794                             	.LBE927:
 1795                             		.loc 9 492 5 is_stmt 0
 1796 03ee ED 3A 04                		mov.L	16[r3], r10
 1797 03f1 06 85 7A 04             		cmp	16[r7].L, r10
 1798 03f5 3B 8D 01                		bne	.L44
 1799                             	.LVL189:
 1800                             		.loc 9 492 5 is_stmt 1
 1801                             	.LBB928:
 1802                             	.LBB897:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1803                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1804                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1805                             		.loc 9 198 5
 1806                             	.LBE897:
 1807                             	.LBE928:
 1808                             	.LBB929:
 1809                             	.LBB911:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1810                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1811                             		.loc 9 197 5
 1812                             	.LBE911:
 1813                             	.LBE929:
 1814                             		.loc 9 492 5 is_stmt 0
 1815 03f8 ED 7A 05                		mov.L	20[r7], r10
 1816 03fb 06 85 3A 05             		cmp	20[r3].L, r10
 1817 03ff 3B 83 01                		bne	.L44
 1818                             	.LVL190:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1819                             		.loc 9 491 21
 1820 0402 61 64                   		cmp	#6, r4
 1821 0404 20 1A                   		beq	.L52
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1822                             		.loc 9 491 3
 1823 0406 66 6A                   		mov.L	#6, r10
 1824                             	.LVL191:
 1825                             		.balign 8,3,3
 1826                             	.L54:
 1827                             		.loc 9 492 5 is_stmt 1
 1828                             	.LBB930:
 1829                             	.LBB898:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1830                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1831                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1832                             		.loc 9 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1833                             		.loc 9 198 34 is_stmt 0
 1834 0408 FE 6A 35                		mov.L	[r10,r3], r5
 1835                             	.LVL192:
 1836                             	.LBE898:
 1837                             	.LBE930:
 1838                             	.LBB931:
 1839                             	.LBB912:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1840                             		.loc 9 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1841                             		.loc 9 197 5
 1842 040b 47 A2                   		cmp	r10, r2
 1843 040d 3A 75 01                		beq	.L44
 1844                             	.LVL193:
 1845                             	.LBE912:
 1846                             	.LBE931:
 1847                             		.loc 9 492 5 is_stmt 0
 1848 0410 FE 6A 71                		mov.L	[r10,r7], r1
 1849 0413 47 51                   		cmp	r5, r1
 1850 0415 3B 6D 01                		bne	.L44
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1851                             		.loc 9 491 3
 1852 0418 62 1A                   		add	#1, r10
 1853                             	.LVL194:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1854                             		.loc 9 491 21
 1855 041a 47 A4                   		cmp	r10, r4
 1856 041c 21 EC                   		bne	.L54
 1857                             	.LVL195:
 1858                             		.balign 8,3,1
 1859                             	.L52:
 1860                             	.LBE889:
 1861                             	.LBB942:
 1862                             	.LBB943:
 1863                             	.LBB944:
 1864                             	.LBB945:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1865                             		.loc 9 214 34
 1866 041e 66 1A                   		mov.L	#1, r10
 1867 0420 66 07                   		mov.L	#0, r7
 1868                             		.balign 8,3,3
 1869                             	.L57:
 1870                             	.LVL196:
 1871                             	.LBE945:
 1872                             	.LBE944:
 1873                             	.LBB948:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1874                             		.loc 9 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1875                             		.loc 9 275 19 is_stmt 0
 1876 0422 FE 67 35                		mov.L	[r7,r3], r5
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1877                             		.loc 9 274 5
 1878 0425 62 17                   		add	#1, r7
 1879                             	.LVL197:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1880                             		.loc 9 275 19
 1881 0427 4F 5A                   		mul	r5, r10
 1882                             	.LVL198:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1883                             		.loc 9 274 23
 1884 0429 47 74                   		cmp	r7, r4
 1885 042b 2A F7                   		bgt	.L57
 1886                             	.LVL199:
 1887                             	.LBE948:
 1888                             	.LBE943:
 1889                             	.LBE942:
 1890                             	.LBE960:
 1891                             	.LBE965:
 1892                             	.LBB966:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
 1893                             		.loc 8 42 21
 1894 042d 61 0A                   		cmp	#0, r10
 1895 042f 2B 26                   		ble	.L55
 1896                             	.LVL200:
 1897                             		.balign 8,3,1
 1898                             	.L50:
 1899                             	.LBE966:
 1900                             	.LBB975:
 1901                             	.LBB961:
 1902                             	.LBB954:
 1903                             	.LBB951:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 1904                             		.loc 9 272 9
 1905 0431 66 07                   		mov.L	#0, r7
 1906                             	.LVL201:
 1907                             		.balign 8,3,3
 1908                             	.L58:
 1909                             	.LBE951:
 1910                             	.LBE954:
 1911                             	.LBE961:
 1912                             	.LBE975:
 1913                             	.LBB976:
 1914                             	.LBB967:
 1915                             	.LBB968:
 1916                             	.LBB969:
 1917                             	.LBB970:
 1918                             		.loc 7 1757 5 is_stmt 1
 1919                             	.LBE970:
 1920                             	.LBE969:
 1921                             	.LBE968:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****         zero_point;
 1922                             		.loc 8 45 41 is_stmt 0
 1923 0433 FE 67 61                		mov.L	[r7,r6], r1
 1924                             	.LBE967:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
 1925                             		.loc 8 42 3
 1926 0436 62 17                   		add	#1, r7
 1927                             	.LVL202:
 1928                             	.LBB974:
 1929                             	.LBB973:
 1930                             	.LBB972:
 1931                             	.LBB971:
 1932                             		.loc 7 1757 28
 1933 0438 FC 93 B1                		fdiv	r11, r1
 1934 043b 05 00 00 00             		bsr	_roundf
 1935                             	.LVL203:
 1936                             	.LBE971:
 1937                             	.LBE972:
 1938                             	.LBE973:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****         zero_point;
 1939                             		.loc 8 45 76
 1940 043f FC 97 11                		ftoi	r1, r1
 1941                             	.LVL204:
 1942 0442 4B C1                   		add	r12, r1
 1943                             	.LVL205:
 1944                             		.loc 8 48 5
 1945 0444 FD 74 51 7F             		min	#0x7f, r1
 1946                             	.LVL206:
 1947 0448 FD 74 41 80             		max	#-128, r1
 1948 044c FD 20 91                		mov.B	r1, [r9+]
 1949                             	.LVL207:
 1950                             	.LBE974:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\quantize.h ****     const InputT val = input_data[i];
 1951                             		.loc 8 42 21
 1952 044f 47 A7                   		cmp	r10, r7
 1953 0451 29 E2                   		blt	.L58
 1954 0453 AE 8A                   		mov.L	108[r0], r2
 1955                             	.LVL208:
 1956                             		.balign 8,3,1
 1957                             	.L55:
 1958                             	.LBE976:
 1959                             	.LBE980:
 1960                             	.LBE986:
 1961                             	.LBB987:
 1962                             	.LBB988:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1963                             		.loc 9 185 5 is_stmt 1
 1964 0455 61 52                   		cmp	#5, r2
 1965 0457 2B 0B                   		ble	.L59
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1966                             		.loc 9 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1967                             		.loc 9 189 16 is_stmt 0
 1968 0459 AF 01                   		mov.L	112[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1969                             		.loc 9 189 29
 1970 045b 61 01                   		cmp	#0, r1
 1971 045d 15                      		beq	.L59
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1972                             		.loc 9 189 16
 1973 045e 05 00 00 00             		bsr	__ZdaPv
 1974                             	.LVL209:
 1975                             		.balign 8,3,2
 1976                             	.L59:
 1977                             	.LBE988:
 1978                             	.LBE987:
 1979                             	.LBB989:
 1980                             	.LBB990:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1981                             		.loc 9 185 5 is_stmt 1
 1982 0462 ED 07 21                		mov.L	132[r0], r7
 1983 0465 61 57                   		cmp	#5, r7
 1984 0467 2A 05 38 45 FD          		ble	.L103
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1985                             		.loc 9 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1986                             		.loc 9 189 16 is_stmt 0
 1987 046c ED 01 22                		mov.L	136[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1988                             		.loc 9 189 29
 1989 046f 61 01                   		cmp	#0, r1
 1990 0471 3A 3D FD                		beq	.L103
 1991                             	.LBE990:
 1992                             	.LBE989:
 1993                             	.LBB991:
 1994                             	.LBB765:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1995                             		.loc 9 189 16
 1996 0474 05 00 00 00             		bsr	__ZdaPv
 1997                             	.LVL210:
 1998                             	.LBE765:
 1999                             	.LBE991:
 120:../src/tensorflow/lite/micro/kernels/quantize.cc ****       default:
 2000                             		.loc 1 120 9 is_stmt 1
 2001 0478 38 36 FD                		bra	.L103
 2002                             	.LVL211:
 2003                             	.L211:
 2004                             	.LBB992:
 2005                             	.LBB652:
 144:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::Requantize(
 2006                             		.loc 1 144 7
 145:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), size,
 2007                             		.loc 1 145 9
 2008                             	.LBB505:
 2009                             	.LBB506:
 2010                             		.loc 3 62 53 is_stmt 0
 2011 047b EC C5                   		mov.L	[r12], r5
 2012                             	.LVL212:
 2013                             	.LBE506:
 2014                             	.LBE505:
 145:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), size,
 2015                             		.loc 1 145 34
 2016 047d ED B4 02                		mov.L	8[r11], r4
 147:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params.zero_point,
 2017                             		.loc 1 147 44
 2018 0480 ED B6 03                		mov.L	12[r11], r6
 145:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), size,
 2019                             		.loc 1 145 34
 2020 0483 ED B8 04                		mov.L	16[r11], r8
 2021 0486 EC BD                   		mov.L	[r11], r13
 2022                             	.LVL213:
 2023                             	.LBB507:
 2024                             	.LBB508:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2025                             		.loc 3 55 28
 2026 0488 EC 73                   		mov.L	[r7], r3
 2027                             	.LVL214:
 2028                             	.LBE508:
 2029                             	.LBE507:
 2030                             	.LBB509:
 2031                             	.LBB510:
 2032                             	.LBB511:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 2033                             		.loc 4 52 21
 2034 048a 61 01                   		cmp	#0, r1
 2035 048c 2A 05 38 20 FD          		ble	.L103
 2036                             	.LBB512:
 2037                             	.LBB513:
 2038                             	.LBB514:
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 2039                             		.loc 5 162 31
 2040 0491 FC 07 62                		neg	r6, r2
 2041 0494 61 06                   		cmp	#0, r6
 2042 0496 2B 04                   		ble 1f
 2043 0498 66 02                   		mov #0, r2
 2044                             	1:
 2045                             	.LBB515:
 2046                             	.LBB516:
 2047                             		.loc 6 371 50
 2048 049a 71 27 E0                		add	#-32, r2, r7
 2049                             	.LVL215:
 2050 049d 26 05 38 B4 03          		bn	.L115
 2051 04a2 66 0C                   		mov.L	#0, r12
 2052                             	.LVL216:
 2053                             		.balign 8,3,3
 2054                             	.L116:
 2055 04a4 FD 74 46 00             		max	#0, r6
 2056                             	.LVL217:
 2057                             		.loc 6 371 63
 2058 04a8 60 1C                   		sub	#1, r12
 2059                             	.LBB517:
 2060                             	.LBB518:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2061                             		.loc 6 142 15
 2062 04aa FD A1 CE                		shar	#1, r12, r14
 2063 04ad 75 52 1F                		cmp	#31, r2
 2064 04b0 2B 05 38 BC 03          		bgt	.L93
 2065 04b5 4B 11                   		add	r1, r1
 2066                             	.LVL218:
 2067 04b7 4B 51                   		add	r5, r1
 2068                             	.LBE518:
 2069                             	.LBE517:
 2070                             	.LBE516:
 2071                             	.LBE515:
 2072                             	.LBB533:
 2073                             	.LBB534:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2074                             		.loc 6 349 19
 2075 04b9 E7 0D 2C                		mov.L	r13, 176[r0]
 2076 04bc E7 0E 29                		mov.L	r14, 164[r0]
 2077 04bf 2E 41                   		bra	.L125
 2078                             	.LVL219:
 2079                             	.L117:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2080                             		.loc 6 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2081                             		.loc 6 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2082                             		.loc 6 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2083                             		.loc 6 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2084                             		.loc 6 346 35 is_stmt 0
 2085 04c1 71 ED 00                		add	#0, r14, r13
 2086 04c4 28 05 38 45 01          		blt	.L166
 2087                             	.LVL220:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2088                             		.loc 6 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2089                             		.loc 6 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2090                             		.loc 6 348 40 is_stmt 0
 2091 04c9 EF E7                   		mov.L	r14, r7
 2092                             	.LVL221:
 2093 04cb 70 A9 00 00 00 40       		add	#0x40000000, r10, r9
 2094 04d1 FD 74 27 00             		adc	#0, r7
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2095                             		.loc 6 348 49
 2096 04d5 6C 17                   		shll	#1, r7
 2097 04d7 FD 9F 9A                		shlr	#31, r9, r10
 2098 04da 57 A7                   		or	r10, r7
 2099                             	.LVL222:
 2100                             		.balign 8,3,2
 2101                             	.L120:
 2102                             	.LBE534:
 2103                             	.LBE533:
 2104                             	.LBB537:
 2105                             	.LBB531:
 2106                             	.LBB519:
 2107                             	.LBB520:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2108                             		.loc 6 71 14
 2109 04dc FD 9F 7A                		shlr	#31, r7, r10
 2110                             	.LBE520:
 2111                             	.LBE519:
 2112                             	.LBB521:
 2113                             	.LBB522:
 2114 04df FF 49 7C                		and	r7, r12, r9
 2115                             	.LVL223:
 2116                             	.LBE522:
 2117                             	.LBE521:
 2118                             	.LBB523:
 2119                             	.LBB524:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2120                             		.loc 6 95 14
 2121 04e2 06 89 0A 29             		add	164[r0], r10
 2122                             	.LBE524:
 2123                             	.LBE523:
 2124                             	.LBB525:
 2125                             	.LBB526:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2126                             		.loc 6 142 15
 2127 04e6 EF 7B                   		mov.L	r7, r11
 2128 04e8 FD 61 2B                		shar	r2, r11
 2129                             	.LBE526:
 2130                             	.LBE525:
 2131                             	.LBB527:
 2132                             	.LBB528:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2133                             		.loc 6 71 14
 2134 04eb 47 9A                   		cmp	r9, r10
 2135 04ed FC DB 79                		sclt.L	r7
 2136                             	.LVL224:
 2137                             	.LBE528:
 2138                             	.LBE527:
 2139                             	.LBB529:
 2140                             	.LBB530:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2141                             		.loc 6 95 14
 2142 04f0 4B B7                   		add	r11, r7
 2143                             	.LBE530:
 2144                             	.LBE529:
 2145                             	.LBE531:
 2146                             	.LBE537:
 2147                             	.LBE514:
 2148                             	.LBE513:
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         output_zeropoint;
 2149                             		.loc 4 56 62
 2150 04f2 06 89 07 2C             		add	176[r0], r7
 2151                             		.loc 4 60 5
 2152 04f6 FD 22 37                		mov.L	r7, [r3+]
 2153                             	.LBE512:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 2154                             		.loc 4 52 21
 2155 04f9 47 15                   		cmp	r1, r5
 2156 04fb 3A B3 FC                		beq	.L103
 2157                             	.LVL225:
 2158 04fe EF 00                   		.balign 8,3,5
 2159                             	.L125:
 2160                             	.LBB549:
 2161                             	.LBB545:
 2162                             	.LBB541:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 2163                             		.loc 5 159 3 is_stmt 1
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 2164                             		.loc 5 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 2165                             		.loc 5 161 3
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 2166                             		.loc 5 162 3
 2167                             		.loc 5 163 3
 2168                             	.LBE541:
 2169                             	.LBE545:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 2170                             		.loc 4 53 37 is_stmt 0
 2171 0500 FD 29 57                		mov.W	[r5+], r7
 2172                             	.LVL226:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 2173                             		.loc 4 53 19
 2174 0503 43 87                   		sub	r8, r7
 2175                             	.LVL227:
 2176                             	.LBB546:
 2177                             	.LBB542:
 2178                             		.loc 5 163 29
 2179 0505 FD 62 67                		shll	r6, r7
 2180                             	.LVL228:
 2181                             	.LBB538:
 2182                             	.LBB535:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2183                             		.loc 6 342 3 is_stmt 1
 2184 0508 EF 7D                   		mov.L	r7, r13
 2185 050a FC 1B 4D                		emul	r4, r13
 2186 050d EF DA                   		mov.L	r13, r10
 2187 050f EF EB                   		mov.L	r14, r11
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2188                             		.loc 6 342 26 is_stmt 0
 2189 0511 47 74                   		cmp	r7, r4
 2190 0513 21 AE                   		bne	.L117
 2191                             	.LVL229:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2192                             		.loc 6 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2193                             		.loc 6 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2194                             		.loc 6 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2195                             		.loc 6 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2196                             		.loc 6 346 35 is_stmt 0
 2197 0515 61 0E                   		cmp	#0, r14
 2198 0517 FB E2 01 00 00 C0       		mov.L	#-1073741823, r14
 2199 051d 29 08                   		blt 1f
 2200 051f FB E2 00 00 00 40       		mov #0x40000000, r14
 2201                             	1:
 2202 0525 E7 0E 27                		mov.L	r14, 156[r0]
 2203 0528 71 BF 00                		add	#0, r11, r15
 2204 052b FB F6 FF                		mov.L	#-1, r15
 2205 052e 29 04                   		blt 1f
 2206 0530 66 0F                   		mov #0, r15
 2207                             	1:
 2208 0532 E7 0F 2A                		mov.L	r15, 168[r0]
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2209                             		.loc 6 347 3 is_stmt 1
 2210                             	.LVL230:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2211                             		.loc 6 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2212                             		.loc 6 349 19 is_stmt 0
 2213 0535 74 04 00 00 00 80       		cmp	#-2147483648, r4
 2214 053b 3B DB 00                		bne	.L123
 2215 053e FB 72 FF FF FF 7F       		mov.L	#0x7fffffff, r7
 2216                             	.LVL231:
 2217 0544 2E 98                   		bra	.L120
 2218                             	.LVL232:
 2219                             	.L213:
 2220                             	.LBE535:
 2221                             	.LBE538:
 2222                             	.LBE542:
 2223                             	.LBE546:
 2224                             	.LBE549:
 2225                             	.LBE511:
 2226                             	.LBE510:
 2227                             	.LBE509:
 2228                             	.LBE652:
 2229                             	.LBE992:
 2230                             	.LBB993:
 2231                             	.LBB872:
 2232                             	.LBB868:
 2233                             	.LBB853:
 2234                             	.LBB846:
 2235                             		.loc 9 492 5 is_stmt 1
 2236                             	.LBB823:
 2237                             	.LBB790:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2238                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2239                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2240                             		.loc 9 198 5
 2241                             	.LBE790:
 2242                             	.LBE823:
 2243                             	.LBB824:
 2244                             	.LBB804:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2245                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2246                             		.loc 9 197 5
 2247                             	.LBE804:
 2248                             	.LBE824:
 2249                             		.loc 9 492 5 is_stmt 0
 2250 0546 47 73                   		cmp	r7, r3
 2251 0548 21 3A                   		bne	.L44
 2252                             	.LVL233:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2253                             		.loc 9 491 21
 2254 054a 61 14                   		cmp	#1, r4
 2255 054c 3A 1C 03                		beq	.L150
 2256                             		.loc 9 492 5 is_stmt 1
 2257                             	.LVL234:
 2258                             	.LBB825:
 2259                             	.LBB791:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2260                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2261                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2262                             		.loc 9 198 5
 2263                             	.LBE791:
 2264                             	.LBE825:
 2265                             	.LBB826:
 2266                             	.LBB805:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2267                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2268                             		.loc 9 197 5
 2269                             	.LBE805:
 2270                             	.LBE826:
 2271                             		.loc 9 492 5 is_stmt 0
 2272 054f AC 0F                   		mov.L	68[r0], r7
 2273 0551 06 85 07 17             		cmp	92[r0].L, r7
 2274 0555 21 2D                   		bne	.L44
 2275                             	.LVL235:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2276                             		.loc 9 491 21
 2277 0557 61 24                   		cmp	#2, r4
 2278 0559 3A 0F 03                		beq	.L150
 2279                             		.loc 9 492 5 is_stmt 1
 2280                             	.LVL236:
 2281                             	.LBB827:
 2282                             	.LBB792:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2283                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2284                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2285                             		.loc 9 198 5
 2286                             	.LBE792:
 2287                             	.LBE827:
 2288                             	.LBB828:
 2289                             	.LBB806:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2290                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2291                             		.loc 9 197 5
 2292                             	.LBE806:
 2293                             	.LBE828:
 2294                             		.loc 9 492 5 is_stmt 0
 2295 055c AE 07                   		mov.L	96[r0], r7
 2296 055e 06 85 07 12             		cmp	72[r0].L, r7
 2297 0562 21 20                   		bne	.L44
 2298                             	.LVL237:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2299                             		.loc 9 491 21
 2300 0564 61 34                   		cmp	#3, r4
 2301 0566 3A 02 03                		beq	.L150
 2302                             		.loc 9 492 5 is_stmt 1
 2303                             	.LVL238:
 2304                             	.LBB829:
 2305                             	.LBB793:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2306                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2307                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2308                             		.loc 9 198 5
 2309                             	.LBE793:
 2310                             	.LBE829:
 2311                             	.LBB830:
 2312                             	.LBB807:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2313                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2314                             		.loc 9 197 5
 2315                             	.LBE807:
 2316                             	.LBE830:
 2317                             		.loc 9 492 5 is_stmt 0
 2318 0569 AC 8F                   		mov.L	76[r0], r7
 2319 056b 06 85 07 19             		cmp	100[r0].L, r7
 2320 056f 21 13                   		bne	.L44
 2321                             	.LVL239:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2322                             		.loc 9 491 21
 2323 0571 61 44                   		cmp	#4, r4
 2324 0573 3A F5 02                		beq	.L150
 2325                             		.loc 9 492 5 is_stmt 1
 2326                             	.LVL240:
 2327                             	.LBB831:
 2328                             	.LBB794:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2329                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2330                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2331                             		.loc 9 198 5
 2332                             	.LBE794:
 2333                             	.LBE831:
 2334                             	.LBB832:
 2335                             	.LBB808:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2336                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2337                             		.loc 9 197 5
 2338                             	.LBE808:
 2339                             	.LBE832:
 2340                             		.loc 9 492 5 is_stmt 0
 2341 0576 AD 07                   		mov.L	80[r0], r7
 2342                             	.LBE846:
 2343                             	.LBB847:
 2344                             	.LBB843:
 2345                             	.LBB840:
 2346                             	.LBB837:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2347                             		.loc 9 214 34
 2348 0578 71 03 58                		add	#0x58, r0, r3
 2349                             	.LBE837:
 2350                             	.LBE840:
 2351                             	.LBE843:
 2352                             	.LBE847:
 2353                             	.LBB848:
 2354                             		.loc 9 492 5
 2355 057b 06 85 07 1A             		cmp	104[r0].L, r7
 2356 057f 3A B7 FD                		beq	.L64
 2357                             	.LVL241:
 2358                             		.balign 8,3,3
 2359                             	.L44:
 2360                             	.LBE848:
 2361                             	.LBE853:
 2362                             	.LBE868:
 2363                             	.LBE872:
 2364                             	.LBE993:
 2365                             	.LBE1007:
  92:../src/tensorflow/lite/micro/kernels/quantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 2366                             		.loc 1 92 3 discriminator 1
 2367 0582 05 00 00 00             		bsr	_abort
 2368                             	.LVL242:
 2369                             	.L212:
 2370                             	.LBB1008:
 2371                             	.LBB994:
 2372                             	.LBB758:
 2373                             	.LBB753:
 2374                             	.LBB748:
 2375                             	.LBB742:
 2376                             		.loc 9 492 5 is_stmt 1
 2377                             	.LBB721:
 2378                             	.LBB688:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2379                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2380                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2381                             		.loc 9 198 5
 2382                             	.LBE688:
 2383                             	.LBE721:
 2384                             	.LBB722:
 2385                             	.LBB702:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2386                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2387                             		.loc 9 197 5
 2388                             	.LBE702:
 2389                             	.LBE722:
 2390                             		.loc 9 492 5 is_stmt 0
 2391 0586 47 74                   		cmp	r7, r4
 2392 0588 21 FA                   		bne	.L44
 2393                             	.LVL243:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2394                             		.loc 9 491 21
 2395 058a 61 1D                   		cmp	#1, r13
 2396 058c 3A D6 02                		beq	.L155
 2397                             		.loc 9 492 5 is_stmt 1
 2398                             	.LVL244:
 2399                             	.LBB723:
 2400                             	.LBB689:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2401                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2402                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2403                             		.loc 9 198 5
 2404                             	.LBE689:
 2405                             	.LBE723:
 2406                             	.LBB724:
 2407                             	.LBB703:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2408                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2409                             		.loc 9 197 5
 2410                             	.LBE703:
 2411                             	.LBE724:
 2412                             		.loc 9 492 5 is_stmt 0
 2413 058f AA 8F                   		mov.L	44[r0], r7
 2414 0591 06 85 07 05             		cmp	20[r0].L, r7
 2415 0595 21 ED                   		bne	.L44
 2416                             	.LVL245:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2417                             		.loc 9 491 21
 2418 0597 61 2D                   		cmp	#2, r13
 2419 0599 3A C9 02                		beq	.L155
 2420                             		.loc 9 492 5 is_stmt 1
 2421                             	.LVL246:
 2422                             	.LBB725:
 2423                             	.LBB690:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2424                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2425                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2426                             		.loc 9 198 5
 2427                             	.LBE690:
 2428                             	.LBE725:
 2429                             	.LBB726:
 2430                             	.LBB704:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2431                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2432                             		.loc 9 197 5
 2433                             	.LBE704:
 2434                             	.LBE726:
 2435                             		.loc 9 492 5 is_stmt 0
 2436 059c AB 07                   		mov.L	48[r0], r7
 2437 059e 06 85 07 06             		cmp	24[r0].L, r7
 2438 05a2 21 E0                   		bne	.L44
 2439                             	.LVL247:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2440                             		.loc 9 491 21
 2441 05a4 61 3D                   		cmp	#3, r13
 2442 05a6 3A BC 02                		beq	.L155
 2443                             		.loc 9 492 5 is_stmt 1
 2444                             	.LVL248:
 2445                             	.LBB727:
 2446                             	.LBB691:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2447                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2448                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2449                             		.loc 9 198 5
 2450                             	.LBE691:
 2451                             	.LBE727:
 2452                             	.LBB728:
 2453                             	.LBB705:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2454                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2455                             		.loc 9 197 5
 2456                             	.LBE705:
 2457                             	.LBE728:
 2458                             		.loc 9 492 5 is_stmt 0
 2459 05a9 AB 0F                   		mov.L	52[r0], r7
 2460 05ab 06 85 07 07             		cmp	28[r0].L, r7
 2461 05af 21 D3                   		bne	.L44
 2462                             	.LVL249:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2463                             		.loc 9 491 21
 2464 05b1 61 4D                   		cmp	#4, r13
 2465 05b3 3A AF 02                		beq	.L155
 2466                             		.loc 9 492 5 is_stmt 1
 2467                             	.LVL250:
 2468                             	.LBB729:
 2469                             	.LBB692:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2470                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2471                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2472                             		.loc 9 198 5
 2473                             	.LBE692:
 2474                             	.LBE729:
 2475                             	.LBB730:
 2476                             	.LBB706:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2477                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2478                             		.loc 9 197 5
 2479                             	.LBE706:
 2480                             	.LBE730:
 2481                             		.loc 9 492 5 is_stmt 0
 2482 05b6 AA 07                   		mov.L	32[r0], r7
 2483                             	.LBE742:
 2484                             	.LBB743:
 2485                             	.LBB740:
 2486                             	.LBB738:
 2487                             	.LBB735:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2488                             		.loc 9 214 34
 2489 05b8 71 04 28                		add	#40, r0, r4
 2490                             	.LBE735:
 2491                             	.LBE738:
 2492                             	.LBE740:
 2493                             	.LBE743:
 2494                             	.LBB744:
 2495                             		.loc 9 492 5
 2496 05bb 06 85 07 0E             		cmp	56[r0].L, r7
 2497 05bf 3A B1 FC                		beq	.L75
 2498                             	.LBE744:
 2499                             	.LBE748:
 2500                             	.LBE753:
 2501                             	.LBE758:
 2502                             	.LBE994:
 2503                             	.LBE1008:
  92:../src/tensorflow/lite/micro/kernels/quantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 2504                             		.loc 1 92 3
 2505 05c2 05 00 00 00             		bsr	_abort
 2506                             	.LVL251:
 2507                             	.L214:
 2508                             	.LBB1009:
 2509                             	.LBB995:
 2510                             	.LBB981:
 2511                             	.LBB977:
 2512                             	.LBB962:
 2513                             	.LBB955:
 2514                             		.loc 9 492 5 is_stmt 1
 2515                             	.LBB932:
 2516                             	.LBB899:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2517                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2518                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2519                             		.loc 9 198 5
 2520                             	.LBE899:
 2521                             	.LBE932:
 2522                             	.LBB933:
 2523                             	.LBB913:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2524                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2525                             		.loc 9 197 5
 2526                             	.LBE913:
 2527                             	.LBE933:
 2528                             		.loc 9 492 5 is_stmt 0
 2529 05c6 47 73                   		cmp	r7, r3
 2530 05c8 21 BA                   		bne	.L44
 2531                             	.LVL252:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2532                             		.loc 9 491 21
 2533 05ca 61 14                   		cmp	#1, r4
 2534 05cc 3A 8F 02                		beq	.L144
 2535                             		.loc 9 492 5 is_stmt 1
 2536                             	.LVL253:
 2537                             	.LBB934:
 2538                             	.LBB900:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2539                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2540                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2541                             		.loc 9 198 5
 2542                             	.LBE900:
 2543                             	.LBE934:
 2544                             	.LBB935:
 2545                             	.LBB914:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2546                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2547                             		.loc 9 197 5
 2548                             	.LBE914:
 2549                             	.LBE935:
 2550                             		.loc 9 492 5 is_stmt 0
 2551 05cf ED 07 23                		mov.L	140[r0], r7
 2552 05d2 06 85 07 1D             		cmp	116[r0].L, r7
 2553 05d6 21 AC                   		bne	.L44
 2554                             	.LVL254:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2555                             		.loc 9 491 21
 2556 05d8 61 24                   		cmp	#2, r4
 2557 05da 3A 81 02                		beq	.L144
 2558                             		.loc 9 492 5 is_stmt 1
 2559                             	.LVL255:
 2560                             	.LBB936:
 2561                             	.LBB901:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2562                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2563                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2564                             		.loc 9 198 5
 2565                             	.LBE901:
 2566                             	.LBE936:
 2567                             	.LBB937:
 2568                             	.LBB915:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2569                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2570                             		.loc 9 197 5
 2571                             	.LBE915:
 2572                             	.LBE937:
 2573                             		.loc 9 492 5 is_stmt 0
 2574 05dd ED 07 24                		mov.L	144[r0], r7
 2575 05e0 06 85 07 1E             		cmp	120[r0].L, r7
 2576 05e4 21 9E                   		bne	.L44
 2577                             	.LVL256:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2578                             		.loc 9 491 21
 2579 05e6 61 34                   		cmp	#3, r4
 2580 05e8 3A 73 02                		beq	.L144
 2581                             		.loc 9 492 5 is_stmt 1
 2582                             	.LVL257:
 2583                             	.LBB938:
 2584                             	.LBB902:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2585                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2586                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2587                             		.loc 9 198 5
 2588                             	.LBE902:
 2589                             	.LBE938:
 2590                             	.LBB939:
 2591                             	.LBB916:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2592                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2593                             		.loc 9 197 5
 2594                             	.LBE916:
 2595                             	.LBE939:
 2596                             		.loc 9 492 5 is_stmt 0
 2597 05eb ED 07 25                		mov.L	148[r0], r7
 2598 05ee 06 85 07 1F             		cmp	124[r0].L, r7
 2599 05f2 21 90                   		bne	.L44
 2600                             	.LVL258:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2601                             		.loc 9 491 21
 2602 05f4 61 44                   		cmp	#4, r4
 2603 05f6 3A 65 02                		beq	.L144
 2604                             		.loc 9 492 5 is_stmt 1
 2605                             	.LVL259:
 2606                             	.LBB940:
 2607                             	.LBB903:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2608                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2609                             		.loc 9 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2610                             		.loc 9 198 5
 2611                             	.LBE903:
 2612                             	.LBE940:
 2613                             	.LBB941:
 2614                             	.LBB917:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2615                             		.loc 9 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2616                             		.loc 9 197 5
 2617                             	.LBE917:
 2618                             	.LBE941:
 2619                             		.loc 9 492 5 is_stmt 0
 2620 05f9 ED 07 20                		mov.L	128[r0], r7
 2621                             	.LBE955:
 2622                             	.LBB956:
 2623                             	.LBB952:
 2624                             	.LBB949:
 2625                             	.LBB946:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2626                             		.loc 9 214 34
 2627 05fc 72 03 88 00             		add	#0x88, r0, r3
 2628                             	.LBE946:
 2629                             	.LBE949:
 2630                             	.LBE952:
 2631                             	.LBE956:
 2632                             	.LBB957:
 2633                             		.loc 9 492 5
 2634 0600 06 85 07 26             		cmp	152[r0].L, r7
 2635 0604 3A 1A FE                		beq	.L52
 2636                             	.LBE957:
 2637                             	.LBE962:
 2638                             	.LBE977:
 2639                             	.LBE981:
 2640                             	.LBE995:
 2641                             	.LBE1009:
  92:../src/tensorflow/lite/micro/kernels/quantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 2642                             		.loc 1 92 3
 2643 0607 05 00 00 00             		bsr	_abort
 2644                             	.LVL260:
 2645                             	.L166:
 2646                             	.LBB1010:
 2647                             	.LBB996:
 2648                             	.LBB653:
 2649                             	.LBB556:
 2650                             	.LBB554:
 2651                             	.LBB552:
 2652                             	.LBB550:
 2653                             	.LBB547:
 2654                             	.LBB543:
 2655                             	.LBB539:
 2656                             	.LBB536:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2657                             		.loc 6 346 35
 2658 060b F9 02 27 01 00 00 C0    		mov.L	#-1073741823, 156[r0]
 2659 0612 F9 06 2A FF             		mov.L	#-1, 168[r0]
 2660                             	.LVL261:
 2661                             		.balign 8,3,1
 2662                             	.L123:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2663                             		.loc 6 348 49
 2664 0616 EF B9                   		mov.L	r11, r9
 2665 0618 ED 0D 27                		mov.L	156[r0], r13
 2666 061b FF 27 AD                		add	r10, r13, r7
 2667                             	.LVL262:
 2668 061e 06 A1 02 09 2A          		adc 168[r0],r9
 2669 0623 E7 09 27                		mov.L	r9, 156[r0]
 2670 0626 E7 07 28                		mov.L	r7, 160[r0]
 2671 0629 61 09                   		cmp	#0, r9
 2672 062b 28 12                   		bge	.L121
 2673 062d 70 7A FF FF FF 7F       		add	#0x7fffffff, r7, r10
 2674 0633 FD 74 29 00             		adc	#0, r9
 2675 0637 E7 09 27                		mov.L	r9, 156[r0]
 2676 063a E7 0A 28                		mov.L	r10, 160[r0]
 2677                             		.balign 8,3,2
 2678                             	.L121:
 2679 063d ED 07 27                		mov.L	156[r0], r7
 2680 0640 6C 17                   		shll	#1, r7
 2681 0642 ED 09 28                		mov.L	160[r0], r9
 2682 0645 69 F9                   		shlr	#31, r9
 2683 0647 57 97                   		or	r9, r7
 2684 0649 38 93 FE                		bra	.L120
 2685                             	.LVL263:
 2686                             	.L128:
 2687                             	.LBE536:
 2688                             	.LBE539:
 2689                             	.LBE543:
 2690                             	.LBE547:
 2691                             	.LBE550:
 2692                             	.LBE552:
 2693                             	.LBE554:
 2694                             	.LBE556:
 2695                             	.LBE653:
 2696                             	.LBB654:
 2697                             	.LBB503:
 2698                             	.LBB500:
 2699                             	.LBB498:
 2700                             	.LBB496:
 2701                             	.LBB494:
 2702                             	.LBB491:
 2703                             	.LBB487:
 2704                             	.LBB483:
 2705                             	.LBB475:
 2706                             		.loc 6 371 50
 2707 064c 66 16                   		mov.L	#1, r6
 2708 064e FD 62 76                		shll	r7, r6
 2709 0651 38 28 FA                		bra	.L129
 2710                             	.LVL264:
 2711                             	.L87:
 2712                             	.LBE475:
 2713                             	.LBE483:
 2714                             	.LBE487:
 2715                             	.LBE491:
 2716                             	.LBE494:
 2717                             	.LBE496:
 2718                             	.LBE498:
 2719                             	.LBE500:
 2720                             	.LBE503:
 2721                             	.LBE654:
 2722                             	.LBB655:
 130:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::Requantize(tflite::micro::GetTensorData<int16_t>(input),
 2723                             		.loc 1 130 7 is_stmt 1
 131:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   size, data->output_multiplier,
 2724                             		.loc 1 131 9
 2725                             	.LBB557:
 2726                             	.LBB558:
 2727                             		.loc 3 62 53 is_stmt 0
 2728 0654 EC C3                   		mov.L	[r12], r3
 2729                             	.LVL265:
 2730                             	.LBE558:
 2731                             	.LBE557:
 131:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   size, data->output_multiplier,
 2732                             		.loc 1 131 34
 2733 0656 ED B2 02                		mov.L	8[r11], r2
 133:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   data->quantization_params.zero_point,
 2734                             		.loc 1 133 41
 2735 0659 ED BC 03                		mov.L	12[r11], r12
 2736                             	.LVL266:
 131:../src/tensorflow/lite/micro/kernels/quantize.cc ****                                   size, data->output_multiplier,
 2737                             		.loc 1 131 34
 2738 065c ED BD 04                		mov.L	16[r11], r13
 2739 065f EC BE                   		mov.L	[r11], r14
 2740                             	.LVL267:
 2741                             	.LBB559:
 2742                             	.LBB560:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2743                             		.loc 3 55 28
 2744 0661 EC 76                   		mov.L	[r7], r6
 2745                             	.LVL268:
 2746                             	.LBE560:
 2747                             	.LBE559:
 2748                             	.LBB561:
 2749                             	.LBB562:
 2750                             	.LBB563:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 2751                             		.loc 4 52 21
 2752 0663 61 01                   		cmp	#0, r1
 2753 0665 2A 05 38 47 FB          		ble	.L103
 2754                             	.LBB564:
 2755                             	.LBB565:
 2756                             	.LBB566:
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 2757                             		.loc 5 162 31
 2758 066a FC 07 CB                		neg	r12, r11
 2759 066d 61 0C                   		cmp	#0, r12
 2760 066f 2B 04                   		ble 1f
 2761 0671 66 0B                   		mov #0, r11
 2762                             	1:
 2763                             	.LBB567:
 2764                             	.LBB568:
 2765                             		.loc 6 371 50
 2766 0673 71 B7 E0                		add	#-32, r11, r7
 2767                             	.LVL269:
 2768 0676 26 05 38 D3 01          		bn	.L91
 2769 067b 66 09                   		mov.L	#0, r9
 2770 067d FC 13 00                		.balign 8,3,3
 2771                             	.L92:
 2772 0680 FD 74 4C 00             		max	#0, r12
 2773                             	.LVL270:
 2774                             		.loc 6 371 63
 2775 0684 60 19                   		sub	#1, r9
 2776                             	.LBB569:
 2777                             	.LBB570:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2778                             		.loc 6 142 15
 2779 0686 FD A1 9F                		shar	#1, r9, r15
 2780 0689 75 5B 1F                		cmp	#31, r11
 2781 068c 2B 05 38 E0 01          		bgt	.L93
 2782 0691 4B 11                   		add	r1, r1
 2783                             	.LVL271:
 2784 0693 FF 2A 13                		add	r1, r3, r10
 2785 0696 E7 09 27                		mov.L	r9, 156[r0]
 2786 0699 2E 41                   		bra	.L94
 2787                             	.LVL272:
 2788                             	.L95:
 2789                             	.LBE570:
 2790                             	.LBE569:
 2791                             	.LBE568:
 2792                             	.LBE567:
 2793                             	.LBB586:
 2794                             	.LBB587:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2795                             		.loc 6 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2796                             		.loc 6 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2797                             		.loc 6 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2798                             		.loc 6 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2799                             		.loc 6 346 35 is_stmt 0
 2800 069b 61 09                   		cmp	#0, r9
 2801 069d 29 79                   		blt	.L160
 2802                             	.LVL273:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2803                             		.loc 6 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2804                             		.loc 6 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2805                             		.loc 6 348 40 is_stmt 0
 2806 069f EF 97                   		mov.L	r9, r7
 2807                             	.LVL274:
 2808 06a1 70 81 00 00 00 40       		add	#0x40000000, r8, r1
 2809 06a7 FD 74 27 00             		adc	#0, r7
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2810                             		.loc 6 348 49
 2811 06ab 6C 17                   		shll	#1, r7
 2812 06ad FD 9F 15                		shlr	#31, r1, r5
 2813 06b0 57 57                   		or	r5, r7
 2814                             	.LVL275:
 2815                             		.balign 8,3,2
 2816                             	.L98:
 2817                             	.LBE587:
 2818                             	.LBE586:
 2819                             	.LBB589:
 2820                             	.LBB583:
 2821                             	.LBB571:
 2822                             	.LBB572:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2823                             		.loc 6 71 14
 2824 06b2 FD 9F 71                		shlr	#31, r7, r1
 2825                             	.LBE572:
 2826                             	.LBE571:
 2827                             	.LBB573:
 2828                             	.LBB574:
 2829 06b5 ED 05 27                		mov.L	156[r0], r5
 2830 06b8 53 75                   		and	r7, r5
 2831                             	.LVL276:
 2832                             	.LBE574:
 2833                             	.LBE573:
 2834                             	.LBB575:
 2835                             	.LBB576:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2836                             		.loc 6 95 14
 2837 06ba 4B F1                   		add	r15, r1
 2838                             	.LBE576:
 2839                             	.LBE575:
 2840                             	.LBB577:
 2841                             	.LBB578:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2842                             		.loc 6 142 15
 2843 06bc EF 74                   		mov.L	r7, r4
 2844 06be FD 61 B4                		shar	r11, r4
 2845                             	.LBE578:
 2846                             	.LBE577:
 2847                             	.LBB579:
 2848                             	.LBB580:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2849                             		.loc 6 71 14
 2850 06c1 47 15                   		cmp	r1, r5
 2851 06c3 FC DB 7A                		scgt.L	r7
 2852                             	.LVL277:
 2853                             	.LBE580:
 2854                             	.LBE579:
 2855                             	.LBB581:
 2856                             	.LBB582:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2857                             		.loc 6 95 14
 2858 06c6 4B 47                   		add	r4, r7
 2859                             	.LBE582:
 2860                             	.LBE581:
 2861                             	.LBE583:
 2862                             	.LBE589:
 2863                             	.LBE566:
 2864                             	.LBE565:
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         output_zeropoint;
 2865                             		.loc 4 56 62
 2866 06c8 4B E7                   		add	r14, r7
 2867                             		.loc 4 60 5
 2868 06ca FD 74 47 80             		max	#-128, r7
 2869 06ce FD 74 57 7F             		min	#0x7f, r7
 2870 06d2 FD 20 67                		mov.B	r7, [r6+]
 2871                             	.LVL278:
 2872                             	.LBE564:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 2873                             		.loc 4 52 21
 2874 06d5 47 3A                   		cmp	r3, r10
 2875 06d7 3A D7 FA                		beq	.L103
 2876                             	.LVL279:
 2877                             		.balign 8,3,5
 2878                             	.L94:
 2879                             	.LBB601:
 2880                             	.LBB597:
 2881                             	.LBB593:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 2882                             		.loc 5 159 3 is_stmt 1
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 2883                             		.loc 5 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 2884                             		.loc 5 161 3
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 2885                             		.loc 5 162 3
 2886                             		.loc 5 163 3
 2887                             	.LBE593:
 2888                             	.LBE597:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 2889                             		.loc 4 53 37 is_stmt 0
 2890 06da FD 29 37                		mov.W	[r3+], r7
 2891                             	.LVL280:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 2892                             		.loc 4 53 19
 2893 06dd 43 D7                   		sub	r13, r7
 2894                             	.LVL281:
 2895                             	.LBB598:
 2896                             	.LBB594:
 2897                             		.loc 5 163 29
 2898 06df FD 62 C7                		shll	r12, r7
 2899                             	.LVL282:
 2900                             	.LBB590:
 2901                             	.LBB588:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2902                             		.loc 6 342 3 is_stmt 1
 2903 06e2 EF 78                   		mov.L	r7, r8
 2904 06e4 FC 1B 28                		emul	r2, r8
 2905 06e7 EF 84                   		mov.L	r8, r4
 2906 06e9 EF 95                   		mov.L	r9, r5
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2907                             		.loc 6 342 26 is_stmt 0
 2908 06eb 47 72                   		cmp	r7, r2
 2909 06ed 21 AE                   		bne	.L95
 2910                             	.LVL283:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2911                             		.loc 6 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2912                             		.loc 6 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2913                             		.loc 6 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2914                             		.loc 6 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2915                             		.loc 6 346 35 is_stmt 0
 2916 06ef 61 09                   		cmp	#0, r9
 2917 06f1 FB 82 01 00 00 C0       		mov.L	#-1073741823, r8
 2918 06f7 29 08                   		blt 1f
 2919 06f9 FB 82 00 00 00 40       		mov #0x40000000, r8
 2920                             	1:
 2921 06ff FB 76 FF                		mov.L	#-1, r7
 2922                             	.LVL284:
 2923 0702 29 04                   		blt 1f
 2924 0704 66 07                   		mov #0, r7
 2925                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2926                             		.loc 6 347 3 is_stmt 1
 2927                             	.LVL285:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2928                             		.loc 6 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2929                             		.loc 6 349 19 is_stmt 0
 2930 0706 74 02 00 00 00 80       		cmp	#-2147483648, r2
 2931 070c 21 14                   		bne	.L101
 2932 070e FB 72 FF FF FF 7F       		mov.L	#0x7fffffff, r7
 2933                             	.LVL286:
 2934 0714 2E 9E                   		bra	.L98
 2935                             	.LVL287:
 2936                             	.L160:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2937                             		.loc 6 346 35
 2938 0716 FB 82 01 00 00 C0       		mov.L	#-1073741823, r8
 2939 071c FB 76 FF                		mov.L	#-1, r7
 2940                             	.LVL288:
 2941 071f 03                      		.balign 8,3,2
 2942                             	.L101:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2943                             		.loc 6 348 49
 2944 0720 FF 21 48                		add	r4, r8, r1
 2945 0723 FC 0B 57                		adc	r5, r7
 2946 0726 26 0E                   		bpz	.L99
 2947 0728 70 14 FF FF FF 7F       		add	#0x7fffffff, r1, r4
 2948 072e FD 74 27 00             		adc	#0, r7
 2949 0732 EF 41                   		mov.L	r4, r1
 2950                             		.balign 8,3,1
 2951                             	.L99:
 2952 0734 6C 17                   		shll	#1, r7
 2953 0736 69 F1                   		shlr	#31, r1
 2954 0738 57 17                   		or	r1, r7
 2955 073a 38 78 FF                		bra	.L98
 2956                             	.LVL289:
 2957                             	.L86:
 2958                             	.LBE588:
 2959                             	.LBE590:
 2960                             	.LBE594:
 2961                             	.LBE598:
 2962                             	.LBE601:
 2963                             	.LBE563:
 2964                             	.LBE562:
 2965                             	.LBE561:
 137:../src/tensorflow/lite/micro/kernels/quantize.cc ****         reference_ops::Requantize(
 2966                             		.loc 1 137 7 is_stmt 1
 138:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), size,
 2967                             		.loc 1 138 9
 2968                             	.LBB608:
 2969                             	.LBB609:
 2970                             		.loc 3 62 53 is_stmt 0
 2971 073d EC C5                   		mov.L	[r12], r5
 2972                             	.LVL290:
 2973                             	.LBE609:
 2974                             	.LBE608:
 138:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), size,
 2975                             		.loc 1 138 34
 2976 073f ED B4 02                		mov.L	8[r11], r4
 140:../src/tensorflow/lite/micro/kernels/quantize.cc ****             data->quantization_params.zero_point,
 2977                             		.loc 1 140 44
 2978 0742 ED B6 03                		mov.L	12[r11], r6
 138:../src/tensorflow/lite/micro/kernels/quantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), size,
 2979                             		.loc 1 138 34
 2980 0745 ED BD 04                		mov.L	16[r11], r13
 2981 0748 EC BE                   		mov.L	[r11], r14
 2982                             	.LVL291:
 2983                             	.LBB610:
 2984                             	.LBB611:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2985                             		.loc 3 55 28
 2986 074a EC 73                   		mov.L	[r7], r3
 2987                             	.LVL292:
 2988                             	.LBE611:
 2989                             	.LBE610:
 2990                             	.LBB612:
 2991                             	.LBB613:
 2992                             	.LBB614:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 2993                             		.loc 4 52 21
 2994 074c 61 01                   		cmp	#0, r1
 2995 074e 2A 05 38 5E FA          		ble	.L103
 2996                             	.LBB615:
 2997                             	.LBB616:
 2998                             	.LBB617:
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 2999                             		.loc 5 162 31
 3000 0753 FC 07 62                		neg	r6, r2
 3001 0756 61 06                   		cmp	#0, r6
 3002 0758 2B 04                   		ble 1f
 3003 075a 66 02                   		mov #0, r2
 3004                             	1:
 3005                             	.LBB618:
 3006                             	.LBB619:
 3007                             		.loc 6 371 50
 3008 075c 71 27 E0                		add	#-32, r2, r7
 3009                             	.LVL293:
 3010 075f 26 05 38 E2 00          		bn	.L104
 3011 0764 66 0C                   		mov.L	#0, r12
 3012                             	.LVL294:
 3013 0766 EF 00                   		.balign 8,3,3
 3014                             	.L105:
 3015 0768 FD 74 46 00             		max	#0, r6
 3016                             	.LVL295:
 3017                             		.loc 6 371 63
 3018 076c 60 1C                   		sub	#1, r12
 3019                             	.LBB620:
 3020                             	.LBB621:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3021                             		.loc 6 142 15
 3022 076e FD A1 CF                		shar	#1, r12, r15
 3023 0771 75 52 1F                		cmp	#31, r2
 3024 0774 2B 05 38 F8 00          		bgt	.L93
 3025 0779 4B 11                   		add	r1, r1
 3026                             	.LVL296:
 3027 077b 4B 51                   		add	r5, r1
 3028 077d 2E 44                   		bra	.L114
 3029                             	.LVL297:
 3030                             	.L106:
 3031                             	.LBE621:
 3032                             	.LBE620:
 3033                             	.LBE619:
 3034                             	.LBE618:
 3035                             	.LBB636:
 3036                             	.LBB637:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3037                             		.loc 6 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3038                             		.loc 6 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3039                             		.loc 6 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3040                             		.loc 6 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3041                             		.loc 6 346 35 is_stmt 0
 3042 077f 61 0A                   		cmp	#0, r10
 3043 0781 28 05 38 7F 00          		blt	.L163
 3044                             	.LVL298:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3045                             		.loc 6 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3046                             		.loc 6 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3047                             		.loc 6 348 40 is_stmt 0
 3048 0786 EF A7                   		mov.L	r10, r7
 3049                             	.LVL299:
 3050 0788 70 98 00 00 00 40       		add	#0x40000000, r9, r8
 3051 078e FD 74 27 00             		adc	#0, r7
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3052                             		.loc 6 348 49
 3053 0792 6C 17                   		shll	#1, r7
 3054 0794 FD 9F 8A                		shlr	#31, r8, r10
 3055 0797 57 A7                   		or	r10, r7
 3056                             	.LVL300:
 3057                             		.balign 8,3,2
 3058                             	.L109:
 3059                             	.LBE637:
 3060                             	.LBE636:
 3061                             	.LBB639:
 3062                             	.LBB634:
 3063                             	.LBB622:
 3064                             	.LBB623:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3065                             		.loc 6 71 14
 3066 0799 FD 9F 79                		shlr	#31, r7, r9
 3067                             	.LBE623:
 3068                             	.LBE622:
 3069                             	.LBB624:
 3070                             	.LBB625:
 3071 079c FF 4A C7                		and	r12, r7, r10
 3072                             	.LVL301:
 3073                             	.LBE625:
 3074                             	.LBE624:
 3075                             	.LBB626:
 3076                             	.LBB627:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3077                             		.loc 6 95 14
 3078 079f 4B F9                   		add	r15, r9
 3079                             	.LBE627:
 3080                             	.LBE626:
 3081                             	.LBB628:
 3082                             	.LBB629:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3083                             		.loc 6 142 15
 3084 07a1 EF 7B                   		mov.L	r7, r11
 3085 07a3 FD 61 2B                		shar	r2, r11
 3086                             	.LBE629:
 3087                             	.LBE628:
 3088                             	.LBB630:
 3089                             	.LBB631:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3090                             		.loc 6 71 14
 3091 07a6 47 9A                   		cmp	r9, r10
 3092 07a8 FC DB 7A                		scgt.L	r7
 3093                             	.LVL302:
 3094                             	.LBE631:
 3095                             	.LBE630:
 3096                             	.LBB632:
 3097                             	.LBB633:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3098                             		.loc 6 95 14
 3099 07ab 4B B7                   		add	r11, r7
 3100                             	.LBE633:
 3101                             	.LBE632:
 3102                             	.LBE634:
 3103                             	.LBE639:
 3104                             	.LBE617:
 3105                             	.LBE616:
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         output_zeropoint;
 3106                             		.loc 4 56 62
 3107 07ad 4B E7                   		add	r14, r7
 3108                             		.loc 4 60 5
 3109 07af FD 78 47 00 80          		max	#-32768, r7
 3110 07b4 FD 78 57 FF 7F          		min	#0x7fff, r7
 3111 07b9 FD 21 37                		mov.W	r7, [r3+]
 3112                             	.LVL303:
 3113                             	.LBE615:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 3114                             		.loc 4 52 21
 3115 07bc 47 51                   		cmp	r5, r1
 3116 07be 3A F0 F9                		beq	.L103
 3117                             	.LVL304:
 3118                             		.balign 8,3,5
 3119                             	.L114:
 3120                             	.LBB646:
 3121                             	.LBB644:
 3122                             	.LBB642:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 3123                             		.loc 5 159 3 is_stmt 1
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 3124                             		.loc 5 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 3125                             		.loc 5 161 3
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 3126                             		.loc 5 162 3
 3127                             		.loc 5 163 3
 3128                             	.LBE642:
 3129                             	.LBE644:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 3130                             		.loc 4 53 37 is_stmt 0
 3131 07c1 FD 29 57                		mov.W	[r5+], r7
 3132                             	.LVL305:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 3133                             		.loc 4 53 19
 3134 07c4 43 D7                   		sub	r13, r7
 3135                             	.LVL306:
 3136                             	.LBB645:
 3137                             	.LBB643:
 3138                             		.loc 5 163 29
 3139 07c6 FD 62 67                		shll	r6, r7
 3140                             	.LVL307:
 3141                             	.LBB640:
 3142                             	.LBB638:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3143                             		.loc 6 342 3 is_stmt 1
 3144 07c9 EF 79                   		mov.L	r7, r9
 3145 07cb FC 1B 49                		emul	r4, r9
 3146 07ce E7 09 2A                		mov.L	r9, 168[r0]
 3147 07d1 E7 0A 2B                		mov.L	r10, 172[r0]
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3148                             		.loc 6 342 26 is_stmt 0
 3149 07d4 47 74                   		cmp	r7, r4
 3150 07d6 21 A9                   		bne	.L106
 3151                             	.LVL308:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3152                             		.loc 6 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3153                             		.loc 6 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3154                             		.loc 6 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3155                             		.loc 6 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3156                             		.loc 6 346 35 is_stmt 0
 3157 07d8 61 0A                   		cmp	#0, r10
 3158 07da FB A2 01 00 00 C0       		mov.L	#-1073741823, r10
 3159 07e0 29 08                   		blt 1f
 3160 07e2 FB A2 00 00 00 40       		mov #0x40000000, r10
 3161                             	1:
 3162 07e8 FB 76 FF                		mov.L	#-1, r7
 3163                             	.LVL309:
 3164 07eb 29 04                   		blt 1f
 3165 07ed 66 07                   		mov #0, r7
 3166                             	1:
 3167 07ef E7 07 28                		mov.L	r7, 160[r0]
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3168                             		.loc 6 347 3 is_stmt 1
 3169                             	.LVL310:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3170                             		.loc 6 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3171                             		.loc 6 349 19 is_stmt 0
 3172 07f2 74 04 00 00 00 80       		cmp	#-2147483648, r4
 3173 07f8 21 14                   		bne	.L112
 3174 07fa FB 72 FF FF FF 7F       		mov.L	#0x7fffffff, r7
 3175                             	.LVL311:
 3176 0800 2E 99                   		bra	.L109
 3177                             	.LVL312:
 3178                             	.L163:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3179                             		.loc 6 346 35
 3180 0802 FB A2 01 00 00 C0       		mov.L	#-1073741823, r10
 3181 0808 F9 06 28 FF             		mov.L	#-1, 160[r0]
 3182                             	.LVL313:
 3183                             		.balign 8,3,2
 3184                             	.L112:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3185                             		.loc 6 348 49
 3186 080c ED 09 28                		mov.L	160[r0], r9
 3187 080f ED 0B 2A                		mov.L	168[r0], r11
 3188 0812 FF 28 BA                		add	r11, r10, r8
 3189 0815 06 A1 02 09 2B          		adc 172[r0],r9
 3190 081a E7 09 27                		mov.L	r9, 156[r0]
 3191 081d E7 08 29                		mov.L	r8, 164[r0]
 3192 0820 61 09                   		cmp	#0, r9
 3193 0822 28 12                   		bge	.L110
 3194 0824 70 87 FF FF FF 7F       		add	#0x7fffffff, r8, r7
 3195 082a FD 74 29 00             		adc	#0, r9
 3196 082e E7 09 27                		mov.L	r9, 156[r0]
 3197 0831 E7 07 29                		mov.L	r7, 164[r0]
 3198                             		.balign 8,3,2
 3199                             	.L110:
 3200 0834 ED 07 27                		mov.L	156[r0], r7
 3201 0837 6C 17                   		shll	#1, r7
 3202 0839 ED 09 29                		mov.L	164[r0], r9
 3203 083c 69 F9                   		shlr	#31, r9
 3204 083e 57 97                   		or	r9, r7
 3205 0840 38 59 FF                		bra	.L109
 3206                             	.LVL314:
 3207                             	.L104:
 3208                             	.LBE638:
 3209                             	.LBE640:
 3210                             	.LBB641:
 3211                             	.LBB635:
 3212                             		.loc 6 371 50
 3213 0843 66 1C                   		mov.L	#1, r12
 3214                             	.LVL315:
 3215 0845 FD 62 2C                		shll	r2, r12
 3216 0848 38 20 FF                		bra	.L105
 3217                             	.LVL316:
 3218                             	.L91:
 3219                             	.LBE635:
 3220                             	.LBE641:
 3221                             	.LBE643:
 3222                             	.LBE645:
 3223                             	.LBE646:
 3224                             	.LBE614:
 3225                             	.LBE613:
 3226                             	.LBE612:
 3227                             	.LBB647:
 3228                             	.LBB606:
 3229                             	.LBB604:
 3230                             	.LBB602:
 3231                             	.LBB599:
 3232                             	.LBB595:
 3233                             	.LBB591:
 3234                             	.LBB584:
 3235 084b 66 19                   		mov.L	#1, r9
 3236 084d FD 62 B9                		shll	r11, r9
 3237 0850 38 30 FE                		bra	.L92
 3238                             	.LVL317:
 3239                             	.L115:
 3240                             	.LBE584:
 3241                             	.LBE591:
 3242                             	.LBE595:
 3243                             	.LBE599:
 3244                             	.LBE602:
 3245                             	.LBE604:
 3246                             	.LBE606:
 3247                             	.LBE647:
 3248                             	.LBB648:
 3249                             	.LBB555:
 3250                             	.LBB553:
 3251                             	.LBB551:
 3252                             	.LBB548:
 3253                             	.LBB544:
 3254                             	.LBB540:
 3255                             	.LBB532:
 3256 0853 66 1C                   		mov.L	#1, r12
 3257                             	.LVL318:
 3258 0855 FD 62 2C                		shll	r2, r12
 3259 0858 38 4C FC                		bra	.L116
 3260                             	.LVL319:
 3261                             	.L144:
 3262                             	.LBE532:
 3263                             	.LBE540:
 3264                             	.LBE544:
 3265                             	.LBE548:
 3266                             	.LBE551:
 3267                             	.LBE553:
 3268                             	.LBE555:
 3269                             	.LBE648:
 3270                             	.LBE655:
 3271                             	.LBE996:
 3272                             	.LBB997:
 3273                             	.LBB982:
 3274                             	.LBB978:
 3275                             	.LBB963:
 3276                             	.LBB958:
 3277                             	.LBB953:
 3278                             	.LBB950:
 3279                             	.LBB947:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3280                             		.loc 9 214 34
 3281 085b 72 03 88 00             		add	#0x88, r0, r3
 3282 085f 38 BF FB                		bra	.L52
 3283                             	.LVL320:
 3284                             	.L155:
 3285                             	.LBE947:
 3286                             	.LBE950:
 3287                             	.LBE953:
 3288                             	.LBE958:
 3289                             	.LBE963:
 3290                             	.LBE978:
 3291                             	.LBE982:
 3292                             	.LBE997:
 3293                             	.LBB998:
 3294                             	.LBB759:
 3295                             	.LBB754:
 3296                             	.LBB749:
 3297                             	.LBB745:
 3298                             	.LBB741:
 3299                             	.LBB739:
 3300                             	.LBB736:
 3301 0862 71 04 28                		add	#40, r0, r4
 3302 0865 38 0B FA                		bra	.L75
 3303                             	.LVL321:
 3304                             	.L150:
 3305                             	.LBE736:
 3306                             	.LBE739:
 3307                             	.LBE741:
 3308                             	.LBE745:
 3309                             	.LBE749:
 3310                             	.LBE754:
 3311                             	.LBE759:
 3312                             	.LBE998:
 3313                             	.LBB999:
 3314                             	.LBB873:
 3315                             	.LBB869:
 3316                             	.LBB854:
 3317                             	.LBB849:
 3318                             	.LBB844:
 3319                             	.LBB841:
 3320                             	.LBB838:
 3321 0868 71 03 58                		add	#0x58, r0, r3
 3322 086b 38 CB FA                		bra	.L64
 3323                             	.LVL322:
 3324                             	.L93:
 3325                             	.LBE838:
 3326                             	.LBE841:
 3327                             	.LBE844:
 3328                             	.LBE849:
 3329                             	.LBE854:
 3330                             	.LBE869:
 3331                             	.LBE873:
 3332                             	.LBE999:
 3333                             	.LBB1000:
 3334                             	.LBB656:
 3335                             	.LBB649:
 3336                             	.LBB607:
 3337                             	.LBB605:
 3338                             	.LBB603:
 3339                             	.LBB600:
 3340                             	.LBB596:
 3341                             	.LBB592:
 3342                             	.LBB585:
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 3343                             		.loc 6 370 3
 3344 086e FB 42 23 00 00 00       		mov.L	#.LC17, r4
 3345 0874 FB 32 00 00 00 00       		mov.L	#.LANCHOR0, r3
 3346 087a FB 2A 72 01             		mov.L	#0x172, r2
 3347 087e FB 12 32 00 00 00       		mov.L	#.LC18, r1
 3348 0884 05 00 00 00             		bsr	___assert_func
 3349                             	.LVL323:
 3350                             	.LBE585:
 3351                             	.LBE592:
 3352                             	.LBE596:
 3353                             	.LBE600:
 3354                             	.LBE603:
 3355                             	.LBE605:
 3356                             	.LBE607:
 3357                             	.LBE649:
 3358                             	.LBE656:
 3359                             	.LBE1000:
 3360                             	.LBE1010:
 3361                             	.LFE2231:
 3363                             		.section	.text._ZN6tflite17Register_QUANTIZEEv,"ax",@progbits
 3364                             		.global	__ZN6tflite17Register_QUANTIZEEv
 3366                             	__ZN6tflite17Register_QUANTIZEEv:
 3367                             	.LFB2232:
 188:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 189:../src/tensorflow/lite/micro/kernels/quantize.cc **** }  // namespace
 190:../src/tensorflow/lite/micro/kernels/quantize.cc **** 
 191:../src/tensorflow/lite/micro/kernels/quantize.cc **** TfLiteRegistration Register_QUANTIZE() {
 3368                             		.loc 1 191 40 is_stmt 1
 192:../src/tensorflow/lite/micro/kernels/quantize.cc ****   return {/*init=*/Init,
 3369                             		.loc 1 192 3
 193:../src/tensorflow/lite/micro/kernels/quantize.cc ****           /*free=*/nullptr,
 194:../src/tensorflow/lite/micro/kernels/quantize.cc ****           /*prepare=*/Prepare,
 195:../src/tensorflow/lite/micro/kernels/quantize.cc ****           /*invoke=*/Eval,
 196:../src/tensorflow/lite/micro/kernels/quantize.cc ****           /*profiling_string=*/nullptr,
 197:../src/tensorflow/lite/micro/kernels/quantize.cc ****           /*builtin_code=*/0,
 198:../src/tensorflow/lite/micro/kernels/quantize.cc ****           /*custom_name=*/nullptr,
 199:../src/tensorflow/lite/micro/kernels/quantize.cc ****           /*version=*/0};
 3370                             		.loc 1 199 24 is_stmt 0
 3371 0000 FB 22 00 00 00 00       		mov.L	#.LANCHOR1, r2
 3372 0006 EF F1                   		mov.L	r15, r1
 3373 0008 75 43 20                		mov.L	#32, r3
 3374 000b 7F 8F                   		smovf
 200:../src/tensorflow/lite/micro/kernels/quantize.cc **** }
 3375                             		.loc 1 200 1
 3376 000d EF F1                   		mov.L	r15, r1
 3377 000f 02                      		rts
 3378                             	.LFE2232:
 3380                             		.section C,"a",@progbits
 3381                             		.p2align 2
 3382                             		.balign 4
 3383                             		.set	.LANCHOR1,. + 0
 3384                             	.LC0:
 3385 0000 00 00 00 00             		.long	__ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcm
 3386 0004 00 00 00 00             		.long	0
 3387 0008 00 00 00 00             		.long	__ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode
 3388 000c 00 00 00 00             		.long	__ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode
 3389 0010 00 00 00 00             		.long	0
 3390 0014 00 00 00 00             		.long	0
 3391 0018 00 00 00 00             		.long	0
 3392 001c 00 00 00 00             		.long	0
 3393                             		.section	.rodata._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode.str1.1,"aMS",@progbit
 3394                             	.LC16:
 3395 0000 49 6E 70 75 74 20 25 73 		.string	"Input %s, output %s not supported."
 3395      2C 20 6F 75 74 70 75 74 
 3395      20 25 73 20 6E 6F 74 20 
 3395      73 75 70 70 6F 72 74 65 
 3395      64 2E 00 
 3396                             	.LC17:
 3397 0023 65 78 70 6F 6E 65 6E 74 		.string	"exponent <= 31"
 3397      20 3C 3D 20 33 31 00 
 3398                             	.LC18:
 3399 0032 43 3A 5C 55 73 65 72 73 		.string	"C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\thi
 3399      5C 61 35 31 31 36 39 33 
 3399      38 5C 44 65 73 6B 74 6F 
 3399      70 5C 65 32 5F 73 74 75 
 3399      64 69 6F 5F 77 6F 72 6B 
 3400                             		.section	.rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.1,"aMS",@prog
 3401                             	.LC1:
 3402 0000 31 00                   		.string	"1"
 3403                             	.LC2:
 3404 0002 4E 75 6D 49 6E 70 75 74 		.string	"NumInputs(node)"
 3404      73 28 6E 6F 64 65 29 00 
 3405                             	.LC3:
 3406 0012 2E 2E 2F 73 72 63 2F 74 		.string	"../src/tensorflow/lite/micro/kernels/quantize.cc"
 3406      65 6E 73 6F 72 66 6C 6F 
 3406      77 2F 6C 69 74 65 2F 6D 
 3406      69 63 72 6F 2F 6B 65 72 
 3406      6E 65 6C 73 2F 71 75 61 
 3407                             	.LC4:
 3408 0043 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s != %s (%d != %d)"
 3408      20 21 3D 20 25 73 20 28 
 3408      25 64 20 21 3D 20 25 64 
 3408      29 00 
 3409                             	.LC5:
 3410 005d 4E 75 6D 4F 75 74 70 75 		.string	"NumOutputs(node)"
 3410      74 73 28 6E 6F 64 65 29 
 3410      00 
 3411                             	.LC6:
 3412 006e 69 6E 70 75 74 20 21 3D 		.string	"input != nullptr"
 3412      20 6E 75 6C 6C 70 74 72 
 3412      00 
 3413                             	.LC7:
 3414 007f 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s was not true."
 3414      20 77 61 73 20 6E 6F 74 
 3414      20 74 72 75 65 2E 00 
 3415                             	.LC8:
 3416 0096 6F 75 74 70 75 74 20 21 		.string	"output != nullptr"
 3416      3D 20 6E 75 6C 6C 70 74 
 3416      72 00 
 3417                             	.LC9:
 3418 00a8 6B 54 66 4C 69 74 65 41 		.string	"kTfLiteAffineQuantization"
 3418      66 66 69 6E 65 51 75 61 
 3418      6E 74 69 7A 61 74 69 6F 
 3418      6E 00 
 3419                             	.LC10:
 3420 00c2 6F 75 74 70 75 74 2D 3E 		.string	"output->quantization.type"
 3420      71 75 61 6E 74 69 7A 61 
 3420      74 69 6F 6E 2E 74 79 70 
 3420      65 00 
 3421                             	.LC11:
 3422 00dc 61 66 66 69 6E 65 5F 71 		.string	"affine_quantization"
 3422      75 61 6E 74 69 7A 61 74 
 3422      69 6F 6E 00 
 3423                             	.LC12:
 3424 00f0 61 66 66 69 6E 65 5F 71 		.string	"affine_quantization->scale"
 3424      75 61 6E 74 69 7A 61 74 
 3424      69 6F 6E 2D 3E 73 63 61 
 3424      6C 65 00 
 3425                             	.LC13:
 3426 010b 61 66 66 69 6E 65 5F 71 		.string	"affine_quantization->scale->size == 1"
 3426      75 61 6E 74 69 7A 61 74 
 3426      69 6F 6E 2D 3E 73 63 61 
 3426      6C 65 2D 3E 73 69 7A 65 
 3426      20 3D 3D 20 31 00 
 3427                             	.LC14:
 3428 0131 69 6E 70 75 74 2D 3E 74 		.string	"input->type == kTfLiteFloat32 || input->type == kTfLiteInt16 || input->type == kTfLiteInt
 3428      79 70 65 20 3D 3D 20 6B 
 3428      54 66 4C 69 74 65 46 6C 
 3428      6F 61 74 33 32 20 7C 7C 
 3428      20 69 6E 70 75 74 2D 3E 
 3429                             	.LC15:
 3430 018c 6F 75 74 70 75 74 2D 3E 		.string	"output->type == kTfLiteUInt8 || output->type == kTfLiteInt8 || output->type == kTfLiteInt
 3430      74 79 70 65 20 3D 3D 20 
 3430      6B 54 66 4C 69 74 65 55 
 3430      49 6E 74 38 20 7C 7C 20 
 3430      6F 75 74 70 75 74 2D 3E 
 3431                             		.section	.rodata._ZZN8gemmlowp19RoundingDivideByPOTIliEET_S1_T0_E19__PRETTY_FUNCTION__,"a"
 3432                             		.set	.LANCHOR0,. + 0
 3435                             	__ZZN8gemmlowp19RoundingDivideByPOTIliEET_S1_T0_E19__PRETTY_FUNCTION__:
 3436 0000 49 6E 74 65 67 65 72 54 		.string	"IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, ExponentType) [with IntegerType = 
 3436      79 70 65 20 67 65 6D 6D 
 3436      6C 6F 77 70 3A 3A 52 6F 
 3436      75 6E 64 69 6E 67 44 69 
 3436      76 69 64 65 42 79 50 4F 
 3533                             	.Letext0:
 3534                             		.file 10 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3535                             		.file 11 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3536                             		.file 12 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3537                             		.file 13 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3538                             		.file 14 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3539                             		.file 15 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3540                             		.file 16 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3541                             		.file 17 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3542                             		.file 18 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3543                             		.file 19 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3544                             		.file 20 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3545                             		.file 21 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3546                             		.file 22 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3547                             		.file 23 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3548                             		.file 24 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3549                             		.file 25 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3550                             		.file 26 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3551                             		.file 27 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3552                             		.file 28 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3553                             		.file 29 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3554                             		.file 30 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3555                             		.file 31 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3556                             		.file 32 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 3557                             		.file 33 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\
 3558                             		.file 34 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\loc
 3559                             		.file 35 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_ty
 3560                             		.file 36 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\ree
 3561                             		.file 37 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdlib.h
 3562                             		.file 38 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 3563                             		.file 39 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\wchar.h"
 3564                             		.file 40 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_st
 3565                             		.file 41 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdint.h
 3566                             		.file 42 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\locale.h
 3567                             		.file 43 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\ctype.h"
 3568                             		.file 44 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdio.h"
 3569                             		.file 45 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\err
 3570                             		.file 46 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
 3571                             		.file 47 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\string.h
 3572                             		.file 48 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 3573                             		.file 49 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 3574                             		.file 50 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 3575                             		.file 51 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 3576                             		.file 52 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\assert.h
 3577                             		.file 53 "<built-in>"
