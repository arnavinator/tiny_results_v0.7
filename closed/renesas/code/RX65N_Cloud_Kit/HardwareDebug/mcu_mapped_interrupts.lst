   1                             		.file	"mcu_mapped_interrupts.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.bsp_mapped_interrupt_open,"ax",@progbits
   5                             		.global	_bsp_mapped_interrupt_open
   7                             	_bsp_mapped_interrupt_open:
   8                             	.LFB3:
   9                             		.file 1 "../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c"
   1:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /**************************************************************************************************
   2:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * DISCLAIMER
   3:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prote
   5:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * applicable laws, including copyright laws. 
   6:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF 
   8:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIM
   9:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AF
  10:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY RE
  11:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * this software. 
  14:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *
  15:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * Copyright (C) 2016 Renesas Electronics Corporation. All rights reserved.
  16:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** ***************************************************************************************************
  17:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /**************************************************************************************************
  18:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * File Name    : mcu_mapped_interrupts.c
  19:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * Description  : This module maps Interrupt A & B interrupts. Which interrupts are mapped depends o
  20:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                r_bsp_interrupt_config.h.
  21:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** ***************************************************************************************************
  22:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /**************************************************************************************************
  23:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * History : DD.MM.YYYY Version   Description
  24:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *         : 01.10.2016 1.00      First Release
  25:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *         : 15.05.2017 2.00      Changed the name of the following macro definition, because there 
  26:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                in the name of macro definition.
  27:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                 (XXX = BSP_MAPPED_INT_CFG_B_VECT, BSP_MAPPED_INT_CFG_A_VECT,
  28:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                        BSP_PRV_INT_B_NUM, BSP_PRV_INT_A_NUM)
  29:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU0_TGI0V to XXX_TPU0_TCI0V.
  30:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU1_TGI1V to XXX_TPU1_TCI1V.
  31:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU1_TGI1U to XXX_TPU1_TCI1U.
  32:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU2_TGI2V to XXX_TPU2_TCI2V.
  33:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU2_TGI2U to XXX_TPU2_TCI2U.
  34:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU3_TGI3V to XXX_TPU3_TCI3V.
  35:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU4_TGI4V to XXX_TPU4_TCI4V.
  36:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU4_TGI4U to XXX_TPU4_TCI4U.
  37:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU5_TGI5V to XXX_TPU5_TCI5V.
  38:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_TPU5_TGI5U to XXX_TPU5_TCI5U.
  39:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU0_TGIV0 to XXX_MTU0_TCIV0.
  40:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU1_TGIV1 to XXX_MTU1_TCIV1.
  41:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU1_TGIU1 to XXX_MTU1_TCIU1.
  42:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU2_TGIV2 to XXX_MTU2_TCIV2.
  43:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU2_TGIU2 to XXX_MTU2_TCIU2.
  44:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU3_TGIV3 to XXX_MTU3_TCIV3.
  45:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU4_TGIV4 to XXX_MTU4_TCIV4.
  46:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU6_TGIV6 to XXX_MTU6_TCIV6.
  47:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU7_TGIV7 to XXX_MTU7_TCIV7.
  48:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - From XXX_MTU8_TGIV8 to XXX_MTU8_TCIV8.
  49:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                Added select processing of the following software configurable int
  50:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_PROC_BUSY
  51:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_ROMOK
  52:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_LONG_PLG
  53:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_TEST_BUSY
  54:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_WRRDY0
  55:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_WRRDY1
  56:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_WRRDY4
  57:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_RDRDY0
  58:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_RDRDY1
  59:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_INTEGRATE_WRRDY
  60:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                                - TSIP_INTEGRATE_RDRDY
  61:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *         : 28.02.2019 2.01      Fixed coding style.
  62:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** ***************************************************************************************************
  63:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
  64:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /**************************************************************************************************
  65:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** Includes   <System Includes> , "Project Includes"
  66:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** ***************************************************************************************************
  67:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /* Access to r_bsp. */
  68:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #include "platform.h"
  69:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
  70:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /**************************************************************************************************
  71:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** Macro definitions
  72:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** ***************************************************************************************************
  73:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
  74:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /**************************************************************************************************
  75:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** Typedef definitions
  76:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** ***************************************************************************************************
  77:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
  78:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /**************************************************************************************************
  79:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** Exported global variables (to be accessed by other files)
  80:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** ***************************************************************************************************
  81:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****  
  82:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /**************************************************************************************************
  83:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** Private global variables and functions
  84:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** ***************************************************************************************************
  85:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
  86:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** /**************************************************************************************************
  87:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * Function Name: bsp_mapped_interrupt_open
  88:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * Description  : Initializes mapped interrupts. This code does the following for each possible mapp
  89:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                1) PREPROCCESOR - Test to see if this interrupt is chosen to be used
  90:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                2) PREPROCESSOR - Figure out which interrupt select register needs to be written t
  91:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** *                3) RUNTIME C    - Set the appropriate select register with the number of this mapp
  92:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * Arguments    : None
  93:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** * Return Value : None
  94:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** ***************************************************************************************************
  95:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** void bsp_mapped_interrupt_open (void)
  96:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** {
  10                             		.loc 1 96 1
  97:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMT2_CMI2)
  98:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
  99:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMT2_CMI2) = BSP_PRV_INT_B_NUM_CMT2_CMI
  11                             		.loc 1 99 5
  12                             		.loc 1 99 72 is_stmt 0
  13 0000 FB 5E 00 70 08          		mov.L	#0x87000, r5
  14 0005 FA 54 80 07 01          		mov.B	#1, 1920[r5]
 100:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 101:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 102:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMT3_CMI3)
 103:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 104:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMT3_CMI3) = BSP_PRV_INT_B_NUM_CMT3_CMI
  15                             		.loc 1 104 5 is_stmt 1
  16                             		.loc 1 104 72 is_stmt 0
  17 000a FA 54 81 07 02          		mov.B	#2, 1921[r5]
 105:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 106:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 107:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR0_CMIA0)
 108:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 109:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR0_CMIA0) = BSP_PRV_INT_B_NUM_TMR0_CM
  18                             		.loc 1 109 5 is_stmt 1
  19                             		.loc 1 109 73 is_stmt 0
  20 000f FA 54 92 07 03          		mov.B	#3, 1938[r5]
 110:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 111:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 112:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR0_CMIB0)
 113:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 114:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR0_CMIB0) = BSP_PRV_INT_B_NUM_TMR0_CM
  21                             		.loc 1 114 5 is_stmt 1
  22                             		.loc 1 114 73 is_stmt 0
  23 0014 FA 54 93 07 04          		mov.B	#4, 1939[r5]
 115:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 116:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 117:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR0_OVI0)
 118:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 119:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR0_OVI0) = BSP_PRV_INT_B_NUM_TMR0_OVI
  24                             		.loc 1 119 5 is_stmt 1
  25                             		.loc 1 119 72 is_stmt 0
  26 0019 FA 54 94 07 05          		mov.B	#5, 1940[r5]
 120:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 121:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 122:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR1_CMIA1)
 123:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 124:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR1_CMIA1) = BSP_PRV_INT_B_NUM_TMR1_CM
  27                             		.loc 1 124 5 is_stmt 1
  28                             		.loc 1 124 73 is_stmt 0
  29 001e FA 54 95 07 06          		mov.B	#6, 1941[r5]
 125:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 126:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 127:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR1_CMIB1)
 128:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 129:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR1_CMIB1) = BSP_PRV_INT_B_NUM_TMR1_CM
  30                             		.loc 1 129 5 is_stmt 1
  31                             		.loc 1 129 73 is_stmt 0
  32 0023 FA 54 96 07 07          		mov.B	#7, 1942[r5]
 130:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 131:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 132:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR1_OVI1)
 133:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 134:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR1_OVI1) = BSP_PRV_INT_B_NUM_TMR1_OVI
  33                             		.loc 1 134 5 is_stmt 1
  34                             		.loc 1 134 72 is_stmt 0
  35 0028 FA 54 97 07 08          		mov.B	#8, 1943[r5]
 135:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 136:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 137:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR2_CMIA2)
 138:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 139:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR2_CMIA2) = BSP_PRV_INT_B_NUM_TMR2_CM
  36                             		.loc 1 139 5 is_stmt 1
  37                             		.loc 1 139 73 is_stmt 0
  38 002d FA 54 98 07 09          		mov.B	#9, 1944[r5]
 140:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 141:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 142:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR2_CMIB2)
 143:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 144:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR2_CMIB2) = BSP_PRV_INT_B_NUM_TMR2_CM
  39                             		.loc 1 144 5 is_stmt 1
  40                             		.loc 1 144 73 is_stmt 0
  41 0032 FA 54 99 07 0A          		mov.B	#10, 1945[r5]
 145:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 146:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 147:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR2_OVI2)
 148:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 149:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR2_OVI2) = BSP_PRV_INT_B_NUM_TMR2_OVI
  42                             		.loc 1 149 5 is_stmt 1
  43                             		.loc 1 149 72 is_stmt 0
  44 0037 FA 54 9A 07 0B          		mov.B	#11, 1946[r5]
 150:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 151:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 152:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR3_CMIA3)
 153:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 154:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR3_CMIA3) = BSP_PRV_INT_B_NUM_TMR3_CM
  45                             		.loc 1 154 5 is_stmt 1
  46                             		.loc 1 154 73 is_stmt 0
  47 003c FA 54 9B 07 0C          		mov.B	#12, 1947[r5]
 155:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 156:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 157:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR3_CMIB3)
 158:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 159:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR3_CMIB3) = BSP_PRV_INT_B_NUM_TMR3_CM
  48                             		.loc 1 159 5 is_stmt 1
  49                             		.loc 1 159 73 is_stmt 0
  50 0041 FA 54 9C 07 0D          		mov.B	#13, 1948[r5]
 160:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 161:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 162:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TMR3_OVI3)
 163:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 164:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TMR3_OVI3) = BSP_PRV_INT_B_NUM_TMR3_OVI
  51                             		.loc 1 164 5 is_stmt 1
  52                             		.loc 1 164 72 is_stmt 0
  53 0046 FA 54 9D 07 0E          		mov.B	#14, 1949[r5]
 165:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 166:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 167:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TGI0A)
 168:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 169:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TGI0A) = BSP_PRV_INT_B_NUM_TPU0_TG
  54                             		.loc 1 169 5 is_stmt 1
  55                             		.loc 1 169 73 is_stmt 0
  56 004b FA 54 82 07 0F          		mov.B	#15, 1922[r5]
 170:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 171:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 172:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TGI0B)
 173:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 174:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TGI0B) = BSP_PRV_INT_B_NUM_TPU0_TG
  57                             		.loc 1 174 5 is_stmt 1
  58                             		.loc 1 174 73 is_stmt 0
  59 0050 FA 54 83 07 10          		mov.B	#16, 1923[r5]
 175:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 176:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 177:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TGI0C)
 178:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 179:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TGI0C) = BSP_PRV_INT_B_NUM_TPU0_TG
  60                             		.loc 1 179 5 is_stmt 1
  61                             		.loc 1 179 73 is_stmt 0
  62 0055 FA 54 84 07 11          		mov.B	#17, 1924[r5]
 180:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 181:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 182:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TGI0D)
 183:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 184:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TGI0D) = BSP_PRV_INT_B_NUM_TPU0_TG
  63                             		.loc 1 184 5 is_stmt 1
  64                             		.loc 1 184 73 is_stmt 0
  65 005a FA 54 85 07 12          		mov.B	#18, 1925[r5]
 185:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 186:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 187:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TCI0V)
 188:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 189:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU0_TCI0V) = BSP_PRV_INT_B_NUM_TPU0_TC
  66                             		.loc 1 189 5 is_stmt 1
  67                             		.loc 1 189 73 is_stmt 0
  68 005f FA 54 86 07 13          		mov.B	#19, 1926[r5]
 190:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 191:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 192:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU1_TGI1A)
 193:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 194:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU1_TGI1A) = BSP_PRV_INT_B_NUM_TPU1_TG
  69                             		.loc 1 194 5 is_stmt 1
  70                             		.loc 1 194 73 is_stmt 0
  71 0064 FA 54 90 07 14          		mov.B	#20, 1936[r5]
 195:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 196:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 197:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU1_TGI1B)
 198:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 199:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU1_TGI1B) = BSP_PRV_INT_B_NUM_TPU1_TG
  72                             		.loc 1 199 5 is_stmt 1
  73                             		.loc 1 199 73 is_stmt 0
  74 0069 FA 54 87 07 15          		mov.B	#21, 1927[r5]
 200:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 201:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 202:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU1_TCI1V)
 203:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 204:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU1_TCI1V) = BSP_PRV_INT_B_NUM_TPU1_TC
  75                             		.loc 1 204 5 is_stmt 1
  76                             		.loc 1 204 73 is_stmt 0
  77 006e FA 54 88 07 16          		mov.B	#22, 1928[r5]
 205:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 206:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 207:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU1_TCI1U)
 208:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 209:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU1_TCI1U) = BSP_PRV_INT_B_NUM_TPU1_TC
  78                             		.loc 1 209 5 is_stmt 1
  79                             		.loc 1 209 73 is_stmt 0
  80 0073 FA 54 89 07 17          		mov.B	#23, 1929[r5]
 210:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 211:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 212:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU2_TGI2A)
 213:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 214:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU2_TGI2A) = BSP_PRV_INT_B_NUM_TPU2_TG
  81                             		.loc 1 214 5 is_stmt 1
  82                             		.loc 1 214 73 is_stmt 0
  83 0078 FA 54 8A 07 18          		mov.B	#24, 1930[r5]
 215:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 216:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 217:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU2_TGI2B)
 218:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 219:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU2_TGI2B) = BSP_PRV_INT_B_NUM_TPU2_TG
  84                             		.loc 1 219 5 is_stmt 1
  85                             		.loc 1 219 73 is_stmt 0
  86 007d FA 54 8B 07 19          		mov.B	#25, 1931[r5]
 220:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 221:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 222:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU2_TCI2V)
 223:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 224:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU2_TCI2V) = BSP_PRV_INT_B_NUM_TPU2_TC
  87                             		.loc 1 224 5 is_stmt 1
  88                             		.loc 1 224 73 is_stmt 0
  89 0082 FA 54 8C 07 1A          		mov.B	#26, 1932[r5]
 225:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 226:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 227:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU2_TCI2U)
 228:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 229:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU2_TCI2U) = BSP_PRV_INT_B_NUM_TPU2_TC
  90                             		.loc 1 229 5 is_stmt 1
  91                             		.loc 1 229 73 is_stmt 0
  92 0087 FA 54 8D 07 1B          		mov.B	#27, 1933[r5]
 230:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 231:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 232:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TGI3A)
 233:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 234:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TGI3A) = BSP_PRV_INT_B_NUM_TPU3_TG
  93                             		.loc 1 234 5 is_stmt 1
  94                             		.loc 1 234 73 is_stmt 0
  95 008c FA 54 8E 07 1C          		mov.B	#28, 1934[r5]
 235:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 236:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 237:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TGI3B)
 238:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 239:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TGI3B) = BSP_PRV_INT_B_NUM_TPU3_TG
  96                             		.loc 1 239 5 is_stmt 1
  97                             		.loc 1 239 73 is_stmt 0
  98 0091 FA 54 8F 07 1D          		mov.B	#29, 1935[r5]
 240:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 241:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 242:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TGI3C)
 243:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 244:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TGI3C) = BSP_PRV_INT_B_NUM_TPU3_TG
  99                             		.loc 1 244 5 is_stmt 1
 100                             		.loc 1 244 73 is_stmt 0
 101 0096 FA 54 91 07 1E          		mov.B	#30, 1937[r5]
 245:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 246:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 247:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TGI3D)
 248:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 249:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TGI3D) = BSP_PRV_INT_B_NUM_TPU3_TG
 102                             		.loc 1 249 5 is_stmt 1
 103                             		.loc 1 249 73 is_stmt 0
 104 009b FA 54 9E 07 1F          		mov.B	#31, 1950[r5]
 250:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 251:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 252:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TCI3V)
 253:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 254:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU3_TCI3V) = BSP_PRV_INT_B_NUM_TPU3_TC
 105                             		.loc 1 254 5 is_stmt 1
 106                             		.loc 1 254 73 is_stmt 0
 107 00a0 FA 54 9F 07 20          		mov.B	#32, 1951[r5]
 255:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 256:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 257:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU4_TGI4A)
 258:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 259:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU4_TGI4A) = BSP_PRV_INT_B_NUM_TPU4_TG
 108                             		.loc 1 259 5 is_stmt 1
 109                             		.loc 1 259 73 is_stmt 0
 110 00a5 FA 54 A0 07 21          		mov.B	#33, 1952[r5]
 260:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 261:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 262:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU4_TGI4B)
 263:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 264:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU4_TGI4B) = BSP_PRV_INT_B_NUM_TPU4_TG
 111                             		.loc 1 264 5 is_stmt 1
 112                             		.loc 1 264 73 is_stmt 0
 113 00aa FA 54 A1 07 22          		mov.B	#34, 1953[r5]
 265:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 266:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 267:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU4_TCI4V)
 268:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 269:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU4_TCI4V) = BSP_PRV_INT_B_NUM_TPU4_TC
 114                             		.loc 1 269 5 is_stmt 1
 115                             		.loc 1 269 73 is_stmt 0
 116 00af FA 54 A2 07 23          		mov.B	#35, 1954[r5]
 270:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 271:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 272:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU4_TCI4U)
 273:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 274:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU4_TCI4U) = BSP_PRV_INT_B_NUM_TPU4_TC
 117                             		.loc 1 274 5 is_stmt 1
 118                             		.loc 1 274 73 is_stmt 0
 119 00b4 FA 54 A3 07 24          		mov.B	#36, 1955[r5]
 275:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 276:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 277:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU5_TGI5A)
 278:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 279:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU5_TGI5A) = BSP_PRV_INT_B_NUM_TPU5_TG
 120                             		.loc 1 279 5 is_stmt 1
 121                             		.loc 1 279 73 is_stmt 0
 122 00b9 FA 54 A4 07 25          		mov.B	#37, 1956[r5]
 280:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 281:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 282:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU5_TGI5B)
 283:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 284:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU5_TGI5B) = BSP_PRV_INT_B_NUM_TPU5_TG
 123                             		.loc 1 284 5 is_stmt 1
 124                             		.loc 1 284 73 is_stmt 0
 125 00be FA 54 A5 07 26          		mov.B	#38, 1957[r5]
 285:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 286:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 287:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU5_TCI5V)
 288:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 289:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU5_TCI5V) = BSP_PRV_INT_B_NUM_TPU5_TC
 126                             		.loc 1 289 5 is_stmt 1
 127                             		.loc 1 289 73 is_stmt 0
 128 00c3 FA 54 A6 07 27          		mov.B	#39, 1958[r5]
 290:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 291:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 292:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TPU5_TCI5U)
 293:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 294:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TPU5_TCI5U) = BSP_PRV_INT_B_NUM_TPU5_TC
 129                             		.loc 1 294 5 is_stmt 1
 130                             		.loc 1 294 73 is_stmt 0
 131 00c8 FA 54 A7 07 28          		mov.B	#40, 1959[r5]
 295:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 296:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 297:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMTW0_IC0I0)
 298:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 299:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMTW0_IC0I0) = BSP_PRV_INT_B_NUM_CMTW0_
 132                             		.loc 1 299 5 is_stmt 1
 133                             		.loc 1 299 74 is_stmt 0
 134 00cd FA 54 A8 07 29          		mov.B	#41, 1960[r5]
 300:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 301:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 302:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMTW0_IC1I0)
 303:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 304:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMTW0_IC1I0) = BSP_PRV_INT_B_NUM_CMTW0_
 135                             		.loc 1 304 5 is_stmt 1
 136                             		.loc 1 304 74 is_stmt 0
 137 00d2 FA 54 A9 07 2A          		mov.B	#42, 1961[r5]
 305:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 306:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 307:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMTW0_OC0I0)
 308:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 309:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMTW0_OC0I0) = BSP_PRV_INT_B_NUM_CMTW0_
 138                             		.loc 1 309 5 is_stmt 1
 139                             		.loc 1 309 74 is_stmt 0
 140 00d7 FA 54 AA 07 2B          		mov.B	#43, 1962[r5]
 310:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 311:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 312:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMTW0_OC1I0)
 313:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 314:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMTW0_OC1I0) = BSP_PRV_INT_B_NUM_CMTW0_
 141                             		.loc 1 314 5 is_stmt 1
 142                             		.loc 1 314 74 is_stmt 0
 143 00dc FA 54 AB 07 2C          		mov.B	#44, 1963[r5]
 315:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 316:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 317:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMTW1_IC0I1)
 318:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 319:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMTW1_IC0I1) = BSP_PRV_INT_B_NUM_CMTW1_
 144                             		.loc 1 319 5 is_stmt 1
 145                             		.loc 1 319 74 is_stmt 0
 146 00e1 FA 54 AC 07 2D          		mov.B	#45, 1964[r5]
 320:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 321:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 322:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMTW1_IC1I1)
 323:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 324:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMTW1_IC1I1) = BSP_PRV_INT_B_NUM_CMTW1_
 147                             		.loc 1 324 5 is_stmt 1
 148                             		.loc 1 324 74 is_stmt 0
 149 00e6 FA 54 AD 07 2E          		mov.B	#46, 1965[r5]
 325:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 326:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 327:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMTW1_OC0I1)
 328:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 329:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMTW1_OC0I1) = BSP_PRV_INT_B_NUM_CMTW1_
 150                             		.loc 1 329 5 is_stmt 1
 151                             		.loc 1 329 74 is_stmt 0
 152 00eb FA 54 AE 07 2F          		mov.B	#47, 1966[r5]
 330:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 331:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 332:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CMTW1_OC1I1)
 333:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 334:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CMTW1_OC1I1) = BSP_PRV_INT_B_NUM_CMTW1_
 153                             		.loc 1 334 5 is_stmt 1
 154                             		.loc 1 334 74 is_stmt 0
 155 00f0 FA 54 AF 07 30          		mov.B	#48, 1967[r5]
 335:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 336:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 337:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_RTC_CUP)
 338:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 339:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_RTC_CUP) = BSP_PRV_INT_B_NUM_RTC_CUP;
 156                             		.loc 1 339 5 is_stmt 1
 157                             		.loc 1 339 70 is_stmt 0
 158 00f5 FA 54 B0 07 31          		mov.B	#49, 1968[r5]
 340:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 341:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 342:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CAN0_RXF0)
 343:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 344:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CAN0_RXF0) = BSP_PRV_INT_B_NUM_CAN0_RXF
 159                             		.loc 1 344 5 is_stmt 1
 160                             		.loc 1 344 72 is_stmt 0
 161 00fa FA 54 B1 07 32          		mov.B	#50, 1969[r5]
 345:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 346:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 347:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CAN0_TXF0)
 348:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 349:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CAN0_TXF0) = BSP_PRV_INT_B_NUM_CAN0_TXF
 162                             		.loc 1 349 5 is_stmt 1
 163                             		.loc 1 349 72 is_stmt 0
 164 00ff FA 54 B2 07 33          		mov.B	#51, 1970[r5]
 350:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 351:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 352:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CAN0_RXM0)
 353:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 354:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CAN0_RXM0) = BSP_PRV_INT_B_NUM_CAN0_RXM
 165                             		.loc 1 354 5 is_stmt 1
 166                             		.loc 1 354 72 is_stmt 0
 167 0104 FA 54 B3 07 34          		mov.B	#52, 1971[r5]
 355:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 356:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 357:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CAN0_TXM0)
 358:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 359:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CAN0_TXM0) = BSP_PRV_INT_B_NUM_CAN0_TXM
 168                             		.loc 1 359 5 is_stmt 1
 169                             		.loc 1 359 72 is_stmt 0
 170 0109 FA 54 B4 07 35          		mov.B	#53, 1972[r5]
 360:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 361:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 362:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CAN1_RXF1)
 363:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 364:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CAN1_RXF1) = BSP_PRV_INT_B_NUM_CAN1_RXF
 171                             		.loc 1 364 5 is_stmt 1
 172                             		.loc 1 364 72 is_stmt 0
 173 010e FA 54 B5 07 36          		mov.B	#54, 1973[r5]
 365:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 366:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 367:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CAN1_TXF1)
 368:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 369:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CAN1_TXF1) = BSP_PRV_INT_B_NUM_CAN1_TXF
 174                             		.loc 1 369 5 is_stmt 1
 175                             		.loc 1 369 72 is_stmt 0
 176 0113 FA 54 B6 07 37          		mov.B	#55, 1974[r5]
 370:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 371:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 372:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CAN1_RXM1)
 373:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 374:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CAN1_RXM1) = BSP_PRV_INT_B_NUM_CAN1_RXM
 177                             		.loc 1 374 5 is_stmt 1
 178                             		.loc 1 374 72 is_stmt 0
 179 0118 FA 54 B7 07 38          		mov.B	#56, 1975[r5]
 375:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 376:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 377:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_CAN1_TXM1)
 378:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 379:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_CAN1_TXM1) = BSP_PRV_INT_B_NUM_CAN1_TXM
 180                             		.loc 1 379 5 is_stmt 1
 181                             		.loc 1 379 72 is_stmt 0
 182 011d FA 54 B8 07 39          		mov.B	#57, 1976[r5]
 380:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 381:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 382:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_USB0_USBI0)
 383:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 384:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_USB0_USBI0) = BSP_PRV_INT_B_NUM_USB0_US
 183                             		.loc 1 384 5 is_stmt 1
 184                             		.loc 1 384 73 is_stmt 0
 185 0122 FA 54 B9 07 3E          		mov.B	#62, 1977[r5]
 385:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 386:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 387:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC0_S12ADI0)
 388:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 389:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC0_S12ADI0) = BSP_PRV_INT_B_NUM_S1
 186                             		.loc 1 389 5 is_stmt 1
 187                             		.loc 1 389 78 is_stmt 0
 188 0127 FA 54 BA 07 40          		mov.B	#0x40, 1978[r5]
 390:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 391:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 392:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC0_S12GBADI0)
 393:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 394:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC0_S12GBADI0) = BSP_PRV_INT_B_NUM_
 189                             		.loc 1 394 5 is_stmt 1
 190                             		.loc 1 394 80 is_stmt 0
 191 012c FA 54 BB 07 41          		mov.B	#0x41, 1979[r5]
 395:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 396:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 397:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC0_S12GCADI0)
 398:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 399:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC0_S12GCADI0) = BSP_PRV_INT_B_NUM_
 192                             		.loc 1 399 5 is_stmt 1
 193                             		.loc 1 399 80 is_stmt 0
 194 0131 FA 54 BC 07 42          		mov.B	#0x42, 1980[r5]
 400:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 401:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 402:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC1_S12ADI1)
 403:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 404:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC1_S12ADI1) = BSP_PRV_INT_B_NUM_S1
 195                             		.loc 1 404 5 is_stmt 1
 196                             		.loc 1 404 78 is_stmt 0
 197 0136 FA 54 BD 07 44          		mov.B	#0x44, 1981[r5]
 405:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 406:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 407:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC1_S12GBADI1)
 408:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 409:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC1_S12GBADI1) = BSP_PRV_INT_B_NUM_
 198                             		.loc 1 409 5 is_stmt 1
 199                             		.loc 1 409 80 is_stmt 0
 200 013b FA 54 BE 07 45          		mov.B	#0x45, 1982[r5]
 410:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 411:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 412:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC1_S12GCADI1)
 413:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 414:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_S12ADC1_S12GCADI1) = BSP_PRV_INT_B_NUM_
 201                             		.loc 1 414 5 is_stmt 1
 202                             		.loc 1 414 80 is_stmt 0
 203 0140 FA 54 BF 07 46          		mov.B	#0x46, 1983[r5]
 415:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 416:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 417:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_RNG_RNGEND)
 418:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 419:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_RNG_RNGEND) = BSP_PRV_INT_B_NUM_RNG_RNG
 420:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 421:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 422:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_ELC_ELSR18I)
 423:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 424:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_ELC_ELSR18I) = BSP_PRV_INT_B_NUM_ELC_EL
 204                             		.loc 1 424 5 is_stmt 1
 205                             		.loc 1 424 74 is_stmt 0
 206 0145 FA 54 C0 07 4F          		mov.B	#0x4f, 1984[r5]
 425:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 426:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 427:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_ELC_ELSR19I)
 428:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 429:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_ELC_ELSR19I) = BSP_PRV_INT_B_NUM_ELC_EL
 207                             		.loc 1 429 5 is_stmt 1
 208                             		.loc 1 429 74 is_stmt 0
 209 014a FA 54 C1 07 50          		mov.B	#0x50, 1985[r5]
 430:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 431:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 432:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_PROC_BUSY)
 433:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 434:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_PROC_BUSY) = BSP_PRV_INT_B_NUM_TSI
 210                             		.loc 1 434 5 is_stmt 1
 211                             		.loc 1 434 77 is_stmt 0
 212 014f FA 54 C2 07 55          		mov.B	#0x55, 1986[r5]
 435:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 436:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 437:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_ROMOK)
 438:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 439:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_ROMOK) = BSP_PRV_INT_B_NUM_TSIP_RO
 213                             		.loc 1 439 5 is_stmt 1
 214                             		.loc 1 439 73 is_stmt 0
 215 0154 FA 54 C3 07 56          		mov.B	#0x56, 1987[r5]
 440:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 441:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 442:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_LONG_PLG)
 443:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 444:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_LONG_PLG) = BSP_PRV_INT_B_NUM_TSIP
 216                             		.loc 1 444 5 is_stmt 1
 217                             		.loc 1 444 76 is_stmt 0
 218 0159 FA 54 C4 07 57          		mov.B	#0x57, 1988[r5]
 445:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 446:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 447:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_TEST_BUSY)
 448:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 449:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_TEST_BUSY) = BSP_PRV_INT_B_NUM_TSI
 219                             		.loc 1 449 5 is_stmt 1
 220                             		.loc 1 449 77 is_stmt 0
 221 015e FA 54 C5 07 58          		mov.B	#0x58, 1989[r5]
 450:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 451:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 452:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_WRRDY0)
 453:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 454:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_WRRDY0) = BSP_PRV_INT_B_NUM_TSIP_W
 222                             		.loc 1 454 5 is_stmt 1
 223                             		.loc 1 454 74 is_stmt 0
 224 0163 FA 54 C6 07 59          		mov.B	#0x59, 1990[r5]
 455:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 456:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 457:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_WRRDY1)
 458:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 459:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_WRRDY1) = BSP_PRV_INT_B_NUM_TSIP_W
 225                             		.loc 1 459 5 is_stmt 1
 226                             		.loc 1 459 74 is_stmt 0
 227 0168 FA 54 C7 07 5A          		mov.B	#0x5a, 1991[r5]
 460:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 461:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 462:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_WRRDY4)
 463:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 464:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_WRRDY4) = BSP_PRV_INT_B_NUM_TSIP_W
 228                             		.loc 1 464 5 is_stmt 1
 229                             		.loc 1 464 74 is_stmt 0
 230 016d FA 54 C8 07 5B          		mov.B	#0x5b, 1992[r5]
 465:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 466:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 467:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_RDRDY0)
 468:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 469:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_RDRDY0) = BSP_PRV_INT_B_NUM_TSIP_R
 231                             		.loc 1 469 5 is_stmt 1
 232                             		.loc 1 469 74 is_stmt 0
 233 0172 FA 54 C9 07 5C          		mov.B	#0x5c, 1993[r5]
 470:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 471:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 472:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_RDRDY1)
 473:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 474:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_RDRDY1) = BSP_PRV_INT_B_NUM_TSIP_R
 234                             		.loc 1 474 5 is_stmt 1
 235                             		.loc 1 474 74 is_stmt 0
 236 0177 FA 54 CA 07 5D          		mov.B	#0x5d, 1994[r5]
 475:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 476:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 477:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_INTEGRATE_WRRDY)
 478:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 479:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_INTEGRATE_WRRDY) = BSP_PRV_INT_B_N
 237                             		.loc 1 479 5 is_stmt 1
 238                             		.loc 1 479 83 is_stmt 0
 239 017c FA 54 CB 07 5E          		mov.B	#0x5e, 1995[r5]
 480:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 481:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 482:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_INTEGRATE_RDRDY)
 483:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 484:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_B, BSP_MAPPED_INT_CFG_B_VECT_TSIP_INTEGRATE_RDRDY) = BSP_PRV_INT_B_N
 240                             		.loc 1 484 5 is_stmt 1
 241                             		.loc 1 484 83 is_stmt 0
 242 0181 FA 54 CC 07 5F          		mov.B	#0x5f, 1996[r5]
 485:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 486:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 487:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIA0)
 488:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 489:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIA0) = BSP_PRV_INT_A_NUM_MTU0_TG
 243                             		.loc 1 489 5 is_stmt 1
 244                             		.loc 1 489 73 is_stmt 0
 245 0186 FA 54 D1 09 01          		mov.B	#1, 2513[r5]
 490:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 491:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 492:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIB0)
 493:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 494:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIB0) = BSP_PRV_INT_A_NUM_MTU0_TG
 246                             		.loc 1 494 5 is_stmt 1
 247                             		.loc 1 494 73 is_stmt 0
 248 018b FA 54 D2 09 02          		mov.B	#2, 2514[r5]
 495:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 496:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 497:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIC0)
 498:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 499:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIC0) = BSP_PRV_INT_A_NUM_MTU0_TG
 249                             		.loc 1 499 5 is_stmt 1
 250                             		.loc 1 499 73 is_stmt 0
 251 0190 FA 54 D3 09 03          		mov.B	#3, 2515[r5]
 500:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 501:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 502:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGID0)
 503:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 504:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGID0) = BSP_PRV_INT_A_NUM_MTU0_TG
 252                             		.loc 1 504 5 is_stmt 1
 253                             		.loc 1 504 73 is_stmt 0
 254 0195 FA 54 D4 09 04          		mov.B	#4, 2516[r5]
 505:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 506:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 507:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TCIV0)
 508:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 509:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TCIV0) = BSP_PRV_INT_A_NUM_MTU0_TC
 255                             		.loc 1 509 5 is_stmt 1
 256                             		.loc 1 509 73 is_stmt 0
 257 019a FA 54 D5 09 05          		mov.B	#5, 2517[r5]
 510:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 511:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 512:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIE0)
 513:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 514:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIE0) = BSP_PRV_INT_A_NUM_MTU0_TG
 258                             		.loc 1 514 5 is_stmt 1
 259                             		.loc 1 514 73 is_stmt 0
 260 019f FA 54 D6 09 06          		mov.B	#6, 2518[r5]
 515:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 516:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 517:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIF0)
 518:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 519:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU0_TGIF0) = BSP_PRV_INT_A_NUM_MTU0_TG
 261                             		.loc 1 519 5 is_stmt 1
 262                             		.loc 1 519 73 is_stmt 0
 263 01a4 FA 54 D7 09 07          		mov.B	#7, 2519[r5]
 520:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 521:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 522:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU1_TGIA1)
 523:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 524:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU1_TGIA1) = BSP_PRV_INT_A_NUM_MTU1_TG
 264                             		.loc 1 524 5 is_stmt 1
 265                             		.loc 1 524 73 is_stmt 0
 266 01a9 FA 54 D0 09 08          		mov.B	#8, 2512[r5]
 525:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 526:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 527:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU1_TGIB1)
 528:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 529:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU1_TGIB1) = BSP_PRV_INT_A_NUM_MTU1_TG
 267                             		.loc 1 529 5 is_stmt 1
 268                             		.loc 1 529 73 is_stmt 0
 269 01ae FA 54 D8 09 09          		mov.B	#9, 2520[r5]
 530:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 531:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 532:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU1_TCIV1)
 533:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 534:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU1_TCIV1) = BSP_PRV_INT_A_NUM_MTU1_TC
 270                             		.loc 1 534 5 is_stmt 1
 271                             		.loc 1 534 73 is_stmt 0
 272 01b3 FA 54 D9 09 0A          		mov.B	#10, 2521[r5]
 535:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 536:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 537:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU1_TCIU1)
 538:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 539:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU1_TCIU1) = BSP_PRV_INT_A_NUM_MTU1_TC
 273                             		.loc 1 539 5 is_stmt 1
 274                             		.loc 1 539 73 is_stmt 0
 275 01b8 FA 54 DA 09 0B          		mov.B	#11, 2522[r5]
 540:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 541:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 542:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU2_TGIA2)
 543:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 544:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU2_TGIA2) = BSP_PRV_INT_A_NUM_MTU2_TG
 276                             		.loc 1 544 5 is_stmt 1
 277                             		.loc 1 544 73 is_stmt 0
 278 01bd FA 54 DB 09 0C          		mov.B	#12, 2523[r5]
 545:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 546:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 547:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU2_TGIB2)
 548:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 549:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU2_TGIB2) = BSP_PRV_INT_A_NUM_MTU2_TG
 279                             		.loc 1 549 5 is_stmt 1
 280                             		.loc 1 549 73 is_stmt 0
 281 01c2 FA 54 DC 09 0D          		mov.B	#13, 2524[r5]
 550:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 551:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 552:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU2_TCIV2)
 553:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 554:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU2_TCIV2) = BSP_PRV_INT_A_NUM_MTU2_TC
 282                             		.loc 1 554 5 is_stmt 1
 283                             		.loc 1 554 73 is_stmt 0
 284 01c7 FA 54 DD 09 0E          		mov.B	#14, 2525[r5]
 555:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 556:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 557:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU2_TCIU2)
 558:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 559:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU2_TCIU2) = BSP_PRV_INT_A_NUM_MTU2_TC
 285                             		.loc 1 559 5 is_stmt 1
 286                             		.loc 1 559 73 is_stmt 0
 287 01cc FA 54 DE 09 0F          		mov.B	#15, 2526[r5]
 560:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 561:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 562:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TGIA3)
 563:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 564:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TGIA3) = BSP_PRV_INT_A_NUM_MTU3_TG
 288                             		.loc 1 564 5 is_stmt 1
 289                             		.loc 1 564 73 is_stmt 0
 290 01d1 FA 54 DF 09 10          		mov.B	#16, 2527[r5]
 565:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 566:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 567:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TGIB3)
 568:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 569:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TGIB3) = BSP_PRV_INT_A_NUM_MTU3_TG
 291                             		.loc 1 569 5 is_stmt 1
 292                             		.loc 1 569 73 is_stmt 0
 293 01d6 FA 54 E0 09 11          		mov.B	#17, 2528[r5]
 570:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 571:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 572:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TGIC3)
 573:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 574:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TGIC3) = BSP_PRV_INT_A_NUM_MTU3_TG
 294                             		.loc 1 574 5 is_stmt 1
 295                             		.loc 1 574 73 is_stmt 0
 296 01db FA 54 E1 09 12          		mov.B	#18, 2529[r5]
 575:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 576:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 577:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TGID3)
 578:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 579:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TGID3) = BSP_PRV_INT_A_NUM_MTU3_TG
 297                             		.loc 1 579 5 is_stmt 1
 298                             		.loc 1 579 73 is_stmt 0
 299 01e0 FA 54 E2 09 13          		mov.B	#19, 2530[r5]
 580:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 581:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 582:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TCIV3)
 583:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 584:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU3_TCIV3) = BSP_PRV_INT_A_NUM_MTU3_TC
 300                             		.loc 1 584 5 is_stmt 1
 301                             		.loc 1 584 73 is_stmt 0
 302 01e5 FA 54 E3 09 14          		mov.B	#20, 2531[r5]
 585:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 586:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 587:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TGIA4)
 588:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 589:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TGIA4) = BSP_PRV_INT_A_NUM_MTU4_TG
 303                             		.loc 1 589 5 is_stmt 1
 304                             		.loc 1 589 73 is_stmt 0
 305 01ea FA 54 E4 09 15          		mov.B	#21, 2532[r5]
 590:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 591:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 592:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TGIB4)
 593:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 594:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TGIB4) = BSP_PRV_INT_A_NUM_MTU4_TG
 306                             		.loc 1 594 5 is_stmt 1
 307                             		.loc 1 594 73 is_stmt 0
 308 01ef FA 54 E5 09 16          		mov.B	#22, 2533[r5]
 595:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 596:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 597:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TGIC4)
 598:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 599:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TGIC4) = BSP_PRV_INT_A_NUM_MTU4_TG
 309                             		.loc 1 599 5 is_stmt 1
 310                             		.loc 1 599 73 is_stmt 0
 311 01f4 FA 54 E6 09 17          		mov.B	#23, 2534[r5]
 600:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 601:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 602:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TGID4)
 603:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 604:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TGID4) = BSP_PRV_INT_A_NUM_MTU4_TG
 312                             		.loc 1 604 5 is_stmt 1
 313                             		.loc 1 604 73 is_stmt 0
 314 01f9 FA 54 E7 09 18          		mov.B	#24, 2535[r5]
 605:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 606:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 607:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TCIV4)
 608:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 609:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU4_TCIV4) = BSP_PRV_INT_A_NUM_MTU4_TC
 315                             		.loc 1 609 5 is_stmt 1
 316                             		.loc 1 609 73 is_stmt 0
 317 01fe FA 54 E8 09 19          		mov.B	#25, 2536[r5]
 610:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 611:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 612:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU5_TGIU5)
 613:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 614:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU5_TGIU5) = BSP_PRV_INT_A_NUM_MTU5_TG
 318                             		.loc 1 614 5 is_stmt 1
 319                             		.loc 1 614 73 is_stmt 0
 320 0203 FA 54 E9 09 1B          		mov.B	#27, 2537[r5]
 615:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 616:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 617:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU5_TGIV5)
 618:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 619:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU5_TGIV5) = BSP_PRV_INT_A_NUM_MTU5_TG
 321                             		.loc 1 619 5 is_stmt 1
 322                             		.loc 1 619 73 is_stmt 0
 323 0208 FA 54 EA 09 1C          		mov.B	#28, 2538[r5]
 620:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 621:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 622:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU5_TGIW5)
 623:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 624:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU5_TGIW5) = BSP_PRV_INT_A_NUM_MTU5_TG
 324                             		.loc 1 624 5 is_stmt 1
 325                             		.loc 1 624 73 is_stmt 0
 326 020d FA 54 EB 09 1D          		mov.B	#29, 2539[r5]
 625:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 626:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 627:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TGIA6)
 628:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 629:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TGIA6) = BSP_PRV_INT_A_NUM_MTU6_TG
 327                             		.loc 1 629 5 is_stmt 1
 328                             		.loc 1 629 73 is_stmt 0
 329 0212 FA 54 EC 09 1E          		mov.B	#30, 2540[r5]
 630:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 631:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 632:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TGIB6)
 633:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 634:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TGIB6) = BSP_PRV_INT_A_NUM_MTU6_TG
 330                             		.loc 1 634 5 is_stmt 1
 331                             		.loc 1 634 73 is_stmt 0
 332 0217 FA 54 ED 09 1F          		mov.B	#31, 2541[r5]
 635:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 636:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 637:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TGIC6)
 638:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 639:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TGIC6) = BSP_PRV_INT_A_NUM_MTU6_TG
 333                             		.loc 1 639 5 is_stmt 1
 334                             		.loc 1 639 73 is_stmt 0
 335 021c FA 54 EE 09 20          		mov.B	#32, 2542[r5]
 640:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 641:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 642:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TGID6)
 643:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 644:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TGID6) = BSP_PRV_INT_A_NUM_MTU6_TG
 336                             		.loc 1 644 5 is_stmt 1
 337                             		.loc 1 644 73 is_stmt 0
 338 0221 FA 54 EF 09 21          		mov.B	#33, 2543[r5]
 645:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 646:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 647:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TCIV6)
 648:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 649:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU6_TCIV6) = BSP_PRV_INT_A_NUM_MTU6_TC
 339                             		.loc 1 649 5 is_stmt 1
 340                             		.loc 1 649 73 is_stmt 0
 341 0226 FA 54 F0 09 22          		mov.B	#34, 2544[r5]
 650:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 651:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 652:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TGIA7)
 653:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 654:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TGIA7) = BSP_PRV_INT_A_NUM_MTU7_TG
 342                             		.loc 1 654 5 is_stmt 1
 343                             		.loc 1 654 73 is_stmt 0
 344 022b FA 54 F1 09 23          		mov.B	#35, 2545[r5]
 655:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 656:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 657:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TGIB7)
 658:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 659:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TGIB7) = BSP_PRV_INT_A_NUM_MTU7_TG
 345                             		.loc 1 659 5 is_stmt 1
 346                             		.loc 1 659 73 is_stmt 0
 347 0230 FA 54 F2 09 24          		mov.B	#36, 2546[r5]
 660:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 661:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 662:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TGIC7)
 663:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 664:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TGIC7) = BSP_PRV_INT_A_NUM_MTU7_TG
 348                             		.loc 1 664 5 is_stmt 1
 349                             		.loc 1 664 73 is_stmt 0
 350 0235 FA 54 F3 09 25          		mov.B	#37, 2547[r5]
 665:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 666:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 667:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TGID7)
 668:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 669:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TGID7) = BSP_PRV_INT_A_NUM_MTU7_TG
 351                             		.loc 1 669 5 is_stmt 1
 352                             		.loc 1 669 73 is_stmt 0
 353 023a FA 54 F4 09 26          		mov.B	#38, 2548[r5]
 670:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 671:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 672:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TCIV7)
 673:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 674:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU7_TCIV7) = BSP_PRV_INT_A_NUM_MTU7_TC
 354                             		.loc 1 674 5 is_stmt 1
 355                             		.loc 1 674 73 is_stmt 0
 356 023f FA 54 F5 09 27          		mov.B	#39, 2549[r5]
 675:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 676:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 677:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TGIA8)
 678:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 679:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TGIA8) = BSP_PRV_INT_A_NUM_MTU8_TG
 357                             		.loc 1 679 5 is_stmt 1
 358                             		.loc 1 679 73 is_stmt 0
 359 0244 FA 54 F6 09 29          		mov.B	#41, 2550[r5]
 680:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 681:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 682:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TGIB8)
 683:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 684:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TGIB8) = BSP_PRV_INT_A_NUM_MTU8_TG
 360                             		.loc 1 684 5 is_stmt 1
 361                             		.loc 1 684 73 is_stmt 0
 362 0249 FA 54 F7 09 2A          		mov.B	#42, 2551[r5]
 685:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 686:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 687:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TGIC8)
 688:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 689:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TGIC8) = BSP_PRV_INT_A_NUM_MTU8_TG
 363                             		.loc 1 689 5 is_stmt 1
 364                             		.loc 1 689 73 is_stmt 0
 365 024e FA 54 F8 09 2B          		mov.B	#43, 2552[r5]
 690:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 691:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 692:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TGID8)
 693:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 694:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TGID8) = BSP_PRV_INT_A_NUM_MTU8_TG
 366                             		.loc 1 694 5 is_stmt 1
 367                             		.loc 1 694 73 is_stmt 0
 368 0253 FA 54 F9 09 2C          		mov.B	#44, 2553[r5]
 695:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 696:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 697:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TCIV8)
 698:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 699:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_MTU8_TCIV8) = BSP_PRV_INT_A_NUM_MTU8_TC
 369                             		.loc 1 699 5 is_stmt 1
 370                             		.loc 1 699 73 is_stmt 0
 371 0258 FA 54 FA 09 2D          		mov.B	#45, 2554[r5]
 700:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 701:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 702:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_AES_AESRDY)
 703:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 704:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_AES_AESRDY) = BSP_PRV_INT_A_NUM_AES_AES
 372                             		.loc 1 704 5 is_stmt 1
 373                             		.loc 1 704 73 is_stmt 0
 374 025d FA 54 FB 09 58          		mov.B	#0x58, 2555[r5]
 705:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 706:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 707:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #if BSP_PRV_VALID_MAP_INT(A, BSP_MAPPED_INT_CFG_A_VECT_AES_AESEND)
 708:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     /* Casting is valid because it matches the type to the right side or argument. */
 709:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c ****     BSP_PRV_INT_SELECT(BSP_PRV_A, BSP_MAPPED_INT_CFG_A_VECT_AES_AESEND) = BSP_PRV_INT_A_NUM_AES_AES
 375                             		.loc 1 709 5 is_stmt 1
 376                             		.loc 1 709 73 is_stmt 0
 377 0262 FA 54 FC 09 59          		mov.B	#0x59, 2556[r5]
 710:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** #endif
 711:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** 
 712:../src/smc_gen/r_bsp/mcu/rx65n/mcu_mapped_interrupts.c **** } /* End of function bsp_mapped_interrupt_open() */
 378                             		.loc 1 712 1
 379 0267 02                      		rts
 380                             	.LFE3:
 408                             	.Letext0:
 409                             		.file 2 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\\
 410                             		.file 3 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_std
 411                             		.file 4 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\lock
 412                             		.file 5 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_typ
 413                             		.file 6 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.20
 414                             		.file 7 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\reen
 415                             		.file 8 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\smc
 416                             		.file 9 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\smc
 417                             		.file 10 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\sm
