   1                             		.file	"fully_connected.cc"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text._ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcm,"ax",@progbits
   6                             	__ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcm:
   7                             	.LFB2255:
   8                             		.file 1 "../src/tensorflow/lite/micro/kernels/fully_connected.cc"
   1:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
   3:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** You may obtain a copy of the License at
   6:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
   7:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
   9:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** limitations under the License.
  14:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** ==============================================================================*/
  15:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  16:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/kernels/internal/reference/fully_connected.h"
  17:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  18:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "arm_nnfunctions.h"
  19:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/c/builtin_op_data.h"
  20:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/c/common.h"
  21:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/kernels/internal/common.h"
  22:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  23:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/kernels/internal/reference/integer_ops/fully_connected.h"
  24:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  25:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/kernels/kernel_util.h"
  26:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/micro/kernels/fully_connected.h"
  27:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  28:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  29:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** namespace tflite {
  30:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** namespace {
  31:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  32:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** struct OpData {
  33:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // The scaling factor from input to output (aka the 'real multiplier') can
  34:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // be represented as a fixed point multiplier plus a left shift.
  35:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   int32_t output_multiplier;
  36:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   int output_shift;
  37:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // The range of the fused activation layer. For example for kNone and
  38:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // uint8_t these would be 0 and 255.
  39:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   int32_t output_activation_min;
  40:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   int32_t output_activation_max;
  41:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // The index of the temporary tensor where the quantized inputs are cached.
  42:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   int input_quantized_index;
  43:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // Index to buffer for optimizations if applicable.
  44:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   int buffer_idx;
  45:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  46:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // Cached tensor zero point values for quantized operations.
  47:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   int32_t input_zero_point;
  48:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   int32_t filter_zero_point;
  49:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   int32_t output_zero_point;
  50:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** };
  51:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  52:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** constexpr int kInputTensor = 0;
  53:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** constexpr int kWeightsTensor = 1;
  54:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** constexpr int kBiasTensor = 2;
  55:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** constexpr int kOutputTensor = 0;
  56:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  57:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** // TODO(b/169801227): This global struct is needed for the linker to drop unused
  58:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** // code (for example, by using Register_FULLY_CONNECTED_INT8 instead of
  59:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** // Register_FULLY_CONNECTED).
  60:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** TfLiteRegistration fully_connected_registration;
  61:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  62:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** TfLiteStatus CalculateOpData(TfLiteContext* context,
  63:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                              TfLiteFusedActivation activation,
  64:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                              TfLiteType data_type, const TfLiteTensor* input,
  65:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                              const TfLiteTensor* filter,
  66:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                              const TfLiteTensor* bias, TfLiteTensor* output,
  67:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                              OpData* data) {
  68:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TfLiteStatus status = kTfLiteOk;
  69:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // Set buffer index to a reset value
  70:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   data->buffer_idx = -1;
  71:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   if (data_type != kTfLiteFloat32) {
  72:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     double real_multiplier = 0.0;
  73:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TF_LITE_ENSURE_STATUS(GetQuantizedConvolutionMultipler(
  74:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context, input, filter, bias, output, &real_multiplier));
  75:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     int exponent;
  76:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     QuantizeMultiplier(real_multiplier, &data->output_multiplier, &exponent);
  77:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->output_shift = -exponent;
  78:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(
  79:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context, activation, output, &data->output_activation_min,
  80:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         &data->output_activation_max));
  81:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->input_zero_point = input->params.zero_point;
  82:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->filter_zero_point = filter->params.zero_point;
  83:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->output_zero_point = output->params.zero_point;
  84:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   }
  85:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return status;
  86:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
  87:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  88:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** void* Init(TfLiteContext* context, const char* buffer, size_t length) {
   9                             		.loc 1 88 71
  10                             	.LVL0:
  89:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  11                             		.loc 1 89 3
  12 0000 AB 95                   		mov.L	56[r1], r5
  13 0002 61 05                   		cmp	#0, r5
  14 0004 17                      		beq	.L4
  90:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return context->AllocatePersistentBuffer(context, sizeof(OpData));
  15                             		.loc 1 90 3
  16                             		.loc 1 90 43 is_stmt 0
  17 0005 75 42 24                		mov.L	#36, r2
  18                             	.LVL1:
  19 0008 7F 15                   		jsr	r5
  20                             	.LVL2:
  91:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
  21                             		.loc 1 91 1
  22 000a 02                      		rts
  23                             	.LVL3:
  24                             	.L4:
  89:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  25                             		.loc 1 89 3 discriminator 1
  26 000b 05 00 00 00             		bsr	_abort
  27                             	.LVL4:
  28                             	.LFE2255:
  30                             		.section	.text._ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpD
  32                             	__ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteE
  33                             	.LFB2809:
  92:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  93:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {
  94:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
  95:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(node->builtin_data != nullptr);
  96:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
  97:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
  98:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const auto params =
  99:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       static_cast<const TfLiteFullyConnectedParams*>(node->builtin_data);
 100:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 101:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
 102:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteTensor* filter = GetInput(context, node, kWeightsTensor);
 103:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteTensor* bias = GetOptionalInputTensor(context, node, kBiasTensor);
 104:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
 105:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);
 106:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_MSG(context, input->type == filter->type,
 107:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                      "Hybrid models are not supported on TFLite Micro.");
 108:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_STATUS(CalculateOpData(context, params->activation,
 109:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                         input->type, input, filter, bias,
 110:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                         output, data));
 111:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 112:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   if (input->type == kTfLiteInt8 && nullptr != GetTensorData<int32_t>(bias)) {
 113:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     RuntimeShape filter_shape = GetTensorShape(filter);
 114:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     RuntimeShape output_shape = GetTensorShape(output);
 115:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 116:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 2);
 117:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const int filter_dim_count = filter_shape.DimensionsCount();
 118:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_dims filter_dims;
 119:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.n = filter_shape.Dims(filter_dim_count - 1);
 120:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.h = 1;
 121:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.w = 1;
 122:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.c = output_shape.Dims(1);
 123:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 124:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const int32_t buf_size =
 125:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         arm_fully_connected_s8_get_buffer_size(&filter_dims);
 126:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 127:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     if (buf_size > 0) {
 128:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       TF_LITE_ENSURE_STATUS(context->RequestScratchBufferInArena(
 129:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****           context, buf_size, &data->buffer_idx));
 130:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     } else {
 131:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       data->buffer_idx = -1;
 132:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     }
 133:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   }
 134:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return kTfLiteOk;
 135:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
 136:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 137:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** TfLiteStatus EvalQuantizedInt8(TfLiteContext* context, TfLiteNode* node,
  34                             		.loc 1 137 14 is_stmt 1
  35                             	.LVL5:
  36 0000 6E 6D                   		pushm	r6-r13
  37                             	.LCFI0:
  38 0002 72 00 8C FE             		add	#-372, r0
  39                             	.LCFI1:
  40                             	.LVL6:
 138:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                const OpData& data,
 139:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                const TfLiteEvalTensor* input,
 140:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                const TfLiteEvalTensor* filter,
 141:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                const TfLiteEvalTensor* bias,
 142:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                TfLiteEvalTensor* output) {
 143:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // The 'if' condition can be removed when null handling of bias is added to
 144:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // arm_fully_connected_s8
 145:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   if (nullptr != tflite::micro::GetTensorData<int32_t>(bias)) {
  41                             		.loc 1 145 3
 137:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                const OpData& data,
  42                             		.loc 1 137 14 is_stmt 0
  43 0006 FB 7A 98 01             		mov.L	#0x198, r7
  44 000a 4B 07                   		add	r0, r7
  45 000c EC 7A                   		mov.L	[r7], r10
  46                             	.LVL7:
  47 000e ED 79 01                		mov.L	4[r7], r9
  48                             	.LBB522:
  49                             	.LBB523:
  50                             	.LBB524:
  51                             		.file 2 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns const data for a TfLiteEvalTensor struct.
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** const T* GetTensorData(const TfLiteEvalTensor* tensor) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(tensor != nullptr);
  52                             		.loc 2 61 3
  53 0011 61 0A                   		cmp	#0, r10
  54 0013 3A EC 04                		beq	.L8
  55 0016 EF 28                   		mov.L	r2, r8
  56 0018 EF 36                   		mov.L	r3, r6
  57 001a EF 4B                   		mov.L	r4, r11
  58                             	.LVL8:
  59                             	.LBE524:
  60                             	.LBE523:
  61                             		.loc 1 145 3
  62 001c EC A7                   		mov.L	[r10], r7
  63 001e 61 07                   		cmp	#0, r7
  64 0020 3A 57 01                		beq	.L7
  65 0023 EF 1C                   		mov.L	r1, r12
  66                             	.LBB526:
 146:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const RuntimeShape output_shape = tflite::micro::GetTensorShape(output);
  67                             		.loc 1 146 5 is_stmt 1
  68                             		.loc 1 146 75 is_stmt 0
  69 0025 72 0F AC 00             		add	#0xac, r0, r15
  70 0029 EF 91                   		mov.L	r9, r1
  71                             	.LVL9:
  72 002b 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
  73                             	.LVL10:
 147:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 2);
  74                             		.loc 1 147 5 is_stmt 1
  75                             	.LBE526:
  76                             	.LBE522:
  77                             		.file 3 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <algorithm>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstring>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <initializer_list>
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FusedActivationFunctionType : uint8_t {
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kNone,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu6,
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu1,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class PaddingType : uint8_t { kNone, kSame, kValid };
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct PaddingValues {
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // This enumeration allows for non-default formats for the weights array
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // of a fully-connected operator, allowing the use of special optimized
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // runtime paths.
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FullyConnectedWeightsFormat : uint8_t {
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Default format (flat 2D layout, the inner contiguous dimension
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is input_depth, the outer non-contiguous dimension is output_depth)
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kDefault,
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Summary: optimized layout for fast CPU runtime implementation,
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // aimed specifically at ARM CPUs at the moment, and specialized for
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 8-bit quantized layers.
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The use case we're concerned with here is: 8-bit quantization,
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // large weights matrix that doesn't fit in cache (e.g. 4096x2048 in
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // a key application that drove this), very small batch size (e.g. 1 -- 4).
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Even with 8-bit quantization of weights, the performance of memory
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses to the weights can become the dominant issue when
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the batch size is small, so each weight value is used in only a few
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // arithmetic ops, i.e. the fully-connected node has a low arithmetic
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // intensity. The specific issues that arise are of three kinds:
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (1) One may, ideally, max out DRAM bandwidth, i.e. be truly memory
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     bound. That's the "good" issue to run into.
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (2) One may run into sub-optimal pre-fetching: the data hasn't been
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     prefetched into the cache by the time we need it.
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (3) One may run into cache aliasing: multiple values that are
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     pre-fetched, alias each other in the L1 cache (which typically
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     has only 4-way set associativity in ARM CPUs) and thus evict
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     each other before we get to using them.
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The point of this shuffling is to avoid issues (2) and (3) so that
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // we get as fast as possible given only the hard constraint (1).
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This is achieved by turning the difficulty into a solution: the
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // difficulty, that each value loaded from memory is used only in
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // one kernel iteration, making this operation memory-intensive, hints at
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the solution, of shuffling the weights so that they are stored in the
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // exact order as the kernel needs to load them, so that the memory
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses made by the kernel are trivial. This solves (2) because the
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // trivial memory access pattern allows the CPU's automatic prefetching
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to perform very well (no need even for preload instructions), and this
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // solves (3) because the values being loaded concurrently are now
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // contiguous in the address space, thus don't alias each other in the cache.
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // On ARM, we typically want our kernel to process a 4x16 block of weights
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // at a time, because:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 16 is the number of bytes in a NEON register.
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 4 is how many rows we need to handle concurrently in the kernel in
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     order to have sufficient mutual independence of instructions to
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     maximize arithmetic throughput.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Finally, the 'Int8' part in the name refers to the fact that this
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // weights format has each weights value encoded as a signed int8_t value,
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // even if the data type of the weights buffer is uint8_t.  This is intended
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to save runtime kernels the effort to have to XOR the top bit of these
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // bytes before using them in signed arithmetic, see this file for more
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // explanations on the 'signed int8_t trick' in matrix multiplication kernels:
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   tensorflow/lite/toco/graph_transformations/ensure_uint8_weights_safe_for_fast_int8_kernels.c
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kShuffled4x16Int8,
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Quantization parameters, determining the mapping of quantized values
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // to real values (i.e. determining how quantized values are mathematically
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // interpreted).
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // The correspondence is as follows:
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //   real_value = scale * (quantized_value - zero_point);
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // In other words, zero_point designates which quantized value corresponds to
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // the real 0 value, and scale designates the difference between the real values
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // corresponding to consecutive quantized values differing by 1.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct QuantizationParams {
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t zero_point = 0;
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   double scale = 0.0;
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool operator==(const QuantizationParams& qp1,
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const QuantizationParams& qp2) {
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return qp1.zero_point == qp2.zero_point && qp1.scale == qp2.scale;
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct Dims {
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int sizes[N];
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int strides[N];
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** class RuntimeShape {
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  public:
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Shapes with dimensions up to 5 are stored directly in the structure, while
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // larger shapes are separately allocated.
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   static constexpr int kMaxSmallSize = 5;
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape& operator=(RuntimeShape const&) = delete;
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape() : size_(0) {}
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   explicit RuntimeShape(int dimensions_count) : size_(dimensions_count) {
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int shape_size, int32_t value) : size_(0) {
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(shape_size);
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < shape_size; ++i) {
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, value);
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int dimensions_count, const int32_t* dims_data) : size_(0) {
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     ReplaceWith(dimensions_count, dims_data);
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(const std::initializer_list<int> init_list) : size_(0) {
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom(init_list);
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Avoid using this constructor.  We should be able to delete it when C++17
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // rolls out.
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(RuntimeShape const& other) : size_(other.DimensionsCount()) {
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[size_];
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData(), other.DimsData(), sizeof(int32_t) * size_);
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator==(const RuntimeShape& comp) const {
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return this->size_ == comp.size_ &&
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****            std::memcmp(DimsData(), comp.DimsData(), size_ * sizeof(int32_t)) ==
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                0;
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   ~RuntimeShape() {
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t DimensionsCount() const { return size_; }
  78                             		.loc 3 194 44
  79                             	.LBB690:
  80                             	.LBB571:
  81                             		.loc 1 147 5 is_stmt 0
  82 002f ED 07 2B                		mov.L	172[r0], r7
  83 0032 61 27                   		cmp	#2, r7
  84 0034 3B CB 04                		bne	.L8
 148:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const int batches = output_shape.Dims(0);
  85                             		.loc 1 148 5 is_stmt 1
  86                             	.LVL11:
  87                             	.LBB527:
  88                             	.LBB528:
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
  89                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
  90                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
  91                             		.loc 3 198 5
  92                             	.LBE528:
  93                             	.LBE527:
 149:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const int output_depth = output_shape.Dims(1);
 150:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const RuntimeShape filter_shape = tflite::micro::GetTensorShape(filter);
  94                             		.loc 1 150 75 is_stmt 0
  95 0037 72 0F 94 00             		add	#0x94, r0, r15
  96 003b EF B1                   		mov.L	r11, r1
  97                             	.LBB530:
  98                             	.LBB529:
  99                             		.loc 3 198 34
 100 003d ED 0D 2C                		mov.L	176[r0], r13
 101                             	.LVL12:
 102                             	.LBE529:
 103                             	.LBE530:
 149:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const int output_depth = output_shape.Dims(1);
 104                             		.loc 1 149 5 is_stmt 1
 105                             	.LBB531:
 106                             	.LBB532:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 107                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 108                             		.loc 3 197 5
 109                             		.loc 3 198 5
 110                             		.loc 3 198 34 is_stmt 0
 111 0040 ED 07 2D                		mov.L	180[r0], r7
 112                             	.LVL13:
 113                             	.LBE532:
 114                             	.LBE531:
 115                             		.loc 1 150 5 is_stmt 1
 116                             		.loc 1 150 75 is_stmt 0
 117 0043 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 118                             	.LVL14:
 151:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const int filter_dim_count = filter_shape.DimensionsCount();
 119                             		.loc 1 151 5 is_stmt 1
 120                             		.loc 1 151 62 is_stmt 0
 121 0047 ED 05 25                		mov.L	148[r0], r5
 122                             	.LVL15:
 123                             	.LBE571:
 124                             	.LBE690:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 125                             		.loc 3 194 44 is_stmt 1
 126                             	.LBB691:
 127                             	.LBB572:
 152:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const int accum_depth = filter_shape.Dims(filter_dim_count - 1);
 128                             		.loc 1 152 5
 129                             		.loc 1 152 46 is_stmt 0
 130 004a 71 54 FF                		add	#-1, r5, r4
 131                             	.LVL16:
 132                             	.LBB533:
 133                             	.LBB534:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 134                             		.loc 3 196 5 is_stmt 1
 135 004d 26 05 38 B0 04          		bn	.L8
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 136                             		.loc 3 197 5
 137                             		.loc 3 198 5
 138                             		.loc 3 198 34 is_stmt 0
 139 0052 61 55                   		cmp	#5, r5
 140 0054 2B 05 38 18 01          		bgt	.L112
 141 0059 6C 25                   		shll	#2, r5
 142                             	.LVL17:
 143 005b 75 43 1C                		mov.L	#28, r3
 144 005e 4B 03                   		add	r0, r3
 145 0060 4B 35                   		add	r3, r5
 146 0062 AF D3                   		mov.L	120[r5], r3
 147                             		.balign 8,3,2
 148                             	.L10:
 149                             	.LVL18:
 150                             	.LBE534:
 151                             	.LBE533:
 153:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const RuntimeShape input_shape = tflite::micro::GetTensorShape(input);
 152                             		.loc 1 153 5 is_stmt 1
 153                             		.loc 1 153 73 is_stmt 0
 154 0064 71 0F 7C                		add	#0x7c, r0, r15
 155 0067 EF 61                   		mov.L	r6, r1
 156 0069 E7 03 58                		mov.L	r3, 352[r0]
 157 006c 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 158                             	.LVL19:
 154:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 155:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_fc_params fc_params;
 159                             		.loc 1 155 5 is_stmt 1
 156:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.input_offset = -data.input_zero_point;
 160                             		.loc 1 156 5
 161                             		.loc 1 156 30 is_stmt 0
 162 0070 ED 82 06                		mov.L	24[r8], r2
 157:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.output_offset = data.output_zero_point;
 158:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.filter_offset = -data.filter_zero_point;
 163                             		.loc 1 158 31
 164 0073 ED 84 07                		mov.L	28[r8], r4
 159:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.activation.min = data.output_activation_min;
 160:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.activation.max = data.output_activation_max;
 161:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 162:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_per_tensor_quant_params quant_params;
 163:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     quant_params.multiplier = data.output_multiplier;
 164:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     // TODO(b/138810107): Figure out whether output shift should be inverted
 165:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     quant_params.shift = -data.output_shift;
 165                             		.loc 1 165 26
 166 0076 ED 85 01                		mov.L	4[r8], r5
 156:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.output_offset = data.output_zero_point;
 167                             		.loc 1 156 30
 168 0079 7E 12                   		neg	r2
 158:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.activation.min = data.output_activation_min;
 169                             		.loc 1 158 31
 170 007b 7E 14                   		neg	r4
 156:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.output_offset = data.output_zero_point;
 171                             		.loc 1 156 28
 172 007d E7 02 31                		mov.L	r2, 196[r0]
 157:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.filter_offset = -data.filter_zero_point;
 173                             		.loc 1 157 5 is_stmt 1
 157:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.filter_offset = -data.filter_zero_point;
 174                             		.loc 1 157 29 is_stmt 0
 175 0080 E5 80 08 33             		mov.L	32[r8], 204[r0]
 158:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.activation.min = data.output_activation_min;
 176                             		.loc 1 158 5 is_stmt 1
 177                             		.loc 1 165 26 is_stmt 0
 178 0084 7E 15                   		neg	r5
 158:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.activation.min = data.output_activation_min;
 179                             		.loc 1 158 29
 180 0086 E7 04 32                		mov.L	r4, 200[r0]
 159:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.activation.max = data.output_activation_max;
 181                             		.loc 1 159 5 is_stmt 1
 159:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     fc_params.activation.max = data.output_activation_max;
 182                             		.loc 1 159 30 is_stmt 0
 183 0089 E5 80 02 34             		mov.L	8[r8], 208[r0]
 160:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 184                             		.loc 1 160 5 is_stmt 1
 160:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 185                             		.loc 1 160 30 is_stmt 0
 186 008d E5 80 03 35             		mov.L	12[r8], 212[r0]
 162:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     quant_params.multiplier = data.output_multiplier;
 187                             		.loc 1 162 5 is_stmt 1
 163:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     // TODO(b/138810107): Figure out whether output shift should be inverted
 188                             		.loc 1 163 5
 163:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     // TODO(b/138810107): Figure out whether output shift should be inverted
 189                             		.loc 1 163 29 is_stmt 0
 190 0091 E4 80 48                		mov.L	[r8], 288[r0]
 191                             		.loc 1 165 5 is_stmt 1
 192                             		.loc 1 165 24 is_stmt 0
 193 0094 E7 05 49                		mov.L	r5, 292[r0]
 166:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 167:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_dims input_dims;
 194                             		.loc 1 167 5 is_stmt 1
 168:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     input_dims.n = batches;
 195                             		.loc 1 168 5
 196                             		.loc 1 168 18 is_stmt 0
 197 0097 E7 0D 42                		mov.L	r13, 264[r0]
 169:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     input_dims.h = 1;
 198                             		.loc 1 169 5 is_stmt 1
 199                             		.loc 1 169 18 is_stmt 0
 200 009a F9 06 43 01             		mov.L	#1, 268[r0]
 170:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     input_dims.w = 1;
 201                             		.loc 1 170 5 is_stmt 1
 202                             		.loc 1 170 18 is_stmt 0
 203 009e F9 06 44 01             		mov.L	#1, 272[r0]
 171:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     input_dims.c = accum_depth;
 204                             		.loc 1 171 5 is_stmt 1
 205                             		.loc 1 171 18 is_stmt 0
 206 00a2 ED 03 58                		mov.L	352[r0], r3
 207 00a5 E7 03 45                		mov.L	r3, 276[r0]
 172:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 173:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_dims filter_dims;
 208                             		.loc 1 173 5 is_stmt 1
 174:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.n = accum_depth;
 209                             		.loc 1 174 5
 210                             		.loc 1 174 19 is_stmt 0
 211 00a8 E7 03 3E                		mov.L	r3, 248[r0]
 175:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.h = 1;
 212                             		.loc 1 175 5 is_stmt 1
 213                             		.loc 1 175 19 is_stmt 0
 214 00ab F9 06 3F 01             		mov.L	#1, 252[r0]
 176:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.w = 1;
 215                             		.loc 1 176 5 is_stmt 1
 216                             		.loc 1 176 19 is_stmt 0
 217 00af F9 06 40 01             		mov.L	#1, 256[r0]
 177:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.c = output_depth;
 218                             		.loc 1 177 5 is_stmt 1
 219                             		.loc 1 177 19 is_stmt 0
 220 00b3 E7 07 41                		mov.L	r7, 260[r0]
 178:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 179:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_dims bias_dims;
 221                             		.loc 1 179 5 is_stmt 1
 180:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     bias_dims.n = 1;
 222                             		.loc 1 180 5
 223                             		.loc 1 180 17 is_stmt 0
 224 00b6 F9 06 3A 01             		mov.L	#1, 232[r0]
 181:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     bias_dims.h = 1;
 225                             		.loc 1 181 5 is_stmt 1
 226                             		.loc 1 181 17 is_stmt 0
 227 00ba F9 06 3B 01             		mov.L	#1, 236[r0]
 182:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     bias_dims.w = 1;
 228                             		.loc 1 182 5 is_stmt 1
 229                             		.loc 1 182 17 is_stmt 0
 230 00be F9 06 3C 01             		mov.L	#1, 240[r0]
 183:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     bias_dims.c = output_depth;
 231                             		.loc 1 183 5 is_stmt 1
 232                             		.loc 1 183 17 is_stmt 0
 233 00c2 E7 07 3D                		mov.L	r7, 244[r0]
 184:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 185:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_dims output_dims;
 234                             		.loc 1 185 5 is_stmt 1
 186:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     output_dims.n = batches;
 235                             		.loc 1 186 5
 236                             		.loc 1 186 19 is_stmt 0
 237 00c5 E7 0D 36                		mov.L	r13, 216[r0]
 187:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     output_dims.h = 1;
 238                             		.loc 1 187 5 is_stmt 1
 239                             		.loc 1 187 19 is_stmt 0
 240 00c8 F9 06 37 01             		mov.L	#1, 220[r0]
 188:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     output_dims.w = 1;
 241                             		.loc 1 188 5 is_stmt 1
 242                             		.loc 1 188 19 is_stmt 0
 243 00cc F9 06 38 01             		mov.L	#1, 224[r0]
 189:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     output_dims.c = output_depth;
 244                             		.loc 1 189 5 is_stmt 1
 245                             		.loc 1 189 19 is_stmt 0
 246 00d0 E7 07 39                		mov.L	r7, 228[r0]
 190:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 191:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_context ctx;
 247                             		.loc 1 191 5 is_stmt 1
 192:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     ctx.buf = nullptr;
 248                             		.loc 1 192 5
 249                             		.loc 1 192 13 is_stmt 0
 250 00d3 F9 06 46 00             		mov.L	#0, 280[r0]
 193:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     ctx.size = 0;
 251                             		.loc 1 193 5 is_stmt 1
 252                             		.loc 1 193 14 is_stmt 0
 253 00d7 F9 06 47 00             		mov.L	#0, 284[r0]
 194:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 195:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     if (data.buffer_idx > -1) {
 254                             		.loc 1 195 5 is_stmt 1
 255                             		.loc 1 195 14 is_stmt 0
 256 00db ED 82 05                		mov.L	20[r8], r2
 257                             		.loc 1 195 5
 258 00de 61 02                   		cmp	#0, r2
 259 00e0 29 0C                   		blt	.L11
 196:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       ctx.buf = context->GetScratchBuffer(context, data.buffer_idx);
 260                             		.loc 1 196 7 is_stmt 1
 261                             		.loc 1 196 42 is_stmt 0
 262 00e2 ED C7 11                		mov.L	68[r12], r7
 263                             	.LVL20:
 264 00e5 EF C1                   		mov.L	r12, r1
 265 00e7 7F 17                   		jsr	r7
 266                             	.LVL21:
 267                             		.loc 1 196 15
 268 00e9 E7 01 46                		mov.L	r1, 280[r0]
 269                             		.balign 8,3,1
 270                             	.L11:
 197:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     }
 198:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 199:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TF_LITE_ENSURE_EQ(
 271                             		.loc 1 199 5 is_stmt 1
 272                             		.loc 1 199 5
 273                             	.LVL22:
 274                             	.LBB536:
 275                             	.LBB537:
 276                             		.loc 2 61 3 is_stmt 0
 277 00ec 61 06                   		cmp	#0, r6
 278 00ee 3A 11 04                		beq	.L8
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 279                             		.loc 2 62 53
 280 00f1 EC 67                   		mov.L	[r6], r7
 281                             	.LVL23:
 282                             	.LBE537:
 283                             	.LBE536:
 284                             	.LBB538:
 285                             	.LBB539:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 286                             		.loc 2 61 3
 287 00f3 61 0B                   		cmp	#0, r11
 288 00f5 3A 0A 04                		beq	.L8
 289                             		.loc 2 62 53
 290 00f8 EC B5                   		mov.L	[r11], r5
 291                             	.LVL24:
 292                             	.LBE539:
 293                             	.LBE538:
 294                             	.LBB540:
 295                             	.LBB541:
 296 00fa EC A4                   		mov.L	[r10], r4
 297                             	.LVL25:
 298                             	.LBE541:
 299                             	.LBE540:
 300                             	.LBB542:
 301                             	.LBB543:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 302                             		.loc 2 55 28
 303 00fc 61 09                   		cmp	#0, r9
 304 00fe 3A A7 03                		beq	.L12
 305                             	.LVL26:
 306                             	.LBE543:
 307                             	.LBE542:
 308                             		.loc 1 199 5
 309 0101 E4 90 06                		mov.L	[r9], 24[r0]
 310 0104 72 01 D8 00             		add	#0xd8, r0, r1
 311 0108 72 02 E8 00             		add	#0xe8, r0, r2
 312 010c 72 03 F8 00             		add	#0xf8, r0, r3
 313 0110 A1 09                   		mov.L	r1, 20[r0]
 314 0112 A1 04                   		mov.L	r4, 16[r0]
 315 0114 A0 8A                   		mov.L	r2, 12[r0]
 316 0116 A0 85                   		mov.L	r5, 8[r0]
 317 0118 E3 07                   		mov.L	r7, [r0]
 318 011a A0 0B                   		mov.L	r3, 4[r0]
 319 011c 72 04 08 01             		add	#0x108, r0, r4
 320 0120 72 03 20 01             		add	#0x120, r0, r3
 321 0124 72 02 C4 00             		add	#0xc4, r0, r2
 322 0128 72 01 18 01             		add	#0x118, r0, r1
 323 012c 05 00 00 00             		bsr	_arm_fully_connected_s8
 324                             	.LVL27:
 325 0130 61 01                   		cmp	#0, r1
 326 0132 3B 50 02                		bne	.L113
 327                             		.balign 8,3,1
 328                             	.L14:
 329                             	.LVL28:
 330                             	.LBB544:
 331                             	.LBB545:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 332                             		.loc 3 185 5 is_stmt 1
 333 0135 AF 8F                   		mov.L	124[r0], r7
 334 0137 61 57                   		cmp	#5, r7
 335 0139 2B 0C                   		ble	.L19
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 336                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 337                             		.loc 3 189 16 is_stmt 0
 338 013b ED 01 20                		mov.L	128[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 339                             		.loc 3 189 29
 340 013e 61 01                   		cmp	#0, r1
 341 0140 15                      		beq	.L19
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 342                             		.loc 3 189 16
 343 0141 05 00 00 00             		bsr	__ZdaPv
 344                             	.LVL29:
 345                             		.balign 8,3,2
 346                             	.L19:
 347                             	.LBE545:
 348                             	.LBE544:
 349                             	.LBB546:
 350                             	.LBB547:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 351                             		.loc 3 185 5 is_stmt 1
 352 0145 ED 07 25                		mov.L	148[r0], r7
 353 0148 61 57                   		cmp	#5, r7
 354 014a 2B 0E                   		ble	.L20
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 355                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 356                             		.loc 3 189 16 is_stmt 0
 357 014c ED 01 26                		mov.L	152[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 358                             		.loc 3 189 29
 359 014f 61 01                   		cmp	#0, r1
 360 0151 17                      		beq	.L20
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 361                             		.loc 3 189 16
 362 0152 05 00 00 00             		bsr	__ZdaPv
 363                             	.LVL30:
 364 0156 EF 00                   		.balign 8,3,2
 365                             	.L20:
 366                             	.LBE547:
 367                             	.LBE546:
 368                             	.LBB548:
 369                             	.LBB549:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 370                             		.loc 3 185 5 is_stmt 1
 371 0158 ED 07 2B                		mov.L	172[r0], r7
 372 015b 61 57                   		cmp	#5, r7
 373 015d 2B 0C                   		ble	.L50
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 374                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 375                             		.loc 3 189 16 is_stmt 0
 376 015f ED 01 2C                		mov.L	176[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 377                             		.loc 3 189 29
 378 0162 61 01                   		cmp	#0, r1
 379 0164 15                      		beq	.L50
 380                             	.LBE549:
 381                             	.LBE548:
 382                             	.LBE572:
 383                             	.LBB573:
 384                             	.LBB574:
 385                             	.LBB575:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 386                             		.loc 3 189 16
 387 0165 05 00 00 00             		bsr	__ZdaPv
 388                             	.LVL31:
 389                             		.balign 8,3,1
 390                             	.L50:
 391                             	.LBE575:
 392                             	.LBE574:
 393                             	.LBE573:
 394                             	.LBE691:
 200:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context,
 201:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         arm_fully_connected_s8(
 202:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****             &ctx, &fc_params, &quant_params, &input_dims,
 203:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****             tflite::micro::GetTensorData<int8_t>(input), &filter_dims,
 204:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****             tflite::micro::GetTensorData<int8_t>(filter), &bias_dims,
 205:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****             tflite::micro::GetTensorData<int32_t>(bias), &output_dims,
 206:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****             tflite::micro::GetTensorData<int8_t>(output)),
 207:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         ARM_MATH_SUCCESS);
 208:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   } else {
 209:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     tflite::FullyConnectedParams op_params;
 210:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.input_offset = -data.input_zero_point;
 211:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.weights_offset = -data.filter_zero_point;
 212:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.output_offset = data.output_zero_point;
 213:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.output_multiplier = data.output_multiplier;
 214:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     // TODO(b/138810107): Figure out whether output shift should be inverted
 215:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.output_shift = -data.output_shift;
 216:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.quantized_activation_min = data.output_activation_min;
 217:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.quantized_activation_max = data.output_activation_max;
 218:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 219:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     reference_integer_ops::FullyConnected(
 220:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         op_params, tflite::micro::GetTensorShape(input),
 221:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int8_t>(input),
 222:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorShape(filter),
 223:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int8_t>(filter),
 224:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorShape(bias),
 225:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int32_t>(bias),
 226:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorShape(output),
 227:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int8_t>(output));
 228:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   }
 229:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return kTfLiteOk;
 395                             		.loc 1 229 10
 396 0169 66 01                   		mov.L	#0, r1
 230:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
 397                             		.loc 1 230 1
 398 016b 3F 6D 65                		rtsd	#404, r6-r13
 399                             	.LVL32:
 400                             	.L112:
 401                             	.LBB692:
 402                             	.LBB680:
 403                             	.LBB550:
 404                             	.LBB535:
 405                             		.loc 3 198 34
 406 016e ED 05 26                		mov.L	152[r0], r5
 407                             	.LVL33:
 408 0171 FE 64 53                		mov.L	[r4,r5], r3
 409 0174 38 F0 FE                		bra	.L10
 410                             	.LVL34:
 411                             	.L7:
 412                             	.LBE535:
 413                             	.LBE550:
 414                             	.LBE680:
 415                             	.LBB681:
 209:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.input_offset = -data.input_zero_point;
 416                             		.loc 1 209 5 is_stmt 1
 210:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.weights_offset = -data.filter_zero_point;
 417                             		.loc 1 210 5
 215:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.quantized_activation_min = data.output_activation_min;
 418                             		.loc 1 215 36 is_stmt 0
 419 0177 E5 20 01 4D             		mov.L	4[r2], 308[r0]
 220:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int8_t>(input),
 420                             		.loc 1 220 49
 421 017b 75 4F 1C                		mov.L	#28, r15
 422 017e 4B 0F                   		add	r0, r15
 423 0180 EF 31                   		mov.L	r3, r1
 424                             	.LVL35:
 210:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.weights_offset = -data.filter_zero_point;
 425                             		.loc 1 210 36
 426 0182 E5 20 06 52             		mov.L	24[r2], 328[r0]
 211:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.output_offset = data.output_zero_point;
 427                             		.loc 1 211 5 is_stmt 1
 211:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.output_offset = data.output_zero_point;
 428                             		.loc 1 211 38 is_stmt 0
 429 0186 E5 20 07 53             		mov.L	28[r2], 332[r0]
 212:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.output_multiplier = data.output_multiplier;
 430                             		.loc 1 212 5 is_stmt 1
 212:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.output_multiplier = data.output_multiplier;
 431                             		.loc 1 212 36 is_stmt 0
 432 018a E5 20 08 54             		mov.L	32[r2], 336[r0]
 213:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     // TODO(b/138810107): Figure out whether output shift should be inverted
 433                             		.loc 1 213 5 is_stmt 1
 213:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     // TODO(b/138810107): Figure out whether output shift should be inverted
 434                             		.loc 1 213 40 is_stmt 0
 435 018e EC 2C                   		mov.L	[r2], r12
 215:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.quantized_activation_min = data.output_activation_min;
 436                             		.loc 1 215 5 is_stmt 1
 215:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.quantized_activation_min = data.output_activation_min;
 437                             		.loc 1 215 30 is_stmt 0
 438 0190 ED 07 4D                		mov.L	308[r0], r7
 439 0193 7E 17                   		neg	r7
 216:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.quantized_activation_max = data.output_activation_max;
 440                             		.loc 1 216 5 is_stmt 1
 216:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     op_params.quantized_activation_max = data.output_activation_max;
 441                             		.loc 1 216 47 is_stmt 0
 442 0195 E5 20 02 4A             		mov.L	8[r2], 296[r0]
 217:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 443                             		.loc 1 217 5 is_stmt 1
 217:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 444                             		.loc 1 217 47 is_stmt 0
 445 0199 E5 20 03 4F             		mov.L	12[r2], 316[r0]
 219:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         op_params, tflite::micro::GetTensorShape(input),
 446                             		.loc 1 219 5 is_stmt 1
 220:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int8_t>(input),
 447                             		.loc 1 220 49 is_stmt 0
 448 019d 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 449                             	.LVL36:
 450                             	.LBB577:
 451                             	.LBB578:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 452                             		.loc 2 61 3
 453 01a1 61 06                   		cmp	#0, r6
 454 01a3 3A 5C 03                		beq	.L8
 455                             	.LBE578:
 456                             	.LBE577:
 222:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int8_t>(filter),
 457                             		.loc 1 222 38
 458 01a6 71 0F 34                		add	#52, r0, r15
 459 01a9 EF B1                   		mov.L	r11, r1
 460                             	.LBB580:
 461                             	.LBB579:
 462                             		.loc 2 62 53
 463 01ab EC 66                   		mov.L	[r6], r6
 464                             	.LVL37:
 465                             	.LBE579:
 466                             	.LBE580:
 222:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int8_t>(filter),
 467                             		.loc 1 222 38
 468 01ad 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 469                             	.LVL38:
 470                             	.LBB581:
 471                             	.LBB582:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 472                             		.loc 2 61 3
 473 01b1 61 0B                   		cmp	#0, r11
 474 01b3 3A 4C 03                		beq	.L8
 475                             	.LBE582:
 476                             	.LBE581:
 224:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int32_t>(bias),
 477                             		.loc 1 224 38
 478 01b6 71 0F 4C                		add	#0x4c, r0, r15
 479 01b9 EF A1                   		mov.L	r10, r1
 480                             	.LBB584:
 481                             	.LBB583:
 482                             		.loc 2 62 53
 483 01bb E4 B0 55                		mov.L	[r11], 340[r0]
 484                             	.LVL39:
 485                             	.LBE583:
 486                             	.LBE584:
 224:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int32_t>(bias),
 487                             		.loc 1 224 38
 488 01be 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 489                             	.LVL40:
 226:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int8_t>(output));
 490                             		.loc 1 226 38
 491 01c2 71 0F 64                		add	#0x64, r0, r15
 492 01c5 EF 91                   		mov.L	r9, r1
 493                             	.LBB585:
 494                             	.LBB586:
 495                             		.loc 2 62 53
 496 01c7 E4 A0 4B                		mov.L	[r10], 300[r0]
 497                             	.LVL41:
 498                             	.LBE586:
 499                             	.LBE585:
 226:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         tflite::micro::GetTensorData<int8_t>(output));
 500                             		.loc 1 226 38
 501 01ca 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 502                             	.LVL42:
 503                             	.LBB587:
 504                             	.LBB588:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 505                             		.loc 2 55 28
 506 01ce 61 09                   		cmp	#0, r9
 507 01d0 13                      		beq	.L22
 508 01d1 EC 99                   		mov.L	[r9], r9
 509                             	.LVL43:
 510                             		.balign 8,3,1
 511                             	.L22:
 512                             	.LBE588:
 513                             	.LBE587:
 514                             	.LBB589:
 515                             	.LBB590:
 516                             		.file 4 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_INTEGER_OPS_FULLY_CONNECTED_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_INTEGER_OPS_FULLY_CONNECTED_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** #include "tensorflow/lite/kernels/internal/common.h"
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** namespace tflite {
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** namespace reference_integer_ops {
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** inline void FullyConnected(
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     const FullyConnectedParams& params, const RuntimeShape& input_shape,
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     const int8_t* input_data, const RuntimeShape& filter_shape,
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     const int8_t* filter_data, const RuntimeShape& bias_shape,
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     const int32_t* bias_data, const RuntimeShape& output_shape,
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     int8_t* output_data) {
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int32_t input_offset = params.input_offset;
 517                             		.loc 4 29 3 is_stmt 1
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int32_t filter_offset = params.weights_offset;
 518                             		.loc 4 30 3
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int32_t output_offset = params.output_offset;
 519                             		.loc 4 31 3
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int32_t output_multiplier = params.output_multiplier;
 520                             		.loc 4 32 3
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int output_shift = params.output_shift;
 521                             		.loc 4 33 3
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int32_t output_activation_min = params.quantized_activation_min;
 522                             		.loc 4 34 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int32_t output_activation_max = params.quantized_activation_max;
 523                             		.loc 4 35 3
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   TFLITE_DCHECK_GE(filter_shape.DimensionsCount(), 2);
 524                             		.loc 4 36 3
 525 01d3 ED 0A 0D                		mov.L	52[r0], r10
 526                             	.LVL44:
 527                             	.LBE590:
 528                             	.LBE589:
 529                             	.LBE681:
 530                             	.LBE692:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 531                             		.loc 3 194 44
 532                             	.LBB693:
 533                             	.LBB682:
 534                             	.LBB668:
 535                             	.LBB663:
 536                             		.loc 4 36 3 is_stmt 0
 537 01d6 61 1A                   		cmp	#1, r10
 538 01d8 2A 05 38 25 03          		ble	.L8
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 2);
 539                             		.loc 4 37 3 is_stmt 1
 540                             	.LVL45:
 541                             	.LBE663:
 542                             	.LBE668:
 543                             	.LBE682:
 544                             	.LBE693:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 545                             		.loc 3 194 44
 546                             	.LBB694:
 547                             	.LBB683:
 548                             	.LBB669:
 549                             	.LBB664:
 550                             		.loc 4 37 3 is_stmt 0
 551 01dd AE 0D                   		mov.L	100[r0], r5
 552 01df 61 25                   		cmp	#2, r5
 553 01e1 3B 1E 03                		bne	.L8
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h **** 
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   TFLITE_DCHECK_LE(output_activation_min, output_activation_max);
 554                             		.loc 4 39 3 is_stmt 1
 555 01e4 ED 04 4A                		mov.L	296[r0], r4
 556 01e7 ED 05 4F                		mov.L	316[r0], r5
 557 01ea 47 54                   		cmp	r5, r4
 558 01ec 2B 05 38 11 03          		bgt	.L8
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int filter_dim_count = filter_shape.DimensionsCount();
 559                             		.loc 4 40 3
 560                             	.LVL46:
 561                             	.LBE664:
 562                             	.LBE669:
 563                             	.LBE683:
 564                             	.LBE694:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 565                             		.loc 3 194 44
 566                             	.LBB695:
 567                             	.LBB684:
 568                             	.LBB670:
 569                             	.LBB665:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int batches = output_shape.Dims(0);
 570                             		.loc 4 41 3
 571                             	.LBB591:
 572                             	.LBB592:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 573                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 574                             		.loc 3 197 5
 575                             		.loc 3 198 5
 576                             		.loc 3 198 34 is_stmt 0
 577 01f1 E5 00 1A 50             		mov.L	104[r0], 320[r0]
 578                             	.LVL47:
 579                             	.LBE592:
 580                             	.LBE591:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int output_depth = output_shape.Dims(1);
 581                             		.loc 4 42 3 is_stmt 1
 582                             	.LBB593:
 583                             	.LBB594:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 584                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 585                             		.loc 3 197 5
 586                             		.loc 3 198 5
 587                             		.loc 3 198 34 is_stmt 0
 588 01f5 ED 0B 1B                		mov.L	108[r0], r11
 589                             	.LVL48:
 590                             	.LBE594:
 591                             	.LBE593:
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   TFLITE_DCHECK_LE(output_depth, filter_shape.Dims(filter_dim_count - 2));
 592                             		.loc 4 43 3 is_stmt 1
 593 01f8 71 A5 FE                		add	#-2, r10, r5
 594                             	.LVL49:
 595                             	.LBB595:
 596                             	.LBB596:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 597                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 598                             		.loc 3 197 5
 599                             		.loc 3 198 5
 600                             		.loc 3 198 34 is_stmt 0
 601 01fb 61 5A                   		cmp	#5, r10
 602 01fd 2B 05 38 20 02          		bgt	.L114
 603                             	.LVL50:
 604 0202 71 A5 FF                		add	#-1, r10, r5
 605 0205 6C 25                   		shll	#2, r5
 606 0207 75 4E 1C                		mov.L	#28, r14
 607 020a 4B 0E                   		add	r0, r14
 608                             	.LVL51:
 609 020c 4B E5                   		add	r14, r5
 610                             	.LBE596:
 611                             	.LBE595:
 612                             		.loc 4 43 3
 613 020e A9 D5                   		mov.L	24[r5], r5
 614 0210 47 B5                   		cmp	r11, r5
 615 0212 28 05 38 EB 02          		blt	.L8
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int accum_depth = filter_shape.Dims(filter_dim_count - 1);
 616                             		.loc 4 44 3 is_stmt 1
 617                             	.LVL52:
 618                             	.LBB598:
 619                             	.LBB599:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 620                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 621                             		.loc 3 197 5
 622                             		.loc 3 198 5
 623                             		.loc 3 198 34 is_stmt 0
 624 0217 6C 2A                   		shll	#2, r10
 625                             	.LVL53:
 626 0219 75 43 1C                		mov.L	#28, r3
 627 021c 4B 03                   		add	r0, r3
 628 021e 4B 3A                   		add	r3, r10
 629 0220 ED AA 06                		mov.L	24[r10], r10
 630                             	.LVL54:
 631                             		.balign 8,3,2
 632                             	.L56:
 633                             	.LBE599:
 634                             	.LBE598:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   for (int b = 0; b < batches; ++b) {
 635                             		.loc 4 45 3 is_stmt 1
 636                             	.LBB601:
 637                             		.loc 4 45 21 is_stmt 0
 638 0223 ED 0F 50                		mov.L	320[r0], r15
 639 0226 61 0F                   		cmp	#0, r15
 640 0228 2A 05 38 23 01          		ble	.L27
 641 022d ED 03 4D                		mov.L	308[r0], r3
 642 0230 FD 74 43 00             		max	#0, r3
 643 0234 E7 03 4E                		mov.L	r3, 312[r0]
 644                             	.LBB602:
 645                             	.LBB603:
 646                             	.LBB604:
 647                             	.LBB605:
 648                             	.LBB606:
 649                             	.LBB607:
 650                             		.file 5 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\thi
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Copyright 2015 The Gemmlowp Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // fixedpoint.h: fixed-point arithmetic, with basic operations and
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // a few math functions such as tanh.
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #ifndef GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <algorithm>
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cassert>
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cmath>
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cstdint>
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <limits>
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include "../internal/detect_platform.h"
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** namespace gemmlowp {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Part 1: Low-level integer-arithmetic primitives.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The implementations here are generic implementations valid for
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // scalar types (e.g. std::int32_t). Architecture-specific SIMD types
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // (e.g. NEON int32x4_t) may be supported by providing
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // specializations for them in separate files.
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The purpose of these primitives is two-fold:
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be used to implement higher-level fixed-point
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    abstractions, namely the FixedPoint class and its arithmetic
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    operators.
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be directly used to implement some more involved
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    fixed-point computations, e.g. the fixed-point implementation
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    of math functions such as tanh.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Some compile-time traits around raw types to handle SIMD aspects:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // number of lanes, underlying scalar type.
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits {};
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int32_t> {
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int32_t ScalarRawType;
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int16_t> {
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int16_t ScalarRawType;
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns a SIMD value duplicating a scalar value across all lanes.
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tRawType Dup(typename FixedPointRawTypeTraits<tRawType>::ScalarRawType x) {
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return x;
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise AND
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitAnd(tIntegerType a, tIntegerType b) {
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a & b;
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise OR
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitOr(tIntegerType a, tIntegerType b) {
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a | b;
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise XOR
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitXor(tIntegerType a, tIntegerType b) {
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a ^ b;
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise NOT
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitNot(tIntegerType a) {
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return ~a;
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer addition. Not saturating. Overflow is undefined behavior.
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Add(tIntegerType a, tIntegerType b) {
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a + b;
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer multiplication. Not saturating. Overflow is undefined behavior.
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Mul(tIntegerType a, tIntegerType b) {
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a * b;
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer subtraction. Not saturating. Overflow is undefined behavior.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Sub(tIntegerType a, tIntegerType b) {
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a - b;
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer unary negative. Not saturating. Overflow is undefined behavior.
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Neg(tIntegerType a) {
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return -a;
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic left-shift, equivalent to multiplying with a power of two.
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Negative values are OK. In case of overflow, no Undefined
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Behavior, but the results are implementation-defined (in practice,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // they currently are saturated, but we make no commitment to that). The idea
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // is that the caller will want to implement the overflowing cases with
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // saturation with compare-and-mask, so we don't care about the results
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // in the overflow case, we just want to avoid undefined behavior.
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerType may be int32 or any narrower signed type.
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType, typename OffsetType>
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftLeft(tIntegerType a, OffsetType offset) {
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_a = static_cast<std::int64_t>(a);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_shifted = wide_a * (1 << offset);
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const auto max = std::numeric_limits<tIntegerType>::max();
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return wide_shifted < min
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              ? min
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic right-shift. Not rounding.
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Relying on implementation-defined, but in-practice-consistent,
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // C++ compiler behavior.
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftRight(tIntegerType a, int offset) {
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a >> offset;
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Each bit of the result is set to the corresponding bit of either then_val or
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // else_val depending on whether the corresponding bit of if_mask is set.
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to the VBSL instruction in ARM NEON.
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType SelectUsingMask(tIntegerType if_mask, tIntegerType then_val,
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                              tIntegerType else_val) {
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return BitXor(BitAnd(if_mask, then_val), BitAnd(BitNot(if_mask), else_val));
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is non-zero.
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNonZero(tIntegerType a) {
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr tIntegerType zero = 0;
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a ? BitNot(zero) : zero;
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is zero.
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfZero(tIntegerType a) {
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(!a);
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are equal.
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfEqual(tIntegerType a, tIntegerType b) {
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a == b);
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are not equal.
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNotEqual(tIntegerType a, tIntegerType b) {
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a != b);
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a > b.
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThan(tIntegerType a, tIntegerType b) {
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a > b);
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a >= b.
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThanOrEqual(tIntegerType a, tIntegerType b) {
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a >= b);
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a < b.
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThan(tIntegerType a, tIntegerType b) {
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a < b);
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a <= b.
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThanOrEqual(tIntegerType a, tIntegerType b) {
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a <= b);
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if all of the input scalars are nonzero.
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool All(tIntegerType a) {
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if any of the input scalars are nonzero.
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool Any(tIntegerType a) {
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns (a+b)/2, rounded to the nearest integer.
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to VRHADD in the ARM NEON instruction set.
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType RoundingHalfSum(IntegerType a, IntegerType b) {
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t RoundingHalfSum(std::int32_t a, std::int32_t b) {
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a64 = a;
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sum = a64 + b64;
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sign = sum >= 0 ? 1 : -1;
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t RoundingHalfSum(std::int16_t a, std::int16_t b) {
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sign = sum >= 0 ? 1 : -1;
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingAdd(IntegerType a, IntegerType b) {
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // So far this is only needed for int16.
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingAdd(std::int16_t a, std::int16_t b) {
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                std::max(static_cast<std::int32_t>(-32768), sum)));
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int8_t SaturatingAdd(std::int8_t a, std::int8_t b) {
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t a16 = a;
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t b16 = b;
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t sum = a16 + b16;
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int8_t>(std::min(
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<int16_t>(std::numeric_limits<int8_t>::max()),
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::max(static_cast<int16_t>(std::numeric_limits<int8_t>::min()), sum)));
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns a+b, saturating if the integers are 16bit or narrower,
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // otherwise just a plain addition.
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, bool Is16Bit>
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl {
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) { return Add(a, b); }
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 288:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 289:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl<IntegerType, true> {
 290:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) {
 291:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return SaturatingAdd(a, b);
 292:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 293:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 294:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 295:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType AddSaturatingIf16Bit(IntegerType a, IntegerType b) {
 296:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   using ScalarType =
 297:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 298:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16BitImpl<IntegerType, sizeof(ScalarType) == 2>::Run(a,
 299:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                                              b);
 300:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 301:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 302:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns the integer that represents the product of two fixed-point
 303:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // numbers, interpreting all integers as fixed-point values in the
 304:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1), rounding to the nearest value, and saturating
 305:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // -1 * -1 to the maximum value (since 1 is not in the half-open
 306:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1)).
 307:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 308:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // [The explanation below specializes to std::int32_t for example purpose.]
 309:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 310:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The mapping between IntegerType and the interval [-1, 1) is unique and
 311:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // implied by IntegerType, which is assumed to be signed. For example,
 312:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // for IntegerType==std::int32_t, the mapping is
 313:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   real_value = integer_value / 2^31.
 314:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // So in this case, and leaving aside rounding and saturating, this
 315:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // function computes ((a / 2^31) * (b / 2^31)) * 2^31, which simplifies to
 316:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^31.
 317:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 318:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The 'doubling' part in the name of this function comes from the fact that
 319:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // this operation is very close to a "multiply-high" operation, keeping only
 320:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // the top half bits, except that that would be effectively computing
 321:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^32,
 322:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // so here we are computing 2x that, since
 323:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   1/2^31 = 2 * 1/2^32.
 324:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The idea is to use all of the available 32 bits in the destination int32
 325:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // value.
 326:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 327:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // [End of the explanation specializing to int32.]
 328:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 329:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This is equivalent to the VQRDMULH instruction in ARM NEON.
 330:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 331:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingDoublingHighMul(IntegerType a, IntegerType b) {
 332:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 333:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 334:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 335:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 336:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 337:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function implements the same computation as the ARMv7 NEON VQRDMULH
 338:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // instruction.
 339:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 340:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t SaturatingRoundingDoublingHighMul(std::int32_t a,
 341:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int32_t b) {
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int32_t>::min();
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 350:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 351:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 352:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 353:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingRoundingDoublingHighMul(std::int16_t a,
 354:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int16_t b) {
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int16_t>::min();
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 363:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 364:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 365:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Correctly-rounded-to-nearest division by a power-of-two.
 366:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Also known as a rounding arithmetic right shift.
 367:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, typename ExponentType>
 368:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline IntegerType RoundingDivideByPOT(IntegerType x, ExponentType exponent) {
 369:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent >= 0);
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 651                             		.loc 5 371 50
 652 0237 EF 35                   		mov.L	r3, r5
 653 0239 71 55 E0                		add	#-32, r5
 654 023c 26 05 38 5F 02          		bn	.L28
 655 0241 66 05                   		mov.L	#0, r5
 656                             		.balign 8,3,1
 657                             	.L29:
 658                             		.loc 5 371 63
 659 0243 60 15                   		sub	#1, r5
 660 0245 E7 05 51                		mov.L	r5, 324[r0]
 661 0248 EF 91                   		mov.L	r9, r1
 662                             	.LBB608:
 663                             	.LBB609:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 664                             		.loc 5 142 15
 665 024a 6A 15                   		shar	#1, r5
 666 024c E7 05 56                		mov.L	r5, 344[r0]
 667 024f FD 74 47 00             		max	#0, r7
 668                             	.LVL55:
 669 0253 E7 07 57                		mov.L	r7, 348[r0]
 670                             	.LBE609:
 671                             	.LBE608:
 672                             	.LBE607:
 673                             	.LBE606:
 674                             	.LBE605:
 675                             	.LBE604:
 676                             	.LBE603:
 677                             	.LBE602:
 678                             		.loc 4 45 12
 679 0256 66 08                   		mov.L	#0, r8
 680                             	.LVL56:
 681                             		.balign 8,3,1
 682                             	.L32:
 683                             	.LBB656:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 684                             		.loc 4 46 31
 685 0258 61 0B                   		cmp	#0, r11
 686 025a 2A 05 38 D4 00          		ble	.L45
 687 025f ED 0D 55                		mov.L	340[r0], r13
 688 0262 EF 12                   		mov.L	r1, r2
 689                             		.loc 4 46 14
 690 0264 66 09                   		mov.L	#0, r9
 691                             	.LBB649:
 692                             	.LBB638:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       int32_t acc = 0;
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 693                             		.loc 4 48 25
 694 0266 FF 27 6A                		add	r6, r10, r7
 695 0269 E7 07 4C                		mov.L	r7, 304[r0]
 696                             	.LBE638:
 697                             	.LBE649:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 698                             		.loc 4 46 31
 699 026c FF 2E 1B                		add	r1, r11, r14
 700 026f E7 0E 59                		mov.L	r14, 356[r0]
 701                             	.LVL57:
 702                             		.balign 8,3,1
 703                             	.L33:
 704                             	.LBB650:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       int32_t acc = 0;
 705                             		.loc 4 47 7 is_stmt 1
 706                             		.loc 4 48 7
 707                             	.LBB640:
 708                             		.loc 4 48 25 is_stmt 0
 709 0272 61 0A                   		cmp	#0, r10
 710 0274 2A 05 38 D4 01          		ble	.L57
 711                             		.balign 8,3,1
 712                             	.L118:
 713 0279 EF D3                   		mov.L	r13, r3
 714 027b EF 64                   		mov.L	r6, r4
 715                             	.LBE640:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       int32_t acc = 0;
 716                             		.loc 4 47 15
 717 027d 66 07                   		mov.L	#0, r7
 718 027f E7 0A 5A                		mov.L	r10, 360[r0]
 719 0282 ED 0E 59                		mov.L	356[r0], r14
 720                             	.LVL58:
 721 0285 FC 13 00                		.balign 8,3,5
 722                             	.L35:
 723                             	.LBB641:
 724                             	.LBB639:
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 725                             		.loc 4 49 9 is_stmt 1
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****         int32_t filter_val = filter_data[out_c * accum_depth + d];
 726                             		.loc 4 50 9
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****         acc += (filter_val + filter_offset) * (input_val + input_offset);
 727                             		.loc 4 51 9
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****         int32_t filter_val = filter_data[out_c * accum_depth + d];
 728                             		.loc 4 50 17 is_stmt 0
 729 0288 FD 28 35                		mov.B	[r3+], r5
 730                             	.LVL59:
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 731                             		.loc 4 49 17
 732 028b FD 28 4F                		mov.B	[r4+], r15
 733                             	.LVL60:
 734                             		.loc 4 51 45
 735 028e ED 0A 53                		mov.L	332[r0], r10
 736 0291 43 A5                   		sub	r10, r5
 737                             	.LVL61:
 738 0293 ED 0A 52                		mov.L	328[r0], r10
 739 0296 43 AF                   		sub	r10, r15
 740                             	.LVL62:
 741 0298 4F F5                   		mul	r15, r5
 742                             		.loc 4 51 13
 743 029a 4B 57                   		add	r5, r7
 744                             	.LVL63:
 745                             	.LBE639:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 746                             		.loc 4 48 25
 747 029c ED 0F 4C                		mov.L	304[r0], r15
 748 029f 47 F4                   		cmp	r15, r4
 749 02a1 21 E7                   		bne	.L35
 750 02a3 ED 0A 5A                		mov.L	360[r0], r10
 751 02a6 E7 0E 59                		mov.L	r14, 356[r0]
 752                             	.LVL64:
 753                             		.balign 8,3,2
 754                             	.L34:
 755                             	.LBE641:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       }
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       if (bias_data) {
 756                             		.loc 4 53 7 is_stmt 1
 757 02a9 ED 03 4B                		mov.L	300[r0], r3
 758 02ac 61 03                   		cmp	#0, r3
 759 02ae 12                      		beq	.L36
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****         acc += bias_data[out_c];
 760                             		.loc 4 54 9
 761                             		.loc 4 54 13 is_stmt 0
 762 02af FD C2 95                		shll	#2, r9, r5
 763 02b2 4B 35                   		add	r3, r5
 764 02b4 06 88 57                		add	[r5].L, r7
 765                             	.LVL65:
 766 02b7 03                      		.balign 8,3,2
 767                             	.L36:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       }
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       acc = MultiplyByQuantizedMultiplier(acc, output_multiplier, output_shift);
 768                             		.loc 4 56 7 is_stmt 1
 769                             	.LBB642:
 770                             	.LBB634:
 771                             		.file 6 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifndef ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifdef GEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #define ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include <functional>
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "fixedpoint/fixedpoint.h"
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/types.h"
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** namespace tflite {
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** constexpr int kReverseShift = -1;
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline void GetActivationMinMax(FusedActivationFunctionType ac,
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_min,
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_max) {
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   switch (ac) {
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kNone:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = std::numeric_limits<float>::lowest();
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu:
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu1:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = -1.f;
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 1.f;
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu6:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 6.f;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** template <typename T>
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline T ActivationFunctionWithMinMax(T x, T output_activation_min,
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                       T output_activation_max) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using std::max;
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using std::min;
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return min(max(x, output_activation_min), output_activation_max);
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** // Legacy function, left for compatibility only.
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** template <FusedActivationFunctionType Ac>
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** float ActivationFunction(float x) {
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float output_activation_min, output_activation_max;
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   GetActivationMinMax(Ac, &output_activation_min, &output_activation_max);
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return ActivationFunctionWithMinMax(x, output_activation_min,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                       output_activation_max);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                          const float* bias_data, int array_size,
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                          float* array_data) {
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // Note: see b/132215220: in May 2019 we thought it would be OK to replace
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // this with the Eigen one-liner:
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   //   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // This turned out to severely regress performance: +4ms (i.e. 8%) on
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // MobileNet v2 / 1.0 / 224. So we keep custom NEON code for now.
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   TFLITE_DCHECK_EQ((array_size % bias_size), 0);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifdef USE_NEON
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float* array_ptr = array_data;
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float* array_end_ptr = array_ptr + array_size;
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_min_vec = vdupq_n_f32(clamp_min);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_max_vec = vdupq_n_f32(clamp_max);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   for (; array_ptr != array_end_ptr; array_ptr += bias_size) {
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int i = 0;
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 16; i += 16) {
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b0 = vld1q_f32(bias_data + i);
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b1 = vld1q_f32(bias_data + i + 4);
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b2 = vld1q_f32(bias_data + i + 8);
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b3 = vld1q_f32(bias_data + i + 12);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a0 = vld1q_f32(array_ptr + i);
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a1 = vld1q_f32(array_ptr + i + 4);
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a2 = vld1q_f32(array_ptr + i + 8);
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a3 = vld1q_f32(array_ptr + i + 12);
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x0 = vaddq_f32(a0, b0);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x1 = vaddq_f32(a1, b1);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x2 = vaddq_f32(a2, b2);
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x3 = vaddq_f32(a3, b3);
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x0 = vmaxq_f32(clamp_min_vec, x0);
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x1 = vmaxq_f32(clamp_min_vec, x1);
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x2 = vmaxq_f32(clamp_min_vec, x2);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x3 = vmaxq_f32(clamp_min_vec, x3);
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x0 = vminq_f32(clamp_max_vec, x0);
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x1 = vminq_f32(clamp_max_vec, x1);
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x2 = vminq_f32(clamp_max_vec, x2);
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x3 = vminq_f32(clamp_max_vec, x3);
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x0);
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 4, x1);
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 8, x2);
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 12, x3);
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 4; i += 4) {
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b = vld1q_f32(bias_data + i);
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a = vld1q_f32(array_ptr + i);
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x = vaddq_f32(a, b);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x = vmaxq_f32(clamp_min_vec, x);
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x = vminq_f32(clamp_max_vec, x);
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x);
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i < bias_size; i++) {
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       array_ptr[i] = ActivationFunctionWithMinMax(array_ptr[i] + bias_data[i],
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                                   clamp_min, clamp_max);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #else  // not NEON
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   for (int array_offset = 0; array_offset < array_size;
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****        array_offset += bias_size) {
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (int i = 0; i < bias_size; i++) {
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       array_data[array_offset + i] = ActivationFunctionWithMinMax(
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****           array_data[array_offset + i] + bias_data[i], clamp_min, clamp_max);
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierSmallerThanOneExp(
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       SaturatingRoundingDoublingHighMul(x, quantized_multiplier), -left_shift);
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierGreaterThanOne(
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return SaturatingRoundingDoublingHighMul(x * (1 << left_shift),
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                            quantized_multiplier);
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplier(int32_t x,
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                              int32_t quantized_multiplier,
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                              int shift) {
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 772                             		.loc 6 159 3
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 773                             		.loc 6 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 774                             		.loc 6 161 3
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 775                             		.loc 6 162 3
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 776                             		.loc 6 163 3
 777                             		.loc 6 163 29 is_stmt 0
 778 02b8 ED 04 57                		mov.L	348[r0], r4
 779 02bb FD 62 47                		shll	r4, r7
 780                             	.LVL66:
 781                             	.LBB626:
 782                             	.LBB627:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 783                             		.loc 5 342 3 is_stmt 1
 784 02be EF 7E                   		mov.L	r7, r14
 785 02c0 FC 1B CE                		emul	r12, r14
 786 02c3 EF E4                   		mov.L	r14, r4
 787 02c5 EF F5                   		mov.L	r15, r5
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 788                             		.loc 5 342 26 is_stmt 0
 789 02c7 47 7C                   		cmp	r7, r12
 790 02c9 3A AC 01                		beq	.L115
 791                             	.LVL67:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 792                             		.loc 5 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 793                             		.loc 5 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 794                             		.loc 5 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 795                             		.loc 5 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 796                             		.loc 5 346 35 is_stmt 0
 797 02cc 61 0F                   		cmp	#0, r15
 798 02ce 28 05 38 7F 01          		blt	.L116
 799                             	.LVL68:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 800                             		.loc 5 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 801                             		.loc 5 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 802                             		.loc 5 348 40 is_stmt 0
 803 02d3 EF 57                   		mov.L	r5, r7
 804 02d5 70 43 00 00 00 40       		add	#0x40000000, r4, r3
 805 02db FD 74 27 00             		adc	#0, r7
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 806                             		.loc 5 348 49
 807 02df 6C 17                   		shll	#1, r7
 808 02e1 FD 9F 35                		shlr	#31, r3, r5
 809 02e4 57 57                   		or	r5, r7
 810                             	.LVL69:
 811 02e6 EF 00                   		.balign 8,3,2
 812                             	.L40:
 813                             	.LBE627:
 814                             	.LBE626:
 815                             	.LBB629:
 816                             	.LBB622:
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 817                             		.loc 5 370 3
 818 02e8 ED 05 4D                		mov.L	308[r0], r5
 819 02eb 75 55 1F                		cmp	#31, r5
 820 02ee 2B 05 38 F5 01          		bgt	.L117
 821                             	.LVL70:
 822                             	.LBE622:
 823                             	.LBE629:
 824                             	.LBE634:
 825                             	.LBE642:
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       acc += output_offset;
 826                             		.loc 4 57 7 is_stmt 1
 827                             	.LBB643:
 828                             	.LBB635:
 829                             	.LBB630:
 830                             	.LBB623:
 831                             	.LBB610:
 832                             	.LBB611:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 833                             		.loc 5 71 14 is_stmt 0
 834 02f3 FD 9F 74                		shlr	#31, r7, r4
 835                             	.LBE611:
 836                             	.LBE610:
 837                             	.LBB612:
 838                             	.LBB613:
 839 02f6 ED 05 51                		mov.L	324[r0], r5
 840 02f9 53 75                   		and	r7, r5
 841                             	.LVL71:
 842                             	.LBE613:
 843                             	.LBE612:
 844                             	.LBB614:
 845                             	.LBB615:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 846                             		.loc 5 95 14
 847 02fb 06 89 04 56             		add	344[r0], r4
 848                             	.LBE615:
 849                             	.LBE614:
 850                             	.LBB616:
 851                             	.LBB617:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 852                             		.loc 5 142 15
 853 02ff ED 0E 4E                		mov.L	312[r0], r14
 854 0302 FD 61 E7                		shar	r14, r7
 855                             	.LVL72:
 856                             	.LBE617:
 857                             	.LBE616:
 858                             	.LBB618:
 859                             	.LBB619:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 860                             		.loc 5 71 14
 861 0305 47 45                   		cmp	r4, r5
 862 0307 FC DB 5A                		scgt.L	r5
 863                             	.LVL73:
 864                             	.LBE619:
 865                             	.LBE618:
 866                             	.LBB620:
 867                             	.LBB621:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 868                             		.loc 5 95 14
 869 030a 4B 57                   		add	r5, r7
 870                             	.LBE621:
 871                             	.LBE620:
 872                             	.LBE623:
 873                             	.LBE630:
 874                             	.LBE635:
 875                             	.LBE643:
 876                             		.loc 4 57 11
 877 030c 06 89 07 54             		add	336[r0], r7
 878                             	.LVL74:
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       acc = std::max(acc, output_activation_min);
 879                             		.loc 4 58 7 is_stmt 1
 880                             	.LBB644:
 881                             	.LBB645:
 882                             		.file 7 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3.
   1:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
   3:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Copyright (C) 2001-2018 Free Software Foundation, Inc.
   4:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** //
   5:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // any later version.
  10:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  11:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  16:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  20:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  25:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** /*
  26:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  27:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  30:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  38:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  39:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  42:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  */
  50:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  51:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  */
  55:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  56:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  59:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  73:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** {
  75:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  77:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #if __cplusplus < 201103L
  78:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<bool _BoolType>
  82:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     struct __iter_swap
  83:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
  84:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	static void
  86:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	{
  88:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	    _ValueType1;
  90:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
  91:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  *__a = *__b;
  92:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  *__b = __tmp;
  93:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	}
  94:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     };
  95:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  96:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<>
  97:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     struct __iter_swap<true>
  98:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
  99:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	static void
 101:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	{
 103:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 104:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	}
 105:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     };
 106:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #endif
 107:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 108:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 109:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 112:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 113:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   Nothing.
 114:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 115:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  iterators themselves.
 117:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 118:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     inline void
 120:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 122:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 123:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 125:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 127:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 128:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #if __cplusplus < 201103L
 129:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ValueType1;
 131:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ValueType2;
 133:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 134:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ValueType2>)
 136:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ValueType1>)
 138:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 139:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ReferenceType1;
 141:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ReferenceType2;
 143:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 147:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #else
 148:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       swap(*__a, *__b);
 149:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #endif
 150:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     }
 151:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 152:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 153:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 160:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  The ranges must not overlap.
 163:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 164:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     _ForwardIterator2
 166:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 169:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 170:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 172:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 174:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 176:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       return __first2;
 179:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     }
 180:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 181:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 182:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 183:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 188:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  preprocessor macro.
 191:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 192:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _Tp>
 193:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     inline const _Tp&
 195:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 197:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 198:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       if (__b < __a)
 201:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	return __b;
 202:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       return __a;
 203:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     }
 204:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 205:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 206:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 207:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 211:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 212:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  preprocessor macro.
 215:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 216:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _Tp>
 217:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     inline const _Tp&
 219:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 221:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 222:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       if (__a < __b)
 883                             		.loc 7 224 7 is_stmt 0
 884 0310 ED 03 4A                		mov.L	296[r0], r3
 885 0313 47 73                   		cmp	r7, r3
 886 0315 2B 05 38 1D 01          		bgt	.L44
 887                             	.LVL75:
 888                             	.LBE645:
 889                             	.LBE644:
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       acc = std::min(acc, output_activation_max);
 890                             		.loc 4 59 7 is_stmt 1
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       output_data[out_c + output_depth * b] = static_cast<int8_t>(acc);
 891                             		.loc 4 60 7
 892                             		.loc 4 60 45 is_stmt 0
 893 031a ED 04 4F                		mov.L	316[r0], r4
 894 031d FC 17 47                		min	r4, r7
 895                             	.LVL76:
 896                             	.LBE650:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       int32_t acc = 0;
 897                             		.loc 4 46 5
 898 0320 62 19                   		add	#1, r9
 899                             	.LVL77:
 900 0322 4B AD                   		add	r10, r13
 901                             	.LBB651:
 902                             		.loc 4 60 45
 903 0324 FD 20 27                		mov.B	r7, [r2+]
 904                             	.LVL78:
 905                             	.LBE651:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       int32_t acc = 0;
 906                             		.loc 4 46 31
 907 0327 ED 05 59                		mov.L	356[r0], r5
 908 032a 47 25                   		cmp	r2, r5
 909 032c 3B 46 FF                		bne	.L33
 910                             	.LVL79:
 911 032f 03                      		.balign 8,3,1
 912                             	.L45:
 913                             	.LBE656:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 914                             		.loc 4 45 3
 915 0330 62 18                   		add	#1, r8
 916                             	.LVL80:
 917 0332 4B B1                   		add	r11, r1
 918 0334 4B A6                   		add	r10, r6
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 919                             		.loc 4 45 21
 920 0336 ED 05 50                		mov.L	320[r0], r5
 921 0339 47 58                   		cmp	r5, r8
 922 033b 3B 1D FF                		bne	.L32
 923                             	.LVL81:
 924                             	.LBE601:
 925                             	.LBE665:
 926                             	.LBE670:
 927                             	.LBB671:
 928                             	.LBB672:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 929                             		.loc 3 185 5 is_stmt 1
 930 033e AE 0F                   		mov.L	100[r0], r7
 931 0340 61 57                   		cmp	#5, r7
 932 0342 2B 0B                   		ble	.L27
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 933                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 934                             		.loc 3 189 16 is_stmt 0
 935 0344 AE 81                   		mov.L	104[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 936                             		.loc 3 189 29
 937 0346 61 01                   		cmp	#0, r1
 938 0348 15                      		beq	.L27
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 939                             		.loc 3 189 16
 940 0349 05 00 00 00             		bsr	__ZdaPv
 941                             	.LVL82:
 942                             		.balign 8,3,1
 943                             	.L27:
 944                             	.LBE672:
 945                             	.LBE671:
 946                             	.LBB673:
 947                             	.LBB674:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 948                             		.loc 3 185 5 is_stmt 1
 949 034d AC 8F                   		mov.L	76[r0], r7
 950 034f 61 57                   		cmp	#5, r7
 951 0351 2B 0B                   		ble	.L48
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 952                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 953                             		.loc 3 189 16 is_stmt 0
 954 0353 AD 01                   		mov.L	80[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 955                             		.loc 3 189 29
 956 0355 61 01                   		cmp	#0, r1
 957 0357 15                      		beq	.L48
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 958                             		.loc 3 189 16
 959 0358 05 00 00 00             		bsr	__ZdaPv
 960                             	.LVL83:
 961                             		.balign 8,3,1
 962                             	.L48:
 963                             	.LBE674:
 964                             	.LBE673:
 965                             	.LBB675:
 966                             	.LBB676:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 967                             		.loc 3 185 5 is_stmt 1
 968 035c AB 0F                   		mov.L	52[r0], r7
 969 035e 61 57                   		cmp	#5, r7
 970 0360 2B 0B                   		ble	.L49
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 971                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 972                             		.loc 3 189 16 is_stmt 0
 973 0362 AB 81                   		mov.L	56[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 974                             		.loc 3 189 29
 975 0364 61 01                   		cmp	#0, r1
 976 0366 15                      		beq	.L49
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 977                             		.loc 3 189 16
 978 0367 05 00 00 00             		bsr	__ZdaPv
 979                             	.LVL84:
 980                             		.balign 8,3,1
 981                             	.L49:
 982                             	.LBE676:
 983                             	.LBE675:
 984                             	.LBB677:
 985                             	.LBB576:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 986                             		.loc 3 185 5 is_stmt 1
 987 036b A9 8F                   		mov.L	28[r0], r7
 988 036d 61 57                   		cmp	#5, r7
 989 036f 2A 05 38 F8 FD          		ble	.L50
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 990                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 991                             		.loc 3 189 16 is_stmt 0
 992 0374 AA 01                   		mov.L	32[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 993                             		.loc 3 189 29
 994 0376 61 01                   		cmp	#0, r1
 995 0378 3A F1 FD                		beq	.L50
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 996                             		.loc 3 189 16
 997 037b 05 00 00 00             		bsr	__ZdaPv
 998                             	.LVL85:
 999 037f 38 EA FD                		bra	.L50
 1000                             	.LVL86:
 1001                             	.L113:
 1002                             	.LBE576:
 1003                             	.LBE677:
 1004                             	.LBE684:
 1005                             	.LBB685:
 199:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context,
 1006                             		.loc 1 199 5 is_stmt 1
 199:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context,
 1007                             		.loc 1 199 5
 1008 0382 ED C8 05                		mov.L	20[r12], r8
 1009                             	.LVL87:
 1010                             	.LBB551:
 1011                             	.LBB552:
 1012                             		.loc 2 62 53 is_stmt 0
 1013 0385 EC 6D                   		mov.L	[r6], r13
 1014                             	.LVL88:
 1015                             	.LBE552:
 1016                             	.LBE551:
 1017                             	.LBB554:
 1018                             	.LBB555:
 1019 0387 EC B6                   		mov.L	[r11], r6
 1020                             	.LVL89:
 1021                             	.LBE555:
 1022                             	.LBE554:
 1023                             	.LBB557:
 1024                             	.LBB558:
 1025 0389 EC A1                   		mov.L	[r10], r1
 1026                             	.LVL90:
 1027                             	.LBE558:
 1028                             	.LBE557:
 1029                             	.LBB560:
 1030                             	.LBB561:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1031                             		.loc 2 55 28
 1032 038b EC 99                   		mov.L	[r9], r9
 1033                             	.LVL91:
 1034 038d FC 13 00                		.balign 8,3,3
 1035                             	.L51:
 1036                             	.LBE561:
 1037                             	.LBE560:
 199:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context,
 1038                             		.loc 1 199 5
 1039 0390 72 05 D8 00             		add	#0xd8, r0, r5
 1040 0394 72 0A E8 00             		add	#0xe8, r0, r10
 1041 0398 72 07 F8 00             		add	#0xf8, r0, r7
 1042 039c 72 04 08 01             		add	#0x108, r0, r4
 1043 03a0 72 03 20 01             		add	#0x120, r0, r3
 1044 03a4 72 02 C4 00             		add	#0xc4, r0, r2
 1045 03a8 E7 09 06                		mov.L	r9, 24[r0]
 1046 03ab A1 0D                   		mov.L	r5, 20[r0]
 1047 03ad A1 01                   		mov.L	r1, 16[r0]
 1048 03af E7 0A 03                		mov.L	r10, 12[r0]
 1049 03b2 A0 86                   		mov.L	r6, 8[r0]
 1050 03b4 E3 0D                   		mov.L	r13, [r0]
 1051 03b6 A0 0F                   		mov.L	r7, 4[r0]
 1052 03b8 72 01 18 01             		add	#0x118, r0, r1
 1053 03bc 05 00 00 00             		bsr	_arm_fully_connected_s8
 1054                             	.LVL92:
 1055 03c0 A1 09                   		mov.L	r1, 20[r0]
 1056 03c2 3E 06 00                		mov.L	#0, 24[r0]
 1057 03c5 F9 02 04 00 00 00 00    		mov.L	#.LC0, 16[r0]
 1058 03cc F9 02 03 11 00 00 00    		mov.L	#.LC1, 12[r0]
 1059 03d3 3E 02 CF                		mov.L	#0xcf, 8[r0]
 1060 03d6 F9 02 01 35 01 00 00    		mov.L	#.LC2, 4[r0]
 1061 03dd EF C1                   		mov.L	r12, r1
 1062 03df F8 02 6D 01 00 00       		mov.L	#.LC3, [r0]
 1063 03e5 7F 18                   		jsr	r8
 1064                             	.LVL93:
 199:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context,
 1065                             		.loc 1 199 5 is_stmt 1
 1066                             	.LBB562:
 1067                             	.LBB563:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1068                             		.loc 3 185 5
 1069 03e7 AF 8F                   		mov.L	124[r0], r7
 1070 03e9 61 57                   		cmp	#5, r7
 1071 03eb 2B 0D                   		ble	.L15
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1072                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1073                             		.loc 3 189 16 is_stmt 0
 1074 03ed ED 01 20                		mov.L	128[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1075                             		.loc 3 189 29
 1076 03f0 61 01                   		cmp	#0, r1
 1077 03f2 16                      		beq	.L15
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1078                             		.loc 3 189 16
 1079 03f3 05 00 00 00             		bsr	__ZdaPv
 1080                             	.LVL94:
 1081 03f7 03                      		.balign 8,3,2
 1082                             	.L15:
 1083                             	.LBE563:
 1084                             	.LBE562:
 1085                             	.LBB564:
 1086                             	.LBB565:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1087                             		.loc 3 185 5 is_stmt 1
 1088 03f8 ED 07 25                		mov.L	148[r0], r7
 1089 03fb 61 57                   		cmp	#5, r7
 1090 03fd 2B 0C                   		ble	.L16
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1091                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1092                             		.loc 3 189 16 is_stmt 0
 1093 03ff ED 01 26                		mov.L	152[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1094                             		.loc 3 189 29
 1095 0402 61 01                   		cmp	#0, r1
 1096 0404 15                      		beq	.L16
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1097                             		.loc 3 189 16
 1098 0405 05 00 00 00             		bsr	__ZdaPv
 1099                             	.LVL95:
 1100                             		.balign 8,3,2
 1101                             	.L16:
 1102                             	.LBE565:
 1103                             	.LBE564:
 1104                             	.LBB566:
 1105                             	.LBB567:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1106                             		.loc 3 185 5 is_stmt 1
 1107 0409 ED 07 2B                		mov.L	172[r0], r7
 1108 040c 61 57                   		cmp	#5, r7
 1109 040e 2B 0C                   		ble	.L17
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1110                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1111                             		.loc 3 189 16 is_stmt 0
 1112 0410 ED 01 2C                		mov.L	176[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1113                             		.loc 3 189 29
 1114 0413 61 01                   		cmp	#0, r1
 1115 0415 15                      		beq	.L17
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1116                             		.loc 3 189 16
 1117 0416 05 00 00 00             		bsr	__ZdaPv
 1118                             	.LVL96:
 1119                             		.balign 8,3,1
 1120                             	.L17:
 1121                             	.LBE567:
 1122                             	.LBE566:
 199:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context,
 1123                             		.loc 1 199 5
 1124 041a 66 11                   		mov.L	#1, r1
 1125                             	.LBE685:
 1126                             	.LBE695:
 1127                             		.loc 1 230 1
 1128 041c 3F 6D 65                		rtsd	#404, r6-r13
 1129                             	.LVL97:
 1130                             	.L114:
 1131                             	.LBB696:
 1132                             	.LBB686:
 1133                             	.LBB678:
 1134                             	.LBB666:
 1135                             	.LBB659:
 1136                             	.LBB597:
 1137                             		.loc 3 198 51
 1138 041f 6C 25                   		shll	#2, r5
 1139                             	.LVL98:
 1140                             		.loc 3 198 34
 1141 0421 06 89 05 0E             		add	56[r0].L, r5
 1142                             	.LBE597:
 1143                             	.LBE659:
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   const int accum_depth = filter_shape.Dims(filter_dim_count - 1);
 1144                             		.loc 4 43 3
 1145 0425 EC 5A                   		mov.L	[r5], r10
 1146                             	.LVL99:
 1147 0427 47 BA                   		cmp	r11, r10
 1148 0429 28 05 38 D4 00          		blt	.L8
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****   for (int b = 0; b < batches; ++b) {
 1149                             		.loc 4 44 3 is_stmt 1
 1150                             	.LVL100:
 1151                             	.LBB660:
 1152                             	.LBB600:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1153                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1154                             		.loc 3 197 5
 1155                             		.loc 3 198 5
 1156                             		.loc 3 198 34 is_stmt 0
 1157 042e ED 5A 01                		mov.L	4[r5], r10
 1158 0431 38 F2 FD                		bra	.L56
 1159                             	.LVL101:
 1160                             	.L44:
 1161                             	.LBE600:
 1162                             	.LBE660:
 1163                             	.LBB661:
 1164                             	.LBB657:
 1165                             	.LBB652:
 1166                             		.loc 4 60 7 is_stmt 1
 1167                             	.LBE652:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       int32_t acc = 0;
 1168                             		.loc 4 46 5 is_stmt 0
 1169 0434 62 19                   		add	#1, r9
 1170                             	.LVL102:
 1171                             	.LBB653:
 1172                             		.loc 4 60 45
 1173 0436 FD 20 23                		mov.B	r3, [r2+]
 1174                             	.LVL103:
 1175 0439 4B AD                   		add	r10, r13
 1176                             	.LBE653:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       int32_t acc = 0;
 1177                             		.loc 4 46 31
 1178 043b ED 0E 59                		mov.L	356[r0], r14
 1179 043e 47 2E                   		cmp	r2, r14
 1180 0440 3A F0 FE                		beq	.L45
 1181                             	.LBB654:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 1182                             		.loc 4 47 7 is_stmt 1
 1183                             	.LVL104:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 1184                             		.loc 4 48 7
 1185                             	.LBB646:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 1186                             		.loc 4 48 25 is_stmt 0
 1187 0443 61 0A                   		cmp	#0, r10
 1188 0445 2B 05 38 32 FE          		bgt	.L118
 1189                             	.LVL105:
 1190                             		.balign 8,3,1
 1191                             	.L57:
 1192                             	.LBE646:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 1193                             		.loc 4 47 15
 1194 044a 66 07                   		mov.L	#0, r7
 1195 044c 38 5D FE                		bra	.L34
 1196                             	.LVL106:
 1197                             	.L116:
 1198                             	.LBB647:
 1199                             	.LBB636:
 1200                             	.LBB631:
 1201                             	.LBB628:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1202                             		.loc 5 346 35
 1203 044f FB F2 01 00 00 C0       		mov.L	#-1073741823, r15
 1204 0455 FB 76 FF                		mov.L	#-1, r7
 1205                             	.LVL107:
 1206                             		.balign 8,3,2
 1207                             	.L55:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1208                             		.loc 5 348 49
 1209 0458 FF 23 4F                		add	r4, r15, r3
 1210 045b FC 0B 57                		adc	r5, r7
 1211 045e 26 0E                   		bpz	.L41
 1212 0460 70 3F FF FF FF 7F       		add	#0x7fffffff, r3, r15
 1213 0466 FD 74 27 00             		adc	#0, r7
 1214 046a EF F3                   		mov.L	r15, r3
 1215                             		.balign 8,3,1
 1216                             	.L41:
 1217 046c 6C 17                   		shll	#1, r7
 1218 046e 69 F3                   		shlr	#31, r3
 1219 0470 57 37                   		or	r3, r7
 1220 0472 38 76 FE                		bra	.L40
 1221                             	.L115:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 1222                             		.loc 5 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 1223                             		.loc 5 344 3
 1224                             	.LVL108:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1225                             		.loc 5 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1226                             		.loc 5 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1227                             		.loc 5 346 35 is_stmt 0
 1228 0475 61 0F                   		cmp	#0, r15
 1229 0477 FB F2 01 00 00 C0       		mov.L	#-1073741823, r15
 1230 047d 29 08                   		blt 1f
 1231 047f FB F2 00 00 00 40       		mov #0x40000000, r15
 1232                             	1:
 1233 0485 FB 76 FF                		mov.L	#-1, r7
 1234 0488 29 04                   		blt 1f
 1235 048a 66 07                   		mov #0, r7
 1236                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 1237                             		.loc 5 347 3 is_stmt 1
 1238                             	.LVL109:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1239                             		.loc 5 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1240                             		.loc 5 349 19 is_stmt 0
 1241 048c 74 0C 00 00 00 80       		cmp	#-2147483648, r12
 1242 0492 21 C6                   		bne	.L55
 1243 0494 FB 72 FF FF FF 7F       		mov.L	#0x7fffffff, r7
 1244                             	.LVL110:
 1245 049a 38 4E FE                		bra	.L40
 1246                             	.LVL111:
 1247                             	.L28:
 1248                             	.LBE628:
 1249                             	.LBE631:
 1250                             	.LBB632:
 1251                             	.LBB624:
 1252                             		.loc 5 371 50
 1253 049d 66 15                   		mov.L	#1, r5
 1254 049f FD 62 35                		shll	r3, r5
 1255 04a2 38 A1 FD                		bra	.L29
 1256                             	.LVL112:
 1257                             	.L12:
 1258                             	.LBE624:
 1259                             	.LBE632:
 1260                             	.LBE636:
 1261                             	.LBE647:
 1262                             	.LBE654:
 1263                             	.LBE657:
 1264                             	.LBE661:
 1265                             	.LBE666:
 1266                             	.LBE678:
 1267                             	.LBE686:
 1268                             	.LBB687:
 199:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context,
 1269                             		.loc 1 199 5
 1270 04a5 72 01 D8 00             		add	#0xd8, r0, r1
 1271 04a9 72 02 E8 00             		add	#0xe8, r0, r2
 1272 04ad 72 03 F8 00             		add	#0xf8, r0, r3
 1273 04b1 3E 06 00                		mov.L	#0, 24[r0]
 1274 04b4 A1 09                   		mov.L	r1, 20[r0]
 1275 04b6 A1 04                   		mov.L	r4, 16[r0]
 1276 04b8 A0 8A                   		mov.L	r2, 12[r0]
 1277 04ba A0 85                   		mov.L	r5, 8[r0]
 1278 04bc E3 07                   		mov.L	r7, [r0]
 1279 04be A0 0B                   		mov.L	r3, 4[r0]
 1280 04c0 72 04 08 01             		add	#0x108, r0, r4
 1281 04c4 72 03 20 01             		add	#0x120, r0, r3
 1282 04c8 72 02 C4 00             		add	#0xc4, r0, r2
 1283 04cc 72 01 18 01             		add	#0x118, r0, r1
 1284 04d0 05 00 00 00             		bsr	_arm_fully_connected_s8
 1285                             	.LVL113:
 1286 04d4 61 01                   		cmp	#0, r1
 1287 04d6 3A 5F FC                		beq	.L14
 199:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context,
 1288                             		.loc 1 199 5 is_stmt 1
 199:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context,
 1289                             		.loc 1 199 5
 1290 04d9 ED C8 05                		mov.L	20[r12], r8
 1291                             	.LVL114:
 1292                             	.LBB568:
 1293                             	.LBB553:
 1294                             		.loc 2 62 53 is_stmt 0
 1295 04dc EC 6D                   		mov.L	[r6], r13
 1296                             	.LVL115:
 1297                             	.LBE553:
 1298                             	.LBE568:
 1299                             	.LBB569:
 1300                             	.LBB556:
 1301 04de EC B6                   		mov.L	[r11], r6
 1302                             	.LVL116:
 1303                             	.LBE556:
 1304                             	.LBE569:
 1305                             	.LBB570:
 1306                             	.LBB559:
 1307 04e0 EC A1                   		mov.L	[r10], r1
 1308                             	.LVL117:
 1309 04e2 38 AE FE                		bra	.L51
 1310                             	.LVL118:
 1311                             	.L117:
 1312                             	.LBE559:
 1313                             	.LBE570:
 1314                             	.LBE687:
 1315                             	.LBB688:
 1316                             	.LBB679:
 1317                             	.LBB667:
 1318                             	.LBB662:
 1319                             	.LBB658:
 1320                             	.LBB655:
 1321                             	.LBB648:
 1322                             	.LBB637:
 1323                             	.LBB633:
 1324                             	.LBB625:
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 1325                             		.loc 5 370 3
 1326 04e5 FB 42 87 01 00 00       		mov.L	#.LC4, r4
 1327 04eb FB 32 00 00 00 00       		mov.L	#.LANCHOR0, r3
 1328 04f1 FB 2A 72 01             		mov.L	#0x172, r2
 1329 04f5 FB 12 96 01 00 00       		mov.L	#.LC5, r1
 1330 04fb 05 00 00 00             		bsr	___assert_func
 1331                             	.LVL119:
 1332                             	.L8:
 1333                             	.LBE625:
 1334                             	.LBE633:
 1335                             	.LBE637:
 1336                             	.LBE648:
 1337                             	.LBE655:
 1338                             	.LBE658:
 1339                             	.LBE662:
 1340                             	.LBE667:
 1341                             	.LBE679:
 1342                             	.LBE688:
 1343                             	.LBB689:
 1344                             	.LBB525:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 1345                             		.loc 2 61 3
 1346 04ff 05 00 00 00             		bsr	_abort
 1347                             	.LVL120:
 1348                             	.LBE525:
 1349                             	.LBE689:
 1350                             	.LBE696:
 1351                             	.LFE2809:
 1353 0503 77 10 01 00 00          		.section	.text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode,"ax",@progbits
 1355                             	__ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:
 1356                             	.LFB2260:
 231:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 232:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** TfLiteStatus EvalQuantized(TfLiteContext* context, TfLiteNode* node,
 233:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                            const OpData& data, const TfLiteEvalTensor* input,
 234:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                            const TfLiteEvalTensor* filter,
 235:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                            const TfLiteEvalTensor* bias,
 236:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                            TfLiteEvalTensor* output) {
 237:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const int32_t input_offset = -data.input_zero_point;
 238:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const int32_t filter_offset = -data.filter_zero_point;
 239:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const int32_t output_offset = data.output_zero_point;
 240:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 241:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   tflite::FullyConnectedParams op_params;
 242:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.input_offset = input_offset;
 243:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.weights_offset = filter_offset;
 244:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.output_offset = output_offset;
 245:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.output_multiplier = data.output_multiplier;
 246:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // Legacy ops used mixed left and right shifts. Now all are +ve-means-left.
 247:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.output_shift = -data.output_shift;
 248:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.quantized_activation_min = data.output_activation_min;
 249:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.quantized_activation_max = data.output_activation_max;
 250:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 251:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** #define TF_LITE_FULLY_CONNECTED(output_data_type)      \
 252:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   reference_ops::FullyConnected(                       \
 253:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       op_params, tflite::micro::GetTensorShape(input), \
 254:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<uint8_t>(input),    \
 255:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorShape(filter),           \
 256:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<uint8_t>(filter),   \
 257:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorShape(bias),             \
 258:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<int32_t>(bias),     \
 259:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorShape(output),           \
 260:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<output_data_type>(output))
 261:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   switch (output->type) {
 262:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     case kTfLiteUInt8:
 263:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       TF_LITE_FULLY_CONNECTED(uint8_t);
 264:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 265:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     case kTfLiteInt16:
 266:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       TF_LITE_FULLY_CONNECTED(int16_t);
 267:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 268:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     default:
 269:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       TF_LITE_KERNEL_LOG(context, "Type %s (%d) not supported.",
 270:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                          TfLiteTypeGetName(output->type), output->type);
 271:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       return kTfLiteError;
 272:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   }
 273:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 274:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return kTfLiteOk;
 275:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
 276:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 277:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,
 278:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                        TfLiteFusedActivation activation,
 279:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                        const TfLiteEvalTensor* input,
 280:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                        const TfLiteEvalTensor* filter,
 281:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                        const TfLiteEvalTensor* bias, TfLiteEvalTensor* output) {
 282:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   float output_activation_min, output_activation_max;
 283:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   CalculateActivationRange(activation, &output_activation_min,
 284:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                            &output_activation_max);
 285:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   tflite::FullyConnectedParams op_params;
 286:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.float_activation_min = output_activation_min;
 287:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.float_activation_max = output_activation_max;
 288:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   tflite::reference_ops::FullyConnected(
 289:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       op_params, tflite::micro::GetTensorShape(input),
 290:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(input),
 291:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorShape(filter),
 292:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(filter),
 293:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorShape(bias),
 294:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(bias),
 295:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorShape(output),
 296:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(output));
 297:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return kTfLiteOk;
 298:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
 299:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 300:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
 1357                             		.loc 1 300 61 is_stmt 1
 1358                             	.LVL121:
 1359 0000 6E 6D                   		pushm	r6-r13
 1360                             	.LCFI2:
 1361 0002 72 00 7C FE             		add	#-388, r0
 1362                             	.LCFI3:
 301:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(node->builtin_data != nullptr);
 1363                             		.loc 1 301 3
 1364 0006 ED 28 05                		mov.L	20[r2], r8
 1365 0009 61 08                   		cmp	#0, r8
 1366 000b 3A 9D 07                		beq	.L121
 1367                             	.LBB904:
 1368                             	.LBB905:
 1369                             	.LBB906:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 1370                             		.loc 2 33 3 is_stmt 0
 1371 000e 71 19 00                		add	#0, r1, r9
 1372 0011 3A 97 07                		beq	.L121
 1373 0014 EF 26                   		mov.L	r2, r6
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 1374                             		.loc 2 34 3 is_stmt 1
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1375                             		.loc 2 35 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1376                             		.loc 2 35 32 is_stmt 0
 1377 0016 EC 2A                   		mov.L	[r2], r10
 1378 0018 ED 97 15                		mov.L	84[r9], r7
 1379 001b ED A2 01                		mov.L	4[r10], r2
 1380                             	.LVL122:
 1381 001e 7F 17                   		jsr	r7
 1382                             	.LVL123:
 1383 0020 EF 1A                   		mov.L	r1, r10
 1384                             	.LVL124:
 1385                             	.LBE906:
 1386                             	.LBE905:
 1387                             	.LBE904:
 302:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const auto* params =
 303:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       static_cast<const TfLiteFullyConnectedParams*>(node->builtin_data);
 304:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 305:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteEvalTensor* input =
 306:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
 307:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteEvalTensor* filter =
 1388                             		.loc 1 307 3 is_stmt 1
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1389                             		.loc 2 41 3
 1390                             	.LBB907:
 1391                             	.LBB908:
 1392                             	.LBB909:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 1393                             		.loc 2 33 3
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 1394                             		.loc 2 34 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1395                             		.loc 2 35 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1396                             		.loc 2 35 32 is_stmt 0
 1397 0022 EC 65                   		mov.L	[r6], r5
 1398 0024 ED 97 15                		mov.L	84[r9], r7
 1399 0027 EF 91                   		mov.L	r9, r1
 1400                             	.LVL125:
 1401 0029 A8 D2                   		mov.L	8[r5], r2
 1402 002b 7F 17                   		jsr	r7
 1403                             	.LVL126:
 1404 002d EF 1C                   		mov.L	r1, r12
 1405                             	.LVL127:
 1406                             	.LBE909:
 1407                             	.LBE908:
 1408                             	.LBE907:
 308:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetEvalInput(context, node, kWeightsTensor);
 309:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteEvalTensor* bias =
 1409                             		.loc 1 309 3 is_stmt 1
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1410                             		.loc 2 41 3
 1411                             	.LBB910:
 1412                             	.LBB911:
 1413                             	.LBB912:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 1414                             		.loc 2 33 3
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 1415                             		.loc 2 34 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1416                             		.loc 2 35 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1417                             		.loc 2 35 32 is_stmt 0
 1418 002f EC 65                   		mov.L	[r6], r5
 1419 0031 ED 97 15                		mov.L	84[r9], r7
 1420 0034 EF 91                   		mov.L	r9, r1
 1421                             	.LVL128:
 1422 0036 A8 DA                   		mov.L	12[r5], r2
 1423 0038 7F 17                   		jsr	r7
 1424                             	.LVL129:
 1425 003a EF 17                   		mov.L	r1, r7
 1426                             	.LVL130:
 1427                             	.LBE912:
 1428                             	.LBE911:
 1429                             	.LBE910:
 310:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetEvalInput(context, node, kBiasTensor);
 311:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TfLiteEvalTensor* output =
 1430                             		.loc 1 311 3 is_stmt 1
 1431                             	.LBB913:
 1432                             	.LBB914:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 1433                             		.loc 2 47 3
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
 1434                             		.loc 2 48 3
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1435                             		.loc 2 49 3
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1436                             		.loc 2 49 32 is_stmt 0
 1437 003c A8 6C                   		mov.L	4[r6], r4
 1438 003e ED 95 15                		mov.L	84[r9], r5
 1439 0041 EF 91                   		mov.L	r9, r1
 1440                             	.LVL131:
 1441 0043 A8 4A                   		mov.L	4[r4], r2
 1442 0045 7F 15                   		jsr	r5
 1443                             	.LVL132:
 1444 0047 EF 1B                   		mov.L	r1, r11
 1445                             	.LVL133:
 1446                             	.LBE914:
 1447                             	.LBE913:
 312:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
 313:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 314:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
 1448                             		.loc 1 314 3 is_stmt 1
 1449 0049 A9 62                   		mov.L	16[r6], r2
 1450 004b 61 02                   		cmp	#0, r2
 1451 004d 3A 5B 07                		beq	.L121
 315:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const OpData& data = *(static_cast<const OpData*>(node->user_data));
 1452                             		.loc 1 315 3
 1453                             	.LVL134:
 316:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 317:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // Checks in Prepare ensure input, output and filter types are all the same.
 318:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   switch (input->type) {
 1454                             		.loc 1 318 3
 1455                             		.loc 1 318 18 is_stmt 0
 1456 0050 ED A1 02                		mov.L	8[r10], r1
 1457                             	.LVL135:
 1458                             		.loc 1 318 3
 1459 0053 61 31                   		cmp	#3, r1
 1460 0055 3A E5 01                		beq	.L122
 1461 0058 61 91                   		cmp	#9, r1
 1462 005a 3A CE 01                		beq	.L123
 1463 005d 61 11                   		cmp	#1, r1
 1464 005f 20 22                   		beq	.L329
 319:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     case kTfLiteFloat32:
 320:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       return EvalFloat(context, node, params->activation, input, filter, bias,
 321:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                        output);
 322:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     case kTfLiteInt8:
 323:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       return EvalQuantizedInt8(context, node, data, input, filter, bias,
 324:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                output);
 325:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 326:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     case kTfLiteUInt8:
 327:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       return EvalQuantized(context, node, data, input, filter, bias, output);
 328:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 329:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     default:
 1465                             		.loc 1 329 5 is_stmt 1
 330:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       TF_LITE_KERNEL_LOG(context, "Type %s (%d) not supported.",
 1466                             		.loc 1 330 7
 1467                             		.loc 1 330 7
 1468 0061 ED 97 05                		mov.L	20[r9], r7
 1469                             	.LVL136:
 1470 0064 05 00 00 00             		bsr	_TfLiteTypeGetName
 1471                             	.LVL137:
 1472 0068 E5 A0 02 02             		mov.L	8[r10], 8[r0]
 1473                             	.LVL138:
 1474 006c 76 10 01 00             		.balign 8,3,5
 1475                             	.L325:
 1476 0070 A0 09                   		mov.L	r1, 4[r0]
 1477 0072 EF 91                   		mov.L	r9, r1
 1478 0074 F8 02 00 00 00 00       		mov.L	#.LC6, [r0]
 1479 007a 7F 17                   		jsr	r7
 1480                             	.LVL139:
 331:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                          TfLiteTypeGetName(input->type), input->type);
 332:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       return kTfLiteError;
 1481                             		.loc 1 332 7
 1482                             		.loc 1 332 14 is_stmt 0
 1483 007c 66 11                   		mov.L	#1, r1
 333:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   }
 334:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return kTfLiteOk;
 335:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
 1484                             		.loc 1 335 1
 1485 007e 3F 6D 69                		rtsd	#420, r6-r13
 1486                             	.LVL140:
 1487                             	.L329:
 319:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       return EvalFloat(context, node, params->activation, input, filter, bias,
 1488                             		.loc 1 319 5 is_stmt 1
 320:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                        output);
 1489                             		.loc 1 320 7
 320:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                        output);
 1490                             		.loc 1 320 47 is_stmt 0
 1491 0081 EC 85                   		mov.L	[r8], r5
 1492                             	.LVL141:
 1493                             	.LBB915:
 1494                             	.LBB916:
 282:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   CalculateActivationRange(activation, &output_activation_min,
 1495                             		.loc 1 282 3 is_stmt 1
 283:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                            &output_activation_max);
 1496                             		.loc 1 283 3
 1497                             	.LBB917:
 1498                             	.LBB918:
 1499                             		.file 8 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumIntermediates(const TfLiteNode* node) {
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return node->intermediates->size;
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int64_t NumElements(const TfLiteIntArray* dims) {
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   int64_t count = 1;
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   for (int i = 0; i < dims->size; ++i) {
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   }
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return count;
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int64_t NumElements(const TfLiteTensor* t) {
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return NumElements(t->dims);
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Determines whether tensor is constant.
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // TODO(b/138199592): Introduce new query which checks for constant OR
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // persistent-read-only, which would be useful for most tensor kernels that
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // are potentially dynamic based on the input tensor value availability at the
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // time of prepare.
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline bool IsConstantTensor(const TfLiteTensor* tensor) {
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return tensor->allocation_type == kTfLiteMmapRo;
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Determines whether tensor is dynamic. Note that a tensor can be non-const and
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // not dynamic. This function specifically checks for a dynamic tensor.
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline bool IsDynamicTensor(const TfLiteTensor* tensor) {
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return tensor->allocation_type == kTfLiteDynamic;
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Sets tensor to dynamic.
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline void SetTensorToDynamic(TfLiteTensor* tensor) {
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   if (tensor->allocation_type != kTfLiteDynamic) {
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     tensor->allocation_type = kTfLiteDynamic;
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     tensor->data.raw = nullptr;
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   }
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Sets tensor to persistent and read-only.
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline void SetTensorToPersistentRo(TfLiteTensor* tensor) {
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   if (tensor->allocation_type != kTfLitePersistentRo) {
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     tensor->allocation_type = kTfLitePersistentRo;
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     tensor->data.raw = nullptr;
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   }
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Determines whether it is a hybrid op - one that has float inputs and
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // quantized weights.
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline bool IsHybridOp(const TfLiteTensor* input, const TfLiteTensor* weight) {
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return ((weight->type == kTfLiteUInt8 || weight->type == kTfLiteInt8) &&
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****           input->type == kTfLiteFloat32);
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Check dimensionality match and populate OpData for Conv and DepthwiseConv.
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus PopulateConvolutionQuantizationParams(
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     TfLiteContext* context, const TfLiteTensor* input,
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     const TfLiteTensor* filter, const TfLiteTensor* bias, TfLiteTensor* output,
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     const TfLiteFusedActivation& activation, int32_t* multiplier, int* shift,
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     int32_t* output_activation_min, int32_t* output_activation_max,
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     int32_t* per_channel_multiplier, int* per_channel_shift);
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus PopulateConvolutionQuantizationParams(
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     TfLiteContext* context, const TfLiteTensor* input,
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     const TfLiteTensor* filter, const TfLiteTensor* bias, TfLiteTensor* output,
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     const TfLiteFusedActivation& activation, int32_t* multiplier, int* shift,
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     int32_t* output_activation_min, int32_t* output_activation_max,
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     int32_t* per_channel_multiplier, int* per_channel_shift, int num_channels);
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Calculates the multiplication factor for a quantized convolution (or
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // quantized depthwise convolution) involving the given tensors. Returns an
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // error if the scales of the tensors are not compatible.
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetQuantizedConvolutionMultipler(TfLiteContext* context,
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* input,
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* filter,
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* bias,
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               TfLiteTensor* output,
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               double* multiplier);
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetQuantizedConvolutionMultipler(TfLiteContext* context,
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* input,
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* filter,
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               TfLiteTensor* output,
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               double* multiplier);
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Calculates the useful quantized range of an activation layer given its
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // activation tensor.
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus CalculateActivationRangeQuantized(TfLiteContext* context,
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                                TfLiteFusedActivation activation,
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                                TfLiteTensor* output,
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                                int32_t* act_min,
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                                int32_t* act_max);
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Calculates the useful range of an activation layer given its activation
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.a
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** template <typename T>
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** void CalculateActivationRange(TfLiteFusedActivation activation,
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               T* activation_min, T* activation_max) {
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   if (activation == kTfLiteActRelu) {
 1500                             		.loc 8 255 3 is_stmt 0
 1501 0083 61 15                   		cmp	#1, r5
 1502 0085 3A 68 04                		beq	.L240
 1503                             	.LVL142:
 1504                             	.LBB919:
 1505                             	.LBB920:
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = 0;
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActRelu6) {
 1506                             		.loc 8 258 10
 1507 0088 61 35                   		cmp	#3, r5
 1508 008a 3A 31 07                		beq	.L241
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = 0;
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 6;
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActReluN1To1) {
 1509                             		.loc 8 261 10
 1510 008d 61 25                   		cmp	#2, r5
 1511 008f 3A 66 08                		beq	.L242
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = -1;
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 1;
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else {
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = std::numeric_limits<T>::lowest();
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 1512                             		.loc 8 266 5
 1513 0092 F9 02 4B FF FF 7F 7F    		mov.L	#0x7f7fffff, 300[r0]
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 1514                             		.loc 8 265 5
 1515 0099 F9 02 50 FF FF 7F FF    		mov.L	#0xff7fffff, 320[r0]
 1516                             	.LVL143:
 1517                             		.balign 8,3,3
 1518                             	.L125:
 1519                             	.LBE920:
 1520                             	.LBE919:
 1521                             	.LBE918:
 1522                             	.LBE917:
 285:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.float_activation_min = output_activation_min;
 1523                             		.loc 1 285 3 is_stmt 1
 286:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.float_activation_max = output_activation_max;
 1524                             		.loc 1 286 3
 287:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   tflite::reference_ops::FullyConnected(
 1525                             		.loc 1 287 3
 288:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       op_params, tflite::micro::GetTensorShape(input),
 1526                             		.loc 1 288 3
 289:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(input),
 1527                             		.loc 1 289 47 is_stmt 0
 1528 00a0 72 0F 14 01             		add	#0x114, r0, r15
 1529 00a4 EF A1                   		mov.L	r10, r1
 1530 00a6 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1531                             	.LVL144:
 291:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(filter),
 1532                             		.loc 1 291 36
 1533 00aa 72 0F FC 00             		add	#0xfc, r0, r15
 1534 00ae EF C1                   		mov.L	r12, r1
 1535                             	.LBB928:
 1536                             	.LBB929:
 1537                             		.loc 2 62 53
 1538 00b0 EC AA                   		mov.L	[r10], r10
 1539                             	.LVL145:
 1540                             	.LBE929:
 1541                             	.LBE928:
 291:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(filter),
 1542                             		.loc 1 291 36
 1543 00b2 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1544                             	.LVL146:
 1545                             	.LBB930:
 1546                             	.LBB931:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 1547                             		.loc 2 61 3
 1548 00b6 61 0C                   		cmp	#0, r12
 1549 00b8 3A F0 06                		beq	.L121
 1550                             	.LBE931:
 1551                             	.LBE930:
 293:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(bias),
 1552                             		.loc 1 293 36
 1553 00bb 72 0F E4 00             		add	#0xe4, r0, r15
 1554 00bf EF 71                   		mov.L	r7, r1
 1555                             	.LBB933:
 1556                             	.LBB932:
 1557                             		.loc 2 62 53
 1558 00c1 E4 C0 4C                		mov.L	[r12], 304[r0]
 1559                             	.LVL147:
 1560                             	.LBE932:
 1561                             	.LBE933:
 293:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(bias),
 1562                             		.loc 1 293 36
 1563 00c4 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1564                             	.LVL148:
 1565                             	.LBB934:
 1566                             	.LBB935:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 1567                             		.loc 2 61 3
 1568 00c8 61 07                   		cmp	#0, r7
 1569 00ca 3A DE 06                		beq	.L121
 1570                             	.LBE935:
 1571                             	.LBE934:
 295:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(output));
 1572                             		.loc 1 295 36
 1573 00cd 72 0F CC 00             		add	#0xcc, r0, r15
 1574 00d1 EF B1                   		mov.L	r11, r1
 1575                             	.LBB937:
 1576                             	.LBB936:
 1577                             		.loc 2 62 53
 1578 00d3 EC 7D                   		mov.L	[r7], r13
 1579                             	.LVL149:
 1580                             	.LBE936:
 1581                             	.LBE937:
 295:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetTensorData<float>(output));
 1582                             		.loc 1 295 36
 1583 00d5 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1584                             	.LVL150:
 1585                             	.LBB938:
 1586                             	.LBB939:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1587                             		.loc 2 55 28
 1588 00d9 61 0B                   		cmp	#0, r11
 1589 00db 15                      		beq	.L126
 1590 00dc EC BB                   		mov.L	[r11], r11
 1591                             	.LVL151:
 1592 00de EF 00                   		.balign 8,3,2
 1593                             	.L126:
 1594                             	.LBE939:
 1595                             	.LBE938:
 1596                             	.LBB940:
 1597                             	.LBB941:
 1598                             		.file 9 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_FULLY_CONNECTED_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_FULLY_CONNECTED_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** #include "tensorflow/lite/kernels/internal/common.h"
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** #include "tensorflow/lite/kernels/internal/types.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** namespace tflite {
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** namespace reference_ops {
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** inline void FullyConnected(
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const FullyConnectedParams& params, const RuntimeShape& input_shape,
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const float* input_data, const RuntimeShape& weights_shape,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const float* weights_data, const RuntimeShape& bias_shape,
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const float* bias_data, const RuntimeShape& output_shape,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     float* output_data) {
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const float output_activation_min = params.float_activation_min;
 1599                             		.loc 9 32 3 is_stmt 1
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const float output_activation_max = params.float_activation_max;
 1600                             		.loc 9 33 3
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // TODO(benoitjacob): This really should be:
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   //     const int batches = ArraySize(output_dims, 1);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // but the current --variable_batch hack consists in overwriting the 3rd
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // dimension with the runtime batch size, as we don't keep track for each
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // array of which dimension is the batch dimension in it.
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_dims_count = output_shape.DimensionsCount();
 1601                             		.loc 9 39 3
 1602                             		.loc 9 39 61 is_stmt 0
 1603 00e0 ED 08 33                		mov.L	204[r0], r8
 1604                             	.LVL152:
 1605                             	.LBE941:
 1606                             	.LBE940:
 1607                             	.LBE916:
 1608                             	.LBE915:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1609                             		.loc 3 194 44 is_stmt 1
 1610                             	.LBB1025:
 1611                             	.LBB1016:
 1612                             	.LBB998:
 1613                             	.LBB991:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int weights_dims_count = weights_shape.DimensionsCount();
 1614                             		.loc 9 40 3
 1615                             		.loc 9 40 63 is_stmt 0
 1616 00e3 ED 03 3F                		mov.L	252[r0], r3
 1617                             	.LVL153:
 1618                             	.LBE991:
 1619                             	.LBE998:
 1620                             	.LBE1016:
 1621                             	.LBE1025:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1622                             		.loc 3 194 44 is_stmt 1
 1623                             	.LBB1026:
 1624                             	.LBB1017:
 1625                             	.LBB999:
 1626                             	.LBB992:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int batches = FlatSizeSkipDim(output_shape, output_dims_count - 1);
 1627                             		.loc 9 41 3
 1628                             		.loc 9 41 38 is_stmt 0
 1629 00e6 71 84 FF                		add	#-1, r8, r4
 1630                             	.LVL154:
 1631                             	.LBB942:
 1632                             	.LBB943:
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void SetDim(int i, int32_t val) {
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_[i] = val;
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_[i] = val;
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t* DimsData() {
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsData() const {
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The caller must ensure that the shape is no bigger than 5-D.
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsDataUpTo5D() const { return dims_; }
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void Resize(int dimensions_count) {
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     size_ = dimensions_count;
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void ReplaceWith(int dimensions_count, const int32_t* dims_data) {
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   template <typename T>
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const T& src_iterable) {
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int dimensions_count =
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         std::distance(src_iterable.begin(), src_iterable.end());
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* data = DimsData();
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (auto it : src_iterable) {
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       *data = it;
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       ++data;
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This will probably be factored out. Old code made substantial use of 4-D
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // shapes, and so this function is used to extend smaller shapes. Note that
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (a) as Dims<4>-dependent code is eliminated, the reliance on this should be
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // reduced, and (b) some kernels are stricly 4-D, but then the shapes of their
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // inputs should already be 4-D, so this function should not be needed.
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline static RuntimeShape ExtendedShape(int new_shape_size,
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                            const RuntimeShape& shape) {
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return RuntimeShape(new_shape_size, shape, 1);
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const std::initializer_list<int> init_list) {
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom<const std::initializer_list<int>>(init_list);
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Returns the total count of elements, that is the size when flattened into a
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // vector.
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int FlatSize() const {
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int buffer_size = 1;
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return buffer_size;
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator!=(const RuntimeShape& comp) const { return !((*this) == comp); }
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  private:
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // For use only by ExtendedShape(), written to guarantee (return-value) copy
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // elision in C++17.
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This creates a shape padded to the desired size with the specified value.
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int new_shape_size, const RuntimeShape& shape, int pad_value)
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       : size_(0) {
 288:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // If the following check fails, it is likely because a 4D-only kernel is
 289:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // being used with an array of larger dimension count.
 290:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_CHECK_GE(new_shape_size, shape.DimensionsCount());
 291:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(new_shape_size);
 292:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int size_increase = new_shape_size - shape.DimensionsCount();
 293:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_increase; ++i) {
 294:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, pad_value);
 295:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 296:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData() + size_increase, shape.DimsData(),
 297:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                 sizeof(int32_t) * shape.DimensionsCount());
 298:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 299:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 300:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t size_;
 301:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   union {
 302:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t dims_[kMaxSmallSize];
 303:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dims_pointer_;
 304:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   };
 305:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 306:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 307:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Converts inference-style shape to legacy tflite::Dims<4>.
 308:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline tflite::Dims<4> ToRuntimeDims(const tflite::RuntimeShape& array_shape) {
 309:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   tflite::Dims<4> result;
 310:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dimensions_count = array_shape.DimensionsCount();
 311:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_LE(dimensions_count, 4);
 312:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int cum_prod = 1;
 313:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < 4; i++) {
 314:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int new_dim =
 315:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         (i < dimensions_count) ? array_shape.Dims(dimensions_count - 1 - i) : 1;
 316:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.sizes[i] = new_dim;
 317:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.strides[i] = cum_prod;
 318:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     cum_prod *= new_dim;
 319:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 320:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return result;
 321:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 322:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 323:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(b/80418076): Move to legacy ops file, update invocations.
 324:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline RuntimeShape DimsToShape(const tflite::Dims<4>& dims) {
 325:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return RuntimeShape(
 326:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       {dims.sizes[3], dims.sizes[2], dims.sizes[1], dims.sizes[0]});
 327:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 328:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 329:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets next index to iterate through a multidimensional array.
 330:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool NextIndex(const int num_dims, const int* dims, int* current) {
 331:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 332:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return false;
 333:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 334:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 335:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(current != nullptr);
 336:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int carry = 1;
 337:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = num_dims - 1; idx >= 0; --idx) {
 338:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int current_val = current[idx] + carry;
 339:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(dims[idx], current_val);
 340:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dims[idx] == current_val) {
 341:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = 0;
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = current_val;
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       carry = 0;
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       break;
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return (carry == 0);
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 350:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 351:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets offset of index if reducing on axis. When reducing, the flattened offset
 352:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // will not change, if the input index changes on the given axis. For example,
 353:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // if you have a 3D tensor and you are reducing to 2D by eliminating axis 0,
 354:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // then index (0, 1, 2) and index (1, 1, 2) will map to the same flattened
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // offset.
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(kanlig): uses Dims to represent dimensions.
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline size_t ReducedOutputOffset(const int num_dims, const int* dims,
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* index, const int num_axis,
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* axis) {
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return 0;
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 363:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 364:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index != nullptr);
 365:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   size_t offset = 0;
 366:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = 0; idx < num_dims; ++idx) {
 367:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // if we need to skip this axis
 368:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     bool is_axis = false;
 369:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (axis != nullptr) {
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       for (int axis_idx = 0; axis_idx < num_axis; ++axis_idx) {
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         if (idx == axis[axis_idx]) {
 372:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           is_axis = true;
 373:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           break;
 374:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         }
 375:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       }
 376:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 377:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (!is_axis) {
 378:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       offset = offset * static_cast<size_t>(dims[idx]) +
 379:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                static_cast<size_t>(index[idx]);
 380:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 381:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 382:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return offset;
 383:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 384:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 385:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int i0, int i1, int i2, int i3) {
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), 4);
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 393:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 394:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 395:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int i0, int i1, int i2, int i3) {
 396:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims.sizes[0]);
 397:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims.sizes[1]);
 398:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims.sizes[2]);
 399:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims.sizes[3]);
 400:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return i0 * dims.strides[0] + i1 * dims.strides[1] + i2 * dims.strides[2] +
 401:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****          i3 * dims.strides[3];
 402:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 403:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 404:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int* index) {
 405:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(dims, index[0], index[1], index[2], index[3]);
 406:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 407:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 408:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int* index) {
 409:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(shape, index[0], index[1], index[2], index[3]);
 410:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 411:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 412:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get array size, DCHECKing that the dim index is in range.
 413:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 414:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Note that this will be phased out with Dims<4>, since RuntimeShape::Dims()
 415:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // already performs this check.
 416:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 417:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int ArraySize(const Dims<N>& array, int index) {
 418:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index >= 0 && index < N);
 419:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return array.sizes[index];
 420:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 421:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 422:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common array size, DCHECKing that they all agree.
 423:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2>
 424:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 425:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2) {
 426:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 427:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ArraySize(array1, index1);
 428:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 429:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 430:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2, typename... Args>
 431:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 432:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2, Args... args) {
 433:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 434:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingArraySize(array1, index1, args...);
 435:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 436:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 437:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common shape dim, DCHECKing that they all agree.
 438:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingDim(const RuntimeShape& shape1, int index1,
 439:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const RuntimeShape& shape2, int index2) {
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 441:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 442:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 443:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 444:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename... Args>
 445:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingDim(const RuntimeShape& shape1, int index1,
 446:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                 const RuntimeShape& shape2, int index2, Args... args) {
 447:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 448:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingDim(shape1, index1, args...);
 449:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 450:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 451:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Will be phased out with Dims<4>, replaced by RuntimeShape::FlatSize().
 452:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 453:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int FlatSize(const Dims<N>& dims) {
 454:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 455:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 456:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= dims.sizes[i];
 457:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 458:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return flat_size;
 459:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 460:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 461:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** TFLITE_DEPRECATED("Prefer FlatSize.")
 462:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int RequiredBufferSizeForDims(const Dims<4>& dims) {
 463:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return FlatSize(dims);
 464:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 465:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 466:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 467:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0) {
 468:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 469:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 470:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 471:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 472:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 473:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 474:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 475:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0,
 476:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_1) {
 477:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 478:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 479:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_3 = check_shape_1.FlatSize();
 480:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 481:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_2, size_3);
 482:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 483:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 484:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 485:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Flat size calculation, checking that dimensions match with one or more other
 486:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // arrays.
 487:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const RuntimeShape& shape,
 488:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_0) {
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), check_shape_0.DimensionsCount());
 490:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 492:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 493:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 494:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return shape.FlatSize();
 495:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 496:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 497:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const RuntimeShape& shape,
 498:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_0,
 499:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_1) {
 500:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), check_shape_0.DimensionsCount());
 501:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 502:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 503:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 504:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 505:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingFlatSize(shape, check_shape_1);
 506:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 507:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 508:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const RuntimeShape& shape,
 509:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_0,
 510:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_1,
 511:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_2) {
 512:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), check_shape_0.DimensionsCount());
 513:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 514:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 515:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 516:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 517:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingFlatSize(shape, check_shape_1, check_shape_2);
 518:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 519:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 520:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const RuntimeShape& shape,
 521:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_0,
 522:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_1,
 523:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_2,
 524:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_3) {
 525:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), check_shape_0.DimensionsCount());
 526:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 527:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 528:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 529:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 530:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingFlatSize(shape, check_shape_1, check_shape_2, check_shape_3);
 531:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 532:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 533:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Flat size calculation, checking that dimensions match with one or more other
 534:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // arrays.
 535:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 536:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const Dims<N>& dims, const Dims<N>& check_dims_0) {
 537:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 538:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(ArraySize(dims, i), ArraySize(check_dims_0, i));
 539:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 540:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return FlatSize(dims);
 541:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 542:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 543:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 544:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const Dims<N>& dims, const Dims<N>& check_dims_0,
 545:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const Dims<N>& check_dims_1) {
 546:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 547:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(ArraySize(dims, i), ArraySize(check_dims_0, i));
 548:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 549:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingFlatSize(dims, check_dims_1);
 550:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 551:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 552:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 553:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const Dims<N>& dims, const Dims<N>& check_dims_0,
 554:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const Dims<N>& check_dims_1,
 555:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const Dims<N>& check_dims_2) {
 556:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 557:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(ArraySize(dims, i), ArraySize(check_dims_0, i));
 558:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 559:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingFlatSize(dims, check_dims_1, check_dims_2);
 560:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 561:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 562:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 563:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const Dims<N>& dims, const Dims<N>& check_dims_0,
 564:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const Dims<N>& check_dims_1,
 565:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const Dims<N>& check_dims_2,
 566:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const Dims<N>& check_dims_3) {
 567:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 568:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(ArraySize(dims, i), ArraySize(check_dims_0, i));
 569:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 570:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingFlatSize(dims, check_dims_1, check_dims_2, check_dims_3);
 571:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 572:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 573:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Data is required to be contiguous, and so many operators can use either the
 574:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // full array flat size or the flat size with one dimension skipped (commonly
 575:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // the depth).
 576:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 577:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int FlatSizeSkipDim(const Dims<N>& dims, int skip_dim) {
 578:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(skip_dim >= 0 && skip_dim < N);
 579:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 580:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 581:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims.sizes[i];
 582:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 583:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return flat_size;
 584:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 585:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 586:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // A combination of MatchingFlatSize() and FlatSizeSkipDim().
 587:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 588:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSizeSkipDim(const Dims<N>& dims, int skip_dim,
 589:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_0) {
 590:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 591:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (i != skip_dim) {
 592:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_DCHECK_EQ(ArraySize(dims, i), ArraySize(check_dims_0, i));
 593:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 594:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 595:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return FlatSizeSkipDim(dims, skip_dim);
 596:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 597:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 598:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 599:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSizeSkipDim(const Dims<N>& dims, int skip_dim,
 600:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_0,
 601:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_1) {
 602:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 603:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (i != skip_dim) {
 604:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_DCHECK_EQ(ArraySize(dims, i), ArraySize(check_dims_0, i));
 605:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 606:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 607:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingFlatSizeSkipDim(dims, skip_dim, check_dims_1);
 608:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 609:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 610:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 611:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSizeSkipDim(const Dims<N>& dims, int skip_dim,
 612:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_0,
 613:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_1,
 614:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_2) {
 615:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 616:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (i != skip_dim) {
 617:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_DCHECK_EQ(ArraySize(dims, i), ArraySize(check_dims_0, i));
 618:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 619:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 620:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingFlatSizeSkipDim(dims, skip_dim, check_dims_1, check_dims_2);
 621:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 622:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 623:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 624:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSizeSkipDim(const Dims<N>& dims, int skip_dim,
 625:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_0,
 626:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_1,
 627:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_2,
 628:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                    const Dims<N>& check_dims_3) {
 629:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 630:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (i != skip_dim) {
 631:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_DCHECK_EQ(ArraySize(dims, i), ArraySize(check_dims_0, i));
 632:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 633:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 634:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingFlatSizeSkipDim(dims, skip_dim, check_dims_1, check_dims_2,
 635:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                  check_dims_3);
 636:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 637:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 638:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Data is required to be contiguous, and so many operators can use either the
 639:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // full array flat size or the flat size with one dimension skipped (commonly
 640:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // the depth).
 641:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int FlatSizeSkipDim(const RuntimeShape& shape, int skip_dim) {
 642:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1633                             		.loc 3 642 3 is_stmt 1
 1634                             	.LBE943:
 1635                             	.LBE942:
 1636                             	.LBE992:
 1637                             	.LBE999:
 1638                             	.LBE1017:
 1639                             	.LBE1026:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1640                             		.loc 3 194 44
 1641                             	.LBB1027:
 1642                             	.LBB1018:
 1643                             	.LBB1000:
 1644                             	.LBB993:
 1645                             	.LBB956:
 1646                             	.LBB953:
 643:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(skip_dim >= 0 && skip_dim < dims_count);
 1647                             		.loc 3 643 3
 1648 00e9 26 05 38 BD 06          		bn	.L121
 644:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const auto* dims_data = shape.DimsData();
 1649                             		.loc 3 644 3
 1650                             	.LVL155:
 1651                             	.LBB944:
 1652                             	.LBB945:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1653                             		.loc 3 214 5
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1654                             		.loc 3 214 34 is_stmt 0
 1655 00ee 61 58                   		cmp	#5, r8
 1656 00f0 2A 05 38 7F 06          		ble	.L127
 1657 00f5 ED 01 34                		mov.L	208[r0], r1
 1658                             	.LVL156:
 1659                             	.LBE945:
 1660                             	.LBE944:
 645:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 1661                             		.loc 3 645 3 is_stmt 1
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 1662                             		.loc 3 646 3
 1663                             		.balign 8,3,1
 1664                             	.L128:
 1665                             	.LBB948:
 1666                             	.LBB946:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1667                             		.loc 3 214 34 is_stmt 0
 1668 00f8 66 17                   		mov.L	#1, r7
 1669                             	.LVL157:
 1670 00fa 66 05                   		mov.L	#0, r5
 1671                             	.LVL158:
 1672                             		.balign 8,3,1
 1673                             	.L130:
 1674                             	.LBE946:
 1675                             	.LBE948:
 1676                             	.LBB949:
 647:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 1677                             		.loc 3 647 5 is_stmt 1
 1678                             		.loc 3 647 34 is_stmt 0
 1679 00fc 47 54                   		cmp	r5, r4
 1680 00fe 3A 68 06                		beq	.L131
 1681 0101 FE 65 12                		mov.L	[r5,r1], r2
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 1682                             		.loc 3 646 3
 1683 0104 62 15                   		add	#1, r5
 1684                             	.LVL159:
 1685 0106 4F 27                   		mul	r2, r7
 1686                             	.LVL160:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 1687                             		.loc 3 646 21
 1688 0108 47 58                   		cmp	r5, r8
 1689 010a 21 F2                   		bne	.L130
 1690                             	.LVL161:
 1691                             		.balign 8,3,2
 1692                             	.L129:
 1693                             	.LBE949:
 648:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 649:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return flat_size;
 1694                             		.loc 3 649 3 is_stmt 1
 1695                             	.LBE953:
 1696                             	.LBE956:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_depth = MatchingDim(weights_shape, weights_dims_count - 2,
 1697                             		.loc 9 42 3
 1698                             		.loc 9 42 39 is_stmt 0
 1699 010c 71 35 FE                		add	#-2, r3, r5
 1700                             	.LVL162:
 1701                             	.LBB957:
 1702                             	.LBB958:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1703                             		.loc 3 440 3 is_stmt 1
 1704                             	.LBB959:
 1705                             	.LBB960:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1706                             		.loc 3 196 5
 1707 010f 26 05 38 97 06          		bn	.L121
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1708                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1709                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1710                             		.loc 3 198 34 is_stmt 0
 1711 0114 61 53                   		cmp	#5, r3
 1712 0116 2A 05 38 67 06          		ble	.L134
 1713 011b ED 02 40                		mov.L	256[r0], r2
 1714 011e FE 65 29                		mov.L	[r5,r2], r9
 1715                             	.LVL163:
 1716                             	.LBE960:
 1717                             	.LBE959:
 1718                             	.LBB962:
 1719                             	.LBB963:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1720                             		.loc 3 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1721                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1722                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1723                             		.loc 3 198 34 is_stmt 0
 1724 0121 61 58                   		cmp	#5, r8
 1725 0123 2A 05 38 6F 06          		ble	.L136
 1726                             	.LVL164:
 1727                             		.balign 8,3,2
 1728                             	.L337:
 1729 0128 ED 05 34                		mov.L	208[r0], r5
 1730 012b FE 64 55                		mov.L	[r4,r5], r5
 1731                             	.LVL165:
 1732                             	.LBE963:
 1733                             	.LBE962:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1734                             		.loc 3 440 3
 1735 012e 47 95                   		cmp	r9, r5
 1736 0130 3B 78 06                		bne	.L121
 1737                             	.LVL166:
 1738                             		.balign 8,3,2
 1739                             	.L338:
 441:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1740                             		.loc 3 441 3 is_stmt 1
 1741                             	.LBE958:
 1742                             	.LBE957:
 1743                             	.LBE993:
 1744                             	.LBE1000:
 1745                             	.LBE1018:
 1746                             	.LBE1027:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1747                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1748                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1749                             		.loc 3 198 5
 1750                             	.LBB1028:
 1751                             	.LBB1019:
 1752                             	.LBB1001:
 1753                             	.LBB994:
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                                        output_shape, output_dims_count - 1);
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int accum_depth = weights_shape.Dims(weights_dims_count - 1);
 1754                             		.loc 9 44 3
 1755                             		.loc 9 44 45 is_stmt 0
 1756 0133 71 35 FF                		add	#-1, r3, r5
 1757                             	.LVL167:
 1758                             	.LBB968:
 1759                             	.LBB969:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1760                             		.loc 3 196 5 is_stmt 1
 1761 0136 26 05 38 70 06          		bn	.L121
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1762                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1763                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1764                             		.loc 3 198 34 is_stmt 0
 1765 013b 61 53                   		cmp	#5, r3
 1766 013d 2A 05 38 6D 06          		ble	.L138
 1767 0142 ED 04 40                		mov.L	256[r0], r4
 1768 0145 FE 65 44                		mov.L	[r5,r4], r4
 1769 0148 E7 04 4E                		mov.L	r4, 312[r0]
 1770                             	.LVL168:
 1771                             		.balign 8,3,1
 1772                             	.L139:
 1773                             	.LBE969:
 1774                             	.LBE968:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   for (int b = 0; b < batches; ++b) {
 1775                             		.loc 9 45 3 is_stmt 1
 1776                             	.LBB971:
 1777                             		.loc 9 45 21 is_stmt 0
 1778 014b 61 07                   		cmp	#0, r7
 1779 014d 2A 05 38 91 00          		ble	.L143
 1780 0152 61 09                   		cmp	#0, r9
 1781 0154 2A 05 38 8A 00          		ble	.L143
 1782 0159 FD C2 95                		shll	#2, r9, r5
 1783 015c E7 05 4D                		mov.L	r5, 308[r0]
 1784 015f EF B1                   		mov.L	r11, r1
 1785 0161 ED 06 4E                		mov.L	312[r0], r6
 1786                             	.LVL169:
 1787 0164 6C 26                   		shll	#2, r6
 1788 0166 EF AF                   		mov.L	r10, r15
 1789                             		.loc 9 45 12
 1790 0168 66 0A                   		mov.L	#0, r10
 1791                             	.LVL170:
 1792                             	.LBB972:
 1793                             	.LBB973:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       float total = 0.f;
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         total += input_data[b * accum_depth + d] *
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                  weights_data[out_c * accum_depth + d];
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       float bias_value = 0.0f;
 1794                             		.loc 9 52 13
 1795 016a E7 08 56                		mov.L	r8, 344[r0]
 1796 016d E7 07 4F                		mov.L	r7, 316[r0]
 1797 0170 ED 0E 4B                		mov.L	300[r0], r14
 1798 0173 ED 08 50                		mov.L	320[r0], r8
 1799                             	.LVL171:
 1800 0176 EF 00                   		.balign 8,3,2
 1801                             	.L145:
 1802 0178 ED 05 4C                		mov.L	304[r0], r5
 1803 017b FF 2B F6                		add	r15, r6, r11
 1804                             	.LBE973:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 1805                             		.loc 9 46 14
 1806 017e 66 07                   		mov.L	#0, r7
 1807                             	.LVL172:
 1808                             		.balign 8,3,2
 1809                             	.L144:
 1810                             	.LBB982:
 1811                             	.LBB974:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         total += input_data[b * accum_depth + d] *
 1812                             		.loc 9 48 25
 1813 0180 ED 0C 4E                		mov.L	312[r0], r12
 1814 0183 61 0C                   		cmp	#0, r12
 1815 0185 2A 05 38 D3 05          		ble	.L244
 1816                             		.balign 8,3,1
 1817                             	.L335:
 1818 018a EF 5C                   		mov.L	r5, r12
 1819 018c EF F3                   		mov.L	r15, r3
 1820                             	.LBE974:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 1821                             		.loc 9 47 13
 1822 018e 66 04                   		mov.L	#0x0, r4
 1823 0190 E7 07 50                		mov.L	r7, 320[r0]
 1824                             	.LVL173:
 1825                             		.balign 8,3,3
 1826                             	.L147:
 1827                             	.LBB975:
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                  weights_data[out_c * accum_depth + d];
 1828                             		.loc 9 49 9 is_stmt 1
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                  weights_data[out_c * accum_depth + d];
 1829                             		.loc 9 49 48 is_stmt 0
 1830 0193 FD 2A 32                		mov.L	[r3+], r2
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
 1831                             		.loc 9 50 54
 1832 0196 FD 2A C7                		mov.L	[r12+], r7
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                  weights_data[out_c * accum_depth + d];
 1833                             		.loc 9 49 50
 1834 0199 FC 8F 72                		fmul	r7, r2
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                  weights_data[out_c * accum_depth + d];
 1835                             		.loc 9 49 15
 1836 019c FC 8B 24                		fadd	r2, r4
 1837                             	.LVL174:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         total += input_data[b * accum_depth + d] *
 1838                             		.loc 9 48 25
 1839 019f 47 B3                   		cmp	r11, r3
 1840 01a1 21 F2                   		bne	.L147
 1841 01a3 ED 07 50                		mov.L	320[r0], r7
 1842                             	.LBE975:
 1843                             		.loc 9 52 7 is_stmt 1
 1844                             	.LVL175:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       if (bias_data) {
 1845                             		.loc 9 53 7
 1846 01a6 61 0D                   		cmp	#0, r13
 1847 01a8 3A B9 05                		beq	.L245
 1848                             	.LVL176:
 1849                             		.balign 8,3,3
 1850                             	.L336:
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         bias_value = bias_data[out_c];
 1851                             		.loc 9 54 9
 1852                             		.loc 9 54 20 is_stmt 0
 1853 01ab FE 67 D3                		mov.L	[r7,r13], r3
 1854                             	.LVL177:
 1855 01ae EF 00                   		.balign 8,3,2
 1856                             	.L148:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       output_data[out_c + output_depth * b] = ActivationFunctionWithMinMax(
 1857                             		.loc 9 56 7 is_stmt 1
 1858                             		.loc 9 56 75 is_stmt 0
 1859 01b0 FC 8B 34                		fadd	r3, r4
 1860                             	.LVL178:
 1861                             	.LBB976:
 1862                             	.LBB977:
 1863                             	.LBB978:
 1864                             		.loc 7 224 7
 1865 01b3 FC 87 84                		fcmp	r8, r4
 1866 01b6 26 04                   		bpz	.L149
 1867 01b8 EF 84                   		mov.L	r8, r4
 1868                             	.LVL179:
 1869                             		.balign 8,3,1
 1870                             	.L149:
 1871 01ba 4B 65                   		add	r6, r5
 1872                             	.LBE978:
 1873                             	.LBE977:
 1874                             	.LBB979:
 1875                             	.LBB980:
 200:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	return __b;
 1876                             		.loc 7 200 7
 1877 01bc FC 87 4E                		fcmp	r4, r14
 1878 01bf 26 05 38 85 05          		bn	.L150
 1879                             	.LVL180:
 1880                             	.LBE980:
 1881                             	.LBE979:
 1882                             	.LBE976:
 1883                             		.loc 9 56 45
 1884 01c4 FE 27 14                		mov.L	r4, [r7,r1]
 1885                             	.LBE982:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       float total = 0.f;
 1886                             		.loc 9 46 5
 1887 01c7 62 17                   		add	#1, r7
 1888                             	.LVL181:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       float total = 0.f;
 1889                             		.loc 9 46 31
 1890 01c9 47 79                   		cmp	r7, r9
 1891 01cb 21 B5                   		bne	.L144
 1892                             		.balign 8,3,1
 1893                             	.L151:
 1894                             	.LBE972:
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 1895                             		.loc 9 45 3
 1896 01cd 62 1A                   		add	#1, r10
 1897                             	.LVL182:
 1898 01cf 06 89 01 4D             		add	308[r0], r1
 1899 01d3 EF BF                   		mov.L	r11, r15
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 1900                             		.loc 9 45 21
 1901 01d5 ED 07 4F                		mov.L	316[r0], r7
 1902                             	.LVL183:
 1903 01d8 47 7A                   		cmp	r7, r10
 1904 01da 21 9E                   		bne	.L145
 1905 01dc ED 08 56                		mov.L	344[r0], r8
 1906                             	.LVL184:
 1907 01df 03                      		.balign 8,3,1
 1908                             	.L143:
 1909                             	.LBE971:
 1910                             	.LBE994:
 1911                             	.LBE1001:
 1912                             	.LBB1002:
 1913                             	.LBB1003:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1914                             		.loc 3 185 5 is_stmt 1
 1915 01e0 61 58                   		cmp	#5, r8
 1916 01e2 2B 0E                   		ble	.L142
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1917                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1918                             		.loc 3 189 16 is_stmt 0
 1919 01e4 ED 01 34                		mov.L	208[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1920                             		.loc 3 189 29
 1921 01e7 61 01                   		cmp	#0, r1
 1922 01e9 17                      		beq	.L142
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1923                             		.loc 3 189 16
 1924 01ea 05 00 00 00             		bsr	__ZdaPv
 1925                             	.LVL185:
 1926 01ee EF 00                   		.balign 8,3,2
 1927                             	.L142:
 1928                             	.LBE1003:
 1929                             	.LBE1002:
 1930                             	.LBB1004:
 1931                             	.LBB1005:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1932                             		.loc 3 185 5 is_stmt 1
 1933 01f0 ED 07 39                		mov.L	228[r0], r7
 1934 01f3 61 57                   		cmp	#5, r7
 1935 01f5 2B 0C                   		ble	.L153
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1936                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1937                             		.loc 3 189 16 is_stmt 0
 1938 01f7 ED 01 3A                		mov.L	232[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1939                             		.loc 3 189 29
 1940 01fa 61 01                   		cmp	#0, r1
 1941 01fc 15                      		beq	.L153
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1942                             		.loc 3 189 16
 1943 01fd 05 00 00 00             		bsr	__ZdaPv
 1944                             	.LVL186:
 1945                             		.balign 8,3,2
 1946                             	.L153:
 1947                             	.LBE1005:
 1948                             	.LBE1004:
 1949                             	.LBB1006:
 1950                             	.LBB1007:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1951                             		.loc 3 185 5 is_stmt 1
 1952 0201 ED 07 3F                		mov.L	252[r0], r7
 1953 0204 61 57                   		cmp	#5, r7
 1954 0206 2B 0C                   		ble	.L154
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1955                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1956                             		.loc 3 189 16 is_stmt 0
 1957 0208 ED 01 40                		mov.L	256[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1958                             		.loc 3 189 29
 1959 020b 61 01                   		cmp	#0, r1
 1960 020d 15                      		beq	.L154
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1961                             		.loc 3 189 16
 1962 020e 05 00 00 00             		bsr	__ZdaPv
 1963                             	.LVL187:
 1964                             		.balign 8,3,2
 1965                             	.L154:
 1966                             	.LBE1007:
 1967                             	.LBE1006:
 1968                             	.LBB1008:
 1969                             	.LBB1009:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1970                             		.loc 3 185 5 is_stmt 1
 1971 0212 ED 07 45                		mov.L	276[r0], r7
 1972 0215 61 57                   		cmp	#5, r7
 1973 0217 2B 0C                   		ble	.L232
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1974                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1975                             		.loc 3 189 16 is_stmt 0
 1976 0219 ED 01 46                		mov.L	280[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1977                             		.loc 3 189 29
 1978 021c 61 01                   		cmp	#0, r1
 1979 021e 15                      		beq	.L232
 1980                             	.LBE1009:
 1981                             	.LBE1008:
 1982                             	.LBE1019:
 1983                             	.LBE1028:
 1984                             	.LBB1029:
 1985                             	.LBB1030:
 1986                             	.LBB1031:
 1987                             	.LBB1032:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1988                             		.loc 3 189 16
 1989 021f 05 00 00 00             		bsr	__ZdaPv
 1990                             	.LVL188:
 1991                             		.balign 8,3,1
 1992                             	.L232:
 1993                             	.LBE1032:
 1994                             	.LBE1031:
 267:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     default:
 1995                             		.loc 1 267 7 is_stmt 1
 274:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
 1996                             		.loc 1 274 10 is_stmt 0
 1997 0223 66 01                   		mov.L	#0, r1
 1998                             	.LBE1030:
 1999                             	.LBE1029:
 2000                             		.loc 1 335 1
 2001 0225 3F 6D 69                		rtsd	#420, r6-r13
 2002                             	.LVL189:
 2003                             	.L123:
 322:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       return EvalQuantizedInt8(context, node, data, input, filter, bias,
 2004                             		.loc 1 322 5 is_stmt 1
 323:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                output);
 2005                             		.loc 1 323 7
 323:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                output);
 2006                             		.loc 1 323 31 is_stmt 0
 2007 0228 E3 07                   		mov.L	r7, [r0]
 2008 022a E7 0B 01                		mov.L	r11, 4[r0]
 2009 022d EF C4                   		mov.L	r12, r4
 2010 022f EF A3                   		mov.L	r10, r3
 2011 0231 EF 91                   		mov.L	r9, r1
 2012 0233 05 00 00 00             		bsr	__ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16Tf
 2013                             	.LVL190:
 2014                             		.loc 1 335 1
 2015 0237 3F 6D 69                		rtsd	#420, r6-r13
 2016                             	.LVL191:
 2017                             	.L122:
 326:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       return EvalQuantized(context, node, data, input, filter, bias, output);
 2018                             		.loc 1 326 5 is_stmt 1
 327:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 2019                             		.loc 1 327 7
 2020                             	.LBB1335:
 2021                             	.LBB1320:
 237:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const int32_t filter_offset = -data.filter_zero_point;
 2022                             		.loc 1 237 3
 247:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.quantized_activation_min = data.output_activation_min;
 2023                             		.loc 1 247 34 is_stmt 0
 2024 023a E5 20 01 4B             		mov.L	4[r2], 300[r0]
 261:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     case kTfLiteUInt8:
 2025                             		.loc 1 261 19
 2026 023e ED B1 02                		mov.L	8[r11], r1
 237:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const int32_t filter_offset = -data.filter_zero_point;
 2027                             		.loc 1 237 38
 2028 0241 E5 20 06 51             		mov.L	24[r2], 324[r0]
 2029                             	.LVL192:
 238:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const int32_t output_offset = data.output_zero_point;
 2030                             		.loc 1 238 3 is_stmt 1
 238:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const int32_t output_offset = data.output_zero_point;
 2031                             		.loc 1 238 39 is_stmt 0
 2032 0245 E5 20 07 52             		mov.L	28[r2], 328[r0]
 2033                             	.LVL193:
 239:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 2034                             		.loc 1 239 3 is_stmt 1
 239:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 2035                             		.loc 1 239 17 is_stmt 0
 2036 0249 E5 20 08 56             		mov.L	32[r2], 344[r0]
 2037                             	.LVL194:
 241:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.input_offset = input_offset;
 2038                             		.loc 1 241 3 is_stmt 1
 242:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.weights_offset = filter_offset;
 2039                             		.loc 1 242 3
 243:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.output_offset = output_offset;
 2040                             		.loc 1 243 3
 244:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.output_multiplier = data.output_multiplier;
 2041                             		.loc 1 244 3
 245:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // Legacy ops used mixed left and right shifts. Now all are +ve-means-left.
 2042                             		.loc 1 245 3
 245:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // Legacy ops used mixed left and right shifts. Now all are +ve-means-left.
 2043                             		.loc 1 245 38 is_stmt 0
 2044 024d EC 26                   		mov.L	[r2], r6
 2045                             	.LVL195:
 247:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.quantized_activation_min = data.output_activation_min;
 2046                             		.loc 1 247 3 is_stmt 1
 247:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.quantized_activation_min = data.output_activation_min;
 2047                             		.loc 1 247 28 is_stmt 0
 2048 024f ED 08 4B                		mov.L	300[r0], r8
 2049 0252 7E 18                   		neg	r8
 2050 0254 E7 08 4F                		mov.L	r8, 316[r0]
 248:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.quantized_activation_max = data.output_activation_max;
 2051                             		.loc 1 248 3 is_stmt 1
 248:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   op_params.quantized_activation_max = data.output_activation_max;
 2052                             		.loc 1 248 45 is_stmt 0
 2053 0257 ED 2D 02                		mov.L	8[r2], r13
 249:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 2054                             		.loc 1 249 3 is_stmt 1
 249:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 2055                             		.loc 1 249 45 is_stmt 0
 2056 025a E5 20 03 4E             		mov.L	12[r2], 312[r0]
 261:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     case kTfLiteUInt8:
 2057                             		.loc 1 261 3 is_stmt 1
 2058 025e 61 31                   		cmp	#3, r1
 2059 0260 3A 9B 02                		beq	.L157
 2060 0263 61 71                   		cmp	#7, r1
 2061 0265 3B 7A 02                		bne	.L330
 265:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       TF_LITE_FULLY_CONNECTED(int16_t);
 2062                             		.loc 1 265 5
 266:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2063                             		.loc 1 266 7
 2064 0268 71 0F 54                		add	#0x54, r0, r15
 2065 026b EF A1                   		mov.L	r10, r1
 2066 026d 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2067                             	.LVL196:
 2068 0271 71 0F 3C                		add	#60, r0, r15
 2069 0274 EF C1                   		mov.L	r12, r1
 2070                             	.LBB1035:
 2071                             	.LBB1036:
 2072                             		.loc 2 62 53 is_stmt 0
 2073 0276 EC A8                   		mov.L	[r10], r8
 2074                             	.LVL197:
 2075                             	.LBE1036:
 2076                             	.LBE1035:
 266:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2077                             		.loc 1 266 7
 2078 0278 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2079                             	.LVL198:
 2080                             	.LBB1037:
 2081                             	.LBB1038:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 2082                             		.loc 2 61 3
 2083 027c 61 0C                   		cmp	#0, r12
 2084 027e 3A 2A 05                		beq	.L121
 2085                             	.LBE1038:
 2086                             	.LBE1037:
 266:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2087                             		.loc 1 266 7
 2088 0281 71 0F 24                		add	#36, r0, r15
 2089 0284 EF 71                   		mov.L	r7, r1
 2090                             	.LBB1040:
 2091                             	.LBB1039:
 2092                             		.loc 2 62 53
 2093 0286 E4 C0 59                		mov.L	[r12], 356[r0]
 2094                             	.LVL199:
 2095                             	.LBE1039:
 2096                             	.LBE1040:
 266:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2097                             		.loc 1 266 7
 2098 0289 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2099                             	.LVL200:
 2100                             	.LBB1041:
 2101                             	.LBB1042:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 2102                             		.loc 2 61 3
 2103 028d 61 07                   		cmp	#0, r7
 2104 028f 3A 19 05                		beq	.L121
 2105                             	.LBE1042:
 2106                             	.LBE1041:
 266:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2107                             		.loc 1 266 7
 2108 0292 66 CF                   		mov.L	#12, r15
 2109 0294 4B 0F                   		add	r0, r15
 2110 0296 EF B1                   		mov.L	r11, r1
 2111                             	.LBB1044:
 2112                             	.LBB1043:
 2113                             		.loc 2 62 53
 2114 0298 E4 70 5A                		mov.L	[r7], 360[r0]
 2115                             	.LVL201:
 2116                             	.LBE1043:
 2117                             	.LBE1044:
 266:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2118                             		.loc 1 266 7
 2119 029b 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2120                             	.LVL202:
 2121                             	.LBB1045:
 2122                             	.LBB1046:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2123                             		.loc 2 55 28
 2124 029f EC B2                   		mov.L	[r11], r2
 2125                             	.LVL203:
 2126                             	.LBE1046:
 2127                             	.LBE1045:
 2128                             	.LBB1047:
 2129                             	.LBB1048:
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****           total + bias_value, output_activation_min, output_activation_max);
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     }
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   }
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** }
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** inline void FullyConnected(
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const FullyConnectedParams& params, const RuntimeShape& input_shape,
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const uint8_t* input_data, const RuntimeShape& filter_shape,
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const uint8_t* filter_data, const RuntimeShape& bias_shape,
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const int32_t* bias_data, const RuntimeShape& output_shape,
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     uint8_t* output_data) {
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t input_offset = params.input_offset;
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t filter_offset = params.weights_offset;
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_offset = params.output_offset;
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_multiplier = params.output_multiplier;
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_shift = params.output_shift;
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_activation_min = params.quantized_activation_min;
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_activation_max = params.quantized_activation_max;
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   TFLITE_DCHECK_GE(filter_shape.DimensionsCount(), 2);
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   TFLITE_DCHECK_GE(output_shape.DimensionsCount(), 1);
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   TFLITE_DCHECK_LE(output_activation_min, output_activation_max);
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // TODO(benoitjacob): This really should be:
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   //     const int batches = ArraySize(output_dims, 1);
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // but the current --variable_batch hack consists in overwriting the 3rd
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // dimension with the runtime batch size, as we don't keep track for each
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // array of which dimension is the batch dimension in it.
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_dim_count = output_shape.DimensionsCount();
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int filter_dim_count = filter_shape.DimensionsCount();
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int batches = FlatSizeSkipDim(output_shape, output_dim_count - 1);
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_depth = MatchingDim(filter_shape, filter_dim_count - 2,
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                                        output_shape, output_dim_count - 1);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int accum_depth = filter_shape.Dims(filter_dim_count - 1);
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   for (int b = 0; b < batches; ++b) {
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       int32_t acc = 0;
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t filter_val = filter_data[out_c * accum_depth + d];
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         acc += (filter_val + filter_offset) * (input_val + input_offset);
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       if (bias_data) {
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         acc += bias_data[out_c];
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       acc = MultiplyByQuantizedMultiplier(acc, output_multiplier, output_shift);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       acc += output_offset;
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       acc = std::max(acc, output_activation_min);
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       acc = std::min(acc, output_activation_max);
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       output_data[out_c + output_depth * b] = static_cast<uint8_t>(acc);
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     }
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   }
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** }
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** inline void FullyConnected(
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const FullyConnectedParams& params, const RuntimeShape& input_shape,
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const uint8_t* input_data, const RuntimeShape& filter_shape,
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const uint8_t* filter_data, const RuntimeShape& bias_shape,
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     const int32_t* bias_data, const RuntimeShape& output_shape,
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     int16_t* output_data) {
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t input_offset = params.input_offset;
 2130                             		.loc 9 116 3 is_stmt 1
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t filter_offset = params.weights_offset;
 2131                             		.loc 9 117 3
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_offset = params.output_offset;
 2132                             		.loc 9 118 3
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_multiplier = params.output_multiplier;
 2133                             		.loc 9 119 3
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_shift = params.output_shift;
 2134                             		.loc 9 120 3
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_activation_min = params.quantized_activation_min;
 2135                             		.loc 9 121 3
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_activation_max = params.quantized_activation_max;
 2136                             		.loc 9 122 3
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   TFLITE_DCHECK_LE(output_activation_min, output_activation_max);
 2137                             		.loc 9 124 3
 2138 02a1 ED 05 4E                		mov.L	312[r0], r5
 2139 02a4 47 5D                   		cmp	r5, r13
 2140 02a6 2B 05 38 00 05          		bgt	.L121
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   TFLITE_DCHECK_EQ(output_offset, 0);
 2141                             		.loc 9 125 3
 2142 02ab ED 07 56                		mov.L	344[r0], r7
 2143                             	.LVL204:
 2144 02ae 61 07                   		cmp	#0, r7
 2145 02b0 3B F8 04                		bne	.L121
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // TODO(benoitjacob): This really should be:
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   //     const int batches = ArraySize(output_dims, 1);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // but the current --variable_batch hack consists in overwriting the 3rd
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // dimension with the runtime batch size, as we don't keep track for each
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // array of which dimension is the batch dimension in it.
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_dim_count = output_shape.DimensionsCount();
 2146                             		.loc 9 131 3
 2147                             		.loc 9 131 60 is_stmt 0
 2148 02b3 E5 00 03 53             		mov.L	12[r0], 332[r0]
 2149                             	.LVL205:
 2150                             	.LBE1048:
 2151                             	.LBE1047:
 2152                             	.LBE1320:
 2153                             	.LBE1335:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2154                             		.loc 3 194 44 is_stmt 1
 2155                             	.LBB1336:
 2156                             	.LBB1321:
 2157                             	.LBB1154:
 2158                             	.LBB1143:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int filter_dim_count = filter_shape.DimensionsCount();
 2159                             		.loc 9 132 3
 2160                             		.loc 9 132 60 is_stmt 0
 2161 02b7 AB 8C                   		mov.L	60[r0], r4
 2162                             	.LVL206:
 2163                             	.LBE1143:
 2164                             	.LBE1154:
 2165                             	.LBE1321:
 2166                             	.LBE1336:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2167                             		.loc 3 194 44 is_stmt 1
 2168                             	.LBB1337:
 2169                             	.LBB1322:
 2170                             	.LBB1155:
 2171                             	.LBB1144:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int batches = FlatSizeSkipDim(output_shape, output_dim_count - 1);
 2172                             		.loc 9 133 3
 2173                             		.loc 9 133 38 is_stmt 0
 2174 02b9 ED 0A 53                		mov.L	332[r0], r10
 2175                             	.LVL207:
 2176 02bc 60 1A                   		sub	#1, r10
 2177                             	.LVL208:
 2178                             	.LBB1049:
 2179                             	.LBB1050:
 642:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(skip_dim >= 0 && skip_dim < dims_count);
 2180                             		.loc 3 642 3 is_stmt 1
 2181                             	.LBE1050:
 2182                             	.LBE1049:
 2183                             	.LBE1144:
 2184                             	.LBE1155:
 2185                             	.LBE1322:
 2186                             	.LBE1337:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2187                             		.loc 3 194 44
 2188                             	.LBB1338:
 2189                             	.LBB1323:
 2190                             	.LBB1156:
 2191                             	.LBB1145:
 2192                             	.LBB1064:
 2193                             	.LBB1060:
 643:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const auto* dims_data = shape.DimsData();
 2194                             		.loc 3 643 3
 2195 02be 26 05 38 E8 04          		bn	.L121
 644:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 2196                             		.loc 3 644 3
 2197                             	.LVL209:
 2198                             	.LBB1051:
 2199                             	.LBB1052:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2200                             		.loc 3 214 5
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2201                             		.loc 3 214 34 is_stmt 0
 2202 02c3 ED 09 53                		mov.L	332[r0], r9
 2203 02c6 61 59                   		cmp	#5, r9
 2204 02c8 2B 05 38 04 05          		bgt	.L331
 2205                             	.LBE1052:
 2206                             	.LBE1051:
 2207                             	.LBB1055:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 2208                             		.loc 3 646 21
 2209 02cd 71 9B 00                		add	#0, r9, r11
 2210                             	.LVL210:
 2211 02d0 2A 05 38 49 06          		ble	.L251
 2212                             	.LBE1055:
 2213                             	.LBB1056:
 2214                             	.LBB1053:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2215                             		.loc 3 214 34
 2216 02d5 71 03 10                		add	#16, r0, r3
 2217                             	.LVL211:
 2218                             		.balign 8,3,1
 2219                             	.L197:
 2220 02d8 66 07                   		mov.L	#0, r7
 2221 02da 66 19                   		mov.L	#1, r9
 2222                             	.LVL212:
 2223                             		.balign 8,3,1
 2224                             	.L199:
 2225                             	.LBE1053:
 2226                             	.LBE1056:
 2227                             	.LBB1057:
 647:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2228                             		.loc 3 647 5 is_stmt 1
 647:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2229                             		.loc 3 647 34 is_stmt 0
 2230 02dc 47 7A                   		cmp	r7, r10
 2231 02de 3A A4 05                		beq	.L200
 2232 02e1 FE 67 35                		mov.L	[r7,r3], r5
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 2233                             		.loc 3 646 3
 2234 02e4 62 17                   		add	#1, r7
 2235                             	.LVL213:
 2236 02e6 4F 59                   		mul	r5, r9
 2237                             	.LVL214:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 2238                             		.loc 3 646 21
 2239 02e8 ED 0C 53                		mov.L	332[r0], r12
 2240 02eb 47 7C                   		cmp	r7, r12
 2241 02ed 21 EF                   		bne	.L199
 2242                             	.LVL215:
 2243 02ef 03                      		.balign 8,3,2
 2244                             	.L198:
 2245                             	.LBE1057:
 2246                             		.loc 3 649 3 is_stmt 1
 2247                             	.LBE1060:
 2248                             	.LBE1064:
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_depth = MatchingDim(filter_shape, filter_dim_count - 2,
 2249                             		.loc 9 134 3
 2250                             		.loc 9 134 39 is_stmt 0
 2251 02f0 71 47 FE                		add	#-2, r4, r7
 2252                             	.LVL216:
 2253                             	.LBB1065:
 2254                             	.LBB1066:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 2255                             		.loc 3 440 3 is_stmt 1
 2256                             	.LBB1067:
 2257                             	.LBB1068:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2258                             		.loc 3 196 5
 2259 02f3 26 05 38 B3 04          		bn	.L121
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2260                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2261                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2262                             		.loc 3 198 34 is_stmt 0
 2263 02f8 61 54                   		cmp	#5, r4
 2264 02fa 2A 05 38 CC 05          		ble	.L203
 2265 02ff AC 05                   		mov.L	64[r0], r5
 2266 0301 FE 67 55                		mov.L	[r7,r5], r5
 2267 0304 E7 05 55                		mov.L	r5, 340[r0]
 2268                             	.LVL217:
 2269 0307 03                      		.balign 8,3,2
 2270                             	.L204:
 2271                             	.LBE1068:
 2272                             	.LBE1067:
 2273                             	.LBB1070:
 2274                             	.LBB1071:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2275                             		.loc 3 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2276                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2277                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2278                             		.loc 3 198 34 is_stmt 0
 2279 0308 ED 01 53                		mov.L	332[r0], r1
 2280 030b 61 51                   		cmp	#5, r1
 2281 030d 2A 05 38 9D 05          		ble	.L205
 2282 0312 A9 07                   		mov.L	16[r0], r7
 2283 0314 FE 6A 77                		mov.L	[r10,r7], r7
 2284                             	.LVL218:
 2285 0317 03                      		.balign 8,3,2
 2286                             	.L206:
 2287                             	.LBE1071:
 2288                             	.LBE1070:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 2289                             		.loc 3 440 3
 2290 0318 ED 05 55                		mov.L	340[r0], r5
 2291 031b 47 57                   		cmp	r5, r7
 2292 031d 3B 8B 04                		bne	.L121
 441:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 2293                             		.loc 3 441 3 is_stmt 1
 2294                             	.LVL219:
 2295                             	.LBE1066:
 2296                             	.LBE1065:
 2297                             	.LBE1145:
 2298                             	.LBE1156:
 2299                             	.LBE1323:
 2300                             	.LBE1338:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2301                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2302                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2303                             		.loc 3 198 5
 2304                             	.LBB1339:
 2305                             	.LBB1324:
 2306                             	.LBB1157:
 2307                             	.LBB1146:
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                                        output_shape, output_dim_count - 1);
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int accum_depth = filter_shape.Dims(filter_dim_count - 1);
 2308                             		.loc 9 136 3
 2309                             		.loc 9 136 44 is_stmt 0
 2310 0320 71 47 FF                		add	#-1, r4, r7
 2311                             	.LVL220:
 2312                             	.LBB1077:
 2313                             	.LBB1078:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2314                             		.loc 3 196 5 is_stmt 1
 2315 0323 26 05 38 83 04          		bn	.L121
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2316                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2317                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2318                             		.loc 3 198 34 is_stmt 0
 2319 0328 61 54                   		cmp	#5, r4
 2320 032a 2A 05 38 AE 05          		ble	.L207
 2321 032f ED 0A 10                		mov.L	64[r0], r10
 2322 0332 FE 67 A3                		mov.L	[r7,r10], r3
 2323                             	.LVL221:
 2324                             		.balign 8,3,1
 2325                             	.L208:
 2326                             	.LBE1078:
 2327                             	.LBE1077:
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   for (int b = 0; b < batches; ++b) {
 2328                             		.loc 9 137 3 is_stmt 1
 2329                             	.LBB1080:
 2330                             		.loc 9 137 21 is_stmt 0
 2331 0335 61 09                   		cmp	#0, r9
 2332 0337 2A 05 38 5F 01          		ble	.L215
 2333 033c ED 0A 4B                		mov.L	300[r0], r10
 2334 033f FD 74 4A 00             		max	#0, r10
 2335 0343 E7 0A 4D                		mov.L	r10, 308[r0]
 2336                             	.LBB1081:
 2337                             	.LBB1082:
 2338                             	.LBB1083:
 2339                             	.LBB1084:
 2340                             	.LBB1085:
 2341                             	.LBB1086:
 2342                             		.loc 5 371 50
 2343 0346 EF A7                   		mov.L	r10, r7
 2344 0348 71 77 E0                		add	#-32, r7
 2345 034b 26 05 38 B9 05          		bn	.L212
 2346 0350 66 07                   		mov.L	#0, r7
 2347                             		.balign 8,3,1
 2348                             	.L213:
 2349                             		.loc 5 371 63
 2350 0352 60 17                   		sub	#1, r7
 2351 0354 E7 07 50                		mov.L	r7, 320[r0]
 2352 0357 ED 0C 55                		mov.L	340[r0], r12
 2353 035a 4B CC                   		add	r12, r12
 2354 035c E7 0C 57                		mov.L	r12, 348[r0]
 2355                             	.LBB1087:
 2356                             	.LBB1088:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2357                             		.loc 5 142 15
 2358 035f 6A 17                   		shar	#1, r7
 2359 0361 E7 07 54                		mov.L	r7, 336[r0]
 2360 0364 4B C2                   		add	r12, r2
 2361                             	.LVL222:
 2362 0366 EF 81                   		mov.L	r8, r1
 2363 0368 ED 0E 55                		mov.L	340[r0], r14
 2364 036b 75 1E FE                		mul	#-2, r14
 2365 036e E7 0E 5B                		mov.L	r14, 364[r0]
 2366 0371 ED 04 51                		mov.L	324[r0], r4
 2367 0374 7E 14                   		neg	r4
 2368 0376 D7 04 A2                		mov.W	r4, 324[r0]
 2369                             	.LVL223:
 2370 0379 ED 05 52                		mov.L	328[r0], r5
 2371                             	.LVL224:
 2372 037c 7E 15                   		neg	r5
 2373 037e D7 05 A4                		mov.W	r5, 328[r0]
 2374                             	.LVL225:
 2375                             	.LBE1088:
 2376                             	.LBE1087:
 2377                             	.LBE1086:
 2378                             	.LBE1085:
 2379                             	.LBB1103:
 2380                             	.LBB1104:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2381                             		.loc 5 346 35
 2382 0381 E7 09 58                		mov.L	r9, 352[r0]
 2383 0384 ED 09 56                		mov.L	344[r0], r9
 2384                             	.LVL226:
 2385 0387 03                      		.balign 8,3,2
 2386                             	.L216:
 2387                             	.LBE1104:
 2388                             	.LBE1103:
 2389                             	.LBE1084:
 2390                             	.LBE1083:
 2391                             	.LBE1082:
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 2392                             		.loc 9 138 31
 2393 0388 ED 07 55                		mov.L	340[r0], r7
 2394 038b 61 07                   		cmp	#0, r7
 2395 038d 2A 05 38 F7 00          		ble	.L228
 2396 0392 ED 08 4F                		mov.L	316[r0], r8
 2397 0395 FD 74 48 00             		max	#0, r8
 2398 0399 ED 0C 5A                		mov.L	360[r0], r12
 2399 039c ED 05 5B                		mov.L	364[r0], r5
 2400 039f 4B 25                   		add	r2, r5
 2401 03a1 ED 04 59                		mov.L	356[r0], r4
 2402                             	.LBB1127:
 2403                             	.LBB1117:
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // Internal accumulation.
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // Initialize accumulator with the bias-value.
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       int32_t accum = bias_data[out_c];
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // Accumulation loop.
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 2404                             		.loc 9 143 25
 2405 03a4 FF 2A 13                		add	r1, r3, r10
 2406 03a7 E7 0A 4C                		mov.L	r10, 304[r0]
 2407                             	.LBE1117:
 2408                             	.LBB1119:
 2409                             	.LBB1113:
 2410                             	.LBB1108:
 2411                             	.LBB1105:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2412                             		.loc 5 349 19
 2413 03aa E7 08 5E                		mov.L	r8, 376[r0]
 2414 03ad E7 09 5D                		mov.L	r9, 372[r0]
 2415 03b0 E7 01 5F                		mov.L	r1, 380[r0]
 2416                             	.LVL227:
 2417                             		.balign 8,3,3
 2418                             	.L217:
 2419                             	.LBE1105:
 2420                             	.LBE1108:
 2421                             	.LBE1113:
 2422                             	.LBE1119:
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // Accumulation loop.
 2423                             		.loc 9 141 7 is_stmt 1
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // Accumulation loop.
 2424                             		.loc 9 141 38 is_stmt 0
 2425 03b3 FD 2A C7                		mov.L	[r12+], r7
 2426                             	.LVL228:
 2427                             		.loc 9 143 7 is_stmt 1
 2428                             	.LBB1120:
 2429                             		.loc 9 143 25 is_stmt 0
 2430 03b6 61 03                   		cmp	#0, r3
 2431 03b8 2B 43                   		ble	.L218
 2432                             	.LBE1120:
 2433                             	.LBE1127:
 2434                             	.LBE1081:
 2435                             	.LBE1080:
 2436                             	.LBE1146:
 2437                             	.LBE1157:
 238:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const int32_t output_offset = data.output_zero_point;
 2438                             		.loc 1 238 17
 2439 03ba EF 4E                   		mov.L	r4, r14
 2440 03bc ED 0B 5F                		mov.L	380[r0], r11
 2441 03bf ED 08 5E                		mov.L	376[r0], r8
 2442 03c2 ED 09 5D                		mov.L	372[r0], r9
 2443 03c5 EF B1                   		mov.L	r11, r1
 2444 03c7 E7 0C 60                		mov.L	r12, 384[r0]
 2445                             	.LVL229:
 2446                             		.balign 8,3,3
 2447                             	.L219:
 2448                             	.LBB1158:
 2449                             	.LBB1147:
 2450                             	.LBB1134:
 2451                             	.LBB1131:
 2452                             	.LBB1128:
 2453                             	.LBB1121:
 2454                             	.LBB1118:
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int16_t input_val = input_data[b * accum_depth + d] + input_offset;
 2455                             		.loc 9 144 9 is_stmt 1
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int16_t filter_val =
 2456                             		.loc 9 145 9
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****             filter_data[out_c * accum_depth + d] + filter_offset;
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         accum += filter_val * input_val;
 2457                             		.loc 9 147 9
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****             filter_data[out_c * accum_depth + d] + filter_offset;
 2458                             		.loc 9 146 48 is_stmt 0
 2459 03ca FD 38 EC                		movu.B	[r14+], r12
 2460                             	.LVL230:
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int16_t filter_val =
 2461                             		.loc 9 144 59
 2462 03cd FD 38 BF                		movu.B	[r11+], r15
 2463                             	.LVL231:
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****             filter_data[out_c * accum_depth + d] + filter_offset;
 2464                             		.loc 9 146 50
 2465 03d0 DD 0A A4                		mov.W	328[r0], r10
 2466 03d3 4B AC                   		add	r10, r12
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int16_t filter_val =
 2467                             		.loc 9 144 61
 2468 03d5 DD 0A A2                		mov.W	324[r0], r10
 2469 03d8 4B FA                   		add	r15, r10
 2470 03da E7 0A 5C                		mov.L	r10, 368[r0]
 2471                             		.loc 9 147 29
 2472 03dd DF CA                   		mov.W	r12, r10
 2473 03df ED 0C 5C                		mov.L	368[r0], r12
 2474 03e2 DF CF                   		mov.W	r12, r15
 2475 03e4 4F FA                   		mul	r15, r10
 2476                             		.loc 9 147 15
 2477 03e6 4B A7                   		add	r10, r7
 2478                             	.LVL232:
 2479                             	.LBE1118:
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int16_t input_val = input_data[b * accum_depth + d] + input_offset;
 2480                             		.loc 9 143 25
 2481 03e8 ED 0F 4C                		mov.L	304[r0], r15
 2482 03eb 47 BF                   		cmp	r11, r15
 2483 03ed 21 DD                   		bne	.L219
 2484 03ef E7 08 5E                		mov.L	r8, 376[r0]
 2485 03f2 E7 09 5D                		mov.L	r9, 372[r0]
 2486 03f5 E7 01 5F                		mov.L	r1, 380[r0]
 2487 03f8 ED 0C 60                		mov.L	384[r0], r12
 2488                             	.LVL233:
 2489                             		.balign 8,3,2
 2490                             	.L218:
 2491                             	.LBE1121:
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // Down-scale the final int32_t accumulator to the scale used by our
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // (16-bit, typically 3 integer bits) fixed-point format. The quantized
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // multiplier and shift here have been pre-computed offline
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // (e.g. by toco).
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       accum =
 2492                             		.loc 9 153 7 is_stmt 1
 2493                             	.LBB1122:
 2494                             	.LBB1114:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 2495                             		.loc 6 159 3
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 2496                             		.loc 6 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 2497                             		.loc 6 161 3
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 2498                             		.loc 6 162 3
 2499                             		.loc 6 163 3
 2500                             		.loc 6 163 29 is_stmt 0
 2501 03fb ED 01 5E                		mov.L	376[r0], r1
 2502 03fe FD 62 17                		shll	r1, r7
 2503                             	.LVL234:
 2504                             	.LBB1109:
 2505                             	.LBB1106:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2506                             		.loc 5 342 3 is_stmt 1
 2507 0401 EF 78                   		mov.L	r7, r8
 2508 0403 FC 1B 68                		emul	r6, r8
 2509 0406 EF 8A                   		mov.L	r8, r10
 2510 0408 EF 9B                   		mov.L	r9, r11
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2511                             		.loc 5 342 26 is_stmt 0
 2512 040a 47 76                   		cmp	r7, r6
 2513 040c 3A C7 03                		beq	.L332
 2514                             	.LVL235:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2515                             		.loc 5 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2516                             		.loc 5 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2517                             		.loc 5 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2518                             		.loc 5 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2519                             		.loc 5 346 35 is_stmt 0
 2520 040f 62 09                   		add	#0, r9
 2521 0411 29 05 38 EF 03          		bge	.L237
 2522 0416 F9 02 56 01 00 00 C0    		mov.L	#-1073741823, 344[r0]
 2523 041d FB 76 FF                		mov.L	#-1, r7
 2524                             	.LVL236:
 2525                             		.balign 8,3,2
 2526                             	.L239:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2527                             		.loc 5 348 49
 2528 0420 ED 01 56                		mov.L	344[r0], r1
 2529 0423 FF 2F A1                		add	r10, r1, r15
 2530 0426 FC 0B B7                		adc	r11, r7
 2531 0429 E7 0F 5C                		mov.L	r15, 368[r0]
 2532 042c 26 0F                   		bpz	.L224
 2533 042e 70 F1 FF FF FF 7F       		add	#0x7fffffff, r15, r1
 2534 0434 FD 74 27 00             		adc	#0, r7
 2535 0438 E7 01 5C                		mov.L	r1, 368[r0]
 2536                             		.balign 8,3,1
 2537                             	.L224:
 2538 043b 6C 17                   		shll	#1, r7
 2539 043d ED 0E 5C                		mov.L	368[r0], r14
 2540 0440 69 FE                   		shlr	#31, r14
 2541 0442 57 E7                   		or	r14, r7
 2542                             		.balign 8,3,2
 2543                             	.L223:
 2544                             	.LVL237:
 2545                             	.LBE1106:
 2546                             	.LBE1109:
 2547                             	.LBB1110:
 2548                             	.LBB1101:
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 2549                             		.loc 5 370 3
 2550 0444 ED 09 4B                		mov.L	300[r0], r9
 2551 0447 75 59 1F                		cmp	#31, r9
 2552 044a 2B 05 38 D4 04          		bgt	.L226
 2553                             	.LVL238:
 2554                             	.LBB1089:
 2555                             	.LBB1090:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2556                             		.loc 5 71 14
 2557 044f FD 9F 7B                		shlr	#31, r7, r11
 2558                             	.LBE1090:
 2559                             	.LBE1089:
 2560                             	.LBB1091:
 2561                             	.LBB1092:
 2562 0452 ED 0A 50                		mov.L	320[r0], r10
 2563 0455 53 7A                   		and	r7, r10
 2564                             	.LVL239:
 2565                             	.LBE1092:
 2566                             	.LBE1091:
 2567                             	.LBB1093:
 2568                             	.LBB1094:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2569                             		.loc 5 95 14
 2570 0457 06 89 0B 54             		add	336[r0], r11
 2571                             	.LBE1094:
 2572                             	.LBE1093:
 2573                             	.LBB1095:
 2574                             	.LBB1096:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2575                             		.loc 5 142 15
 2576 045b ED 0E 4D                		mov.L	308[r0], r14
 2577 045e FD 61 E7                		shar	r14, r7
 2578                             	.LVL240:
 2579                             	.LBE1096:
 2580                             	.LBE1095:
 2581                             	.LBB1097:
 2582                             	.LBB1098:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2583                             		.loc 5 71 14
 2584 0461 47 BA                   		cmp	r11, r10
 2585 0463 FC DB AA                		scgt.L	r10
 2586                             	.LVL241:
 2587                             	.LBE1098:
 2588                             	.LBE1097:
 2589                             	.LBB1099:
 2590                             	.LBB1100:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2591                             		.loc 5 95 14
 2592 0466 4B A7                   		add	r10, r7
 2593                             	.LVL242:
 2594                             	.LBE1100:
 2595                             	.LBE1099:
 2596                             	.LBE1101:
 2597                             	.LBE1110:
 2598                             	.LBE1114:
 2599                             	.LBE1122:
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****           MultiplyByQuantizedMultiplier(accum, output_multiplier, output_shift);
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // Saturate, cast to int16_t, and store to output array.
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       accum = std::max(accum, output_activation_min - output_offset);
 2600                             		.loc 9 156 7 is_stmt 1
 2601                             	.LBB1123:
 2602                             	.LBB1124:
 2603                             		.loc 7 224 7 is_stmt 0
 2604 0468 47 7D                   		cmp	r7, r13
 2605 046a 2B 05 38 AC 03          		bgt	.L227
 2606                             	.LVL243:
 2607                             	.LBE1124:
 2608                             	.LBE1123:
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       accum = std::min(accum, output_activation_max - output_offset);
 2609                             		.loc 9 157 7 is_stmt 1
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       accum += output_offset;
 2610                             		.loc 9 158 7
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       output_data[out_c + output_depth * b] = accum;
 2611                             		.loc 9 159 7
 2612                             		.loc 9 159 45 is_stmt 0
 2613 046f ED 08 4E                		mov.L	312[r0], r8
 2614 0472 FC 17 87                		min	r8, r7
 2615                             	.LVL244:
 2616 0475 4B 34                   		add	r3, r4
 2617 0477 FD 21 57                		mov.W	r7, [r5+]
 2618                             	.LBE1128:
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // Internal accumulation.
 2619                             		.loc 9 138 31
 2620 047a 47 52                   		cmp	r5, r2
 2621 047c 3B 37 FF                		bne	.L217
 2622 047f 03                      		.balign 8,3,2
 2623                             	.L324:
 2624 0480 ED 09 5D                		mov.L	372[r0], r9
 2625 0483 ED 01 5F                		mov.L	380[r0], r1
 2626                             	.LVL245:
 2627                             		.balign 8,3,1
 2628                             	.L228:
 2629                             	.LBE1131:
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 2630                             		.loc 9 137 3
 2631 0486 62 19                   		add	#1, r9
 2632                             	.LVL246:
 2633 0488 06 89 02 57             		add	348[r0], r2
 2634 048c 4B 31                   		add	r3, r1
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 2635                             		.loc 9 137 21
 2636 048e ED 08 58                		mov.L	352[r0], r8
 2637 0491 47 89                   		cmp	r8, r9
 2638 0493 3B F5 FE                		bne	.L216
 2639                             	.LVL247:
 2640 0496 EF 00                   		.balign 8,3,2
 2641                             	.L215:
 2642                             	.LBE1134:
 2643                             	.LBE1147:
 2644                             	.LBE1158:
 2645                             	.LBB1159:
 2646                             	.LBB1160:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2647                             		.loc 3 185 5 is_stmt 1
 2648 0498 ED 08 53                		mov.L	332[r0], r8
 2649 049b 61 58                   		cmp	#5, r8
 2650 049d 2B 0B                   		ble	.L211
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2651                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2652                             		.loc 3 189 16 is_stmt 0
 2653 049f A9 01                   		mov.L	16[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2654                             		.loc 3 189 29
 2655 04a1 61 01                   		cmp	#0, r1
 2656 04a3 15                      		beq	.L211
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2657                             		.loc 3 189 16
 2658 04a4 05 00 00 00             		bsr	__ZdaPv
 2659                             	.LVL248:
 2660                             		.balign 8,3,1
 2661                             	.L211:
 2662                             	.LBE1160:
 2663                             	.LBE1159:
 2664                             	.LBB1161:
 2665                             	.LBB1162:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2666                             		.loc 3 185 5 is_stmt 1
 2667 04a8 AA 0F                   		mov.L	36[r0], r7
 2668 04aa 61 57                   		cmp	#5, r7
 2669 04ac 2B 0C                   		ble	.L230
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2670                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2671                             		.loc 3 189 16 is_stmt 0
 2672 04ae AA 81                   		mov.L	40[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2673                             		.loc 3 189 29
 2674 04b0 61 01                   		cmp	#0, r1
 2675 04b2 16                      		beq	.L230
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2676                             		.loc 3 189 16
 2677 04b3 05 00 00 00             		bsr	__ZdaPv
 2678                             	.LVL249:
 2679 04b7 03                      		.balign 8,3,1
 2680                             	.L230:
 2681                             	.LBE1162:
 2682                             	.LBE1161:
 2683                             	.LBB1163:
 2684                             	.LBB1164:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2685                             		.loc 3 185 5 is_stmt 1
 2686 04b8 AB 8F                   		mov.L	60[r0], r7
 2687 04ba 61 57                   		cmp	#5, r7
 2688 04bc 2B 0C                   		ble	.L231
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2689                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2690                             		.loc 3 189 16 is_stmt 0
 2691 04be AC 01                   		mov.L	64[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2692                             		.loc 3 189 29
 2693 04c0 61 01                   		cmp	#0, r1
 2694 04c2 16                      		beq	.L231
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2695                             		.loc 3 189 16
 2696 04c3 05 00 00 00             		bsr	__ZdaPv
 2697                             	.LVL250:
 2698 04c7 03                      		.balign 8,3,1
 2699                             	.L231:
 2700                             	.LBE1164:
 2701                             	.LBE1163:
 2702                             	.LBB1165:
 2703                             	.LBB1033:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2704                             		.loc 3 185 5 is_stmt 1
 2705 04c8 AD 0F                   		mov.L	84[r0], r7
 2706 04ca 61 57                   		cmp	#5, r7
 2707 04cc 2A 05 38 55 FD          		ble	.L232
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2708                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2709                             		.loc 3 189 16 is_stmt 0
 2710 04d1 AD 81                   		mov.L	88[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2711                             		.loc 3 189 29
 2712 04d3 61 01                   		cmp	#0, r1
 2713 04d5 3A 4E FD                		beq	.L232
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2714                             		.loc 3 189 16
 2715 04d8 05 00 00 00             		bsr	__ZdaPv
 2716                             	.LVL251:
 2717 04dc 38 47 FD                		bra	.L232
 2718                             	.LVL252:
 2719                             	.L330:
 2720                             	.LBE1033:
 2721                             	.LBE1165:
 268:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       TF_LITE_KERNEL_LOG(context, "Type %s (%d) not supported.",
 2722                             		.loc 1 268 5 is_stmt 1
 269:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                          TfLiteTypeGetName(output->type), output->type);
 2723                             		.loc 1 269 7
 269:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                          TfLiteTypeGetName(output->type), output->type);
 2724                             		.loc 1 269 7
 2725 04df ED 97 05                		mov.L	20[r9], r7
 2726                             	.LVL253:
 2727 04e2 05 00 00 00             		bsr	_TfLiteTypeGetName
 2728                             	.LVL254:
 2729 04e6 E5 B0 02 02             		mov.L	8[r11], 8[r0]
 2730 04ea 38 86 FB                		bra	.L325
 2731                             	.LVL255:
 2732                             	.L240:
 2733                             	.LBE1324:
 2734                             	.LBE1339:
 2735                             	.LBB1340:
 2736                             	.LBB1020:
 2737                             	.LBB1010:
 2738                             	.LBB925:
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActRelu6) {
 2739                             		.loc 8 257 5 is_stmt 0
 2740 04ed F9 02 4B FF FF 7F 7F    		mov.L	#0x7f7fffff, 300[r0]
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 2741                             		.loc 8 256 5
 2742 04f4 F9 06 50 00             		mov.L	#0x0, 320[r0]
 2743 04f8 38 A8 FB                		bra	.L125
 2744                             	.LVL256:
 2745                             	.L157:
 2746                             	.LBE925:
 2747                             	.LBE1010:
 2748                             	.LBE1020:
 2749                             	.LBE1340:
 2750                             	.LBB1341:
 2751                             	.LBB1325:
 262:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       TF_LITE_FULLY_CONNECTED(uint8_t);
 2752                             		.loc 1 262 5 is_stmt 1
 263:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2753                             		.loc 1 263 7
 2754 04fb 72 0F B4 00             		add	#0xb4, r0, r15
 2755 04ff EF A1                   		mov.L	r10, r1
 2756 0501 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2757                             	.LVL257:
 2758 0505 72 0F 9C 00             		add	#0x9c, r0, r15
 2759 0509 EF C1                   		mov.L	r12, r1
 2760                             	.LBB1166:
 2761                             	.LBB1167:
 2762                             		.loc 2 62 53 is_stmt 0
 2763 050b EC A9                   		mov.L	[r10], r9
 2764                             	.LVL258:
 2765                             	.LBE1167:
 2766                             	.LBE1166:
 263:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2767                             		.loc 1 263 7
 2768 050d 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2769                             	.LVL259:
 2770                             	.LBB1168:
 2771                             	.LBB1169:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 2772                             		.loc 2 61 3
 2773 0511 61 0C                   		cmp	#0, r12
 2774 0513 3A 95 02                		beq	.L121
 2775                             	.LBE1169:
 2776                             	.LBE1168:
 263:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2777                             		.loc 1 263 7
 2778 0516 72 0F 84 00             		add	#0x84, r0, r15
 2779 051a EF 71                   		mov.L	r7, r1
 2780                             	.LBB1171:
 2781                             	.LBB1170:
 2782                             		.loc 2 62 53
 2783 051c E4 C0 58                		mov.L	[r12], 352[r0]
 2784                             	.LVL260:
 2785                             	.LBE1170:
 2786                             	.LBE1171:
 263:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2787                             		.loc 1 263 7
 2788 051f 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2789                             	.LVL261:
 2790                             	.LBB1172:
 2791                             	.LBB1173:
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 2792                             		.loc 2 61 3
 2793 0523 61 07                   		cmp	#0, r7
 2794 0525 3A 83 02                		beq	.L121
 2795                             	.LBE1173:
 2796                             	.LBE1172:
 263:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2797                             		.loc 1 263 7
 2798 0528 71 0F 6C                		add	#0x6c, r0, r15
 2799 052b EF B1                   		mov.L	r11, r1
 2800                             	.LBB1175:
 2801                             	.LBB1174:
 2802                             		.loc 2 62 53
 2803 052d E4 70 4C                		mov.L	[r7], 304[r0]
 2804                             	.LVL262:
 2805                             	.LBE1174:
 2806                             	.LBE1175:
 263:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       break;
 2807                             		.loc 1 263 7
 2808 0530 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2809                             	.LVL263:
 2810                             	.LBB1176:
 2811                             	.LBB1177:
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   TFLITE_DCHECK_GE(output_shape.DimensionsCount(), 1);
 2812                             		.loc 9 75 3
 2813 0534 ED 04 27                		mov.L	156[r0], r4
 2814                             	.LBE1177:
 2815                             	.LBE1176:
 2816                             	.LBB1289:
 2817                             	.LBB1290:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2818                             		.loc 2 55 28
 2819 0537 EC B8                   		mov.L	[r11], r8
 2820                             	.LVL264:
 2821                             	.LBE1290:
 2822                             	.LBE1289:
 2823                             	.LBB1291:
 2824                             	.LBB1275:
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t filter_offset = params.weights_offset;
 2825                             		.loc 9 68 3 is_stmt 1
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_offset = params.output_offset;
 2826                             		.loc 9 69 3
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_multiplier = params.output_multiplier;
 2827                             		.loc 9 70 3
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_shift = params.output_shift;
 2828                             		.loc 9 71 3
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_activation_min = params.quantized_activation_min;
 2829                             		.loc 9 72 3
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int32_t output_activation_max = params.quantized_activation_max;
 2830                             		.loc 9 73 3
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   TFLITE_DCHECK_GE(filter_shape.DimensionsCount(), 2);
 2831                             		.loc 9 74 3
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   TFLITE_DCHECK_GE(output_shape.DimensionsCount(), 1);
 2832                             		.loc 9 75 3
 2833                             	.LBE1275:
 2834                             	.LBE1291:
 2835                             	.LBE1325:
 2836                             	.LBE1341:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2837                             		.loc 3 194 44
 2838                             	.LBB1342:
 2839                             	.LBB1326:
 2840                             	.LBB1292:
 2841                             	.LBB1276:
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   TFLITE_DCHECK_GE(output_shape.DimensionsCount(), 1);
 2842                             		.loc 9 75 3 is_stmt 0
 2843 0539 61 14                   		cmp	#1, r4
 2844 053b 2A 05 38 6B 02          		ble	.L121
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
 2845                             		.loc 9 76 3 is_stmt 1
 2846 0540 AE 8D                   		mov.L	108[r0], r5
 2847                             	.LVL265:
 2848                             	.LBE1276:
 2849                             	.LBE1292:
 2850                             	.LBE1326:
 2851                             	.LBE1342:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2852                             		.loc 3 194 44
 2853                             	.LBB1343:
 2854                             	.LBB1327:
 2855                             	.LBB1293:
 2856                             	.LBB1277:
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h **** 
 2857                             		.loc 9 76 3 is_stmt 0
 2858 0542 61 05                   		cmp	#0, r5
 2859 0544 2A 05 38 62 02          		ble	.L121
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   // TODO(benoitjacob): This really should be:
 2860                             		.loc 9 78 3 is_stmt 1
 2861 0549 ED 0A 4E                		mov.L	312[r0], r10
 2862                             	.LVL266:
 2863 054c 47 AD                   		cmp	r10, r13
 2864 054e 2B 05 38 58 02          		bgt	.L121
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int filter_dim_count = filter_shape.DimensionsCount();
 2865                             		.loc 9 84 3
 2866                             	.LVL267:
 2867                             	.LBE1277:
 2868                             	.LBE1293:
 2869                             	.LBE1327:
 2870                             	.LBE1343:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2871                             		.loc 3 194 44
 2872                             	.LBB1344:
 2873                             	.LBB1328:
 2874                             	.LBB1294:
 2875                             	.LBB1278:
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int batches = FlatSizeSkipDim(output_shape, output_dim_count - 1);
 2876                             		.loc 9 85 3
 2877                             	.LBE1278:
 2878                             	.LBE1294:
 2879                             	.LBE1328:
 2880                             	.LBE1344:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2881                             		.loc 3 194 44
 2882                             	.LBB1345:
 2883                             	.LBB1329:
 2884                             	.LBB1295:
 2885                             	.LBB1279:
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_depth = MatchingDim(filter_shape, filter_dim_count - 2,
 2886                             		.loc 9 86 3
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   const int output_depth = MatchingDim(filter_shape, filter_dim_count - 2,
 2887                             		.loc 9 86 38 is_stmt 0
 2888 0553 71 5A FF                		add	#-1, r5, r10
 2889                             	.LVL268:
 2890                             	.LBB1178:
 2891                             	.LBB1179:
 642:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(skip_dim >= 0 && skip_dim < dims_count);
 2892                             		.loc 3 642 3 is_stmt 1
 2893                             	.LBE1179:
 2894                             	.LBE1178:
 2895                             	.LBE1279:
 2896                             	.LBE1295:
 2897                             	.LBE1329:
 2898                             	.LBE1345:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2899                             		.loc 3 194 44
 2900                             	.LBB1346:
 2901                             	.LBB1330:
 2902                             	.LBB1296:
 2903                             	.LBB1280:
 2904                             	.LBB1189:
 2905                             	.LBB1186:
 643:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const auto* dims_data = shape.DimsData();
 2906                             		.loc 3 643 3
 644:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 2907                             		.loc 3 644 3
 2908                             	.LBB1180:
 2909                             	.LBB1181:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2910                             		.loc 3 214 5
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2911                             		.loc 3 214 34 is_stmt 0
 2912 0556 61 55                   		cmp	#5, r5
 2913 0558 2B 05 38 6F 02          		bgt	.L333
 2914 055d 71 02 70                		add	#0x70, r0, r2
 2915                             		.balign 8,3,4
 2916                             	.L160:
 2917                             	.LVL269:
 2918                             	.LBE1181:
 2919                             	.LBE1180:
 645:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 2920                             		.loc 3 645 3 is_stmt 1
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 2921                             		.loc 3 646 3
 645:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 2922                             		.loc 3 645 7 is_stmt 0
 2923 0560 F9 06 57 01             		mov.L	#1, 348[r0]
 2924                             	.LBB1183:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 2925                             		.loc 3 646 12
 2926 0564 66 07                   		mov.L	#0, r7
 2927                             	.LVL270:
 2928 0566 ED 03 57                		mov.L	348[r0], r3
 2929                             	.LVL271:
 2930                             		.balign 8,3,1
 2931                             	.L161:
 647:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2932                             		.loc 3 647 5 is_stmt 1
 647:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2933                             		.loc 3 647 34 is_stmt 0
 2934 0569 47 7A                   		cmp	r7, r10
 2935 056b 3A 25 03                		beq	.L162
 2936 056e FE 67 21                		mov.L	[r7,r2], r1
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 2937                             		.loc 3 646 3
 2938 0571 62 17                   		add	#1, r7
 2939                             	.LVL272:
 2940 0573 4F 13                   		mul	r1, r3
 2941                             	.LVL273:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 2942                             		.loc 3 646 21
 2943 0575 47 75                   		cmp	r7, r5
 2944 0577 21 F2                   		bne	.L161
 2945                             		.balign 8,3,5
 2946                             	.L322:
 2947 0579 E7 03 57                		mov.L	r3, 348[r0]
 2948                             	.LBE1183:
 2949                             		.loc 3 649 3 is_stmt 1
 2950                             	.LVL274:
 2951                             	.LBE1186:
 2952                             	.LBE1189:
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                                        output_shape, output_dim_count - 1);
 2953                             		.loc 9 87 3
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****                                        output_shape, output_dim_count - 1);
 2954                             		.loc 9 87 39 is_stmt 0
 2955 057c 71 47 FE                		add	#-2, r4, r7
 2956                             	.LVL275:
 2957                             	.LBB1190:
 2958                             	.LBB1191:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 2959                             		.loc 3 440 3 is_stmt 1
 2960                             	.LBB1192:
 2961                             	.LBB1193:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2962                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2963                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2964                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2965                             		.loc 3 198 34 is_stmt 0
 2966 057f 61 54                   		cmp	#5, r4
 2967 0581 2A 05 38 18 03          		ble	.L165
 2968 0586 ED 03 28                		mov.L	160[r0], r3
 2969 0589 FE 67 3E                		mov.L	[r7,r3], r14
 2970                             	.LVL276:
 2971                             		.balign 8,3,1
 2972                             	.L166:
 2973                             	.LBE1193:
 2974                             	.LBE1192:
 2975                             	.LBB1195:
 2976                             	.LBB1196:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2977                             		.loc 3 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2978                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2979                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2980                             		.loc 3 198 34 is_stmt 0
 2981 058c 61 55                   		cmp	#5, r5
 2982 058e 2A 05 38 28 03          		ble	.L167
 2983 0593 AF 07                   		mov.L	112[r0], r7
 2984 0595 FE 6A 77                		mov.L	[r10,r7], r7
 2985                             	.LVL277:
 2986                             		.balign 8,3,1
 2987                             	.L168:
 2988                             	.LBE1196:
 2989                             	.LBE1195:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 2990                             		.loc 3 440 3
 2991 0598 47 E7                   		cmp	r14, r7
 2992 059a 3B 0E 02                		bne	.L121
 441:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 2993                             		.loc 3 441 3 is_stmt 1
 2994                             	.LVL278:
 2995                             	.LBE1191:
 2996                             	.LBE1190:
 2997                             	.LBE1280:
 2998                             	.LBE1296:
 2999                             	.LBE1330:
 3000                             	.LBE1346:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3001                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3002                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3003                             		.loc 3 198 5
 3004                             	.LBB1347:
 3005                             	.LBB1331:
 3006                             	.LBB1297:
 3007                             	.LBB1281:
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   for (int b = 0; b < batches; ++b) {
 3008                             		.loc 9 89 3
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****   for (int b = 0; b < batches; ++b) {
 3009                             		.loc 9 89 44 is_stmt 0
 3010 059d 71 47 FF                		add	#-1, r4, r7
 3011                             	.LVL279:
 3012                             	.LBB1202:
 3013                             	.LBB1203:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3014                             		.loc 3 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3015                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3016                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3017                             		.loc 3 198 34 is_stmt 0
 3018 05a0 61 54                   		cmp	#5, r4
 3019 05a2 2A 05 38 43 03          		ble	.L169
 3020 05a7 ED 0A 28                		mov.L	160[r0], r10
 3021 05aa FE 67 A1                		mov.L	[r7,r10], r1
 3022                             	.LVL280:
 3023                             		.balign 8,3,2
 3024                             	.L170:
 3025                             	.LBE1203:
 3026                             	.LBE1202:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 3027                             		.loc 9 90 3 is_stmt 1
 3028                             	.LBB1205:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 3029                             		.loc 9 90 21 is_stmt 0
 3030 05ad ED 02 57                		mov.L	348[r0], r2
 3031                             	.LVL281:
 3032 05b0 61 02                   		cmp	#0, r2
 3033 05b2 2A 05 38 4A 01          		ble	.L171
 3034 05b7 ED 03 4B                		mov.L	300[r0], r3
 3035 05ba FD 74 43 00             		max	#0, r3
 3036 05be E7 03 53                		mov.L	r3, 332[r0]
 3037                             	.LBB1206:
 3038                             	.LBB1207:
 3039                             	.LBB1208:
 3040                             	.LBB1209:
 3041                             	.LBB1210:
 3042                             	.LBB1211:
 3043                             		.loc 5 371 50
 3044 05c1 EF 37                   		mov.L	r3, r7
 3045 05c3 71 77 E0                		add	#-32, r7
 3046 05c6 26 05 38 46 03          		bn	.L172
 3047 05cb 66 07                   		mov.L	#0, r7
 3048                             		.balign 8,3,1
 3049                             	.L173:
 3050                             		.loc 5 371 63
 3051 05cd 60 17                   		sub	#1, r7
 3052 05cf E7 07 54                		mov.L	r7, 336[r0]
 3053                             	.LBB1212:
 3054                             	.LBB1213:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3055                             		.loc 5 142 15
 3056 05d2 6A 17                   		shar	#1, r7
 3057 05d4 E7 07 55                		mov.L	r7, 340[r0]
 3058 05d7 EF 9C                   		mov.L	r9, r12
 3059 05d9 ED 05 4F                		mov.L	316[r0], r5
 3060                             	.LVL282:
 3061 05dc FD 74 45 00             		max	#0, r5
 3062 05e0 E7 05 4F                		mov.L	r5, 316[r0]
 3063                             	.LVL283:
 3064                             	.LBE1213:
 3065                             	.LBE1212:
 3066                             	.LBE1211:
 3067                             	.LBE1210:
 3068                             	.LBE1209:
 3069                             	.LBE1208:
 3070                             	.LBE1207:
 3071                             	.LBE1206:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 3072                             		.loc 9 90 12
 3073 05e3 F9 06 4D 00             		mov.L	#0, 308[r0]
 3074                             	.LVL284:
 3075 05e7 03                      		.balign 8,3,1
 3076                             	.L176:
 3077                             	.LBB1263:
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       int32_t acc = 0;
 3078                             		.loc 9 91 31
 3079 05e8 61 0E                   		cmp	#0, r14
 3080 05ea 2A 05 38 FC 00          		ble	.L189
 3081 05ef ED 02 58                		mov.L	352[r0], r2
 3082 05f2 EF 85                   		mov.L	r8, r5
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       int32_t acc = 0;
 3083                             		.loc 9 91 14
 3084 05f4 66 03                   		mov.L	#0, r3
 3085                             	.LBB1255:
 3086                             	.LBB1243:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 3087                             		.loc 9 93 25
 3088 05f6 FF 2A C1                		add	r12, r1, r10
 3089 05f9 E7 0A 50                		mov.L	r10, 320[r0]
 3090                             	.LBE1243:
 3091                             	.LBE1255:
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       int32_t acc = 0;
 3092                             		.loc 9 91 31
 3093 05fc FF 29 8E                		add	r8, r14, r9
 3094 05ff E7 0E 5B                		mov.L	r14, 364[r0]
 3095 0602 E7 0C 5C                		mov.L	r12, 368[r0]
 3096 0605 E7 08 5D                		mov.L	r8, 372[r0]
 3097                             	.LVL285:
 3098                             		.balign 8,3,1
 3099                             	.L177:
 3100                             	.LBB1256:
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 3101                             		.loc 9 92 7 is_stmt 1
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 3102                             		.loc 9 93 7
 3103                             	.LBB1245:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 3104                             		.loc 9 93 25 is_stmt 0
 3105 0608 61 01                   		cmp	#0, r1
 3106 060a 2A 05 38 2C 02          		ble	.L248
 3107 060f 03                      		.balign 8,3,1
 3108                             	.L339:
 3109 0610 EF 2B                   		mov.L	r2, r11
 3110 0612 ED 04 5C                		mov.L	368[r0], r4
 3111                             	.LBE1245:
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 3112                             		.loc 9 92 15
 3113 0615 66 07                   		mov.L	#0, r7
 3114 0617 ED 0E 5B                		mov.L	364[r0], r14
 3115 061a E7 04 59                		mov.L	r4, 356[r0]
 3116 061d ED 08 5D                		mov.L	372[r0], r8
 3117                             	.LVL286:
 3118                             		.balign 8,3,3
 3119                             	.L179:
 3120                             	.LBB1246:
 3121                             	.LBB1244:
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t filter_val = filter_data[out_c * accum_depth + d];
 3122                             		.loc 9 94 9 is_stmt 1
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         acc += (filter_val + filter_offset) * (input_val + input_offset);
 3123                             		.loc 9 95 9
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
 3124                             		.loc 9 96 9
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         acc += (filter_val + filter_offset) * (input_val + input_offset);
 3125                             		.loc 9 95 17 is_stmt 0
 3126 0620 FD 38 BA                		movu.B	[r11+], r10
 3127                             	.LVL287:
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t filter_val = filter_data[out_c * accum_depth + d];
 3128                             		.loc 9 94 17
 3129 0623 FD 38 4F                		movu.B	[r4+], r15
 3130                             	.LVL288:
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
 3131                             		.loc 9 96 45
 3132 0626 ED 0C 52                		mov.L	328[r0], r12
 3133 0629 43 CA                   		sub	r12, r10
 3134                             	.LVL289:
 3135 062b ED 0C 51                		mov.L	324[r0], r12
 3136 062e 43 CF                   		sub	r12, r15
 3137                             	.LVL290:
 3138 0630 4F FA                   		mul	r15, r10
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
 3139                             		.loc 9 96 13
 3140 0632 4B A7                   		add	r10, r7
 3141                             	.LVL291:
 3142                             	.LBE1244:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 3143                             		.loc 9 93 25
 3144 0634 ED 0F 50                		mov.L	320[r0], r15
 3145 0637 47 4F                   		cmp	r4, r15
 3146 0639 21 E7                   		bne	.L179
 3147 063b E7 0E 5B                		mov.L	r14, 364[r0]
 3148 063e E5 00 59 5C             		mov.L	356[r0], 368[r0]
 3149 0642 E7 08 5D                		mov.L	r8, 372[r0]
 3150                             	.LVL292:
 3151                             		.balign 8,3,2
 3152                             	.L178:
 3153                             	.LBE1246:
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         acc += bias_data[out_c];
 3154                             		.loc 9 98 7 is_stmt 1
 3155 0645 ED 04 4C                		mov.L	304[r0], r4
 3156 0648 61 04                   		cmp	#0, r4
 3157 064a 11                      		beq	.L180
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
 3158                             		.loc 9 99 9
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       }
 3159                             		.loc 9 99 13 is_stmt 0
 3160 064b FD C2 3A                		shll	#2, r3, r10
 3161 064e 4B 4A                   		add	r4, r10
 3162 0650 06 88 A7                		add	[r10].L, r7
 3163                             	.LVL293:
 3164                             		.balign 8,3,2
 3165                             	.L180:
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       acc += output_offset;
 3166                             		.loc 9 101 7 is_stmt 1
 3167                             	.LBB1247:
 3168                             	.LBB1238:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 3169                             		.loc 6 159 3
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 3170                             		.loc 6 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 3171                             		.loc 6 161 3
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 3172                             		.loc 6 162 3
 3173                             		.loc 6 163 3
 3174                             		.loc 6 163 29 is_stmt 0
 3175 0653 ED 08 4F                		mov.L	316[r0], r8
 3176 0656 FD 62 87                		shll	r8, r7
 3177                             	.LVL294:
 3178                             	.LBB1230:
 3179                             	.LBB1231:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3180                             		.loc 5 342 3 is_stmt 1
 3181 0659 EF 7E                   		mov.L	r7, r14
 3182 065b FC 1B 6E                		emul	r6, r14
 3183 065e EF EA                   		mov.L	r14, r10
 3184 0660 EF FB                   		mov.L	r15, r11
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3185                             		.loc 5 342 26 is_stmt 0
 3186 0662 47 76                   		cmp	r7, r6
 3187 0664 3A EF 01                		beq	.L334
 3188                             	.LVL295:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3189                             		.loc 5 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3190                             		.loc 5 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3191                             		.loc 5 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3192                             		.loc 5 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3193                             		.loc 5 346 35 is_stmt 0
 3194 0667 62 0F                   		add	#0, r15
 3195 0669 29 05 38 D2 01          		bge	.L234
 3196 066e F9 02 59 01 00 00 C0    		mov.L	#-1073741823, 356[r0]
 3197 0675 FB 76 FF                		mov.L	#-1, r7
 3198                             	.LVL296:
 3199                             		.balign 8,3,2
 3200                             	.L236:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3201                             		.loc 5 348 49
 3202 0678 ED 0C 59                		mov.L	356[r0], r12
 3203 067b FF 28 AC                		add	r10, r12, r8
 3204 067e FC 0B B7                		adc	r11, r7
 3205 0681 E7 08 5A                		mov.L	r8, 360[r0]
 3206 0684 26 0F                   		bpz	.L185
 3207 0686 70 8A FF FF FF 7F       		add	#0x7fffffff, r8, r10
 3208 068c FD 74 27 00             		adc	#0, r7
 3209 0690 E7 0A 5A                		mov.L	r10, 360[r0]
 3210                             		.balign 8,3,1
 3211                             	.L185:
 3212 0693 6C 17                   		shll	#1, r7
 3213 0695 ED 04 5A                		mov.L	360[r0], r4
 3214 0698 69 F4                   		shlr	#31, r4
 3215 069a 57 47                   		or	r4, r7
 3216                             		.balign 8,3,2
 3217                             	.L184:
 3218                             	.LVL297:
 3219                             	.LBE1231:
 3220                             	.LBE1230:
 3221                             	.LBB1233:
 3222                             	.LBB1226:
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 3223                             		.loc 5 370 3
 3224 069c ED 0C 4B                		mov.L	300[r0], r12
 3225 069f 75 5C 1F                		cmp	#31, r12
 3226 06a2 2B 05 38 7C 02          		bgt	.L226
 3227                             	.LVL298:
 3228                             	.LBE1226:
 3229                             	.LBE1233:
 3230                             	.LBE1238:
 3231                             	.LBE1247:
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       acc = std::max(acc, output_activation_min);
 3232                             		.loc 9 102 7 is_stmt 1
 3233                             	.LBB1248:
 3234                             	.LBB1239:
 3235                             	.LBB1234:
 3236                             	.LBB1227:
 3237                             	.LBB1214:
 3238                             	.LBB1215:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3239                             		.loc 5 71 14 is_stmt 0
 3240 06a7 FD 9F 74                		shlr	#31, r7, r4
 3241                             	.LBE1215:
 3242                             	.LBE1214:
 3243                             	.LBB1216:
 3244                             	.LBB1217:
 3245 06aa ED 0A 54                		mov.L	336[r0], r10
 3246 06ad 53 7A                   		and	r7, r10
 3247                             	.LVL299:
 3248                             	.LBE1217:
 3249                             	.LBE1216:
 3250                             	.LBB1218:
 3251                             	.LBB1219:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3252                             		.loc 5 95 14
 3253 06af 06 89 04 55             		add	340[r0], r4
 3254                             	.LBE1219:
 3255                             	.LBE1218:
 3256                             	.LBB1220:
 3257                             	.LBB1221:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3258                             		.loc 5 142 15
 3259 06b3 ED 0E 53                		mov.L	332[r0], r14
 3260 06b6 FD 61 E7                		shar	r14, r7
 3261                             	.LVL300:
 3262                             	.LBE1221:
 3263                             	.LBE1220:
 3264                             	.LBB1222:
 3265                             	.LBB1223:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3266                             		.loc 5 71 14
 3267 06b9 47 4A                   		cmp	r4, r10
 3268 06bb FC DB AA                		scgt.L	r10
 3269                             	.LVL301:
 3270                             	.LBE1223:
 3271                             	.LBE1222:
 3272                             	.LBB1224:
 3273                             	.LBB1225:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3274                             		.loc 5 95 14
 3275 06be 4B A7                   		add	r10, r7
 3276                             	.LBE1225:
 3277                             	.LBE1224:
 3278                             	.LBE1227:
 3279                             	.LBE1234:
 3280                             	.LBE1239:
 3281                             	.LBE1248:
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       acc = std::max(acc, output_activation_min);
 3282                             		.loc 9 102 11
 3283 06c0 06 89 07 56             		add	344[r0], r7
 3284                             	.LVL302:
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       acc = std::min(acc, output_activation_max);
 3285                             		.loc 9 103 7 is_stmt 1
 3286                             	.LBB1249:
 3287                             	.LBB1250:
 3288                             		.loc 7 224 7 is_stmt 0
 3289 06c4 47 7D                   		cmp	r7, r13
 3290 06c6 2B 05 38 5D 01          		bgt	.L188
 3291                             	.LVL303:
 3292                             	.LBE1250:
 3293                             	.LBE1249:
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       output_data[out_c + output_depth * b] = static_cast<uint8_t>(acc);
 3294                             		.loc 9 104 7 is_stmt 1
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     }
 3295                             		.loc 9 105 7
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     }
 3296                             		.loc 9 105 45 is_stmt 0
 3297 06cb ED 04 4E                		mov.L	312[r0], r4
 3298 06ce FC 17 47                		min	r4, r7
 3299                             	.LVL304:
 3300                             	.LBE1256:
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       int32_t acc = 0;
 3301                             		.loc 9 91 5
 3302 06d1 62 13                   		add	#1, r3
 3303                             	.LVL305:
 3304 06d3 4B 12                   		add	r1, r2
 3305                             	.LBB1257:
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     }
 3306                             		.loc 9 105 45
 3307 06d5 FD 20 57                		mov.B	r7, [r5+]
 3308                             	.LVL306:
 3309                             	.LBE1257:
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       int32_t acc = 0;
 3310                             		.loc 9 91 31
 3311 06d8 47 59                   		cmp	r5, r9
 3312 06da 3B 2E FF                		bne	.L177
 3313                             		.balign 8,3,2
 3314                             	.L323:
 3315 06dd ED 0E 5B                		mov.L	364[r0], r14
 3316 06e0 ED 0C 5C                		mov.L	368[r0], r12
 3317 06e3 ED 08 5D                		mov.L	372[r0], r8
 3318                             	.LVL307:
 3319 06e6 EF 00                   		.balign 8,3,2
 3320                             	.L189:
 3321                             	.LBE1263:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 3322                             		.loc 9 90 3
 3323 06e8 ED 07 4D                		mov.L	308[r0], r7
 3324 06eb 62 17                   		add	#1, r7
 3325 06ed E7 07 4D                		mov.L	r7, 308[r0]
 3326                             	.LVL308:
 3327 06f0 4B E8                   		add	r14, r8
 3328 06f2 4B 1C                   		add	r1, r12
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     for (int out_c = 0; out_c < output_depth; ++out_c) {
 3329                             		.loc 9 90 21
 3330 06f4 ED 09 57                		mov.L	348[r0], r9
 3331 06f7 47 97                   		cmp	r9, r7
 3332 06f9 3B EF FE                		bne	.L176
 3333 06fc AE 8D                   		mov.L	108[r0], r5
 3334                             	.LVL309:
 3335                             		.balign 8,3,1
 3336                             	.L171:
 3337                             	.LBE1205:
 3338                             	.LBE1281:
 3339                             	.LBE1297:
 3340                             	.LBB1298:
 3341                             	.LBB1299:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 3342                             		.loc 3 185 5 is_stmt 1
 3343 06fe 61 55                   		cmp	#5, r5
 3344 0700 2B 0B                   		ble	.L191
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3345                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3346                             		.loc 3 189 16 is_stmt 0
 3347 0702 AF 01                   		mov.L	112[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3348                             		.loc 3 189 29
 3349 0704 61 01                   		cmp	#0, r1
 3350 0706 15                      		beq	.L191
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3351                             		.loc 3 189 16
 3352 0707 05 00 00 00             		bsr	__ZdaPv
 3353                             	.LVL310:
 3354                             		.balign 8,3,2
 3355                             	.L191:
 3356                             	.LBE1299:
 3357                             	.LBE1298:
 3358                             	.LBB1300:
 3359                             	.LBB1301:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 3360                             		.loc 3 185 5 is_stmt 1
 3361 070b ED 07 21                		mov.L	132[r0], r7
 3362 070e 61 57                   		cmp	#5, r7
 3363 0710 2B 0C                   		ble	.L192
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3364                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3365                             		.loc 3 189 16 is_stmt 0
 3366 0712 ED 01 22                		mov.L	136[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3367                             		.loc 3 189 29
 3368 0715 61 01                   		cmp	#0, r1
 3369 0717 15                      		beq	.L192
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3370                             		.loc 3 189 16
 3371 0718 05 00 00 00             		bsr	__ZdaPv
 3372                             	.LVL311:
 3373                             		.balign 8,3,2
 3374                             	.L192:
 3375                             	.LBE1301:
 3376                             	.LBE1300:
 3377                             	.LBB1302:
 3378                             	.LBB1303:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 3379                             		.loc 3 185 5 is_stmt 1
 3380 071c ED 07 27                		mov.L	156[r0], r7
 3381 071f 61 57                   		cmp	#5, r7
 3382 0721 2B 0C                   		ble	.L193
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3383                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3384                             		.loc 3 189 16 is_stmt 0
 3385 0723 ED 01 28                		mov.L	160[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3386                             		.loc 3 189 29
 3387 0726 61 01                   		cmp	#0, r1
 3388 0728 15                      		beq	.L193
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3389                             		.loc 3 189 16
 3390 0729 05 00 00 00             		bsr	__ZdaPv
 3391                             	.LVL312:
 3392                             		.balign 8,3,2
 3393                             	.L193:
 3394                             	.LBE1303:
 3395                             	.LBE1302:
 3396                             	.LBB1304:
 3397                             	.LBB1305:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 3398                             		.loc 3 185 5 is_stmt 1
 3399 072d ED 07 2D                		mov.L	180[r0], r7
 3400 0730 61 57                   		cmp	#5, r7
 3401 0732 2A 05 38 EF FA          		ble	.L232
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3402                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3403                             		.loc 3 189 16 is_stmt 0
 3404 0737 ED 01 2E                		mov.L	184[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3405                             		.loc 3 189 29
 3406 073a 61 01                   		cmp	#0, r1
 3407 073c 3A E7 FA                		beq	.L232
 3408                             	.LBE1305:
 3409                             	.LBE1304:
 3410                             	.LBB1306:
 3411                             	.LBB1034:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3412                             		.loc 3 189 16
 3413 073f 05 00 00 00             		bsr	__ZdaPv
 3414                             	.LVL313:
 3415 0743 38 E0 FA                		bra	.L232
 3416                             	.LVL314:
 3417                             	.L150:
 3418                             	.LBE1034:
 3419                             	.LBE1306:
 3420                             	.LBE1331:
 3421                             	.LBE1347:
 3422                             	.LBB1348:
 3423                             	.LBB1021:
 3424                             	.LBB1011:
 3425                             	.LBB995:
 3426                             	.LBB986:
 3427                             	.LBB985:
 3428                             	.LBB983:
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****           total + bias_value, output_activation_min, output_activation_max);
 3429                             		.loc 9 56 45
 3430 0746 FE 27 1E                		mov.L	r14, [r7,r1]
 3431                             	.LBE983:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       float total = 0.f;
 3432                             		.loc 9 46 5
 3433 0749 62 17                   		add	#1, r7
 3434                             	.LVL315:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       float total = 0.f;
 3435                             		.loc 9 46 31
 3436 074b 47 97                   		cmp	r9, r7
 3437 074d 3A 80 FA                		beq	.L151
 3438                             	.LVL316:
 3439                             	.LBB984:
 3440                             	.LBB981:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         total += input_data[b * accum_depth + d] *
 3441                             		.loc 9 48 25
 3442 0750 ED 0C 4E                		mov.L	312[r0], r12
 3443 0753 61 0C                   		cmp	#0, r12
 3444 0755 2B 05 38 33 FA          		bgt	.L335
 3445                             	.LVL317:
 3446                             		.balign 8,3,5
 3447                             	.L244:
 3448                             	.LBE981:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 3449                             		.loc 9 47 13
 3450 075a 66 04                   		mov.L	#0x0, r4
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       if (bias_data) {
 3451                             		.loc 9 52 7 is_stmt 1
 3452                             	.LVL318:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         bias_value = bias_data[out_c];
 3453                             		.loc 9 53 7
 3454 075c 61 0D                   		cmp	#0, r13
 3455 075e 3B 4D FA                		bne	.L336
 3456                             	.LVL319:
 3457                             		.balign 8,3,5
 3458                             	.L245:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       if (bias_data) {
 3459                             		.loc 9 52 13 is_stmt 0
 3460 0761 66 03                   		mov.L	#0x0, r3
 3461 0763 38 4D FA                		bra	.L148
 3462                             	.LVL320:
 3463                             	.L131:
 3464                             	.LBE984:
 3465                             	.LBE985:
 3466                             	.LBE986:
 3467                             	.LBB987:
 3468                             	.LBB954:
 3469                             	.LBB950:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 3470                             		.loc 3 646 3
 3471 0766 71 45 01                		add	#1, r4, r5
 3472                             	.LVL321:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 3473                             		.loc 3 646 21
 3474 0769 47 58                   		cmp	r5, r8
 3475 076b 3B 91 F9                		bne	.L130
 3476 076e 38 9E F9                		bra	.L129
 3477                             	.LVL322:
 3478                             	.L127:
 3479                             	.LBE950:
 645:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 3480                             		.loc 3 645 3 is_stmt 1
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 3481                             		.loc 3 646 3
 3482                             	.LBB951:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 3483                             		.loc 3 646 21 is_stmt 0
 3484 0771 61 08                   		cmp	#0, r8
 3485 0773 2A 05 38 A1 01          		ble	.L243
 3486                             	.LBE951:
 3487                             	.LBB952:
 3488                             	.LBB947:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3489                             		.loc 3 214 34
 3490 0778 72 01 D0 00             		add	#0xd0, r0, r1
 3491                             	.LVL323:
 3492 077c 38 7C F9                		bra	.L128
 3493                             	.LVL324:
 3494                             	.L134:
 3495                             	.LBE947:
 3496                             	.LBE952:
 3497                             	.LBE954:
 3498                             	.LBE987:
 3499                             	.LBB988:
 3500                             	.LBB967:
 3501                             	.LBB965:
 3502                             	.LBB961:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3503                             		.loc 3 198 34
 3504 077f 71 35 FF                		add	#-1, r3, r5
 3505                             	.LVL325:
 3506 0782 6C 25                   		shll	#2, r5
 3507 0784 66 C1                   		mov.L	#12, r1
 3508 0786 4B 01                   		add	r0, r1
 3509 0788 4B 15                   		add	r1, r5
 3510 078a ED 59 3C                		mov.L	240[r5], r9
 3511                             	.LVL326:
 3512                             	.LBE961:
 3513                             	.LBE965:
 3514                             	.LBB966:
 3515                             	.LBB964:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3516                             		.loc 3 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3517                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3518                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3519                             		.loc 3 198 34 is_stmt 0
 3520 078d 61 58                   		cmp	#5, r8
 3521 078f 2B 05 38 97 F9          		bgt	.L337
 3522                             	.LVL327:
 3523                             		.balign 8,3,1
 3524                             	.L136:
 3525 0794 62 14                   		add	#1, r4
 3526                             	.LVL328:
 3527 0796 6C 24                   		shll	#2, r4
 3528                             	.LVL329:
 3529 0798 66 C2                   		mov.L	#12, r2
 3530 079a 4B 02                   		add	r0, r2
 3531 079c 4B 24                   		add	r2, r4
 3532 079e ED 45 30                		mov.L	192[r4], r5
 3533                             	.LVL330:
 3534                             	.LBE964:
 3535                             	.LBE966:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 3536                             		.loc 3 440 3
 3537 07a1 47 95                   		cmp	r9, r5
 3538 07a3 3A 90 F9                		beq	.L338
 3539                             	.LVL331:
 3540 07a6 EF 00                   		.balign 8,3,3
 3541                             	.L121:
 3542                             	.LBE967:
 3543                             	.LBE988:
 3544                             	.LBE995:
 3545                             	.LBE1011:
 3546                             	.LBE1021:
 3547                             	.LBE1348:
 301:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const auto* params =
 3548                             		.loc 1 301 3 discriminator 1
 3549 07a8 05 00 00 00             		bsr	_abort
 3550                             	.LVL332:
 3551                             	.L138:
 3552                             	.LBB1349:
 3553                             	.LBB1022:
 3554                             	.LBB1012:
 3555                             	.LBB996:
 3556                             	.LBB989:
 3557                             	.LBB970:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3558                             		.loc 3 198 34
 3559 07ac 6C 23                   		shll	#2, r3
 3560                             	.LVL333:
 3561 07ae 66 C4                   		mov.L	#12, r4
 3562 07b0 4B 04                   		add	r0, r4
 3563 07b2 4B 43                   		add	r4, r3
 3564 07b4 E5 30 3C 4E             		mov.L	240[r3], 312[r0]
 3565 07b8 38 93 F9                		bra	.L139
 3566                             	.LVL334:
 3567                             	.L241:
 3568                             	.LBE970:
 3569                             	.LBE989:
 3570                             	.LBE996:
 3571                             	.LBE1012:
 3572                             	.LBB1013:
 3573                             	.LBB926:
 3574                             	.LBB923:
 3575                             	.LBB921:
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActReluN1To1) {
 3576                             		.loc 8 260 5
 3577 07bb F9 02 4B 00 00 C0 40    		mov.L	#0x40c00000, 300[r0]
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 6;
 3578                             		.loc 8 259 5
 3579 07c2 F9 06 50 00             		mov.L	#0x0, 320[r0]
 3580 07c6 38 DA F8                		bra	.L125
 3581                             	.LVL335:
 3582                             	.L333:
 3583                             	.LBE921:
 3584                             	.LBE923:
 3585                             	.LBE926:
 3586                             	.LBE1013:
 3587                             	.LBE1022:
 3588                             	.LBE1349:
 3589                             	.LBB1350:
 3590                             	.LBB1332:
 3591                             	.LBB1307:
 3592                             	.LBB1282:
 3593                             	.LBB1267:
 3594                             	.LBB1187:
 3595                             	.LBB1184:
 3596                             	.LBB1182:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3597                             		.loc 3 214 34
 3598 07c9 AF 02                   		mov.L	112[r0], r2
 3599 07cb 38 95 FD                		bra	.L160
 3600                             	.LVL336:
 3601                             	.L331:
 3602                             	.LBE1182:
 3603                             	.LBE1184:
 3604                             	.LBE1187:
 3605                             	.LBE1267:
 3606                             	.LBE1282:
 3607                             	.LBE1307:
 3608                             	.LBB1308:
 3609                             	.LBB1148:
 3610                             	.LBB1135:
 3611                             	.LBB1061:
 3612                             	.LBB1058:
 3613                             	.LBB1054:
 3614 07ce A9 03                   		mov.L	16[r0], r3
 3615                             	.LVL337:
 3616                             	.LBE1054:
 3617                             	.LBE1058:
 645:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 3618                             		.loc 3 645 3 is_stmt 1
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 3619                             		.loc 3 646 3
 3620 07d0 38 08 FB                		bra	.L197
 3621                             	.LVL338:
 3622                             	.L332:
 3623                             	.LBE1061:
 3624                             	.LBE1135:
 3625                             	.LBB1136:
 3626                             	.LBB1132:
 3627                             	.LBB1129:
 3628                             	.LBB1125:
 3629                             	.LBB1115:
 3630                             	.LBB1111:
 3631                             	.LBB1107:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3632                             		.loc 5 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3633                             		.loc 5 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3634                             		.loc 5 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3635                             		.loc 5 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3636                             		.loc 5 346 35 is_stmt 0
 3637 07d3 61 09                   		cmp	#0, r9
 3638 07d5 FB 92 01 00 00 C0       		mov.L	#-1073741823, r9
 3639 07db 29 08                   		blt 1f
 3640 07dd FB 92 00 00 00 40       		mov #0x40000000, r9
 3641                             	1:
 3642 07e3 E7 09 56                		mov.L	r9, 344[r0]
 3643 07e6 71 BE 00                		add	#0, r11, r14
 3644 07e9 FB 76 FF                		mov.L	#-1, r7
 3645                             	.LVL339:
 3646 07ec 29 04                   		blt 1f
 3647 07ee 66 07                   		mov #0, r7
 3648                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3649                             		.loc 5 347 3 is_stmt 1
 3650                             	.LVL340:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3651                             		.loc 5 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3652                             		.loc 5 349 19 is_stmt 0
 3653 07f0 74 06 00 00 00 80       		cmp	#-2147483648, r6
 3654 07f6 3B 2A FC                		bne	.L239
 3655 07f9 FB 72 FF FF FF 7F       		mov.L	#0x7fffffff, r7
 3656                             	.LVL341:
 3657 07ff 38 45 FC                		bra	.L223
 3658                             	.LVL342:
 3659                             	.L237:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3660                             		.loc 5 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3661                             		.loc 5 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3662                             		.loc 5 348 40 is_stmt 0
 3663 0802 EF B7                   		mov.L	r11, r7
 3664                             	.LVL343:
 3665 0804 70 AE 00 00 00 40       		add	#0x40000000, r10, r14
 3666 080a FD 74 27 00             		adc	#0, r7
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3667                             		.loc 5 348 49
 3668 080e 6C 17                   		shll	#1, r7
 3669 0810 FD 9F EA                		shlr	#31, r14, r10
 3670                             	.LVL344:
 3671 0813 57 A7                   		or	r10, r7
 3672 0815 38 2F FC                		bra	.L223
 3673                             	.LVL345:
 3674                             	.L227:
 3675                             	.LBE1107:
 3676                             	.LBE1111:
 3677                             	.LBE1115:
 3678                             	.LBE1125:
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       output_data[out_c + output_depth * b] = accum;
 3679                             		.loc 9 158 7 is_stmt 1
 3680                             		.loc 9 159 7
 3681 0818 4B 34                   		add	r3, r4
 3682                             		.loc 9 159 45 is_stmt 0
 3683 081a FD 21 5D                		mov.W	r13, [r5+]
 3684                             	.LVL346:
 3685                             	.LBE1129:
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       // Internal accumulation.
 3686                             		.loc 9 138 31
 3687 081d 47 52                   		cmp	r5, r2
 3688 081f 3B 94 FB                		bne	.L217
 3689 0822 38 5E FC                		bra	.L324
 3690                             	.LVL347:
 3691                             	.L188:
 3692                             	.LBE1132:
 3693                             	.LBE1136:
 3694                             	.LBE1148:
 3695                             	.LBE1308:
 3696                             	.LBB1309:
 3697                             	.LBB1283:
 3698                             	.LBB1268:
 3699                             	.LBB1264:
 3700                             	.LBB1258:
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     }
 3701                             		.loc 9 105 7 is_stmt 1
 3702                             	.LBE1258:
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       int32_t acc = 0;
 3703                             		.loc 9 91 5 is_stmt 0
 3704 0825 62 13                   		add	#1, r3
 3705                             	.LVL348:
 3706                             	.LBB1259:
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****     }
 3707                             		.loc 9 105 45
 3708 0827 FD 20 5D                		mov.B	r13, [r5+]
 3709                             	.LVL349:
 3710 082a 4B 12                   		add	r1, r2
 3711                             	.LBE1259:
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       int32_t acc = 0;
 3712                             		.loc 9 91 31
 3713 082c 47 59                   		cmp	r5, r9
 3714 082e 3A AF FE                		beq	.L323
 3715                             	.LBB1260:
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 3716                             		.loc 9 92 7 is_stmt 1
 3717                             	.LVL350:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 3718                             		.loc 9 93 7
 3719                             	.LBB1251:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****         int32_t input_val = input_data[b * accum_depth + d];
 3720                             		.loc 9 93 25 is_stmt 0
 3721 0831 61 01                   		cmp	#0, r1
 3722 0833 2B 05 38 DB FD          		bgt	.L339
 3723                             	.LVL351:
 3724                             		.balign 8,3,1
 3725                             	.L248:
 3726                             	.LBE1251:
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\fully_connected.h ****       for (int d = 0; d < accum_depth; ++d) {
 3727                             		.loc 9 92 15
 3728 0838 66 07                   		mov.L	#0, r7
 3729 083a 38 0B FE                		bra	.L178
 3730                             	.LVL352:
 3731                             	.L234:
 3732                             	.LBB1252:
 3733                             	.LBB1240:
 3734                             	.LBB1235:
 3735                             	.LBB1232:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3736                             		.loc 5 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3737                             		.loc 5 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3738                             		.loc 5 348 40 is_stmt 0
 3739 083d EF B7                   		mov.L	r11, r7
 3740 083f 70 A4 00 00 00 40       		add	#0x40000000, r10, r4
 3741 0845 FD 74 27 00             		adc	#0, r7
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3742                             		.loc 5 348 49
 3743 0849 6C 17                   		shll	#1, r7
 3744 084b FD 9F 4A                		shlr	#31, r4, r10
 3745                             	.LVL353:
 3746 084e 57 A7                   		or	r10, r7
 3747 0850 38 4C FE                		bra	.L184
 3748                             	.LVL354:
 3749                             	.L334:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3750                             		.loc 5 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3751                             		.loc 5 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3752                             		.loc 5 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3753                             		.loc 5 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3754                             		.loc 5 346 35 is_stmt 0
 3755 0853 61 0F                   		cmp	#0, r15
 3756 0855 FB F2 01 00 00 C0       		mov.L	#-1073741823, r15
 3757 085b 29 08                   		blt 1f
 3758 085d FB F2 00 00 00 40       		mov #0x40000000, r15
 3759                             	1:
 3760 0863 E7 0F 59                		mov.L	r15, 356[r0]
 3761 0866 71 B4 00                		add	#0, r11, r4
 3762 0869 FB 76 FF                		mov.L	#-1, r7
 3763 086c 29 04                   		blt 1f
 3764 086e 66 07                   		mov #0, r7
 3765                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3766                             		.loc 5 347 3 is_stmt 1
 3767                             	.LVL355:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3768                             		.loc 5 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3769                             		.loc 5 349 19 is_stmt 0
 3770 0870 74 06 00 00 00 80       		cmp	#-2147483648, r6
 3771 0876 3B 02 FE                		bne	.L236
 3772 0879 FB 72 FF FF FF 7F       		mov.L	#0x7fffffff, r7
 3773                             	.LVL356:
 3774 087f 38 1D FE                		bra	.L184
 3775                             	.LVL357:
 3776                             	.L200:
 3777                             	.LBE1232:
 3778                             	.LBE1235:
 3779                             	.LBE1240:
 3780                             	.LBE1252:
 3781                             	.LBE1260:
 3782                             	.LBE1264:
 3783                             	.LBE1268:
 3784                             	.LBE1283:
 3785                             	.LBE1309:
 3786                             	.LBB1310:
 3787                             	.LBB1149:
 3788                             	.LBB1137:
 3789                             	.LBB1062:
 3790                             	.LBB1059:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 3791                             		.loc 3 646 3
 3792 0882 71 A7 01                		add	#1, r10, r7
 3793                             	.LVL358:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 3794                             		.loc 3 646 21
 3795 0885 ED 0E 53                		mov.L	332[r0], r14
 3796 0888 47 7E                   		cmp	r7, r14
 3797 088a 3B 52 FA                		bne	.L199
 3798 088d 38 63 FA                		bra	.L198
 3799                             	.LVL359:
 3800                             	.L162:
 3801                             	.LBE1059:
 3802                             	.LBE1062:
 3803                             	.LBE1137:
 3804                             	.LBE1149:
 3805                             	.LBE1310:
 3806                             	.LBB1311:
 3807                             	.LBB1284:
 3808                             	.LBB1269:
 3809                             	.LBB1188:
 3810                             	.LBB1185:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 3811                             		.loc 3 646 3
 3812 0890 71 A7 01                		add	#1, r10, r7
 3813                             	.LVL360:
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= (i == skip_dim) ? 1 : dims_data[i];
 3814                             		.loc 3 646 21
 3815 0893 47 75                   		cmp	r7, r5
 3816 0895 3B D4 FC                		bne	.L161
 3817 0898 38 E1 FC                		bra	.L322
 3818                             	.LVL361:
 3819                             	.L165:
 3820                             	.LBE1185:
 3821                             	.LBE1188:
 3822                             	.LBE1269:
 3823                             	.LBB1270:
 3824                             	.LBB1200:
 3825                             	.LBB1198:
 3826                             	.LBB1194:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3827                             		.loc 3 198 34
 3828 089b 71 47 FF                		add	#-1, r4, r7
 3829                             	.LVL362:
 3830 089e 6C 27                   		shll	#2, r7
 3831 08a0 66 CB                   		mov.L	#12, r11
 3832                             	.LVL363:
 3833 08a2 4B 0B                   		add	r0, r11
 3834 08a4 4B B7                   		add	r11, r7
 3835 08a6 ED 7E 24                		mov.L	144[r7], r14
 3836 08a9 38 E3 FC                		bra	.L166
 3837                             	.LVL364:
 3838                             	.L205:
 3839                             	.LBE1194:
 3840                             	.LBE1198:
 3841                             	.LBE1200:
 3842                             	.LBE1270:
 3843                             	.LBE1284:
 3844                             	.LBE1311:
 3845                             	.LBB1312:
 3846                             	.LBB1150:
 3847                             	.LBB1138:
 3848                             	.LBB1075:
 3849                             	.LBB1073:
 3850                             	.LBB1072:
 3851 08ac 62 1A                   		add	#1, r10
 3852                             	.LVL365:
 3853 08ae 66 C3                   		mov.L	#12, r3
 3854 08b0 4B 03                   		add	r0, r3
 3855 08b2 FE 6A 37                		mov.L	[r10,r3], r7
 3856 08b5 38 63 FA                		bra	.L206
 3857                             	.LVL366:
 3858                             	.L167:
 3859                             	.LBE1072:
 3860                             	.LBE1073:
 3861                             	.LBE1075:
 3862                             	.LBE1138:
 3863                             	.LBE1150:
 3864                             	.LBE1312:
 3865                             	.LBB1313:
 3866                             	.LBB1285:
 3867                             	.LBB1271:
 3868                             	.LBB1201:
 3869                             	.LBB1199:
 3870                             	.LBB1197:
 3871 08b8 71 A7 01                		add	#1, r10, r7
 3872 08bb 6C 27                   		shll	#2, r7
 3873 08bd 66 CC                   		mov.L	#12, r12
 3874                             	.LVL367:
 3875 08bf 4B 0C                   		add	r0, r12
 3876 08c1 4B C7                   		add	r12, r7
 3877 08c3 AE 77                   		mov.L	96[r7], r7
 3878 08c5 38 D3 FC                		bra	.L168
 3879                             	.LVL368:
 3880                             	.L203:
 3881                             	.LBE1197:
 3882                             	.LBE1199:
 3883                             	.LBE1201:
 3884                             	.LBE1271:
 3885                             	.LBE1285:
 3886                             	.LBE1313:
 3887                             	.LBB1314:
 3888                             	.LBB1151:
 3889                             	.LBB1139:
 3890                             	.LBB1076:
 3891                             	.LBB1074:
 3892                             	.LBB1069:
 3893 08c8 71 47 FF                		add	#-1, r4, r7
 3894                             	.LVL369:
 3895 08cb 6C 27                   		shll	#2, r7
 3896 08cd 66 CF                   		mov.L	#12, r15
 3897 08cf 4B 0F                   		add	r0, r15
 3898 08d1 4B F7                   		add	r15, r7
 3899 08d3 E5 70 0C 55             		mov.L	48[r7], 340[r0]
 3900 08d7 38 31 FA                		bra	.L204
 3901                             	.LVL370:
 3902                             	.L207:
 3903                             	.LBE1069:
 3904                             	.LBE1074:
 3905                             	.LBE1076:
 3906                             	.LBE1139:
 3907                             	.LBB1140:
 3908                             	.LBB1079:
 3909 08da 6C 24                   		shll	#2, r4
 3910                             	.LVL371:
 3911 08dc 66 C7                   		mov.L	#12, r7
 3912                             	.LVL372:
 3913 08de 4B 07                   		add	r0, r7
 3914 08e0 4B 74                   		add	r7, r4
 3915 08e2 AB 43                   		mov.L	48[r4], r3
 3916 08e4 38 51 FA                		bra	.L208
 3917                             	.LVL373:
 3918                             	.L169:
 3919                             	.LBE1079:
 3920                             	.LBE1140:
 3921                             	.LBE1151:
 3922                             	.LBE1314:
 3923                             	.LBB1315:
 3924                             	.LBB1286:
 3925                             	.LBB1272:
 3926                             	.LBB1204:
 3927 08e7 6C 24                   		shll	#2, r4
 3928                             	.LVL374:
 3929 08e9 66 CF                   		mov.L	#12, r15
 3930 08eb 4B 0F                   		add	r0, r15
 3931 08ed 4B F4                   		add	r15, r4
 3932 08ef ED 41 24                		mov.L	144[r4], r1
 3933 08f2 38 BB FC                		bra	.L170
 3934                             	.LVL375:
 3935                             	.L242:
 3936                             	.LBE1204:
 3937                             	.LBE1272:
 3938                             	.LBE1286:
 3939                             	.LBE1315:
 3940                             	.LBE1332:
 3941                             	.LBE1350:
 3942                             	.LBB1351:
 3943                             	.LBB1023:
 3944                             	.LBB1014:
 3945                             	.LBB927:
 3946                             	.LBB924:
 3947                             	.LBB922:
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else {
 3948                             		.loc 8 263 5
 3949 08f5 F9 02 4B 00 00 80 3F    		mov.L	#0x3f800000, 300[r0]
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 1;
 3950                             		.loc 8 262 5
 3951 08fc F9 02 50 00 00 80 BF    		mov.L	#0xbf800000, 320[r0]
 3952 0903 38 9D F7                		bra	.L125
 3953                             	.LVL376:
 3954                             	.L212:
 3955                             	.LBE922:
 3956                             	.LBE924:
 3957                             	.LBE927:
 3958                             	.LBE1014:
 3959                             	.LBE1023:
 3960                             	.LBE1351:
 3961                             	.LBB1352:
 3962                             	.LBB1333:
 3963                             	.LBB1316:
 3964                             	.LBB1152:
 3965                             	.LBB1141:
 3966                             	.LBB1133:
 3967                             	.LBB1130:
 3968                             	.LBB1126:
 3969                             	.LBB1116:
 3970                             	.LBB1112:
 3971                             	.LBB1102:
 3972                             		.loc 5 371 50
 3973 0906 66 17                   		mov.L	#1, r7
 3974 0908 FD 62 A7                		shll	r10, r7
 3975 090b 38 47 FA                		bra	.L213
 3976                             	.LVL377:
 3977                             	.L172:
 3978                             	.LBE1102:
 3979                             	.LBE1112:
 3980                             	.LBE1116:
 3981                             	.LBE1126:
 3982                             	.LBE1130:
 3983                             	.LBE1133:
 3984                             	.LBE1141:
 3985                             	.LBE1152:
 3986                             	.LBE1316:
 3987                             	.LBB1317:
 3988                             	.LBB1287:
 3989                             	.LBB1273:
 3990                             	.LBB1265:
 3991                             	.LBB1261:
 3992                             	.LBB1253:
 3993                             	.LBB1241:
 3994                             	.LBB1236:
 3995                             	.LBB1228:
 3996 090e 66 17                   		mov.L	#1, r7
 3997 0910 FD 62 37                		shll	r3, r7
 3998 0913 38 BA FC                		bra	.L173
 3999                             	.LVL378:
 4000                             	.L243:
 4001                             	.LBE1228:
 4002                             	.LBE1236:
 4003                             	.LBE1241:
 4004                             	.LBE1253:
 4005                             	.LBE1261:
 4006                             	.LBE1265:
 4007                             	.LBE1273:
 4008                             	.LBE1287:
 4009                             	.LBE1317:
 4010                             	.LBE1333:
 4011                             	.LBE1352:
 4012                             	.LBB1353:
 4013                             	.LBB1024:
 4014                             	.LBB1015:
 4015                             	.LBB997:
 4016                             	.LBB990:
 4017                             	.LBB955:
 645:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 4018                             		.loc 3 645 7
 4019 0916 66 17                   		mov.L	#1, r7
 4020                             	.LVL379:
 4021 0918 38 F4 F7                		bra	.L129
 4022                             	.LVL380:
 4023                             	.L251:
 4024                             	.LBE955:
 4025                             	.LBE990:
 4026                             	.LBE997:
 4027                             	.LBE1015:
 4028                             	.LBE1024:
 4029                             	.LBE1353:
 4030                             	.LBB1354:
 4031                             	.LBB1334:
 4032                             	.LBB1318:
 4033                             	.LBB1153:
 4034                             	.LBB1142:
 4035                             	.LBB1063:
 4036 091b 66 19                   		mov.L	#1, r9
 4037                             	.LVL381:
 4038 091d 38 D3 F9                		bra	.L198
 4039                             	.LVL382:
 4040                             	.L226:
 4041                             	.LBE1063:
 4042                             	.LBE1142:
 4043                             	.LBE1153:
 4044                             	.LBE1318:
 4045                             	.LBB1319:
 4046                             	.LBB1288:
 4047                             	.LBB1274:
 4048                             	.LBB1266:
 4049                             	.LBB1262:
 4050                             	.LBB1254:
 4051                             	.LBB1242:
 4052                             	.LBB1237:
 4053                             	.LBB1229:
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 4054                             		.loc 5 370 3
 4055 0920 FB 42 87 01 00 00       		mov.L	#.LC4, r4
 4056 0926 FB 32 00 00 00 00       		mov.L	#.LANCHOR0, r3
 4057 092c FB 2A 72 01             		mov.L	#0x172, r2
 4058 0930 FB 12 96 01 00 00       		mov.L	#.LC5, r1
 4059 0936 05 00 00 00             		bsr	___assert_func
 4060                             	.LVL383:
 4061                             	.LBE1229:
 4062                             	.LBE1237:
 4063                             	.LBE1242:
 4064                             	.LBE1254:
 4065                             	.LBE1262:
 4066                             	.LBE1266:
 4067                             	.LBE1274:
 4068                             	.LBE1288:
 4069                             	.LBE1319:
 4070                             	.LBE1334:
 4071                             	.LBE1354:
 4072                             	.LFE2260:
 4074 093a 74 10 01 00 00 00       		.section	.text._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode,"ax",@progbits
 4076                             	__ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode:
 4077                             	.LFB2256:
  93:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
 4078                             		.loc 1 93 64 is_stmt 1
 4079                             	.LVL384:
 4080 0000 6E 6D                   		pushm	r6-r13
 4081                             	.LCFI4:
 4082 0002 71 00 A0                		add	#-96, r0
 4083                             	.LCFI5:
  94:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(node->builtin_data != nullptr);
 4084                             		.loc 1 94 3
 4085 0005 A9 26                   		mov.L	16[r2], r6
 4086 0007 61 06                   		cmp	#0, r6
 4087 0009 3A ED 01                		beq	.L342
 4088 000c EF 27                   		mov.L	r2, r7
  95:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 4089                             		.loc 1 95 3
 4090 000e ED 28 05                		mov.L	20[r2], r8
 4091 0011 61 08                   		cmp	#0, r8
 4092 0013 3A E3 01                		beq	.L342
 4093 0016 EF 1A                   		mov.L	r1, r10
  97:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const auto params =
 4094                             		.loc 1 97 3
 4095                             	.LVL385:
  98:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       static_cast<const TfLiteFullyConnectedParams*>(node->builtin_data);
 4096                             		.loc 1 98 3
 101:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteTensor* filter = GetInput(context, node, kWeightsTensor);
 4097                             		.loc 1 101 3
 101:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteTensor* filter = GetInput(context, node, kWeightsTensor);
 4098                             		.loc 1 101 39 is_stmt 0
 4099 0018 66 03                   		mov.L	#0, r3
 4100 001a 05 00 00 00             		bsr	__ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 4101                             	.LVL386:
 4102 001e EF 1B                   		mov.L	r1, r11
 4103                             	.LVL387:
 102:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteTensor* bias = GetOptionalInputTensor(context, node, kBiasTensor);
 4104                             		.loc 1 102 3 is_stmt 1
 102:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteTensor* bias = GetOptionalInputTensor(context, node, kBiasTensor);
 4105                             		.loc 1 102 40 is_stmt 0
 4106 0020 66 13                   		mov.L	#1, r3
 4107 0022 EF 72                   		mov.L	r7, r2
 4108 0024 EF A1                   		mov.L	r10, r1
 4109                             	.LVL388:
 4110 0026 05 00 00 00             		bsr	__ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 4111                             	.LVL389:
 4112 002a EF 1C                   		mov.L	r1, r12
 4113                             	.LVL390:
 103:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
 4114                             		.loc 1 103 3 is_stmt 1
 103:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
 4115                             		.loc 1 103 52 is_stmt 0
 4116 002c 66 23                   		mov.L	#2, r3
 4117 002e EF 72                   		mov.L	r7, r2
 4118 0030 EF A1                   		mov.L	r10, r1
 4119                             	.LVL391:
 4120 0032 05 00 00 00             		bsr	__ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei
 4121                             	.LVL392:
 4122 0036 EF 19                   		mov.L	r1, r9
 4123                             	.LVL393:
 104:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);
 4124                             		.loc 1 104 3 is_stmt 1
 104:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);
 4125                             		.loc 1 104 35 is_stmt 0
 4126 0038 66 03                   		mov.L	#0, r3
 4127 003a EF 72                   		mov.L	r7, r2
 4128 003c EF A1                   		mov.L	r10, r1
 4129                             	.LVL394:
 4130 003e 05 00 00 00             		bsr	__ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
 4131                             	.LVL395:
 4132 0042 EF 17                   		mov.L	r1, r7
 4133                             	.LVL396:
 105:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_MSG(context, input->type == filter->type,
 4134                             		.loc 1 105 3 is_stmt 1
 105:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_MSG(context, input->type == filter->type,
 4135                             		.loc 1 105 3
 4136 0044 EC B1                   		mov.L	[r11], r1
 4137                             	.LVL397:
 4138 0046 06 84 71                		cmp	[r7].L, r1
 4139 0049 21 2E                   		bne	.L386
 106:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                      "Hybrid models are not supported on TFLite Micro.");
 4140                             		.loc 1 106 3
 106:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                      "Hybrid models are not supported on TFLite Micro.");
 4141                             		.loc 1 106 3
 4142 004b 06 84 C1                		cmp	[r12].L, r1
 4143 004e 20 17                   		beq	.L345
 106:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                      "Hybrid models are not supported on TFLite Micro.");
 4144                             		.loc 1 106 3 discriminator 1
 106:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                      "Hybrid models are not supported on TFLite Micro.");
 4145                             		.loc 1 106 3 discriminator 1
 4146 0050 ED A7 05                		mov.L	20[r10], r7
 4147                             	.LVL398:
 4148 0053 F8 02 33 00 00 00       		mov.L	#.LC10, [r0]
 4149 0059 EF A1                   		mov.L	r10, r1
 4150 005b 66 1D                   		mov.L	#1, r13
 4151 005d 7F 17                   		jsr	r7
 4152                             	.LVL399:
 106:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                      "Hybrid models are not supported on TFLite Micro.");
 4153                             		.loc 1 106 3 discriminator 1
 4154 005f 03                      		.balign 8,3,1
 4155                             	.L340:
 135:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 4156                             		.loc 1 135 1 is_stmt 0
 4157 0060 EF D1                   		mov.L	r13, r1
 4158 0062 3F 6D 20                		rtsd	#128, r6-r13
 4159                             	.LVL400:
 4160                             	.L345:
 108:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                         input->type, input, filter, bias,
 4161                             		.loc 1 108 3 is_stmt 1
 4162                             	.LBB1402:
 108:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                         input->type, input, filter, bias,
 4163                             		.loc 1 108 3
 4164 0065 EC 88                   		mov.L	[r8], r8
 4165                             	.LVL401:
 4166                             	.LBB1403:
 4167                             	.LBB1404:
  68:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // Set buffer index to a reset value
 4168                             		.loc 1 68 3
  70:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   if (data_type != kTfLiteFloat32) {
 4169                             		.loc 1 70 3
  70:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   if (data_type != kTfLiteFloat32) {
 4170                             		.loc 1 70 20 is_stmt 0
 4171 0067 F9 66 05 FF             		mov.L	#-1, 20[r6]
  71:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     double real_multiplier = 0.0;
 4172                             		.loc 1 71 3 is_stmt 1
 4173                             	.LBB1405:
 4174 006b 61 11                   		cmp	#1, r1
 4175 006d 21 47                   		bne	.L346
 4176                             	.LVL402:
 4177 006f 03                      		.balign 8,3,1
 4178                             	.L349:
 4179                             	.LBE1405:
 4180                             	.LBE1404:
 4181                             	.LBE1403:
 4182                             	.LBE1402:
 134:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
 4183                             		.loc 1 134 10 is_stmt 0
 4184 0070 66 0D                   		mov.L	#0, r13
 135:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 4185                             		.loc 1 135 1
 4186 0072 EF D1                   		mov.L	r13, r1
 4187 0074 3F 6D 20                		rtsd	#128, r6-r13
 4188                             	.LVL403:
 4189                             	.L386:
 105:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_MSG(context, input->type == filter->type,
 4190                             		.loc 1 105 3 is_stmt 1 discriminator 1
 105:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_MSG(context, input->type == filter->type,
 4191                             		.loc 1 105 3 discriminator 1
 4192 0077 ED A6 05                		mov.L	20[r10], r6
 4193                             	.LVL404:
 4194 007a 66 1D                   		mov.L	#1, r13
 4195 007c 05 00 00 00             		bsr	_TfLiteTypeGetName
 4196                             	.LVL405:
 4197 0080 EF 1B                   		mov.L	r1, r11
 4198                             	.LVL406:
 4199 0082 EC 71                   		mov.L	[r7], r1
 4200 0084 05 00 00 00             		bsr	_TfLiteTypeGetName
 4201                             	.LVL407:
 4202 0088 A1 81                   		mov.L	r1, 24[r0]
 4203 008a E7 0B 05                		mov.L	r11, 20[r0]
 4204 008d F9 02 04 00 00 00 00    		mov.L	#.LC7, 16[r0]
 4205 0094 F9 02 03 0D 00 00 00    		mov.L	#.LC8, 12[r0]
 4206 009b 3E 02 69                		mov.L	#0x69, 8[r0]
 4207 009e F9 02 01 35 01 00 00    		mov.L	#.LC2, 4[r0]
 4208 00a5 EF A1                   		mov.L	r10, r1
 4209 00a7 F8 02 19 00 00 00       		mov.L	#.LC9, [r0]
 4210 00ad 7F 16                   		jsr	r6
 4211                             	.LVL408:
 105:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TF_LITE_ENSURE_MSG(context, input->type == filter->type,
 4212                             		.loc 1 105 3 discriminator 1
 135:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 4213                             		.loc 1 135 1 is_stmt 0 discriminator 1
 4214 00af EF D1                   		mov.L	r13, r1
 4215 00b1 3F 6D 20                		rtsd	#128, r6-r13
 4216                             	.LVL409:
 4217                             	.L346:
 4218                             	.LBB1415:
 4219                             	.LBB1414:
 4220                             	.LBB1413:
 4221                             	.LBB1412:
 4222                             	.LBB1406:
  72:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TF_LITE_ENSURE_STATUS(GetQuantizedConvolutionMultipler(
 4223                             		.loc 1 72 5 is_stmt 1
 4224                             	.LBB1407:
  73:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context, input, filter, bias, output, &real_multiplier));
 4225                             		.loc 1 73 5 is_stmt 0
 4226 00b4 71 05 34                		add	#52, r0, r5
 4227 00b7 E3 07                   		mov.L	r7, [r0]
 4228 00b9 EF 94                   		mov.L	r9, r4
 4229 00bb A0 0D                   		mov.L	r5, 4[r0]
 4230 00bd EF C3                   		mov.L	r12, r3
 4231 00bf EF B2                   		mov.L	r11, r2
 4232 00c1 EF A1                   		mov.L	r10, r1
 4233                             	.LVL410:
 4234                             	.LBE1407:
  72:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TF_LITE_ENSURE_STATUS(GetQuantizedConvolutionMultipler(
 4235                             		.loc 1 72 12
 4236 00c3 3E 0D 00                		mov.L	#0x0, 52[r0]
  73:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context, input, filter, bias, output, &real_multiplier));
 4237                             		.loc 1 73 5 is_stmt 1
 4238                             	.LBB1408:
  73:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context, input, filter, bias, output, &real_multiplier));
 4239                             		.loc 1 73 5
 4240 00c6 05 00 00 00             		bsr	__ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd
 4241                             	.LVL411:
 4242 00ca 71 1D 00                		add	#0, r1, r13
 4243 00cd 21 93                   		bne	.L340
 4244                             	.LBE1408:
  75:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     QuantizeMultiplier(real_multiplier, &data->output_multiplier, &exponent);
 4245                             		.loc 1 75 5
  76:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->output_shift = -exponent;
 4246                             		.loc 1 76 5
  76:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->output_shift = -exponent;
 4247                             		.loc 1 76 23 is_stmt 0
 4248 00cf AB 09                   		mov.L	52[r0], r1
 4249 00d1 75 43 1C                		mov.L	#28, r3
 4250 00d4 4B 03                   		add	r0, r3
 4251 00d6 EF 62                   		mov.L	r6, r2
 4252 00d8 05 00 00 00             		bsr	__ZN6tflite18QuantizeMultiplierEdPlPi
 4253                             	.LVL412:
  77:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(
 4254                             		.loc 1 77 5 is_stmt 1
 4255                             	.LBB1409:
  78:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context, activation, output, &data->output_activation_min,
 4256                             		.loc 1 78 5 is_stmt 0
 4257 00dc 71 62 0C                		add	#12, r6, r2
 4258                             	.LBE1409:
  77:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(
 4259                             		.loc 1 77 26
 4260 00df A9 8D                   		mov.L	28[r0], r5
 4261 00e1 7E 15                   		neg	r5
 4262                             	.LBB1410:
  78:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context, activation, output, &data->output_activation_min,
 4263                             		.loc 1 78 5
 4264 00e3 71 64 08                		add	#8, r6, r4
 4265 00e6 EF 73                   		mov.L	r7, r3
 4266                             	.LBE1410:
  77:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(
 4267                             		.loc 1 77 24
 4268 00e8 A0 6D                   		mov.L	r5, 4[r6]
  78:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context, activation, output, &data->output_activation_min,
 4269                             		.loc 1 78 5 is_stmt 1
 4270                             	.LBB1411:
  78:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         context, activation, output, &data->output_activation_min,
 4271                             		.loc 1 78 5
 4272 00ea E3 02                   		mov.L	r2, [r0]
 4273 00ec EF 82                   		mov.L	r8, r2
 4274 00ee EF A1                   		mov.L	r10, r1
 4275 00f0 05 00 00 00             		bsr	__ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLit
 4276                             	.LVL413:
 4277 00f4 71 1D 00                		add	#0, r1, r13
 4278 00f7 3B 69 FF                		bne	.L340
 4279                             	.LBE1411:
  81:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->filter_zero_point = filter->params.zero_point;
 4280                             		.loc 1 81 5
  81:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->filter_zero_point = filter->params.zero_point;
 4281                             		.loc 1 81 28 is_stmt 0
 4282 00fa E5 B6 04 06             		mov.L	16[r11], 24[r6]
  82:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->output_zero_point = output->params.zero_point;
 4283                             		.loc 1 82 5 is_stmt 1
  82:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     data->output_zero_point = output->params.zero_point;
 4284                             		.loc 1 82 29 is_stmt 0
 4285 00fe E5 C6 04 07             		mov.L	16[r12], 28[r6]
  83:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   }
 4286                             		.loc 1 83 5 is_stmt 1
  83:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   }
 4287                             		.loc 1 83 29 is_stmt 0
 4288 0102 E5 76 04 08             		mov.L	16[r7], 32[r6]
 4289                             	.LVL414:
 4290                             	.LBE1406:
 4291                             	.LBE1412:
 4292                             	.LBE1413:
 4293                             	.LBE1414:
 108:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                                         input->type, input, filter, bias,
 4294                             		.loc 1 108 3 is_stmt 1
 4295                             	.LBE1415:
 112:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     RuntimeShape filter_shape = GetTensorShape(filter);
 4296                             		.loc 1 112 3
 4297                             	.LBB1416:
 112:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     RuntimeShape filter_shape = GetTensorShape(filter);
 4298                             		.loc 1 112 34 is_stmt 0
 4299 0106 EC B5                   		mov.L	[r11], r5
 4300 0108 61 95                   		cmp	#9, r5
 4301 010a 3B 66 FF                		bne	.L349
 4302                             	.LVL415:
 4303                             	.LBB1417:
 4304                             	.LBB1418:
 4305                             		.file 10 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TENSOR_CTYPES_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TENSOR_CTYPES_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** #include "tensorflow/lite/c/common.h"
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** #include "tensorflow/lite/kernels/internal/types.h"
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** namespace tflite {
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** template <typename T>
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** inline T* GetTensorData(TfLiteTensor* tensor) {
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** }
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** template <typename T>
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** inline const T* GetTensorData(const TfLiteTensor* tensor) {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   return tensor != nullptr ? reinterpret_cast<const T*>(tensor->data.raw)
 4306                             		.loc 10 30 28
 4307 010d 61 09                   		cmp	#0, r9
 4308 010f 3A 61 FF                		beq	.L349
 4309                             	.LVL416:
 4310                             	.LBE1418:
 4311                             	.LBE1417:
 112:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     RuntimeShape filter_shape = GetTensorShape(filter);
 4312                             		.loc 1 112 34
 4313 0112 ED 95 01                		mov.L	4[r9], r5
 4314 0115 61 05                   		cmp	#0, r5
 4315 0117 3A 59 FF                		beq	.L349
 4316                             	.LBB1419:
 113:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     RuntimeShape output_shape = GetTensorShape(output);
 4317                             		.loc 1 113 5 is_stmt 1
 4318                             	.LVL417:
 4319                             	.LBB1420:
 4320                             	.LBB1421:
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****                            : nullptr;
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** }
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** inline RuntimeShape GetTensorShape(const TfLiteTensor* tensor) {
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   if (tensor == nullptr) {
 4321                             		.loc 10 35 3
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****     return RuntimeShape();
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   }
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   TfLiteIntArray* dims = tensor->dims;
 4322                             		.loc 10 39 3
 4323                             		.loc 10 39 19 is_stmt 0
 4324 011a ED CB 02                		mov.L	8[r12], r11
 4325                             	.LVL418:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int dims_size = dims->size;
 4326                             		.loc 10 40 3 is_stmt 1
 4327                             		.loc 10 40 13 is_stmt 0
 4328 011d EC B1                   		mov.L	[r11], r1
 4329                             	.LVL419:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int32_t* dims_data = reinterpret_cast<const int32_t*>(dims->data);
 4330                             		.loc 10 41 3 is_stmt 1
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   return RuntimeShape(dims_size, dims_data);
 4331                             		.loc 10 42 3
 4332                             	.LBE1421:
 4333                             	.LBE1420:
 4334                             	.LBE1419:
 4335                             	.LBE1416:
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4336                             		.loc 3 162 5
 4337                             	.LBB1482:
 4338                             	.LBB1477:
 4339                             	.LBB1436:
 4340                             	.LBB1434:
 4341                             	.LBB1422:
 4342                             	.LBB1423:
 4343                             	.LBB1424:
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 4344                             		.loc 3 238 5
 4345                             	.LBB1425:
 4346                             	.LBB1426:
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4347                             		.loc 3 220 5
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 4348                             		.loc 3 227 5
 4349 011f FD C2 13                		shll	#2, r1, r3
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 4350                             		.loc 3 227 11 is_stmt 0
 4351 0122 A3 09                   		mov.L	r1, 52[r0]
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4352                             		.loc 3 228 5 is_stmt 1
 4353 0124 61 51                   		cmp	#5, r1
 4354 0126 2A 05 38 9D 00          		ble	.L363
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4355                             		.loc 3 232 7
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4356                             		.loc 3 232 51 is_stmt 0
 4357 012b 74 01 FF FF FF 1F       		cmp	#0x1fffffff, r1
 4358 0131 EF 31                   		mov.L	r3, r1
 4359                             	.LVL420:
 4360 0133 2B 05                   		ble 1f
 4361 0135 FB 16 FF                		mov #-1, r1
 4362                             	1:
 4363 0138 A5 8B                   		mov.L	r3, 92[r0]
 4364 013a 05 00 00 00             		bsr	__Znam
 4365                             	.LVL421:
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4366                             		.loc 3 232 21
 4367 013e A3 81                   		mov.L	r1, 56[r0]
 4368                             	.LBE1426:
 4369                             	.LBE1425:
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 4370                             		.loc 3 239 5 is_stmt 1
 4371                             	.LVL422:
 4372                             	.LBB1427:
 4373                             	.LBB1428:
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4374                             		.loc 3 211 5
 4375 0140 AD 8B                   		mov.L	92[r0], r3
 4376                             	.LVL423:
 4377                             		.balign 8,3,2
 4378                             	.L350:
 4379                             	.LBE1428:
 4380                             	.LBE1427:
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4381                             		.loc 3 240 5
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4382                             		.loc 3 240 16 is_stmt 0
 4383 0142 71 B2 04                		add	#4, r11, r2
 4384 0145 7F 8F                   		smovf
 4385                             	.LVL424:
 4386                             	.LBE1424:
 4387                             	.LBE1423:
 4388                             	.LBE1422:
 4389                             	.LBE1434:
 4390                             	.LBE1436:
 114:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 4391                             		.loc 1 114 5 is_stmt 1
 4392                             	.LBB1437:
 4393                             	.LBB1438:
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****     return RuntimeShape();
 4394                             		.loc 10 35 3
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int dims_size = dims->size;
 4395                             		.loc 10 39 3
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int dims_size = dims->size;
 4396                             		.loc 10 39 19 is_stmt 0
 4397 0147 A8 F7                   		mov.L	8[r7], r7
 4398                             	.LVL425:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int32_t* dims_data = reinterpret_cast<const int32_t*>(dims->data);
 4399                             		.loc 10 40 3 is_stmt 1
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int32_t* dims_data = reinterpret_cast<const int32_t*>(dims->data);
 4400                             		.loc 10 40 13 is_stmt 0
 4401 0149 EC 71                   		mov.L	[r7], r1
 4402                             	.LVL426:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   return RuntimeShape(dims_size, dims_data);
 4403                             		.loc 10 41 3 is_stmt 1
 4404                             		.loc 10 42 3
 4405                             	.LBE1438:
 4406                             	.LBE1437:
 4407                             	.LBE1477:
 4408                             	.LBE1482:
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4409                             		.loc 3 162 5
 4410                             	.LBB1483:
 4411                             	.LBB1478:
 4412                             	.LBB1455:
 4413                             	.LBB1453:
 4414                             	.LBB1439:
 4415                             	.LBB1440:
 4416                             	.LBB1441:
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 4417                             		.loc 3 238 5
 4418                             	.LBB1442:
 4419                             	.LBB1443:
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4420                             		.loc 3 220 5
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 4421                             		.loc 3 227 5
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 4422                             		.loc 3 227 11 is_stmt 0
 4423 014b A1 89                   		mov.L	r1, 28[r0]
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4424                             		.loc 3 228 5 is_stmt 1
 4425 014d FD C2 13                		shll	#2, r1, r3
 4426 0150 61 51                   		cmp	#5, r1
 4427 0152 2B 79                   		ble	.L387
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4428                             		.loc 3 232 7
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4429                             		.loc 3 232 51 is_stmt 0
 4430 0154 74 01 FF FF FF 1F       		cmp	#0x1fffffff, r1
 4431 015a EF 31                   		mov.L	r3, r1
 4432                             	.LVL427:
 4433 015c 2B 05                   		ble 1f
 4434 015e FB 16 FF                		mov #-1, r1
 4435                             	1:
 4436 0161 A5 8B                   		mov.L	r3, 92[r0]
 4437 0163 05 00 00 00             		bsr	__Znam
 4438                             	.LVL428:
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4439                             		.loc 3 232 21
 4440 0167 A2 01                   		mov.L	r1, 32[r0]
 4441                             	.LBE1443:
 4442                             	.LBE1442:
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 4443                             		.loc 3 239 5 is_stmt 1
 4444                             	.LVL429:
 4445                             	.LBB1445:
 4446                             	.LBB1446:
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4447                             		.loc 3 211 5
 4448                             	.LBE1446:
 4449                             	.LBE1445:
 4450                             	.LBB1448:
 4451                             	.LBB1444:
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4452                             		.loc 3 232 21 is_stmt 0
 4453 0169 AD 8B                   		mov.L	92[r0], r3
 4454                             	.LVL430:
 4455                             		.balign 8,3,2
 4456                             	.L353:
 4457                             	.LBE1444:
 4458                             	.LBE1448:
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4459                             		.loc 3 240 5 is_stmt 1
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4460                             		.loc 3 240 16 is_stmt 0
 4461 016b 71 72 04                		add	#4, r7, r2
 4462 016e 7F 8F                   		smovf
 4463                             	.LVL431:
 4464                             	.LBE1441:
 4465                             	.LBE1440:
 4466                             	.LBE1439:
 4467                             	.LBE1453:
 4468                             	.LBE1455:
 116:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const int filter_dim_count = filter_shape.DimensionsCount();
 4469                             		.loc 1 116 5 is_stmt 1
 4470                             	.LBE1478:
 4471                             	.LBE1483:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 4472                             		.loc 3 194 44
 4473                             	.LBB1484:
 4474                             	.LBB1479:
 116:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     const int filter_dim_count = filter_shape.DimensionsCount();
 4475                             		.loc 1 116 5 is_stmt 0
 4476 0170 A9 8F                   		mov.L	28[r0], r7
 4477                             	.LVL432:
 4478 0172 61 27                   		cmp	#2, r7
 4479 0174 3B 82 00                		bne	.L342
 117:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_dims filter_dims;
 4480                             		.loc 1 117 5 is_stmt 1
 117:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     cmsis_nn_dims filter_dims;
 4481                             		.loc 1 117 62 is_stmt 0
 4482 0177 AB 0F                   		mov.L	52[r0], r7
 4483                             	.LVL433:
 4484                             	.LBE1479:
 4485                             	.LBE1484:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 4486                             		.loc 3 194 44 is_stmt 1
 4487                             	.LBB1485:
 4488                             	.LBB1480:
 118:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.n = filter_shape.Dims(filter_dim_count - 1);
 4489                             		.loc 1 118 5
 119:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.h = 1;
 4490                             		.loc 1 119 5
 119:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.h = 1;
 4491                             		.loc 1 119 38 is_stmt 0
 4492 0179 71 75 FF                		add	#-1, r7, r5
 4493                             	.LVL434:
 4494                             	.LBB1456:
 4495                             	.LBB1457:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4496                             		.loc 3 196 5 is_stmt 1
 4497 017c 27 7A                   		bn	.L342
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4498                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4499                             		.loc 3 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4500                             		.loc 3 198 34 is_stmt 0
 4501 017e 61 57                   		cmp	#5, r7
 4502 0180 2B 50                   		ble	.L355
 4503 0182 AB 84                   		mov.L	56[r0], r4
 4504 0184 FE 65 45                		mov.L	[r5,r4], r5
 4505                             	.LVL435:
 4506 0187 03                      		.balign 8,3,2
 4507                             	.L356:
 4508                             	.LBE1457:
 4509                             	.LBE1456:
 125:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 4510                             		.loc 1 125 47
 4511 0188 71 01 4C                		add	#0x4c, r0, r1
 119:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.h = 1;
 4512                             		.loc 1 119 19
 4513 018b A4 8D                   		mov.L	r5, 76[r0]
 120:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.w = 1;
 4514                             		.loc 1 120 5 is_stmt 1
 120:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.w = 1;
 4515                             		.loc 1 120 19 is_stmt 0
 4516 018d 3E 84 01                		mov.L	#1, 80[r0]
 121:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.c = output_shape.Dims(1);
 4517                             		.loc 1 121 5 is_stmt 1
 122:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 4518                             		.loc 1 122 19 is_stmt 0
 4519 0190 E5 00 09 16             		mov.L	36[r0], 88[r0]
 121:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     filter_dims.c = output_shape.Dims(1);
 4520                             		.loc 1 121 19
 4521 0194 3E 85 01                		mov.L	#1, 84[r0]
 122:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 4522                             		.loc 1 122 5 is_stmt 1
 4523                             	.LVL436:
 4524                             	.LBB1459:
 4525                             	.LBB1460:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4526                             		.loc 3 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4527                             		.loc 3 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4528                             		.loc 3 198 5
 4529                             	.LBE1460:
 4530                             	.LBE1459:
 124:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****         arm_fully_connected_s8_get_buffer_size(&filter_dims);
 4531                             		.loc 1 124 5
 125:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 4532                             		.loc 1 125 47 is_stmt 0
 4533 0197 05 00 00 00             		bsr	_arm_fully_connected_s8_get_buffer_size
 4534                             	.LVL437:
 127:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       TF_LITE_ENSURE_STATUS(context->RequestScratchBufferInArena(
 4535                             		.loc 1 127 5 is_stmt 1
 4536                             	.LBB1461:
 4537 019b 61 01                   		cmp	#0, r1
 4538 019d 2B 41                   		ble	.L388
 4539                             	.LBE1461:
 4540                             	.LBE1480:
 4541                             	.LBE1485:
 128:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****           context, buf_size, &data->buffer_idx));
 4542                             		.loc 1 128 7
 4543                             	.LBB1486:
 4544                             	.LBB1481:
 4545                             	.LBB1464:
 4546                             	.LBB1462:
 128:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****           context, buf_size, &data->buffer_idx));
 4547                             		.loc 1 128 7
 4548 019f ED A5 10                		mov.L	64[r10], r5
 4549 01a2 71 63 14                		add	#20, r6, r3
 4550 01a5 EF 12                   		mov.L	r1, r2
 4551 01a7 EF A1                   		mov.L	r10, r1
 4552                             	.LVL438:
 4553 01a9 7F 15                   		jsr	r5
 4554                             	.LVL439:
 4555 01ab 71 1A 00                		add	#0, r1, r10
 4556                             	.LVL440:
 4557 01ae 21 36                   		bne	.L389
 4558                             		.balign 8,3,1
 4559                             	.L357:
 4560                             	.LVL441:
 4561                             	.LBE1462:
 4562                             	.LBE1464:
 4563                             	.LBB1465:
 4564                             	.LBB1466:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4565                             		.loc 3 185 5
 4566                             	.LBE1466:
 4567                             	.LBE1465:
 4568                             	.LBB1467:
 4569                             	.LBB1468:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4570                             		.loc 3 185 5
 4571 01b0 61 57                   		cmp	#5, r7
 4572 01b2 2A 05 38 AC FE          		ble	.L340
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4573                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4574                             		.loc 3 189 16 is_stmt 0
 4575 01b7 AB 81                   		mov.L	56[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4576                             		.loc 3 189 29
 4577 01b9 61 01                   		cmp	#0, r1
 4578 01bb 3A A5 FE                		beq	.L340
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4579                             		.loc 3 189 16
 4580 01be 05 00 00 00             		bsr	__ZdaPv
 4581                             	.LVL442:
 4582 01c2 38 9E FE                		bra	.L340
 4583                             	.LVL443:
 4584                             	.L363:
 4585                             	.LBE1468:
 4586                             	.LBE1467:
 4587                             	.LBB1469:
 4588                             	.LBB1435:
 4589                             	.LBB1433:
 4590                             	.LBB1432:
 4591                             	.LBB1431:
 4592                             	.LBB1430:
 4593                             	.LBB1429:
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4594                             		.loc 3 211 34
 4595 01c5 71 01 38                		add	#56, r0, r1
 4596                             	.LVL444:
 4597 01c8 38 7A FF                		bra	.L350
 4598                             	.LVL445:
 4599                             	.L387:
 4600                             	.LBE1429:
 4601                             	.LBE1430:
 4602                             	.LBE1431:
 4603                             	.LBE1432:
 4604                             	.LBE1433:
 4605                             	.LBE1435:
 4606                             	.LBE1469:
 4607                             	.LBB1470:
 4608                             	.LBB1454:
 4609                             	.LBB1452:
 4610                             	.LBB1451:
 4611                             	.LBB1450:
 4612                             	.LBB1449:
 4613                             	.LBB1447:
 4614 01cb 71 01 20                		add	#32, r0, r1
 4615                             	.LVL446:
 4616 01ce 2E 9D                   		bra	.L353
 4617                             	.LVL447:
 4618                             	.L355:
 4619                             	.LBE1447:
 4620                             	.LBE1449:
 4621                             	.LBE1450:
 4622                             	.LBE1451:
 4623                             	.LBE1452:
 4624                             	.LBE1454:
 4625                             	.LBE1470:
 4626                             	.LBB1471:
 4627                             	.LBB1458:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4628                             		.loc 3 198 34
 4629 01d0 FD C2 75                		shll	#2, r7, r5
 4630                             	.LVL448:
 4631 01d3 75 44 1C                		mov.L	#28, r4
 4632 01d6 4B 04                   		add	r0, r4
 4633 01d8 4B 45                   		add	r4, r5
 4634 01da A9 D5                   		mov.L	24[r5], r5
 4635 01dc 2E AC                   		bra	.L356
 4636                             	.LVL449:
 4637                             	.L388:
 4638                             	.LBE1458:
 4639                             	.LBE1471:
 4640                             	.LBB1472:
 131:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     }
 4641                             		.loc 1 131 7 is_stmt 1
 131:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     }
 4642                             		.loc 1 131 24 is_stmt 0
 4643 01de F9 66 05 FF             		mov.L	#-1, 20[r6]
 4644 01e2 2E CE                   		bra	.L357
 4645                             	.LVL450:
 4646                             	.L389:
 4647                             	.LBB1463:
 128:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****           context, buf_size, &data->buffer_idx));
 4648                             		.loc 1 128 7 is_stmt 1
 4649                             	.LBE1463:
 4650                             	.LBE1472:
 4651                             	.LBB1473:
 4652                             	.LBB1474:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4653                             		.loc 3 185 5
 4654                             	.LBE1474:
 4655                             	.LBE1473:
 4656                             	.LBB1475:
 4657                             	.LBB1476:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4658                             		.loc 3 185 5
 4659 01e4 61 57                   		cmp	#5, r7
 4660 01e6 2B 0B                   		ble	.L358
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4661                             		.loc 3 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4662                             		.loc 3 189 16 is_stmt 0
 4663 01e8 AB 81                   		mov.L	56[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4664                             		.loc 3 189 29
 4665 01ea 61 01                   		cmp	#0, r1
 4666 01ec 15                      		beq	.L358
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4667                             		.loc 3 189 16
 4668 01ed 05 00 00 00             		bsr	__ZdaPv
 4669                             	.LVL451:
 4670                             		.balign 8,3,1
 4671                             	.L358:
 4672                             	.LBE1476:
 4673                             	.LBE1475:
 4674 01f1 EF AD                   		mov.L	r10, r13
 4675 01f3 38 6D FE                		bra	.L340
 4676                             	.LVL452:
 4677                             	.L342:
 4678                             	.LBE1481:
 4679                             	.LBE1486:
  94:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(node->builtin_data != nullptr);
 4680                             		.loc 1 94 3 discriminator 1
 4681 01f6 05 00 00 00             		bsr	_abort
 4682                             	.LVL453:
 4683                             	.LFE2256:
 4685 01fa 74 10 01 00 00 00       		.section	.text._ZN6tflite24Register_FULLY_CONNECTEDEv,"ax",@progbits
 4686                             		.global	__ZN6tflite24Register_FULLY_CONNECTEDEv
 4688                             	__ZN6tflite24Register_FULLY_CONNECTEDEv:
 4689                             	.LFB2262:
 336:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 337:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** // Note that the current function names are not ideal at all (this EvalInt8
 338:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** // function internally calls EvalQuantizedInt8, and there is similar name
 339:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** // aliasing in the Eval function too). We will be attempting to have a more
 340:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** // descriptive naming convention but holding off on that for now, since the
 341:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** // renaming might be coupled with reducing code duplication and some additional
 342:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** // refactoring.
 343:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** TfLiteStatus EvalInt8(TfLiteContext* context, TfLiteNode* node) {
 344:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteEvalTensor* input =
 345:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
 346:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteEvalTensor* filter =
 347:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetEvalInput(context, node, kWeightsTensor);
 348:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const TfLiteEvalTensor* bias =
 349:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetEvalInput(context, node, kBiasTensor);
 350:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TfLiteEvalTensor* output =
 351:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
 352:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 353:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
 354:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   const OpData& data = *(static_cast<const OpData*>(node->user_data));
 355:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 356:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   // Checks in Prepare ensure input, output and filter types are all the same.
 357:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   if (input->type != kTfLiteInt8) {
 358:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     TF_LITE_KERNEL_LOG(context, "Type %s (%d) not supported.",
 359:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****                        TfLiteTypeGetName(input->type), input->type);
 360:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****     return kTfLiteError;
 361:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   }
 362:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 363:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return EvalQuantizedInt8(context, node, data, input, filter, bias, output);
 364:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
 365:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 366:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }  // namespace
 367:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** 
 368:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** TfLiteRegistration Register_FULLY_CONNECTED() {
 4690                             		.loc 1 368 47 is_stmt 1
 369:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.init = Init;
 4691                             		.loc 1 369 3
 4692                             		.loc 1 369 37 is_stmt 0
 4693 0000 FB 52 00 00 00 00       		mov.L	#.LANCHOR1, r5
 370:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.free = nullptr;
 371:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.prepare = Prepare;
 372:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.invoke = Eval;
 373:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.profiling_string = nullptr;
 374:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.builtin_code = 0;
 375:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.custom_name = nullptr;
 376:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.version = 0;
 377:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return fully_connected_registration;
 4694                             		.loc 1 377 10
 4695 0006 EF F1                   		mov.L	r15, r1
 4696 0008 EF 52                   		mov.L	r5, r2
 4697 000a 75 43 20                		mov.L	#32, r3
 369:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.init = Init;
 4698                             		.loc 1 369 37
 4699 000d F8 52 00 00 00 00       		mov.L	#__ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcm, [r5]
 370:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.free = nullptr;
 4700                             		.loc 1 370 3 is_stmt 1
 370:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.free = nullptr;
 4701                             		.loc 1 370 37 is_stmt 0
 4702 0013 3E 51 00                		mov.L	#0, 4[r5]
 371:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.invoke = Eval;
 4703                             		.loc 1 371 3 is_stmt 1
 371:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.invoke = Eval;
 4704                             		.loc 1 371 40 is_stmt 0
 4705 0016 F9 52 02 00 00 00 00    		mov.L	#__ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, 8[r5]
 372:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.profiling_string = nullptr;
 4706                             		.loc 1 372 3 is_stmt 1
 372:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.profiling_string = nullptr;
 4707                             		.loc 1 372 39 is_stmt 0
 4708 001d F9 52 03 00 00 00 00    		mov.L	#__ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, 12[r5]
 373:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.builtin_code = 0;
 4709                             		.loc 1 373 3 is_stmt 1
 373:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.builtin_code = 0;
 4710                             		.loc 1 373 49 is_stmt 0
 4711 0024 3E 54 00                		mov.L	#0, 16[r5]
 374:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.custom_name = nullptr;
 4712                             		.loc 1 374 3 is_stmt 1
 374:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.custom_name = nullptr;
 4713                             		.loc 1 374 45 is_stmt 0
 4714 0027 3E 55 00                		mov.L	#0, 20[r5]
 375:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.version = 0;
 4715                             		.loc 1 375 3 is_stmt 1
 375:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   fully_connected_registration.version = 0;
 4716                             		.loc 1 375 44 is_stmt 0
 4717 002a 3E 56 00                		mov.L	#0, 24[r5]
 376:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return fully_connected_registration;
 4718                             		.loc 1 376 3 is_stmt 1
 376:../src/tensorflow/lite/micro/kernels/fully_connected.cc ****   return fully_connected_registration;
 4719                             		.loc 1 376 40 is_stmt 0
 4720 002d 3E 57 00                		mov.L	#0, 28[r5]
 4721                             		.loc 1 377 3 is_stmt 1
 4722                             		.loc 1 377 10 is_stmt 0
 4723 0030 7F 8F                   		smovf
 378:../src/tensorflow/lite/micro/kernels/fully_connected.cc **** }
 4724                             		.loc 1 378 1
 4725 0032 EF F1                   		mov.L	r15, r1
 4726 0034 02                      		rts
 4727                             	.LFE2262:
 4729                             		.section	.bss._ZN6tflite12_GLOBAL__N_128fully_connected_registrationE,"aw",@nobits
 4730                             		.balign 4
 4731                             		.set	.LANCHOR1,. + 0
 4734                             	__ZN6tflite12_GLOBAL__N_128fully_connected_registrationE:
 4735 0000 00 00 00 00 00 00 00 00 		.zero	32
 4735      00 00 00 00 00 00 00 00 
 4735      00 00 00 00 00 00 00 00 
 4735      00 00 00 00 00 00 00 00 
 4736                             		.section	.rodata._ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6O
 4737                             	.LC0:
 4738 0000 41 52 4D 5F 4D 41 54 48 		.string	"ARM_MATH_SUCCESS"
 4738      5F 53 55 43 43 45 53 53 
 4738      00 
 4739                             	.LC1:
 4740 0011 61 72 6D 5F 66 75 6C 6C 		.ascii	"arm_fully_connected_s8( &ctx, &fc_p"
 4740      79 5F 63 6F 6E 6E 65 63 
 4740      74 65 64 5F 73 38 28 20 
 4740      26 63 74 78 2C 20 26 66 
 4740      63 5F 70 
 4741 0034 61 72 61 6D 73 2C 20 26 		.string	"arams, &quant_params, &input_dims, tflite::micro::GetTensorData<int8_t>(input), &filter_d
 4741      71 75 61 6E 74 5F 70 61 
 4741      72 61 6D 73 2C 20 26 69 
 4741      6E 70 75 74 5F 64 69 6D 
 4741      73 2C 20 74 66 6C 69 74 
 4742                             	.LC2:
 4743 0135 2E 2E 2F 73 72 63 2F 74 		.string	"../src/tensorflow/lite/micro/kernels/fully_connected.cc"
 4743      65 6E 73 6F 72 66 6C 6F 
 4743      77 2F 6C 69 74 65 2F 6D 
 4743      69 63 72 6F 2F 6B 65 72 
 4743      6E 65 6C 73 2F 66 75 6C 
 4744                             	.LC3:
 4745 016d 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s != %s (%d != %d)"
 4745      20 21 3D 20 25 73 20 28 
 4745      25 64 20 21 3D 20 25 64 
 4745      29 00 
 4746                             	.LC4:
 4747 0187 65 78 70 6F 6E 65 6E 74 		.string	"exponent <= 31"
 4747      20 3C 3D 20 33 31 00 
 4748                             	.LC5:
 4749 0196 43 3A 5C 55 73 65 72 73 		.string	"C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\thi
 4749      5C 61 35 31 31 36 39 33 
 4749      38 5C 44 65 73 6B 74 6F 
 4749      70 5C 65 32 5F 73 74 75 
 4749      64 69 6F 5F 77 6F 72 6B 
 4750                             		.section	.rodata._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode.str1.1,"aMS",@progbit
 4751                             	.LC6:
 4752 0000 54 79 70 65 20 25 73 20 		.string	"Type %s (%d) not supported."
 4752      28 25 64 29 20 6E 6F 74 
 4752      20 73 75 70 70 6F 72 74 
 4752      65 64 2E 00 
 4753                             		.section	.rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.1,"aMS",@prog
 4754                             	.LC7:
 4755 0000 6F 75 74 70 75 74 2D 3E 		.string	"output->type"
 4755      74 79 70 65 00 
 4756                             	.LC8:
 4757 000d 69 6E 70 75 74 2D 3E 74 		.string	"input->type"
 4757      79 70 65 00 
 4758                             	.LC9:
 4759 0019 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s != %s (%s != %s)"
 4759      20 21 3D 20 25 73 20 28 
 4759      25 73 20 21 3D 20 25 73 
 4759      29 00 
 4760                             	.LC10:
 4761 0033 2E 2E 2F 73 72 63 2F 74 		.string	"../src/tensorflow/lite/micro/kernels/fully_connected.cc Hybrid models are not supported o
 4761      65 6E 73 6F 72 66 6C 6F 
 4761      77 2F 6C 69 74 65 2F 6D 
 4761      69 63 72 6F 2F 6B 65 72 
 4761      6E 65 6C 73 2F 66 75 6C 
 4762                             		.section	.rodata._ZZN8gemmlowp19RoundingDivideByPOTIliEET_S1_T0_E19__PRETTY_FUNCTION__,"a"
 4763                             		.set	.LANCHOR0,. + 0
 4766                             	__ZZN8gemmlowp19RoundingDivideByPOTIliEET_S1_T0_E19__PRETTY_FUNCTION__:
 4767 0000 49 6E 74 65 67 65 72 54 		.string	"IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, ExponentType) [with IntegerType = 
 4767      79 70 65 20 67 65 6D 6D 
 4767      6C 6F 77 70 3A 3A 52 6F 
 4767      75 6E 64 69 6E 67 44 69 
 4767      76 69 64 65 42 79 50 4F 
 4898                             	.Letext0:
 4899                             		.file 11 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4900                             		.file 12 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4901                             		.file 13 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4902                             		.file 14 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4903                             		.file 15 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4904                             		.file 16 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4905                             		.file 17 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4906                             		.file 18 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4907                             		.file 19 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4908                             		.file 20 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4909                             		.file 21 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4910                             		.file 22 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4911                             		.file 23 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4912                             		.file 24 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4913                             		.file 25 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4914                             		.file 26 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4915                             		.file 27 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4916                             		.file 28 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4917                             		.file 29 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4918                             		.file 30 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4919                             		.file 31 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4920                             		.file 32 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4921                             		.file 33 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4922                             		.file 34 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 4923                             		.file 35 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\
 4924                             		.file 36 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\loc
 4925                             		.file 37 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_ty
 4926                             		.file 38 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\ree
 4927                             		.file 39 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 4928                             		.file 40 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\wchar.h"
 4929                             		.file 41 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_st
 4930                             		.file 42 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdint.h
 4931                             		.file 43 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\locale.h
 4932                             		.file 44 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\ctype.h"
 4933                             		.file 45 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdlib.h
 4934                             		.file 46 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdio.h"
 4935                             		.file 47 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\err
 4936                             		.file 48 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
 4937                             		.file 49 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\string.h
 4938                             		.file 50 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 4939                             		.file 51 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 4940                             		.file 52 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 4941                             		.file 53 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
 4942                             		.file 54 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
 4943                             		.file 55 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 4944                             		.file 56 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 4945                             		.file 57 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\assert.h
 4946                             		.file 58 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
 4947                             		.file 59 "<built-in>"
