   1                             		.file	"arm_relu_q7.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.arm_relu_q7,"ax",@progbits
   5                             		.global	_arm_relu_q7
   7                             	_arm_relu_q7:
   8                             	.LFB82:
   9                             		.file 1 "../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c"
   1:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** /*
   2:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * Copyright (C) 2010-2020 Arm Limited or its affiliates. All rights reserved.
   3:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
   4:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * SPDX-License-Identifier: Apache-2.0
   5:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
   6:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * not use this file except in compliance with the License.
   8:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * You may obtain a copy of the License at
   9:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
  10:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  11:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
  12:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  13:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * See the License for the specific language governing permissions and
  16:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * limitations under the License.
  17:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  */
  18:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  19:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** /* ----------------------------------------------------------------------
  20:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * Project:      CMSIS NN Library
  21:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * Title:        arm_relu_q7.c
  22:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * Description:  Q7 version of ReLU
  23:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
  24:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * $Date:        09. October 2020
  25:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * $Revision:    V.1.0.3
  26:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
  27:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * Target Processor:  Cortex-M cores
  28:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
  29:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * -------------------------------------------------------------------- */
  30:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  31:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** #include "arm_nnfunctions.h"
  32:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** #include "arm_nnsupportfunctions.h"
  33:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  34:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** /**
  35:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *  @ingroup groupNN
  36:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  */
  37:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  38:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** /**
  39:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * @addtogroup Acti
  40:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * @{
  41:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  */
  42:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  43:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** /**
  44:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * @brief Q7 RELU function
  45:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * @param[in,out]   data        pointer to input
  46:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * @param[in]       size        number of elements
  47:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
  48:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * @details
  49:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
  50:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  * Optimized relu with QSUB instructions.
  51:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  *
  52:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****  */
  53:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  54:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** void arm_relu_q7(q7_t *data, uint16_t size)
  55:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** {
  10                             		.loc 1 55 1
  11                             	.LVL0:
  56:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  57:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** #if defined(ARM_MATH_DSP)
  58:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     /* Run the following code for M cores with DSP extension */
  59:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  60:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     uint16_t i = size >> 2;
  61:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     q7_t *input = data;
  62:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     q7_t *output = data;
  63:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     q31_t in;
  64:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     q31_t buf;
  65:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     q31_t mask;
  66:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  67:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     while (i)
  68:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     {
  69:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         in = read_q7x4_ia(&input);
  70:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  71:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         /* extract the first bit */
  72:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         buf = (int32_t)__ROR((uint32_t)in & 0x80808080, 7);
  73:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  74:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         /* if MSB=1, mask will be 0xFF, 0x0 otherwise */
  75:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         mask = __QSUB8(0x00000000, buf);
  76:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  77:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         write_q7x4_ia(&output, in & (~mask));
  78:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  79:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         i--;
  80:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     }
  81:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  82:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     i = size & 0x3;
  83:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     while (i)
  84:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     {
  85:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         if (*input < 0)
  86:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         {
  87:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****             *input = 0;
  88:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         }
  89:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         input++;
  90:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         i--;
  91:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     }
  92:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  93:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** #else
  94:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     /* Run the following code as reference implementation for cores without DSP extension */
  95:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  96:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     uint16_t i;
  12                             		.loc 1 96 5
  97:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
  98:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     for (i = 0; i < size; i++)
  13                             		.loc 1 98 5
  14 0000 5F 25                   		movu.W	r2, r5
  15 0002 61 05                   		cmp	#0, r5
  16 0004 20 1D                   		beq	.L1
  17 0006 60 12                   		sub	#1, r2
  18                             	.LVL1:
  19 0008 71 14 01                		add	#1, r1, r4
  20 000b 5F 22                   		movu.W	r2, r2
  21 000d 4B 24                   		add	r2, r4
  22                             	.LVL2:
  23 000f 03                      		.balign 8,3,5
  24                             	.L4:
  99:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     {
 100:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****         if (data[i] < 0)
  25                             		.loc 1 100 9
 101:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****             data[i] = 0;
  26                             		.loc 1 101 13
 100:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****             data[i] = 0;
  27                             		.loc 1 100 12 is_stmt 0
  28 0010 FD 28 15                		mov.B	[r1+], r5
  29                             	.LVL3:
  30 0013 61 05                   		cmp	#0, r5
  31 0015 28 08                   		bge	.L3
  32                             		.loc 1 101 21
  33 0017 71 15 FF                		add	#-1, r1, r5
  34 001a F8 54 00                		mov.B	#0, [r5]
  35                             		.balign 8,3,1
  36                             	.L3:
  98:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     {
  37                             		.loc 1 98 5 discriminator 2
  38 001d 47 41                   		cmp	r4, r1
  39 001f 21 F1                   		bne	.L4
  40                             	.LVL4:
  41                             	.L1:
 102:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c ****     }
 103:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** 
 104:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** #endif
 105:../src/CMSIS/NN/Source/ActivationFunctions/arm_relu_q7.c **** }
  42                             		.loc 1 105 1
  43 0021 02                      		rts
  44                             	.LFE82:
  72                             	.Letext0:
  73                             		.file 2 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\\
  74                             		.file 3 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_std
  75                             		.file 4 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\lock
  76                             		.file 5 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_typ
  77                             		.file 6 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.20
  78                             		.file 7 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\reen
  79                             		.file 8 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
  80                             		.file 9 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CMS
  81                             		.file 10 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
