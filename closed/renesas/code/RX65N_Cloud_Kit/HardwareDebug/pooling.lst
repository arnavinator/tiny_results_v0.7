   1                             		.file	"pooling.cc"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text._ZN6tflite3ops5micro7pooling4InitEP13TfLiteContextPKcm,"ax",@progbits
   5                             		.global	__ZN6tflite3ops5micro7pooling4InitEP13TfLiteContextPKcm
   7                             	__ZN6tflite3ops5micro7pooling4InitEP13TfLiteContextPKcm:
   8                             	.LFB3961:
   9                             		.file 1 "../src/tensorflow/lite/micro/kernels/pooling.cc"
   1:../src/tensorflow/lite/micro/kernels/pooling.cc **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
   3:../src/tensorflow/lite/micro/kernels/pooling.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow/lite/micro/kernels/pooling.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow/lite/micro/kernels/pooling.cc **** You may obtain a copy of the License at
   6:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
   7:../src/tensorflow/lite/micro/kernels/pooling.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
   9:../src/tensorflow/lite/micro/kernels/pooling.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow/lite/micro/kernels/pooling.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow/lite/micro/kernels/pooling.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow/lite/micro/kernels/pooling.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow/lite/micro/kernels/pooling.cc **** limitations under the License.
  14:../src/tensorflow/lite/micro/kernels/pooling.cc **** ==============================================================================*/
  15:../src/tensorflow/lite/micro/kernels/pooling.cc **** #include "tensorflow/lite/kernels/internal/reference/pooling.h"
  16:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  17:../src/tensorflow/lite/micro/kernels/pooling.cc **** #include "arm_nnfunctions.h"
  18:../src/tensorflow/lite/micro/kernels/pooling.cc **** #include "flatbuffers/base.h"  // from @flatbuffers
  19:../src/tensorflow/lite/micro/kernels/pooling.cc **** #include "tensorflow/lite/c/builtin_op_data.h"
  20:../src/tensorflow/lite/micro/kernels/pooling.cc **** #include "tensorflow/lite/kernels/internal/reference/integer_ops/pooling.h"
  21:../src/tensorflow/lite/micro/kernels/pooling.cc **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  22:../src/tensorflow/lite/micro/kernels/pooling.cc **** #include "tensorflow/lite/kernels/kernel_util.h"
  23:../src/tensorflow/lite/micro/kernels/pooling.cc **** #include "tensorflow/lite/kernels/padding.h"
  24:../src/tensorflow/lite/micro/kernels/pooling.cc **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  25:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  26:../src/tensorflow/lite/micro/kernels/pooling.cc **** namespace tflite {
  27:../src/tensorflow/lite/micro/kernels/pooling.cc **** namespace ops {
  28:../src/tensorflow/lite/micro/kernels/pooling.cc **** namespace micro {
  29:../src/tensorflow/lite/micro/kernels/pooling.cc **** namespace pooling {
  30:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  31:../src/tensorflow/lite/micro/kernels/pooling.cc **** namespace {
  32:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  33:../src/tensorflow/lite/micro/kernels/pooling.cc **** constexpr int kInputTensor = 0;
  34:../src/tensorflow/lite/micro/kernels/pooling.cc **** constexpr int kOutputTensor = 0;
  35:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  36:../src/tensorflow/lite/micro/kernels/pooling.cc **** struct OpData {
  37:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TfLitePaddingValues padding;
  38:../src/tensorflow/lite/micro/kernels/pooling.cc ****   // Index to buffer for optimizations if applicable.
  39:../src/tensorflow/lite/micro/kernels/pooling.cc ****   int buffer_idx;
  40:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  41:../src/tensorflow/lite/micro/kernels/pooling.cc ****   int32_t activation_min;
  42:../src/tensorflow/lite/micro/kernels/pooling.cc ****   int32_t activation_max;
  43:../src/tensorflow/lite/micro/kernels/pooling.cc **** };
  44:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  45:../src/tensorflow/lite/micro/kernels/pooling.cc **** TfLiteStatus CalculateOpData(TfLiteContext* context,
  46:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              const TfLitePoolParams* params,
  47:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              const TfLiteTensor* input, TfLiteTensor* output,
  48:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              OpData* data) {
  49:../src/tensorflow/lite/micro/kernels/pooling.cc ****   // input: batch, height, width, channel
  50:../src/tensorflow/lite/micro/kernels/pooling.cc ****   int height = SizeOfDimension(input, 1);
  51:../src/tensorflow/lite/micro/kernels/pooling.cc ****   int width = SizeOfDimension(input, 2);
  52:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  53:../src/tensorflow/lite/micro/kernels/pooling.cc ****   int out_height, out_width;
  54:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  55:../src/tensorflow/lite/micro/kernels/pooling.cc ****   data->padding = ComputePaddingHeightWidth(
  56:../src/tensorflow/lite/micro/kernels/pooling.cc ****       params->stride_height, params->stride_width,
  57:../src/tensorflow/lite/micro/kernels/pooling.cc ****       /*dilation_rate_height=*/1,
  58:../src/tensorflow/lite/micro/kernels/pooling.cc ****       /*dilation_rate_width=*/1, height, width, params->filter_height,
  59:../src/tensorflow/lite/micro/kernels/pooling.cc ****       params->filter_width, params->padding, &out_height, &out_width);
  60:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  61:../src/tensorflow/lite/micro/kernels/pooling.cc ****   if (input->type != kTfLiteFloat32) {
  62:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(
  63:../src/tensorflow/lite/micro/kernels/pooling.cc ****         context, params->activation, output, &data->activation_min,
  64:../src/tensorflow/lite/micro/kernels/pooling.cc ****         &data->activation_max));
  65:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_LE(data->activation_min, data->activation_max);
  66:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
  67:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  68:../src/tensorflow/lite/micro/kernels/pooling.cc ****   // Set buffer index to a reset value
  69:../src/tensorflow/lite/micro/kernels/pooling.cc ****   data->buffer_idx = -1;
  70:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  71:../src/tensorflow/lite/micro/kernels/pooling.cc ****   return kTfLiteOk;
  72:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
  73:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  74:../src/tensorflow/lite/micro/kernels/pooling.cc **** void AverageEvalFloat(const TfLiteContext* context, const TfLiteNode* node,
  75:../src/tensorflow/lite/micro/kernels/pooling.cc ****                       const TfLitePoolParams* params, const OpData& data,
  76:../src/tensorflow/lite/micro/kernels/pooling.cc ****                       const TfLiteEvalTensor* input, TfLiteEvalTensor* output) {
  77:../src/tensorflow/lite/micro/kernels/pooling.cc ****   float activation_min, activation_max;
  78:../src/tensorflow/lite/micro/kernels/pooling.cc ****   CalculateActivationRange(params->activation, &activation_min,
  79:../src/tensorflow/lite/micro/kernels/pooling.cc ****                            &activation_max);
  80:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  81:../src/tensorflow/lite/micro/kernels/pooling.cc ****   PoolParams op_params;
  82:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_height = params->stride_height;
  83:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_width = params->stride_width;
  84:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_height = params->filter_height;
  85:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_width = params->filter_width;
  86:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.height = data.padding.height;
  87:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.width = data.padding.width;
  88:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_min = activation_min;
  89:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_max = activation_max;
  90:../src/tensorflow/lite/micro/kernels/pooling.cc ****   reference_ops::AveragePool(op_params, tflite::micro::GetTensorShape(input),
  91:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              tflite::micro::GetTensorData<float>(input),
  92:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              tflite::micro::GetTensorShape(output),
  93:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              tflite::micro::GetTensorData<float>(output));
  94:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
  95:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  96:../src/tensorflow/lite/micro/kernels/pooling.cc **** void AverageEvalQuantized(TfLiteContext* context, const TfLiteNode* node,
  97:../src/tensorflow/lite/micro/kernels/pooling.cc ****                           const TfLitePoolParams* params, const OpData& data,
  98:../src/tensorflow/lite/micro/kernels/pooling.cc ****                           const TfLiteEvalTensor* input,
  99:../src/tensorflow/lite/micro/kernels/pooling.cc ****                           TfLiteEvalTensor* output) {
 100:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK(input->type == kTfLiteUInt8 || input->type == kTfLiteInt8);
 101:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 102:../src/tensorflow/lite/micro/kernels/pooling.cc ****   if (input->type == kTfLiteUInt8) {
 103:../src/tensorflow/lite/micro/kernels/pooling.cc ****     PoolParams op_params;
 104:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.stride_height = params->stride_height;
 105:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.stride_width = params->stride_width;
 106:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.filter_height = params->filter_height;
 107:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.filter_width = params->filter_width;
 108:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.padding_values.height = data.padding.height;
 109:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.padding_values.width = data.padding.width;
 110:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.quantized_activation_min = data.activation_min;
 111:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.quantized_activation_max = data.activation_max;
 112:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 113:../src/tensorflow/lite/micro/kernels/pooling.cc ****     reference_ops::AveragePool(op_params, tflite::micro::GetTensorShape(input),
 114:../src/tensorflow/lite/micro/kernels/pooling.cc ****                                tflite::micro::GetTensorData<uint8_t>(input),
 115:../src/tensorflow/lite/micro/kernels/pooling.cc ****                                tflite::micro::GetTensorShape(output),
 116:../src/tensorflow/lite/micro/kernels/pooling.cc ****                                tflite::micro::GetTensorData<uint8_t>(output));
 117:../src/tensorflow/lite/micro/kernels/pooling.cc ****   } else {
 118:../src/tensorflow/lite/micro/kernels/pooling.cc ****     RuntimeShape input_shape = tflite::micro::GetTensorShape(input);
 119:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(input_shape.DimensionsCount(), 4);
 120:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 121:../src/tensorflow/lite/micro/kernels/pooling.cc ****     RuntimeShape output_shape = tflite::micro::GetTensorShape(output);
 122:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 123:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 124:../src/tensorflow/lite/micro/kernels/pooling.cc ****     const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 125:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 126:../src/tensorflow/lite/micro/kernels/pooling.cc ****     cmsis_nn_dims input_dims;
 127:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.n = 1;
 128:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.h = input_shape.Dims(1);
 129:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.w = input_shape.Dims(2);
 130:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.c = depth;
 131:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 132:../src/tensorflow/lite/micro/kernels/pooling.cc ****     cmsis_nn_dims output_dims;
 133:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.n = 1;
 134:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.h = output_shape.Dims(1);
 135:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.w = output_shape.Dims(2);
 136:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.c = depth;
 137:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 138:../src/tensorflow/lite/micro/kernels/pooling.cc ****     cmsis_nn_pool_params pool_params;
 139:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.stride.h = params->stride_height;
 140:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.stride.w = params->stride_width;
 141:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.padding.h = data.padding.height;
 142:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.padding.w = data.padding.width;
 143:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.activation.min = data.activation_min;
 144:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.activation.max = data.activation_max;
 145:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 146:../src/tensorflow/lite/micro/kernels/pooling.cc ****     cmsis_nn_dims filter_dims;
 147:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.n = 1;
 148:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.h = params->filter_height;
 149:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.w = params->filter_width;
 150:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.c = 1;
 151:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 152:../src/tensorflow/lite/micro/kernels/pooling.cc ****     cmsis_nn_context ctx;
 153:../src/tensorflow/lite/micro/kernels/pooling.cc ****     ctx.buf = nullptr;
 154:../src/tensorflow/lite/micro/kernels/pooling.cc ****     ctx.size = 0;
 155:../src/tensorflow/lite/micro/kernels/pooling.cc ****     if (data.buffer_idx > -1) {
 156:../src/tensorflow/lite/micro/kernels/pooling.cc ****       ctx.buf = context->GetScratchBuffer(context, data.buffer_idx);
 157:../src/tensorflow/lite/micro/kernels/pooling.cc ****     }
 158:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 159:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(
 160:../src/tensorflow/lite/micro/kernels/pooling.cc ****         arm_avgpool_s8(&ctx, &pool_params, &input_dims,
 161:../src/tensorflow/lite/micro/kernels/pooling.cc ****                        tflite::micro::GetTensorData<int8_t>(input),
 162:../src/tensorflow/lite/micro/kernels/pooling.cc ****                        &filter_dims, &output_dims,
 163:../src/tensorflow/lite/micro/kernels/pooling.cc ****                        tflite::micro::GetTensorData<int8_t>(output)),
 164:../src/tensorflow/lite/micro/kernels/pooling.cc ****         ARM_MATH_SUCCESS);
 165:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 166:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 167:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 168:../src/tensorflow/lite/micro/kernels/pooling.cc **** void MaxEvalFloat(TfLiteContext* context, TfLiteNode* node,
 169:../src/tensorflow/lite/micro/kernels/pooling.cc ****                   TfLitePoolParams* params, const OpData& data,
 170:../src/tensorflow/lite/micro/kernels/pooling.cc ****                   const TfLiteEvalTensor* input, TfLiteEvalTensor* output) {
 171:../src/tensorflow/lite/micro/kernels/pooling.cc ****   float activation_min, activation_max;
 172:../src/tensorflow/lite/micro/kernels/pooling.cc ****   CalculateActivationRange(params->activation, &activation_min,
 173:../src/tensorflow/lite/micro/kernels/pooling.cc ****                            &activation_max);
 174:../src/tensorflow/lite/micro/kernels/pooling.cc ****   tflite::PoolParams op_params;
 175:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_height = params->stride_height;
 176:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_width = params->stride_width;
 177:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_height = params->filter_height;
 178:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_width = params->filter_width;
 179:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.height = data.padding.height;
 180:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.width = data.padding.width;
 181:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_min = activation_min;
 182:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_max = activation_max;
 183:../src/tensorflow/lite/micro/kernels/pooling.cc ****   reference_ops::MaxPool(op_params, tflite::micro::GetTensorShape(input),
 184:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<float>(input),
 185:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorShape(output),
 186:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<float>(output));
 187:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 188:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 189:../src/tensorflow/lite/micro/kernels/pooling.cc **** void MaxEvalQuantizedUInt8(TfLiteContext* context, TfLiteNode* node,
 190:../src/tensorflow/lite/micro/kernels/pooling.cc ****                            TfLitePoolParams* params, const OpData& data,
 191:../src/tensorflow/lite/micro/kernels/pooling.cc ****                            const TfLiteEvalTensor* input,
 192:../src/tensorflow/lite/micro/kernels/pooling.cc ****                            TfLiteEvalTensor* output) {
 193:../src/tensorflow/lite/micro/kernels/pooling.cc ****   tflite::PoolParams op_params;
 194:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_height = params->stride_height;
 195:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_width = params->stride_width;
 196:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_height = params->filter_height;
 197:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_width = params->filter_width;
 198:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.height = data.padding.height;
 199:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.width = data.padding.width;
 200:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.quantized_activation_min = data.activation_min;
 201:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.quantized_activation_max = data.activation_max;
 202:../src/tensorflow/lite/micro/kernels/pooling.cc ****   reference_ops::MaxPool(op_params, tflite::micro::GetTensorShape(input),
 203:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<uint8_t>(input),
 204:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorShape(output),
 205:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<uint8_t>(output));
 206:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 207:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 208:../src/tensorflow/lite/micro/kernels/pooling.cc **** TfLiteStatus MaxEvalInt8(TfLiteContext* context, const TfLiteNode* node,
 209:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          const TfLitePoolParams* params, const OpData& data,
 210:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          const TfLiteEvalTensor* input,
 211:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          TfLiteEvalTensor* output) {
 212:../src/tensorflow/lite/micro/kernels/pooling.cc ****   RuntimeShape input_shape = tflite::micro::GetTensorShape(input);
 213:../src/tensorflow/lite/micro/kernels/pooling.cc ****   RuntimeShape output_shape = tflite::micro::GetTensorShape(output);
 214:../src/tensorflow/lite/micro/kernels/pooling.cc ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 215:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 216:../src/tensorflow/lite/micro/kernels/pooling.cc ****   cmsis_nn_dims input_dims;
 217:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.n = 1;
 218:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.h = input_shape.Dims(1);
 219:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.w = input_shape.Dims(2);
 220:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.c = depth;
 221:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 222:../src/tensorflow/lite/micro/kernels/pooling.cc ****   cmsis_nn_dims output_dims;
 223:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.n = 1;
 224:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.h = output_shape.Dims(1);
 225:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.w = output_shape.Dims(2);
 226:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.c = depth;
 227:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 228:../src/tensorflow/lite/micro/kernels/pooling.cc ****   cmsis_nn_pool_params pool_params;
 229:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.stride.h = params->stride_height;
 230:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.stride.w = params->stride_width;
 231:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.padding.h = data.padding.height;
 232:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.padding.w = data.padding.width;
 233:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.activation.min = data.activation_min;
 234:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.activation.max = data.activation_max;
 235:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 236:../src/tensorflow/lite/micro/kernels/pooling.cc ****   cmsis_nn_dims filter_dims;
 237:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.n = 1;
 238:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.h = params->filter_height;
 239:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.w = params->filter_width;
 240:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.c = 1;
 241:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 242:../src/tensorflow/lite/micro/kernels/pooling.cc ****   cmsis_nn_context ctx;
 243:../src/tensorflow/lite/micro/kernels/pooling.cc ****   ctx.buf = nullptr;
 244:../src/tensorflow/lite/micro/kernels/pooling.cc ****   ctx.size = 0;
 245:../src/tensorflow/lite/micro/kernels/pooling.cc ****   if (data.buffer_idx > -1) {
 246:../src/tensorflow/lite/micro/kernels/pooling.cc ****     ctx.buf = context->GetScratchBuffer(context, data.buffer_idx);
 247:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 248:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 249:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK_EQ(
 250:../src/tensorflow/lite/micro/kernels/pooling.cc ****       arm_max_pool_s8(&ctx, &pool_params, &input_dims,
 251:../src/tensorflow/lite/micro/kernels/pooling.cc ****                       tflite::micro::GetTensorData<int8_t>(input), &filter_dims,
 252:../src/tensorflow/lite/micro/kernels/pooling.cc ****                       &output_dims,
 253:../src/tensorflow/lite/micro/kernels/pooling.cc ****                       tflite::micro::GetTensorData<int8_t>(output)),
 254:../src/tensorflow/lite/micro/kernels/pooling.cc ****       ARM_MATH_SUCCESS);
 255:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 256:../src/tensorflow/lite/micro/kernels/pooling.cc ****   return kTfLiteOk;
 257:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 258:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 259:../src/tensorflow/lite/micro/kernels/pooling.cc **** }  // namespace
 260:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 261:../src/tensorflow/lite/micro/kernels/pooling.cc **** void* Init(TfLiteContext* context, const char* buffer, size_t length) {
  10                             		.loc 1 261 71
  11                             	.LVL0:
 262:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  12                             		.loc 1 262 3
  13 0000 AB 95                   		mov.L	56[r1], r5
  14 0002 61 05                   		cmp	#0, r5
  15 0004 17                      		beq	.L4
 263:../src/tensorflow/lite/micro/kernels/pooling.cc ****   return context->AllocatePersistentBuffer(context, sizeof(OpData));
  16                             		.loc 1 263 3
  17                             		.loc 1 263 43 is_stmt 0
  18 0005 75 42 1C                		mov.L	#28, r2
  19                             	.LVL1:
  20 0008 7F 15                   		jsr	r5
  21                             	.LVL2:
 264:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
  22                             		.loc 1 264 1
  23 000a 02                      		rts
  24                             	.LVL3:
  25                             	.L4:
 262:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  26                             		.loc 1 262 3 discriminator 1
  27 000b 05 00 00 00             		bsr	_abort
  28                             	.LVL4:
  29                             	.LFE3961:
  31                             		.section	.text._ZN6tflite3ops5micro7pooling12_GLOBAL__N_115CalculateOpDataEP13TfLiteContextPK16TfL
  33                             	__ZN6tflite3ops5micro7pooling12_GLOBAL__N_115CalculateOpDataEP13TfLiteContextPK16TfLitePoolParamsPK
  34                             	.LFB3955:
  48:../src/tensorflow/lite/micro/kernels/pooling.cc ****   // input: batch, height, width, channel
  35                             		.loc 1 48 44 is_stmt 1
  36                             	.LVL5:
  37 0000 6E 6C                   		pushm	r6-r12
  38                             	.LCFI0:
  39 0002 60 80                   		sub	#8, r0
  40                             	.LCFI1:
  50:../src/tensorflow/lite/micro/kernels/pooling.cc ****   int width = SizeOfDimension(input, 2);
  41                             		.loc 1 50 3
  50:../src/tensorflow/lite/micro/kernels/pooling.cc ****   int width = SizeOfDimension(input, 2);
  42                             		.loc 1 50 31 is_stmt 0
  43 0004 ED 3A 02                		mov.L	8[r3], r10
  44                             	.LVL6:
  45                             	.LBB327:
  46                             	.LBB328:
  47                             		.file 2 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
  48                             		.loc 2 149 3 is_stmt 1
  49                             	.LBE328:
  50                             	.LBE327:
  59:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  51                             		.loc 1 59 37 is_stmt 0
  52 0007 EC 29                   		mov.L	[r2], r9
  48:../src/tensorflow/lite/micro/kernels/pooling.cc ****   // input: batch, height, width, channel
  53                             		.loc 1 48 44
  54 0009 AA 87                   		mov.L	40[r0], r7
  55                             	.LBB330:
  56                             	.LBB329:
  57                             		.loc 2 149 27
  58 000b ED A6 02                		mov.L	8[r10], r6
  59                             	.LVL7:
  60                             	.LBE329:
  61                             	.LBE330:
  51:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  62                             		.loc 1 51 3 is_stmt 1
  63                             	.LBB331:
  64                             	.LBB332:
  65                             		.loc 2 149 3
  66                             		.loc 2 149 27 is_stmt 0
  67 000e ED AA 03                		mov.L	12[r10], r10
  68                             	.LVL8:
  69                             	.LBE332:
  70                             	.LBE331:
  53:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  71                             		.loc 1 53 3 is_stmt 1
  55:../src/tensorflow/lite/micro/kernels/pooling.cc ****       params->stride_height, params->stride_width,
  72                             		.loc 1 55 3
  56:../src/tensorflow/lite/micro/kernels/pooling.cc ****       /*dilation_rate_height=*/1,
  73                             		.loc 1 56 15 is_stmt 0
  74 0011 A8 A5                   		mov.L	8[r2], r5
  75                             	.LVL9:
  56:../src/tensorflow/lite/micro/kernels/pooling.cc ****       /*dilation_rate_height=*/1,
  76                             		.loc 1 56 38
  77 0013 ED 2E 01                		mov.L	4[r2], r14
  78                             	.LVL10:
  58:../src/tensorflow/lite/micro/kernels/pooling.cc ****       params->filter_width, params->padding, &out_height, &out_width);
  79                             		.loc 1 58 57
  80 0016 ED 2C 04                		mov.L	16[r2], r12
  81                             	.LVL11:
  59:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
  82                             		.loc 1 59 15
  83 0019 ED 2B 03                		mov.L	12[r2], r11
  84                             	.LVL12:
  85                             	.LBB333:
  86                             	.LBB334:
  87                             		.file 3 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** #ifndef TENSORFLOW_LITE_KERNELS_PADDING_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** #define TENSORFLOW_LITE_KERNELS_PADDING_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** namespace tflite {
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** // TODO(renjieliu): Migrate others to use ComputePaddingWithLeftover.
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** inline int ComputePadding(int stride, int dilation_rate, int in_size,
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****                           int filter_size, int out_size) {
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   int padding = ((out_size - 1) * stride + effective_filter_size - in_size) / 2;
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   return padding > 0 ? padding : 0;
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** }
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** // It's not guaranteed that padding is symmetric. It's important to keep
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** // offset for algorithms need all paddings.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** inline int ComputePaddingWithOffset(int stride, int dilation_rate, int in_size,
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****                                     int filter_size, int out_size,
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****                                     int* offset) {
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   int total_padding =
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       ((out_size - 1) * stride + effective_filter_size - in_size);
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   total_padding = total_padding > 0 ? total_padding : 0;
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   *offset = total_padding % 2;
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   return total_padding / 2;
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** }
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** // Matching GetWindowedOutputSize in TensorFlow.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** inline int ComputeOutSize(TfLitePadding padding, int image_size,
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****                           int filter_size, int stride, int dilation_rate = 1) {
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   switch (padding) {
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingSame:
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       return (image_size + stride - 1) / stride;
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingValid:
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       return (image_size + stride - effective_filter_size) / stride;
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     default:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       return 0;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   }
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** }
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** inline TfLitePaddingValues ComputePaddingHeightWidth(
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     int stride_height, int stride_width, int dilation_rate_height,
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     int dilation_rate_width, int in_height, int in_width, int filter_height,
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     int filter_width, TfLitePadding padding, int* out_height, int* out_width) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   *out_width = ComputeOutSize(padding, in_width, filter_width, stride_width,
  88                             		.loc 3 61 3 is_stmt 1
  89                             	.LBB335:
  90                             	.LBB336:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   switch (padding) {
  91                             		.loc 3 46 3
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingSame:
  92                             		.loc 3 47 3
  93 001c 61 19                   		cmp	#1, r9
  94 001e 20 78                   		beq	.L6
  95 0020 61 29                   		cmp	#2, r9
  96 0022 21 4C                   		bne	.L15
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       return (image_size + stride - effective_filter_size) / stride;
  97                             		.loc 3 50 5
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     default:
  98                             		.loc 3 51 7
  99                             	.LVL13:
 100                             	.LBE336:
 101                             	.LBE335:
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****                               dilation_rate_width);
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   *out_height = ComputeOutSize(padding, in_height, filter_height, stride_height,
 102                             		.loc 3 63 3
 103                             	.LBB345:
 104                             	.LBB346:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   switch (padding) {
 105                             		.loc 3 46 3
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingSame:
 106                             		.loc 3 47 3
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       return (image_size + stride - effective_filter_size) / stride;
 107                             		.loc 3 50 5
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     default:
 108                             		.loc 3 51 7
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     default:
 109                             		.loc 3 51 26 is_stmt 0
 110 0024 FF 29 65                		add	r6, r5, r9
 111                             	.LVL14:
 112                             	.LBE346:
 113                             	.LBE345:
 114                             	.LBB352:
 115                             	.LBB337:
 116 0027 FF 2F AE                		add	r10, r14, r15
 117                             	.LBE337:
 118                             	.LBE352:
 119                             	.LBB353:
 120                             	.LBB347:
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     default:
 121                             		.loc 3 51 35
 122 002a 43 C9                   		sub	r12, r9
 123                             	.LBE347:
 124                             	.LBE353:
 125                             	.LBB354:
 126                             	.LBB338:
 127 002c 43 BF                   		sub	r11, r15
 128                             	.LBE338:
 129                             	.LBE354:
 130                             	.LBB355:
 131                             	.LBB348:
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     default:
 132                             		.loc 3 51 62
 133 002e FC 23 59                		div	r5, r9
 134                             	.LBE348:
 135                             	.LBE355:
 136                             	.LBB356:
 137                             	.LBB339:
 138 0031 FC 23 EF                		div	r14, r15
 139                             	.LVL15:
 140 0034 60 19                   		sub	#1, r9
 141 0036 60 1F                   		sub	#1, r15
 142                             	.LVL16:
 143                             		.balign 8,3,1
 144                             	.L8:
 145                             	.LBE339:
 146                             	.LBE356:
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****                                dilation_rate_height);
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** 
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   TfLitePaddingValues padding_values;
 147                             		.loc 3 66 3 is_stmt 1
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   int offset = 0;
 148                             		.loc 3 67 3
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   padding_values.height =
 149                             		.loc 3 68 3
 150                             	.LBB357:
 151                             	.LBB358:
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   int total_padding =
 152                             		.loc 3 35 3
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       ((out_size - 1) * stride + effective_filter_size - in_size);
 153                             		.loc 3 36 3
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   total_padding = total_padding > 0 ? total_padding : 0;
 154                             		.loc 3 37 23 is_stmt 0
 155 0038 4F 95                   		mul	r9, r5
 156                             	.LVL17:
 157                             	.LBE358:
 158                             	.LBE357:
 159                             	.LBB363:
 160                             	.LBB364:
 161 003a 4F FE                   		mul	r15, r14
 162                             	.LVL18:
 163                             	.LBE364:
 164                             	.LBE363:
 165                             	.LBB368:
 166                             	.LBB359:
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   total_padding = total_padding > 0 ? total_padding : 0;
 167                             		.loc 3 37 32
 168 003c 4B C5                   		add	r12, r5
 169                             	.LBE359:
 170                             	.LBE368:
 171                             	.LBB369:
 172                             	.LBB365:
 173 003e 4B BE                   		add	r11, r14
 174                             	.LBE365:
 175                             	.LBE369:
 176                             	.LBB370:
 177                             	.LBB360:
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       ((out_size - 1) * stride + effective_filter_size - in_size);
 178                             		.loc 3 36 7
 179 0040 43 65                   		sub	r6, r5
 180                             	.LVL19:
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   *offset = total_padding % 2;
 181                             		.loc 3 38 3 is_stmt 1
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   *offset = total_padding % 2;
 182                             		.loc 3 38 17 is_stmt 0
 183 0042 FD 74 45 00             		max	#0, r5
 184                             	.LVL20:
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   return total_padding / 2;
 185                             		.loc 3 39 3 is_stmt 1
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** }
 186                             		.loc 3 40 3
 187                             	.LBE360:
 188                             	.LBE370:
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       ComputePaddingWithOffset(stride_height, dilation_rate_height, in_height,
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****                                filter_height, *out_height, &offset);
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   padding_values.height_offset = offset;
 189                             		.loc 3 71 3
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   padding_values.width =
 190                             		.loc 3 72 3
 191                             	.LBB371:
 192                             	.LBB366:
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   int total_padding =
 193                             		.loc 3 35 3
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       ((out_size - 1) * stride + effective_filter_size - in_size);
 194                             		.loc 3 36 3
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       ((out_size - 1) * stride + effective_filter_size - in_size);
 195                             		.loc 3 36 7 is_stmt 0
 196 0046 43 AE                   		sub	r10, r14
 197                             	.LVL21:
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   *offset = total_padding % 2;
 198                             		.loc 3 38 3 is_stmt 1
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   *offset = total_padding % 2;
 199                             		.loc 3 38 17 is_stmt 0
 200 0048 FD 74 4E 00             		max	#0, r14
 201                             	.LVL22:
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   return total_padding / 2;
 202                             		.loc 3 39 3 is_stmt 1
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** }
 203                             		.loc 3 40 3
 204                             	.LBE366:
 205                             	.LBE371:
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       ComputePaddingWithOffset(stride_width, dilation_rate_width, in_width,
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****                                filter_width, *out_width, &offset);
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   padding_values.width_offset = offset;
 206                             		.loc 3 75 3
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   return padding_values;
 207                             		.loc 3 76 3
 208                             	.LBB372:
 209                             	.LBB361:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h **** }
 210                             		.loc 3 40 26 is_stmt 0
 211 004c FD A1 56                		shar	#1, r5, r6
 212                             	.LVL23:
 213                             	.LBE361:
 214                             	.LBE372:
 215                             	.LBB373:
 216                             	.LBB367:
 217 004f FD A1 EB                		shar	#1, r14, r11
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   return total_padding / 2;
 218                             		.loc 3 39 27
 219 0052 64 1E                   		and #1, r14
 220                             	.LBE367:
 221                             	.LBE373:
 222                             	.LBB374:
 223                             	.LBB362:
 224 0054 64 15                   		and #1, r5
 225                             	.LBE362:
 226                             	.LBE374:
 227                             	.LBE334:
 228                             	.LBE333:
 229                             	.LBB385:
  61:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(
 230                             		.loc 1 61 3
 231 0056 EC 3A                   		mov.L	[r3], r10
 232                             	.LVL24:
 233                             	.LBE385:
  59:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 234                             		.loc 1 59 69
 235 0058 E3 7B                   		mov.L	r11, [r7]
 236                             	.LVL25:
 237 005a A0 7E                   		mov.L	r6, 4[r7]
 238 005c E7 7E 02                		mov.L	r14, 8[r7]
 239 005f A0 FD                   		mov.L	r5, 12[r7]
  61:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(
 240                             		.loc 1 61 3 is_stmt 1
 241                             	.LBB388:
 242 0061 61 1A                   		cmp	#1, r10
 243 0063 21 12                   		bne	.L16
 244                             	.LVL26:
 245                             		.balign 8,3,1
 246                             	.L9:
 247                             	.LBE388:
  69:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 248                             		.loc 1 69 3
  71:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 249                             		.loc 1 71 10 is_stmt 0
 250 0065 66 01                   		mov.L	#0, r1
  69:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 251                             		.loc 1 69 20
 252 0067 F9 76 04 FF             		mov.L	#-1, 16[r7]
  71:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 253                             		.loc 1 71 3 is_stmt 1
 254                             	.LVL27:
 255                             		.balign 8,3,2
 256                             	.L5:
  72:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 257                             		.loc 1 72 1 is_stmt 0
 258 006b 3F 6C 09                		rtsd	#36, r6-r12
 259                             	.LVL28:
 260                             	.L15:
 261                             	.LBB389:
 262                             	.LBB383:
 263                             	.LBB375:
 264                             	.LBB340:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingSame:
 265                             		.loc 3 47 3
 266 006e FB F6 FF                		mov.L	#-1, r15
 267 0071 EF F9                   		mov.L	r15, r9
 268                             	.LVL29:
 269 0073 2E C5                   		bra	.L8
 270                             	.LVL30:
 271                             	.L16:
 272 0075 EF 43                   		mov.L	r4, r3
 273                             	.LVL31:
 274                             	.LBE340:
 275                             	.LBE375:
 276                             	.LBE383:
 277                             	.LBE389:
 278                             	.LBB390:
 279                             	.LBB386:
  62:../src/tensorflow/lite/micro/kernels/pooling.cc ****         context, params->activation, output, &data->activation_min,
 280                             		.loc 1 62 5 is_stmt 1
 281                             	.LBB387:
  62:../src/tensorflow/lite/micro/kernels/pooling.cc ****         context, params->activation, output, &data->activation_min,
 282                             		.loc 1 62 5
 283 0077 71 7A 18                		add	#24, r7, r10
 284 007a A9 2A                   		mov.L	20[r2], r2
 285                             	.LVL32:
 286 007c E3 0A                   		mov.L	r10, [r0]
 287 007e 71 74 14                		add	#20, r7, r4
 288                             	.LVL33:
 289 0081 05 00 00 00             		bsr	__ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLit
 290                             	.LVL34:
  62:../src/tensorflow/lite/micro/kernels/pooling.cc ****         context, params->activation, output, &data->activation_min,
 291                             		.loc 1 62 5
 292 0085 61 01                   		cmp	#0, r1
 293 0087 21 E4                   		bne	.L5
 294                             	.LBE387:
  65:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 295                             		.loc 1 65 5
 296 0089 ED 7A 05                		mov.L	20[r7], r10
 297 008c 06 85 7A 06             		cmp	24[r7].L, r10
 298 0090 2B D5                   		ble	.L9
  65:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 299                             		.loc 1 65 5 is_stmt 0 discriminator 1
 300 0092 05 00 00 00             		bsr	_abort
 301                             	.LVL35:
 302                             	.L6:
 303                             	.LBE386:
 304                             	.LBE390:
 305                             	.LBB391:
 306                             	.LBB384:
 307                             	.LBB376:
 308                             	.LBB341:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       return (image_size + stride - 1) / stride;
 309                             		.loc 3 48 5 is_stmt 1
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingValid:
 310                             		.loc 3 49 7
 311                             	.LBE341:
 312                             	.LBE376:
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****                                dilation_rate_height);
 313                             		.loc 3 63 3
 314                             	.LBB377:
 315                             	.LBB349:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****   switch (padding) {
 316                             		.loc 3 46 3
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingSame:
 317                             		.loc 3 47 3
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****       return (image_size + stride - 1) / stride;
 318                             		.loc 3 48 5
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingValid:
 319                             		.loc 3 49 7
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingValid:
 320                             		.loc 3 49 26 is_stmt 0
 321 0096 FF 29 65                		add	r6, r5, r9
 322                             	.LVL36:
 323                             	.LBE349:
 324                             	.LBE377:
 325                             	.LBB378:
 326                             	.LBB342:
 327 0099 FF 2F AE                		add	r10, r14, r15
 328                             	.LBE342:
 329                             	.LBE378:
 330                             	.LBB379:
 331                             	.LBB350:
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingValid:
 332                             		.loc 3 49 35
 333 009c 60 19                   		sub	#1, r9
 334                             	.LBE350:
 335                             	.LBE379:
 336                             	.LBB380:
 337                             	.LBB343:
 338 009e 60 1F                   		sub	#1, r15
 339                             	.LBE343:
 340                             	.LBE380:
 341                             	.LBB381:
 342                             	.LBB351:
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\padding.h ****     case kTfLitePaddingValid:
 343                             		.loc 3 49 42
 344 00a0 FC 23 59                		div	r5, r9
 345                             	.LBE351:
 346                             	.LBE381:
 347                             	.LBB382:
 348                             	.LBB344:
 349 00a3 FC 23 EF                		div	r14, r15
 350                             	.LVL37:
 351 00a6 60 19                   		sub	#1, r9
 352 00a8 60 1F                   		sub	#1, r15
 353                             	.LVL38:
 354 00aa 2E 8E                   		bra	.L8
 355                             	.LBE344:
 356                             	.LBE382:
 357                             	.LBE384:
 358                             	.LBE391:
 359                             	.LFE3955:
 361 00ac 76 10 01 00             		.section	.text._ZN6tflite3ops5micro7pooling10MaxPrepareEP13TfLiteContextP10TfLiteNode,"ax",@progbi
 362                             		.global	__ZN6tflite3ops5micro7pooling10MaxPrepareEP13TfLiteContextP10TfLiteNode
 364                             	__ZN6tflite3ops5micro7pooling10MaxPrepareEP13TfLiteContextP10TfLiteNode:
 365                             	.LFB3962:
 265:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 266:../src/tensorflow/lite/micro/kernels/pooling.cc **** TfLiteStatus MaxPrepare(TfLiteContext* context, TfLiteNode* node) {
 366                             		.loc 1 266 67 is_stmt 1
 367                             	.LVL39:
 368 0000 6E 6C                   		pushm	r6-r12
 369                             	.LCFI2:
 370 0002 60 40                   		sub	#4, r0
 371                             	.LCFI3:
 267:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
 372                             		.loc 1 267 3
 373 0004 ED 2A 04                		mov.L	16[r2], r10
 374 0007 61 0A                   		cmp	#0, r10
 375 0009 20 30                   		beq	.L19
 376 000b EF 27                   		mov.L	r2, r7
 268:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK(node->builtin_data != nullptr);
 377                             		.loc 1 268 3
 378 000d ED 2B 05                		mov.L	20[r2], r11
 379 0010 61 0B                   		cmp	#0, r11
 380 0012 20 27                   		beq	.L19
 381 0014 EF 16                   		mov.L	r1, r6
 269:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 270:../src/tensorflow/lite/micro/kernels/pooling.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 382                             		.loc 1 270 3
 383                             	.LVL40:
 271:../src/tensorflow/lite/micro/kernels/pooling.cc ****   auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);
 384                             		.loc 1 271 3
 272:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 273:../src/tensorflow/lite/micro/kernels/pooling.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
 385                             		.loc 1 273 3
 386                             		.loc 1 273 39 is_stmt 0
 387 0016 66 03                   		mov.L	#0, r3
 388 0018 05 00 00 00             		bsr	__ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 389                             	.LVL41:
 390 001c EF 1C                   		mov.L	r1, r12
 391                             	.LVL42:
 274:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
 392                             		.loc 1 274 3 is_stmt 1
 393                             		.loc 1 274 35 is_stmt 0
 394 001e 66 03                   		mov.L	#0, r3
 395 0020 EF 72                   		mov.L	r7, r2
 396 0022 EF 61                   		mov.L	r6, r1
 397                             	.LVL43:
 398 0024 05 00 00 00             		bsr	__ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
 399                             	.LVL44:
 275:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 276:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TF_LITE_ENSURE_STATUS(CalculateOpData(context, params, input, output, data));
 400                             		.loc 1 276 3 is_stmt 1
 401                             	.LBB392:
 402                             		.loc 1 276 3
 403 0028 EF 14                   		mov.L	r1, r4
 404 002a E3 0A                   		mov.L	r10, [r0]
 405 002c EF C3                   		mov.L	r12, r3
 406 002e EF B2                   		mov.L	r11, r2
 407 0030 EF 61                   		mov.L	r6, r1
 408                             	.LVL45:
 409 0032 05 00 00 00             		bsr	__ZN6tflite3ops5micro7pooling12_GLOBAL__N_115CalculateOpDataEP13TfLiteContextPK16TfLitePoolPar
 410                             	.LVL46:
 411                             		.loc 1 276 3
 412                             	.LBE392:
 277:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 278:../src/tensorflow/lite/micro/kernels/pooling.cc ****   return kTfLiteOk;
 279:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 413                             		.loc 1 279 1 is_stmt 0
 414 0036 3F 6C 08                		rtsd	#32, r6-r12
 415                             	.LVL47:
 416                             	.L19:
 267:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK(node->builtin_data != nullptr);
 417                             		.loc 1 267 3 discriminator 1
 418 0039 05 00 00 00             		bsr	_abort
 419                             	.LVL48:
 420                             	.LFE3962:
 422                             		.section	.text._ZN6tflite3ops5micro7pooling14AveragePrepareEP13TfLiteContextP10TfLiteNode,"ax",@pr
 423                             		.global	__ZN6tflite3ops5micro7pooling14AveragePrepareEP13TfLiteContextP10TfLiteNode
 425                             	__ZN6tflite3ops5micro7pooling14AveragePrepareEP13TfLiteContextP10TfLiteNode:
 426                             	.LFB3963:
 280:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 281:../src/tensorflow/lite/micro/kernels/pooling.cc **** TfLiteStatus AveragePrepare(TfLiteContext* context, TfLiteNode* node) {
 427                             		.loc 1 281 71 is_stmt 1
 428                             	.LVL49:
 429 0000 6E 6C                   		pushm	r6-r12
 430                             	.LCFI4:
 431 0002 71 00 C4                		add	#-60, r0
 432                             	.LCFI5:
 282:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
 433                             		.loc 1 282 3
 434 0005 A9 26                   		mov.L	16[r2], r6
 435 0007 61 06                   		cmp	#0, r6
 436 0009 3A D8 00                		beq	.L26
 437 000c EF 27                   		mov.L	r2, r7
 283:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK(node->builtin_data != nullptr);
 438                             		.loc 1 283 3
 439 000e ED 2B 05                		mov.L	20[r2], r11
 440 0011 61 0B                   		cmp	#0, r11
 441 0013 3A CE 00                		beq	.L26
 442 0016 EF 1A                   		mov.L	r1, r10
 284:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 285:../src/tensorflow/lite/micro/kernels/pooling.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 443                             		.loc 1 285 3
 444                             	.LVL50:
 286:../src/tensorflow/lite/micro/kernels/pooling.cc ****   auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);
 445                             		.loc 1 286 3
 287:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 288:../src/tensorflow/lite/micro/kernels/pooling.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
 446                             		.loc 1 288 3
 447                             		.loc 1 288 39 is_stmt 0
 448 0018 66 03                   		mov.L	#0, r3
 449 001a 05 00 00 00             		bsr	__ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 450                             	.LVL51:
 451 001e EF 1C                   		mov.L	r1, r12
 452                             	.LVL52:
 289:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
 453                             		.loc 1 289 3 is_stmt 1
 454                             		.loc 1 289 35 is_stmt 0
 455 0020 66 03                   		mov.L	#0, r3
 456 0022 EF 72                   		mov.L	r7, r2
 457 0024 EF A1                   		mov.L	r10, r1
 458                             	.LVL53:
 459 0026 05 00 00 00             		bsr	__ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
 460                             	.LVL54:
 461 002a EF 19                   		mov.L	r1, r9
 462                             	.LVL55:
 290:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 291:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TF_LITE_ENSURE_STATUS(CalculateOpData(context, params, input, output, data));
 463                             		.loc 1 291 3 is_stmt 1
 464                             	.LBB441:
 465                             		.loc 1 291 3
 466 002c E3 06                   		mov.L	r6, [r0]
 467 002e EF 14                   		mov.L	r1, r4
 468 0030 EF C3                   		mov.L	r12, r3
 469 0032 EF B2                   		mov.L	r11, r2
 470 0034 EF A1                   		mov.L	r10, r1
 471                             	.LVL56:
 472 0036 05 00 00 00             		bsr	__ZN6tflite3ops5micro7pooling12_GLOBAL__N_115CalculateOpDataEP13TfLiteContextPK16TfLitePoolPar
 473                             	.LVL57:
 474 003a 71 17 00                		add	#0, r1, r7
 475                             	.LVL58:
 476 003d 1E                      		bne	.L24
 477                             	.LBE441:
 292:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 293:../src/tensorflow/lite/micro/kernels/pooling.cc ****   if (input->type == kTfLiteInt8) {
 478                             		.loc 1 293 3
 479                             	.LBB442:
 480 003e EC C5                   		mov.L	[r12], r5
 481 0040 61 95                   		cmp	#9, r5
 482 0042 16                      		beq	.L49
 483                             	.LVL59:
 484                             		.balign 8,3,1
 485                             	.L24:
 486                             	.LBE442:
 294:../src/tensorflow/lite/micro/kernels/pooling.cc ****     RuntimeShape input_shape = GetTensorShape(input);
 295:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(input_shape.DimensionsCount(), 4);
 296:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 297:../src/tensorflow/lite/micro/kernels/pooling.cc ****     RuntimeShape output_shape = GetTensorShape(output);
 298:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 299:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 300:../src/tensorflow/lite/micro/kernels/pooling.cc ****     const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 301:../src/tensorflow/lite/micro/kernels/pooling.cc ****     const int output_width = output_shape.Dims(2);
 302:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 303:../src/tensorflow/lite/micro/kernels/pooling.cc ****     const int32_t buffer_size =
 304:../src/tensorflow/lite/micro/kernels/pooling.cc ****         arm_avgpool_s8_get_buffer_size(output_width, depth);
 305:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 306:../src/tensorflow/lite/micro/kernels/pooling.cc ****     if (buffer_size > 0) {
 307:../src/tensorflow/lite/micro/kernels/pooling.cc ****       TF_LITE_ENSURE_STATUS(context->RequestScratchBufferInArena(
 308:../src/tensorflow/lite/micro/kernels/pooling.cc ****           context, buffer_size, &data->buffer_idx));
 309:../src/tensorflow/lite/micro/kernels/pooling.cc ****     } else {
 310:../src/tensorflow/lite/micro/kernels/pooling.cc ****       data->buffer_idx = -1;
 311:../src/tensorflow/lite/micro/kernels/pooling.cc ****     }
 312:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 313:../src/tensorflow/lite/micro/kernels/pooling.cc ****   return kTfLiteOk;
 314:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 487                             		.loc 1 314 1 is_stmt 0
 488 0043 EF 71                   		mov.L	r7, r1
 489 0045 3F 6C 16                		rtsd	#88, r6-r12
 490                             	.LVL60:
 491                             	.L49:
 492                             	.LBB500:
 493                             	.LBB443:
 294:../src/tensorflow/lite/micro/kernels/pooling.cc ****     RuntimeShape input_shape = GetTensorShape(input);
 494                             		.loc 1 294 5 is_stmt 1
 495                             	.LBB444:
 496                             	.LBB445:
 497                             		.file 4 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TENSOR_CTYPES_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TENSOR_CTYPES_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** #include "tensorflow/lite/c/common.h"
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** #include "tensorflow/lite/kernels/internal/types.h"
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** namespace tflite {
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** template <typename T>
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** inline T* GetTensorData(TfLiteTensor* tensor) {
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** }
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** template <typename T>
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** inline const T* GetTensorData(const TfLiteTensor* tensor) {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   return tensor != nullptr ? reinterpret_cast<const T*>(tensor->data.raw)
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****                            : nullptr;
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** }
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** inline RuntimeShape GetTensorShape(const TfLiteTensor* tensor) {
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   if (tensor == nullptr) {
 498                             		.loc 4 35 3
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****     return RuntimeShape();
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   }
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h **** 
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   TfLiteIntArray* dims = tensor->dims;
 499                             		.loc 4 39 3
 500                             		.loc 4 39 19 is_stmt 0
 501 0048 ED CB 02                		mov.L	8[r12], r11
 502                             	.LVL61:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int dims_size = dims->size;
 503                             		.loc 4 40 3 is_stmt 1
 504                             		.loc 4 40 13 is_stmt 0
 505 004b EC B1                   		mov.L	[r11], r1
 506                             	.LVL62:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int32_t* dims_data = reinterpret_cast<const int32_t*>(dims->data);
 507                             		.loc 4 41 3 is_stmt 1
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   return RuntimeShape(dims_size, dims_data);
 508                             		.loc 4 42 3
 509                             	.LBE445:
 510                             	.LBE444:
 511                             	.LBE443:
 512                             	.LBE500:
 513                             		.file 5 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <algorithm>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstring>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <initializer_list>
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FusedActivationFunctionType : uint8_t {
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kNone,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu6,
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu1,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class PaddingType : uint8_t { kNone, kSame, kValid };
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct PaddingValues {
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // This enumeration allows for non-default formats for the weights array
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // of a fully-connected operator, allowing the use of special optimized
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // runtime paths.
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FullyConnectedWeightsFormat : uint8_t {
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Default format (flat 2D layout, the inner contiguous dimension
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is input_depth, the outer non-contiguous dimension is output_depth)
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kDefault,
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Summary: optimized layout for fast CPU runtime implementation,
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // aimed specifically at ARM CPUs at the moment, and specialized for
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 8-bit quantized layers.
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The use case we're concerned with here is: 8-bit quantization,
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // large weights matrix that doesn't fit in cache (e.g. 4096x2048 in
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // a key application that drove this), very small batch size (e.g. 1 -- 4).
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Even with 8-bit quantization of weights, the performance of memory
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses to the weights can become the dominant issue when
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the batch size is small, so each weight value is used in only a few
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // arithmetic ops, i.e. the fully-connected node has a low arithmetic
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // intensity. The specific issues that arise are of three kinds:
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (1) One may, ideally, max out DRAM bandwidth, i.e. be truly memory
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     bound. That's the "good" issue to run into.
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (2) One may run into sub-optimal pre-fetching: the data hasn't been
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     prefetched into the cache by the time we need it.
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (3) One may run into cache aliasing: multiple values that are
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     pre-fetched, alias each other in the L1 cache (which typically
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     has only 4-way set associativity in ARM CPUs) and thus evict
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     each other before we get to using them.
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The point of this shuffling is to avoid issues (2) and (3) so that
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // we get as fast as possible given only the hard constraint (1).
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This is achieved by turning the difficulty into a solution: the
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // difficulty, that each value loaded from memory is used only in
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // one kernel iteration, making this operation memory-intensive, hints at
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the solution, of shuffling the weights so that they are stored in the
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // exact order as the kernel needs to load them, so that the memory
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses made by the kernel are trivial. This solves (2) because the
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // trivial memory access pattern allows the CPU's automatic prefetching
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to perform very well (no need even for preload instructions), and this
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // solves (3) because the values being loaded concurrently are now
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // contiguous in the address space, thus don't alias each other in the cache.
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // On ARM, we typically want our kernel to process a 4x16 block of weights
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // at a time, because:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 16 is the number of bytes in a NEON register.
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 4 is how many rows we need to handle concurrently in the kernel in
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     order to have sufficient mutual independence of instructions to
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     maximize arithmetic throughput.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Finally, the 'Int8' part in the name refers to the fact that this
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // weights format has each weights value encoded as a signed int8_t value,
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // even if the data type of the weights buffer is uint8_t.  This is intended
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to save runtime kernels the effort to have to XOR the top bit of these
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // bytes before using them in signed arithmetic, see this file for more
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // explanations on the 'signed int8_t trick' in matrix multiplication kernels:
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   tensorflow/lite/toco/graph_transformations/ensure_uint8_weights_safe_for_fast_int8_kernels.c
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kShuffled4x16Int8,
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Quantization parameters, determining the mapping of quantized values
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // to real values (i.e. determining how quantized values are mathematically
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // interpreted).
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // The correspondence is as follows:
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //   real_value = scale * (quantized_value - zero_point);
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // In other words, zero_point designates which quantized value corresponds to
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // the real 0 value, and scale designates the difference between the real values
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // corresponding to consecutive quantized values differing by 1.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct QuantizationParams {
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t zero_point = 0;
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   double scale = 0.0;
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool operator==(const QuantizationParams& qp1,
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const QuantizationParams& qp2) {
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return qp1.zero_point == qp2.zero_point && qp1.scale == qp2.scale;
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct Dims {
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int sizes[N];
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int strides[N];
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** class RuntimeShape {
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  public:
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Shapes with dimensions up to 5 are stored directly in the structure, while
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // larger shapes are separately allocated.
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   static constexpr int kMaxSmallSize = 5;
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape& operator=(RuntimeShape const&) = delete;
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape() : size_(0) {}
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   explicit RuntimeShape(int dimensions_count) : size_(dimensions_count) {
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int shape_size, int32_t value) : size_(0) {
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(shape_size);
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < shape_size; ++i) {
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, value);
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int dimensions_count, const int32_t* dims_data) : size_(0) {
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     ReplaceWith(dimensions_count, dims_data);
 514                             		.loc 5 162 5
 515                             	.LBB501:
 516                             	.LBB494:
 517                             	.LBB460:
 518                             	.LBB458:
 519                             	.LBB446:
 520                             	.LBB447:
 521                             	.LBB448:
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(const std::initializer_list<int> init_list) : size_(0) {
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom(init_list);
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Avoid using this constructor.  We should be able to delete it when C++17
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // rolls out.
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(RuntimeShape const& other) : size_(other.DimensionsCount()) {
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[size_];
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData(), other.DimsData(), sizeof(int32_t) * size_);
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator==(const RuntimeShape& comp) const {
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return this->size_ == comp.size_ &&
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****            std::memcmp(DimsData(), comp.DimsData(), size_ * sizeof(int32_t)) ==
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                0;
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   ~RuntimeShape() {
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t DimensionsCount() const { return size_; }
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void SetDim(int i, int32_t val) {
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_[i] = val;
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_[i] = val;
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t* DimsData() {
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsData() const {
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The caller must ensure that the shape is no bigger than 5-D.
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsDataUpTo5D() const { return dims_; }
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void Resize(int dimensions_count) {
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     size_ = dimensions_count;
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void ReplaceWith(int dimensions_count, const int32_t* dims_data) {
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 522                             		.loc 5 238 5
 523                             	.LBB449:
 524                             	.LBB450:
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 525                             		.loc 5 220 5
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 526                             		.loc 5 227 5
 527 004d FD C2 13                		shll	#2, r1, r3
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 528                             		.loc 5 227 11 is_stmt 0
 529 0050 A1 89                   		mov.L	r1, 28[r0]
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 530                             		.loc 5 228 5 is_stmt 1
 531 0052 61 51                   		cmp	#5, r1
 532 0054 2B 64                   		ble	.L37
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 533                             		.loc 5 232 7
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 534                             		.loc 5 232 51 is_stmt 0
 535 0056 74 01 FF FF FF 1F       		cmp	#0x1fffffff, r1
 536 005c EF 31                   		mov.L	r3, r1
 537                             	.LVL63:
 538 005e 2B 05                   		ble 1f
 539 0060 FB 16 FF                		mov #-1, r1
 540                             	1:
 541 0063 A3 83                   		mov.L	r3, 56[r0]
 542 0065 05 00 00 00             		bsr	__Znam
 543                             	.LVL64:
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 544                             		.loc 5 232 21
 545 0069 A2 01                   		mov.L	r1, 32[r0]
 546                             	.LBE450:
 547                             	.LBE449:
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 548                             		.loc 5 239 5 is_stmt 1
 549                             	.LVL65:
 550                             	.LBB451:
 551                             	.LBB452:
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 552                             		.loc 5 211 5
 553 006b AB 83                   		mov.L	56[r0], r3
 554                             	.LVL66:
 555                             		.balign 8,3,2
 556                             	.L28:
 557                             	.LBE452:
 558                             	.LBE451:
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 559                             		.loc 5 240 5
 560                             		.loc 5 240 16 is_stmt 0
 561 006d 71 B2 04                		add	#4, r11, r2
 562 0070 7F 8F                   		smovf
 563                             	.LVL67:
 564                             	.LBE448:
 565                             	.LBE447:
 566                             	.LBE446:
 567                             	.LBE458:
 568                             	.LBE460:
 295:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 569                             		.loc 1 295 5 is_stmt 1
 570                             	.LBE494:
 571                             	.LBE501:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 572                             		.loc 5 194 44
 573                             	.LBB502:
 574                             	.LBB495:
 295:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 575                             		.loc 1 295 5 is_stmt 0
 576 0072 A9 8D                   		mov.L	28[r0], r5
 577 0074 61 45                   		cmp	#4, r5
 578 0076 21 6B                   		bne	.L26
 297:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 579                             		.loc 1 297 5 is_stmt 1
 580                             	.LVL68:
 581                             	.LBB461:
 582                             	.LBB462:
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****     return RuntimeShape();
 583                             		.loc 4 35 3
 584 0078 61 09                   		cmp	#0, r9
 585 007a 20 67                   		beq	.L26
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int dims_size = dims->size;
 586                             		.loc 4 39 3
 587                             	.LVL69:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int32_t* dims_data = reinterpret_cast<const int32_t*>(dims->data);
 588                             		.loc 4 40 3
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   const int32_t* dims_data = reinterpret_cast<const int32_t*>(dims->data);
 589                             		.loc 4 40 13 is_stmt 0
 590 007c ED 92 02                		mov.L	8[r9], r2
 591 007f FD 2A 21                		mov.L	[r2+], r1
 592                             	.LVL70:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\tensor_ctypes.h ****   return RuntimeShape(dims_size, dims_data);
 593                             		.loc 4 41 3 is_stmt 1
 594                             		.loc 4 42 3
 595                             	.LBE462:
 596                             	.LBE461:
 597                             	.LBE495:
 598                             	.LBE502:
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 599                             		.loc 5 162 5
 600                             	.LBB503:
 601                             	.LBB496:
 602                             	.LBB479:
 603                             	.LBB477:
 604                             	.LBB463:
 605                             	.LBB464:
 606                             	.LBB465:
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 607                             		.loc 5 238 5
 608                             	.LBB466:
 609                             	.LBB467:
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 610                             		.loc 5 220 5
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 611                             		.loc 5 227 5
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 612                             		.loc 5 227 11 is_stmt 0
 613 0082 A0 09                   		mov.L	r1, 4[r0]
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 614                             		.loc 5 228 5 is_stmt 1
 615 0084 FD C2 13                		shll	#2, r1, r3
 616 0087 61 51                   		cmp	#5, r1
 617 0089 2A 34                   		bgt	.L50
 618                             	.LBE467:
 619                             	.LBE466:
 620                             	.LBB469:
 621                             	.LBB470:
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 622                             		.loc 5 211 34 is_stmt 0
 623 008b 71 01 08                		add	#8, r0, r1
 624                             	.LVL71:
 625                             		.balign 8,3,1
 626                             	.L30:
 627                             	.LBE470:
 628                             	.LBE469:
 629                             		.loc 5 240 5 is_stmt 1
 630                             		.loc 5 240 16 is_stmt 0
 631 008e 7F 8F                   		smovf
 632                             	.LVL72:
 633                             	.LBE465:
 634                             	.LBE464:
 635                             	.LBE463:
 636                             	.LBE477:
 637                             	.LBE479:
 298:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 638                             		.loc 1 298 5 is_stmt 1
 639                             	.LBE496:
 640                             	.LBE503:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 641                             		.loc 5 194 44
 642                             	.LBB504:
 643                             	.LBB497:
 298:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 644                             		.loc 1 298 5 is_stmt 0
 645 0090 A8 0D                   		mov.L	4[r0], r5
 646 0092 61 45                   		cmp	#4, r5
 647 0094 21 4D                   		bne	.L26
 300:../src/tensorflow/lite/micro/kernels/pooling.cc ****     const int output_width = output_shape.Dims(2);
 648                             		.loc 1 300 5 is_stmt 1
 649                             	.LVL73:
 650                             	.LBB480:
 651                             	.LBB481:
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   template <typename T>
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const T& src_iterable) {
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int dimensions_count =
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         std::distance(src_iterable.begin(), src_iterable.end());
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* data = DimsData();
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (auto it : src_iterable) {
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       *data = it;
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       ++data;
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This will probably be factored out. Old code made substantial use of 4-D
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // shapes, and so this function is used to extend smaller shapes. Note that
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (a) as Dims<4>-dependent code is eliminated, the reliance on this should be
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // reduced, and (b) some kernels are stricly 4-D, but then the shapes of their
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // inputs should already be 4-D, so this function should not be needed.
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline static RuntimeShape ExtendedShape(int new_shape_size,
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                            const RuntimeShape& shape) {
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return RuntimeShape(new_shape_size, shape, 1);
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const std::initializer_list<int> init_list) {
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom<const std::initializer_list<int>>(init_list);
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Returns the total count of elements, that is the size when flattened into a
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // vector.
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int FlatSize() const {
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int buffer_size = 1;
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return buffer_size;
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator!=(const RuntimeShape& comp) const { return !((*this) == comp); }
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  private:
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // For use only by ExtendedShape(), written to guarantee (return-value) copy
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // elision in C++17.
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This creates a shape padded to the desired size with the specified value.
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int new_shape_size, const RuntimeShape& shape, int pad_value)
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       : size_(0) {
 288:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // If the following check fails, it is likely because a 4D-only kernel is
 289:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // being used with an array of larger dimension count.
 290:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_CHECK_GE(new_shape_size, shape.DimensionsCount());
 291:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(new_shape_size);
 292:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int size_increase = new_shape_size - shape.DimensionsCount();
 293:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_increase; ++i) {
 294:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, pad_value);
 295:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 296:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData() + size_increase, shape.DimsData(),
 297:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                 sizeof(int32_t) * shape.DimensionsCount());
 298:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 299:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 300:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t size_;
 301:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   union {
 302:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t dims_[kMaxSmallSize];
 303:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dims_pointer_;
 304:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   };
 305:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 306:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 307:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Converts inference-style shape to legacy tflite::Dims<4>.
 308:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline tflite::Dims<4> ToRuntimeDims(const tflite::RuntimeShape& array_shape) {
 309:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   tflite::Dims<4> result;
 310:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dimensions_count = array_shape.DimensionsCount();
 311:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_LE(dimensions_count, 4);
 312:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int cum_prod = 1;
 313:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < 4; i++) {
 314:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int new_dim =
 315:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         (i < dimensions_count) ? array_shape.Dims(dimensions_count - 1 - i) : 1;
 316:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.sizes[i] = new_dim;
 317:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.strides[i] = cum_prod;
 318:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     cum_prod *= new_dim;
 319:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 320:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return result;
 321:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 322:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 323:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(b/80418076): Move to legacy ops file, update invocations.
 324:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline RuntimeShape DimsToShape(const tflite::Dims<4>& dims) {
 325:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return RuntimeShape(
 326:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       {dims.sizes[3], dims.sizes[2], dims.sizes[1], dims.sizes[0]});
 327:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 328:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 329:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets next index to iterate through a multidimensional array.
 330:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool NextIndex(const int num_dims, const int* dims, int* current) {
 331:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 332:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return false;
 333:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 334:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 335:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(current != nullptr);
 336:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int carry = 1;
 337:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = num_dims - 1; idx >= 0; --idx) {
 338:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int current_val = current[idx] + carry;
 339:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(dims[idx], current_val);
 340:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dims[idx] == current_val) {
 341:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = 0;
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = current_val;
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       carry = 0;
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       break;
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return (carry == 0);
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 350:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 351:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets offset of index if reducing on axis. When reducing, the flattened offset
 352:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // will not change, if the input index changes on the given axis. For example,
 353:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // if you have a 3D tensor and you are reducing to 2D by eliminating axis 0,
 354:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // then index (0, 1, 2) and index (1, 1, 2) will map to the same flattened
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // offset.
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(kanlig): uses Dims to represent dimensions.
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline size_t ReducedOutputOffset(const int num_dims, const int* dims,
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* index, const int num_axis,
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* axis) {
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return 0;
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 363:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 364:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index != nullptr);
 365:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   size_t offset = 0;
 366:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = 0; idx < num_dims; ++idx) {
 367:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // if we need to skip this axis
 368:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     bool is_axis = false;
 369:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (axis != nullptr) {
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       for (int axis_idx = 0; axis_idx < num_axis; ++axis_idx) {
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         if (idx == axis[axis_idx]) {
 372:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           is_axis = true;
 373:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           break;
 374:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         }
 375:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       }
 376:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 377:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (!is_axis) {
 378:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       offset = offset * static_cast<size_t>(dims[idx]) +
 379:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                static_cast<size_t>(index[idx]);
 380:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 381:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 382:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return offset;
 383:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 384:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 385:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int i0, int i1, int i2, int i3) {
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), 4);
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 393:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 394:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 395:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int i0, int i1, int i2, int i3) {
 396:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims.sizes[0]);
 397:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims.sizes[1]);
 398:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims.sizes[2]);
 399:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims.sizes[3]);
 400:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return i0 * dims.strides[0] + i1 * dims.strides[1] + i2 * dims.strides[2] +
 401:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****          i3 * dims.strides[3];
 402:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 403:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 404:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int* index) {
 405:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(dims, index[0], index[1], index[2], index[3]);
 406:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 407:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 408:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int* index) {
 409:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(shape, index[0], index[1], index[2], index[3]);
 410:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 411:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 412:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get array size, DCHECKing that the dim index is in range.
 413:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 414:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Note that this will be phased out with Dims<4>, since RuntimeShape::Dims()
 415:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // already performs this check.
 416:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 417:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int ArraySize(const Dims<N>& array, int index) {
 418:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index >= 0 && index < N);
 419:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return array.sizes[index];
 420:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 421:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 422:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common array size, DCHECKing that they all agree.
 423:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2>
 424:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 425:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2) {
 426:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 427:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ArraySize(array1, index1);
 428:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 429:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 430:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2, typename... Args>
 431:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 432:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2, Args... args) {
 433:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 434:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingArraySize(array1, index1, args...);
 435:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 436:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 437:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common shape dim, DCHECKing that they all agree.
 438:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingDim(const RuntimeShape& shape1, int index1,
 439:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const RuntimeShape& shape2, int index2) {
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 652                             		.loc 5 440 3
 653                             	.LBB482:
 654                             	.LBB483:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 655                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 656                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 657                             		.loc 5 198 5
 658                             	.LBE483:
 659                             	.LBE482:
 660                             	.LBB484:
 661                             	.LBB485:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 662                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 663                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 664                             		.loc 5 198 5
 665                             	.LBE485:
 666                             	.LBE484:
 667                             		.loc 5 440 3 is_stmt 0
 668 0096 A9 0A                   		mov.L	20[r0], r2
 669 0098 06 85 02 0B             		cmp	44[r0].L, r2
 670 009c 21 45                   		bne	.L26
 441:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 671                             		.loc 5 441 3 is_stmt 1
 672                             	.LVL74:
 673                             	.LBE481:
 674                             	.LBE480:
 675                             	.LBE497:
 676                             	.LBE504:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 677                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 678                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 679                             		.loc 5 198 5
 680                             	.LBB505:
 681                             	.LBB498:
 301:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 682                             		.loc 1 301 5
 683                             	.LBB486:
 684                             	.LBB487:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 685                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 686                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 687                             		.loc 5 198 5
 688                             	.LBE487:
 689                             	.LBE486:
 303:../src/tensorflow/lite/micro/kernels/pooling.cc ****         arm_avgpool_s8_get_buffer_size(output_width, depth);
 690                             		.loc 1 303 5
 304:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 691                             		.loc 1 304 39 is_stmt 0
 692 009e A9 01                   		mov.L	16[r0], r1
 693 00a0 05 00 00 00             		bsr	_arm_avgpool_s8_get_buffer_size
 694                             	.LVL75:
 306:../src/tensorflow/lite/micro/kernels/pooling.cc ****       TF_LITE_ENSURE_STATUS(context->RequestScratchBufferInArena(
 695                             		.loc 1 306 5 is_stmt 1
 696                             	.LBB488:
 697 00a4 61 01                   		cmp	#0, r1
 698 00a6 2B 34                   		ble	.L51
 699                             	.LBE488:
 700                             	.LBE498:
 701                             	.LBE505:
 307:../src/tensorflow/lite/micro/kernels/pooling.cc ****           context, buffer_size, &data->buffer_idx));
 702                             		.loc 1 307 7
 703                             	.LBB506:
 704                             	.LBB499:
 705                             	.LBB490:
 706                             	.LBB489:
 307:../src/tensorflow/lite/micro/kernels/pooling.cc ****           context, buffer_size, &data->buffer_idx));
 707                             		.loc 1 307 7
 708 00a8 ED A7 10                		mov.L	64[r10], r7
 709 00ab 71 63 10                		add	#16, r6, r3
 710 00ae EF 12                   		mov.L	r1, r2
 711 00b0 EF A1                   		mov.L	r10, r1
 712                             	.LVL76:
 713 00b2 7F 17                   		jsr	r7
 714                             	.LVL77:
 715 00b4 EF 17                   		mov.L	r1, r7
 716                             	.LVL78:
 307:../src/tensorflow/lite/micro/kernels/pooling.cc ****           context, buffer_size, &data->buffer_idx));
 717                             		.loc 1 307 7
 718 00b6 2E 8D                   		bra	.L24
 719                             	.LVL79:
 720                             	.L37:
 721                             	.LBE489:
 722                             	.LBE490:
 723                             	.LBB491:
 724                             	.LBB459:
 725                             	.LBB457:
 726                             	.LBB456:
 727                             	.LBB455:
 728                             	.LBB454:
 729                             	.LBB453:
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 730                             		.loc 5 211 34 is_stmt 0
 731 00b8 71 01 20                		add	#32, r0, r1
 732                             	.LVL80:
 733 00bb 2E B2                   		bra	.L28
 734                             	.LVL81:
 735                             	.L50:
 736                             	.LBE453:
 737                             	.LBE454:
 738                             	.LBE455:
 739                             	.LBE456:
 740                             	.LBE457:
 741                             	.LBE459:
 742                             	.LBE491:
 743                             	.LBB492:
 744                             	.LBB478:
 745                             	.LBB476:
 746                             	.LBB475:
 747                             	.LBB474:
 748                             	.LBB472:
 749                             	.LBB468:
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 750                             		.loc 5 232 7 is_stmt 1
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 751                             		.loc 5 232 51 is_stmt 0
 752 00bd 74 01 FF FF FF 1F       		cmp	#0x1fffffff, r1
 753 00c3 EF 31                   		mov.L	r3, r1
 754                             	.LVL82:
 755 00c5 2B 05                   		ble 1f
 756 00c7 FB 16 FF                		mov #-1, r1
 757                             	1:
 758 00ca A3 0A                   		mov.L	r2, 52[r0]
 759 00cc A3 83                   		mov.L	r3, 56[r0]
 760 00ce 05 00 00 00             		bsr	__Znam
 761                             	.LVL83:
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 762                             		.loc 5 232 21
 763 00d2 A0 81                   		mov.L	r1, 8[r0]
 764                             	.LBE468:
 765                             	.LBE472:
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 766                             		.loc 5 239 5 is_stmt 1
 767                             	.LVL84:
 768                             	.LBB473:
 769                             	.LBB471:
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 770                             		.loc 5 211 5
 771 00d4 AB 0A                   		mov.L	52[r0], r2
 772 00d6 AB 83                   		mov.L	56[r0], r3
 773 00d8 2E B6                   		bra	.L30
 774                             	.LVL85:
 775                             	.L51:
 776                             	.LBE471:
 777                             	.LBE473:
 778                             	.LBE474:
 779                             	.LBE475:
 780                             	.LBE476:
 781                             	.LBE478:
 782                             	.LBE492:
 783                             	.LBB493:
 310:../src/tensorflow/lite/micro/kernels/pooling.cc ****     }
 784                             		.loc 1 310 7
 310:../src/tensorflow/lite/micro/kernels/pooling.cc ****     }
 785                             		.loc 1 310 24 is_stmt 0
 786 00da F9 66 04 FF             		mov.L	#-1, 16[r6]
 787 00de 38 65 FF                		bra	.L24
 788                             	.LVL86:
 789                             	.L26:
 790                             	.LBE493:
 791                             	.LBE499:
 792                             	.LBE506:
 282:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TFLITE_DCHECK(node->builtin_data != nullptr);
 793                             		.loc 1 282 3 discriminator 1
 794 00e1 05 00 00 00             		bsr	_abort
 795                             	.LVL87:
 796                             	.LFE3963:
 798 00e5 FC 13 00                		.section	.text._ZN6tflite3ops5micro7pooling7MaxEvalEP13TfLiteContextP10TfLiteNode,"ax",@progbits
 799                             		.global	__ZN6tflite3ops5micro7pooling7MaxEvalEP13TfLiteContextP10TfLiteNode
 801                             	__ZN6tflite3ops5micro7pooling7MaxEvalEP13TfLiteContextP10TfLiteNode:
 802                             	.LFB3965:
 315:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 316:../src/tensorflow/lite/micro/kernels/pooling.cc **** TfLiteStatus AverageEval(TfLiteContext* context, TfLiteNode* node) {
 317:../src/tensorflow/lite/micro/kernels/pooling.cc ****   auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);
 318:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 319:../src/tensorflow/lite/micro/kernels/pooling.cc ****   const OpData& data = *(static_cast<const OpData*>(node->user_data));
 320:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 321:../src/tensorflow/lite/micro/kernels/pooling.cc ****   const TfLiteEvalTensor* input =
 322:../src/tensorflow/lite/micro/kernels/pooling.cc ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
 323:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TfLiteEvalTensor* output =
 324:../src/tensorflow/lite/micro/kernels/pooling.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
 325:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 326:../src/tensorflow/lite/micro/kernels/pooling.cc ****   // Inputs and outputs share the same type, guaranteed by the converter.
 327:../src/tensorflow/lite/micro/kernels/pooling.cc ****   switch (input->type) {
 328:../src/tensorflow/lite/micro/kernels/pooling.cc ****     case kTfLiteFloat32:
 329:../src/tensorflow/lite/micro/kernels/pooling.cc ****       AverageEvalFloat(context, node, params, data, input, output);
 330:../src/tensorflow/lite/micro/kernels/pooling.cc ****       break;
 331:../src/tensorflow/lite/micro/kernels/pooling.cc ****     case kTfLiteUInt8:
 332:../src/tensorflow/lite/micro/kernels/pooling.cc ****     case kTfLiteInt8:
 333:../src/tensorflow/lite/micro/kernels/pooling.cc ****       AverageEvalQuantized(context, node, params, data, input, output);
 334:../src/tensorflow/lite/micro/kernels/pooling.cc ****       break;
 335:../src/tensorflow/lite/micro/kernels/pooling.cc ****     default:
 336:../src/tensorflow/lite/micro/kernels/pooling.cc ****       TF_LITE_KERNEL_LOG(context, "Input type %s is not currently supported",
 337:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          TfLiteTypeGetName(input->type));
 338:../src/tensorflow/lite/micro/kernels/pooling.cc ****       return kTfLiteError;
 339:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 340:../src/tensorflow/lite/micro/kernels/pooling.cc ****   return kTfLiteOk;
 341:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 342:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 343:../src/tensorflow/lite/micro/kernels/pooling.cc **** TfLiteStatus MaxEval(TfLiteContext* context, TfLiteNode* node) {
 803                             		.loc 1 343 64 is_stmt 1
 804                             	.LVL88:
 805 0000 6E 6D                   		pushm	r6-r13
 806                             	.LCFI6:
 807 0002 72 00 78 FE             		add	#-392, r0
 808                             	.LCFI7:
 344:../src/tensorflow/lite/micro/kernels/pooling.cc ****   auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);
 809                             		.loc 1 344 3
 810                             		.loc 1 344 9 is_stmt 0
 811 0006 A9 2E                   		mov.L	20[r2], r6
 812                             	.LVL89:
 345:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 346:../src/tensorflow/lite/micro/kernels/pooling.cc ****   const OpData& data = *(static_cast<const OpData*>(node->user_data));
 813                             		.loc 1 346 3 is_stmt 1
 814                             		.loc 1 346 17 is_stmt 0
 815 0008 ED 2A 04                		mov.L	16[r2], r10
 816                             	.LVL90:
 347:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 348:../src/tensorflow/lite/micro/kernels/pooling.cc ****   const TfLiteEvalTensor* input =
 817                             		.loc 1 348 3 is_stmt 1
 818                             		.file 6 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
 819                             		.loc 6 41 3
 820                             	.LBB679:
 821                             	.LBB680:
 822                             	.LBB681:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 823                             		.loc 6 33 3
 824 000b 61 01                   		cmp	#0, r1
 825 000d 3A 63 07                		beq	.L59
 826 0010 EF 2C                   		mov.L	r2, r12
 827 0012 EF 1B                   		mov.L	r1, r11
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 828                             		.loc 6 34 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 829                             		.loc 6 35 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 830                             		.loc 6 35 32 is_stmt 0
 831 0014 EC 25                   		mov.L	[r2], r5
 832 0016 AD 1F                   		mov.L	84[r1], r7
 833 0018 A8 5A                   		mov.L	4[r5], r2
 834                             	.LVL91:
 835 001a 7F 17                   		jsr	r7
 836                             	.LVL92:
 837 001c EF 17                   		mov.L	r1, r7
 838                             	.LVL93:
 839                             	.LBE681:
 840                             	.LBE680:
 841                             	.LBE679:
 349:../src/tensorflow/lite/micro/kernels/pooling.cc ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
 350:../src/tensorflow/lite/micro/kernels/pooling.cc ****   TfLiteEvalTensor* output =
 842                             		.loc 1 350 3 is_stmt 1
 843                             	.LBB684:
 844                             	.LBB685:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
 845                             		.loc 6 47 3
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 846                             		.loc 6 48 3
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
 847                             		.loc 6 49 3
 848                             		.loc 6 49 32 is_stmt 0
 849 001e ED C4 01                		mov.L	4[r12], r4
 850 0021 ED B5 15                		mov.L	84[r11], r5
 851 0024 EF B1                   		mov.L	r11, r1
 852                             	.LVL94:
 853 0026 A8 4A                   		mov.L	4[r4], r2
 854 0028 7F 15                   		jsr	r5
 855                             	.LVL95:
 856 002a EF 18                   		mov.L	r1, r8
 857                             	.LVL96:
 858                             	.LBE685:
 859                             	.LBE684:
 351:../src/tensorflow/lite/micro/kernels/pooling.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
 352:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 353:../src/tensorflow/lite/micro/kernels/pooling.cc ****   switch (input->type) {
 860                             		.loc 1 353 3 is_stmt 1
 861                             		.loc 1 353 18 is_stmt 0
 862 002c A8 F1                   		mov.L	8[r7], r1
 863                             	.LVL97:
 864                             		.loc 1 353 3
 865 002e 61 31                   		cmp	#3, r1
 866 0030 20 24                   		beq	.L54
 867 0032 61 91                   		cmp	#9, r1
 868 0034 3A 2D 06                		beq	.L55
 869 0037 61 11                   		cmp	#1, r1
 870 0039 3A 24 03                		beq	.L180
 354:../src/tensorflow/lite/micro/kernels/pooling.cc ****     case kTfLiteFloat32:
 355:../src/tensorflow/lite/micro/kernels/pooling.cc ****       MaxEvalFloat(context, node, params, data, input, output);
 356:../src/tensorflow/lite/micro/kernels/pooling.cc ****       break;
 357:../src/tensorflow/lite/micro/kernels/pooling.cc ****     case kTfLiteUInt8:
 358:../src/tensorflow/lite/micro/kernels/pooling.cc ****       MaxEvalQuantizedUInt8(context, node, params, data, input, output);
 359:../src/tensorflow/lite/micro/kernels/pooling.cc ****       break;
 360:../src/tensorflow/lite/micro/kernels/pooling.cc ****     case kTfLiteInt8:
 361:../src/tensorflow/lite/micro/kernels/pooling.cc ****       MaxEvalInt8(context, node, params, data, input, output);
 362:../src/tensorflow/lite/micro/kernels/pooling.cc ****       break;
 363:../src/tensorflow/lite/micro/kernels/pooling.cc ****     default:
 871                             		.loc 1 363 5 is_stmt 1
 364:../src/tensorflow/lite/micro/kernels/pooling.cc ****       TF_LITE_KERNEL_LOG(context, "Type %s not currently supported.",
 872                             		.loc 1 364 7
 873                             		.loc 1 364 7
 874 003c ED B7 05                		mov.L	20[r11], r7
 875                             	.LVL98:
 876 003f 05 00 00 00             		bsr	_TfLiteTypeGetName
 877                             	.LVL99:
 878 0043 A0 09                   		mov.L	r1, 4[r0]
 879 0045 EF B1                   		mov.L	r11, r1
 880 0047 F8 02 00 00 00 00       		mov.L	#.LC2, [r0]
 881 004d 7F 17                   		jsr	r7
 882                             	.LVL100:
 365:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          TfLiteTypeGetName(input->type));
 366:../src/tensorflow/lite/micro/kernels/pooling.cc ****       return kTfLiteError;
 883                             		.loc 1 366 7
 884                             		.loc 1 366 14 is_stmt 0
 885 004f 66 11                   		mov.L	#1, r1
 367:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 368:../src/tensorflow/lite/micro/kernels/pooling.cc ****   return kTfLiteOk;
 369:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 886                             		.loc 1 369 1
 887 0051 3F 6D 6A                		rtsd	#424, r6-r13
 888                             	.LVL101:
 889                             	.L54:
 357:../src/tensorflow/lite/micro/kernels/pooling.cc ****       MaxEvalQuantizedUInt8(context, node, params, data, input, output);
 890                             		.loc 1 357 5 is_stmt 1
 358:../src/tensorflow/lite/micro/kernels/pooling.cc ****       break;
 891                             		.loc 1 358 7
 892                             	.LBB686:
 893                             	.LBB687:
 193:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_height = params->stride_height;
 894                             		.loc 1 193 3
 194:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_width = params->stride_width;
 895                             		.loc 1 194 3
 202:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<uint8_t>(input),
 896                             		.loc 1 202 66 is_stmt 0
 897 0054 71 0F 6C                		add	#0x6c, r0, r15
 898 0057 EF 71                   		mov.L	r7, r1
 194:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_width = params->stride_width;
 899                             		.loc 1 194 37
 900 0059 E5 60 02 5E             		mov.L	8[r6], 376[r0]
 901                             	.LVL102:
 195:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_height = params->filter_height;
 902                             		.loc 1 195 3 is_stmt 1
 195:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_height = params->filter_height;
 903                             		.loc 1 195 36 is_stmt 0
 904 005d E5 60 01 59             		mov.L	4[r6], 356[r0]
 905                             	.LVL103:
 196:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_width = params->filter_width;
 906                             		.loc 1 196 3 is_stmt 1
 196:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_width = params->filter_width;
 907                             		.loc 1 196 37 is_stmt 0
 908 0061 E5 60 04 5A             		mov.L	16[r6], 360[r0]
 909                             	.LVL104:
 197:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.height = data.padding.height;
 910                             		.loc 1 197 3 is_stmt 1
 197:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.height = data.padding.height;
 911                             		.loc 1 197 36 is_stmt 0
 912 0065 E5 60 03 56             		mov.L	12[r6], 344[r0]
 913                             	.LVL105:
 198:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.width = data.padding.width;
 914                             		.loc 1 198 3 is_stmt 1
 198:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.width = data.padding.width;
 915                             		.loc 1 198 35 is_stmt 0
 916 0069 D5 A0 02 BA             		mov.W	4[r10], 372[r0]
 917                             	.LVL106:
 199:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.quantized_activation_min = data.activation_min;
 918                             		.loc 1 199 3 is_stmt 1
 199:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.quantized_activation_min = data.activation_min;
 919                             		.loc 1 199 34 is_stmt 0
 920 006d D4 A0 B6                		mov.W	[r10], 364[r0]
 921                             	.LVL107:
 200:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.quantized_activation_max = data.activation_max;
 922                             		.loc 1 200 3 is_stmt 1
 200:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.quantized_activation_max = data.activation_max;
 923                             		.loc 1 200 45 is_stmt 0
 924 0070 E5 A0 05 4E             		mov.L	20[r10], 312[r0]
 925                             	.LVL108:
 201:../src/tensorflow/lite/micro/kernels/pooling.cc ****   reference_ops::MaxPool(op_params, tflite::micro::GetTensorShape(input),
 926                             		.loc 1 201 3 is_stmt 1
 201:../src/tensorflow/lite/micro/kernels/pooling.cc ****   reference_ops::MaxPool(op_params, tflite::micro::GetTensorShape(input),
 927                             		.loc 1 201 45 is_stmt 0
 928 0074 E5 A0 06 44             		mov.L	24[r10], 272[r0]
 202:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<uint8_t>(input),
 929                             		.loc 1 202 3 is_stmt 1
 202:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<uint8_t>(input),
 930                             		.loc 1 202 66 is_stmt 0
 931 0078 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 932                             	.LVL109:
 204:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<uint8_t>(output));
 933                             		.loc 1 204 55
 934 007c 71 0F 54                		add	#0x54, r0, r15
 935 007f EF 81                   		mov.L	r8, r1
 936                             	.LBB688:
 937                             	.LBB689:
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns const data for a TfLiteEvalTensor struct.
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** const T* GetTensorData(const TfLiteEvalTensor* tensor) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(tensor != nullptr);
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 938                             		.loc 6 62 53
 939 0081 E4 70 4C                		mov.L	[r7], 304[r0]
 940                             	.LVL110:
 941                             	.LBE689:
 942                             	.LBE688:
 204:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<uint8_t>(output));
 943                             		.loc 1 204 55
 944 0084 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 945                             	.LVL111:
 946                             	.LBB690:
 947                             	.LBB691:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 948                             		.loc 6 55 28
 949 0088 61 08                   		cmp	#0, r8
 950 008a 13                      		beq	.L89
 951 008b EC 88                   		mov.L	[r8], r8
 952                             	.LVL112:
 953                             		.balign 8,3,2
 954                             	.L89:
 955                             	.LBE691:
 956                             	.LBE690:
 957                             	.LBB692:
 958                             	.LBB693:
 959                             		.file 7 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_POOLING_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_POOLING_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** #include "tensorflow/lite/kernels/internal/common.h"
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** #include "tensorflow/lite/kernels/internal/types.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** namespace tflite {
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** namespace reference_ops {
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** inline void AveragePool(const PoolParams& params,
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                         const RuntimeShape& input_shape,
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                         const float* input_data,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                         const RuntimeShape& output_shape, float* output_data) {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(input_shape.DimensionsCount(), 4);
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_height = input_shape.Dims(1);
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_width = input_shape.Dims(2);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_height = output_shape.Dims(1);
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_width = output_shape.Dims(2);
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_height = params.stride_height;
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_width = params.stride_width;
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   for (int batch = 0; batch < batches; ++batch) {
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_y_origin =
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // Compute the boundaries of the filter region clamped so as to
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // ensure that the filter window fits in the input array.
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_start = std::max(0, -in_x_origin);
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_start = std::max(0, -in_y_origin);
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           float total = 0.f;
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           float filter_count = 0;
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             for (int filter_x = filter_x_start; filter_x < filter_x_end;
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_x = in_x_origin + filter_x;
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               total +=
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)];
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               filter_count++;
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             }
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           }
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const float average = total / filter_count;
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           output_data[Offset(output_shape, batch, out_y, out_x, channel)] =
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(average, params.float_activation_min,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                                            params.float_activation_max);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         }
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       }
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     }
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   }
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** }
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** inline void AveragePool(const PoolParams& params,
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                         const RuntimeShape& input_shape,
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                         const uint8_t* input_data,
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                         const RuntimeShape& output_shape,
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                         uint8_t* output_data) {
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_LE(params.quantized_activation_min,
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                    params.quantized_activation_max);
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(input_shape.DimensionsCount(), 4);
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_height = input_shape.Dims(1);
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_width = input_shape.Dims(2);
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_height = output_shape.Dims(1);
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_width = output_shape.Dims(2);
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_height = params.stride_height;
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_width = params.stride_width;
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   for (int batch = 0; batch < batches; ++batch) {
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_y_origin =
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // Compute the boundaries of the filter region clamped so as to
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // ensure that the filter window fits in the input array.
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_start = std::max(0, -in_x_origin);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_start = std::max(0, -in_y_origin);
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           int32_t acc = 0;
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           int filter_count = 0;
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             for (int filter_x = filter_x_start; filter_x < filter_x_end;
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_x = in_x_origin + filter_x;
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               acc +=
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)];
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               filter_count++;
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             }
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           }
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           acc = (acc + filter_count / 2) / filter_count;
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           acc = std::max(acc, params.quantized_activation_min);
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           acc = std::min(acc, params.quantized_activation_max);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           output_data[Offset(output_shape, batch, out_y, out_x, channel)] =
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               static_cast<uint8_t>(acc);
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         }
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       }
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     }
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   }
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** }
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** inline void L2Pool(const PoolParams& params, const RuntimeShape& input_shape,
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                    const float* input_data, const RuntimeShape& output_shape,
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                    float* output_data) {
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(input_shape.DimensionsCount(), 4);
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_height = input_shape.Dims(1);
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_width = input_shape.Dims(2);
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_height = output_shape.Dims(1);
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_width = output_shape.Dims(2);
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_height = params.stride_height;
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_width = params.stride_width;
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   for (int batch = 0; batch < batches; ++batch) {
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_y_origin =
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // Compute the boundaries of the filter region clamped so as to
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // ensure that the filter window fits in the input array.
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_start = std::max(0, -in_x_origin);
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_start = std::max(0, -in_y_origin);
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           float sum_squares = 0.f;
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           int filter_count = 0;
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             for (int filter_x = filter_x_start; filter_x < filter_x_end;
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_x = in_x_origin + filter_x;
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const float val =
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)];
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               sum_squares += val * val;
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               filter_count++;
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             }
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           }
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const float l2pool_result = std::sqrt(sum_squares / filter_count);
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           output_data[Offset(output_shape, batch, out_y, out_x, channel)] =
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(l2pool_result,
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                                            params.float_activation_min,
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                                            params.float_activation_max);
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         }
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       }
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     }
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   }
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** }
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** inline void MaxPool(const PoolParams& params, const RuntimeShape& input_shape,
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                     const float* input_data, const RuntimeShape& output_shape,
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                     float* output_data) {
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(input_shape.DimensionsCount(), 4);
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_height = input_shape.Dims(1);
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_width = input_shape.Dims(2);
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_height = output_shape.Dims(1);
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_width = output_shape.Dims(2);
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_height = params.stride_height;
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_width = params.stride_width;
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   for (int batch = 0; batch < batches; ++batch) {
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_y_origin =
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // Compute the boundaries of the filter region clamped so as to
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // ensure that the filter window fits in the input array.
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_start = std::max(0, -in_x_origin);
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_start = std::max(0, -in_y_origin);
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           float max = std::numeric_limits<float>::lowest();
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             for (int filter_x = filter_x_start; filter_x < filter_x_end;
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_x = in_x_origin + filter_x;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               max = std::max(
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   max,
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)]);
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             }
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           }
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           output_data[Offset(output_shape, batch, out_y, out_x, channel)] =
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(max, params.float_activation_min,
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                                            params.float_activation_max);
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       }
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     }
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   }
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** }
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** 
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h **** inline void MaxPool(const PoolParams& params, const RuntimeShape& input_shape,
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                     const uint8_t* input_data, const RuntimeShape& output_shape,
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                     uint8_t* output_data) {
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_LE(params.quantized_activation_min,
 960                             		.loc 7 243 3 is_stmt 1
 961 008d ED 07 4E                		mov.L	312[r0], r7
 962                             	.LVL113:
 963 0090 ED 0A 44                		mov.L	272[r0], r10
 964                             	.LVL114:
 965 0093 47 A7                   		cmp	r10, r7
 966 0095 2B 05 38 D9 06          		bgt	.L59
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                    params.quantized_activation_max);
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_GE(params.quantized_activation_min, 0);
 967                             		.loc 7 245 3
 968 009a 61 07                   		cmp	#0, r7
 969 009c 28 05 38 D2 06          		blt	.L59
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_LE(params.quantized_activation_max, 255);
 970                             		.loc 7 246 3
 971 00a1 75 5A FF                		cmp	#0xff, r10
 972 00a4 2B 05 38 CA 06          		bgt	.L59
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(input_shape.DimensionsCount(), 4);
 973                             		.loc 7 247 3
 974                             	.LVL115:
 975                             	.LBE693:
 976                             	.LBE692:
 977                             	.LBE687:
 978                             	.LBE686:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 979                             		.loc 5 194 44
 980                             	.LBB827:
 981                             	.LBB817:
 982                             	.LBB803:
 983                             	.LBB793:
 984                             		.loc 7 247 3 is_stmt 0
 985 00a9 AE 8F                   		mov.L	108[r0], r7
 986 00ab 61 47                   		cmp	#4, r7
 987 00ad 3B C3 06                		bne	.L59
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 988                             		.loc 7 248 3 is_stmt 1
 989                             	.LVL116:
 990                             	.LBE793:
 991                             	.LBE803:
 992                             	.LBE817:
 993                             	.LBE827:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 994                             		.loc 5 194 44
 995                             	.LBB828:
 996                             	.LBB818:
 997                             	.LBB804:
 998                             	.LBB794:
 999                             		.loc 7 248 3 is_stmt 0
 1000 00b0 AD 0F                   		mov.L	84[r0], r7
 1001 00b2 61 47                   		cmp	#4, r7
 1002 00b4 3B BC 06                		bne	.L59
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
 1003                             		.loc 7 249 3 is_stmt 1
 1004                             	.LVL117:
 1005                             	.LBB694:
 1006                             	.LBB695:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1007                             		.loc 5 440 3
 1008                             	.LBB696:
 1009                             	.LBB697:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1010                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1011                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1012                             		.loc 5 198 5
 1013                             	.LBE697:
 1014                             	.LBE696:
 1015                             	.LBB698:
 1016                             	.LBB699:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1017                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1018                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1019                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1020                             		.loc 5 198 34 is_stmt 0
 1021 00b7 E5 00 16 54             		mov.L	88[r0], 336[r0]
 1022                             	.LVL118:
 1023                             	.LBE699:
 1024                             	.LBE698:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1025                             		.loc 5 440 3
 1026 00bb ED 01 54                		mov.L	336[r0], r1
 1027 00be 06 85 01 1C             		cmp	112[r0].L, r1
 1028 00c2 3B AE 06                		bne	.L59
 1029                             		.loc 5 441 3 is_stmt 1
 1030                             	.LVL119:
 1031                             	.LBE695:
 1032                             	.LBE694:
 1033                             	.LBE794:
 1034                             	.LBE804:
 1035                             	.LBE818:
 1036                             	.LBE828:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1037                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1038                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1039                             		.loc 5 198 5
 1040                             	.LBB829:
 1041                             	.LBB819:
 1042                             	.LBB805:
 1043                             	.LBB795:
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 1044                             		.loc 7 250 3
 1045                             	.LBB700:
 1046                             	.LBB701:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1047                             		.loc 5 440 3
 1048                             	.LBB702:
 1049                             	.LBB703:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1050                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1051                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1052                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1053                             		.loc 5 198 34 is_stmt 0
 1054 00c5 E5 00 1F 45             		mov.L	124[r0], 276[r0]
 1055                             	.LVL120:
 1056                             	.LBE703:
 1057                             	.LBE702:
 1058                             	.LBB704:
 1059                             	.LBB705:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1060                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1061                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1062                             		.loc 5 198 5
 1063                             	.LBE705:
 1064                             	.LBE704:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1065                             		.loc 5 440 3 is_stmt 0
 1066 00c9 AE 0F                   		mov.L	100[r0], r7
 1067 00cb ED 03 45                		mov.L	276[r0], r3
 1068 00ce 47 37                   		cmp	r3, r7
 1069 00d0 3B A0 06                		bne	.L59
 1070                             		.loc 5 441 3 is_stmt 1
 1071                             	.LVL121:
 1072                             	.LBE701:
 1073                             	.LBE700:
 1074                             	.LBE795:
 1075                             	.LBE805:
 1076                             	.LBE819:
 1077                             	.LBE829:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1078                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1079                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1080                             		.loc 5 198 5
 1081                             	.LBB830:
 1082                             	.LBB820:
 1083                             	.LBB806:
 1084                             	.LBB796:
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_height = input_shape.Dims(1);
 1085                             		.loc 7 251 3
 1086                             	.LBB706:
 1087                             	.LBB707:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1088                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1089                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1090                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1091                             		.loc 5 198 34 is_stmt 0
 1092 00d3 E5 00 1D 5C             		mov.L	116[r0], 368[r0]
 1093                             	.LVL122:
 1094                             	.LBE707:
 1095                             	.LBE706:
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_width = input_shape.Dims(2);
 1096                             		.loc 7 252 3 is_stmt 1
 1097                             	.LBB708:
 1098                             	.LBB709:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1099                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1100                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1101                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1102                             		.loc 5 198 34 is_stmt 0
 1103 00d7 E5 00 1E 57             		mov.L	120[r0], 348[r0]
 1104                             	.LVL123:
 1105                             	.LBE709:
 1106                             	.LBE708:
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_height = output_shape.Dims(1);
 1107                             		.loc 7 253 3 is_stmt 1
 1108                             	.LBB710:
 1109                             	.LBB711:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1110                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1111                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1112                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1113                             		.loc 5 198 34 is_stmt 0
 1114 00db E5 00 17 58             		mov.L	92[r0], 352[r0]
 1115                             	.LVL124:
 1116                             	.LBE711:
 1117                             	.LBE710:
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_width = output_shape.Dims(2);
 1118                             		.loc 7 254 3 is_stmt 1
 1119                             	.LBB712:
 1120                             	.LBB713:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1121                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1122                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1123                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1124                             		.loc 5 198 34 is_stmt 0
 1125 00df E5 00 18 55             		mov.L	96[r0], 340[r0]
 1126                             	.LVL125:
 1127                             	.LBE713:
 1128                             	.LBE712:
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_height = params.stride_height;
 1129                             		.loc 7 255 3 is_stmt 1
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_width = params.stride_width;
 1130                             		.loc 7 256 3
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   for (int batch = 0; batch < batches; ++batch) {
 1131                             		.loc 7 257 3
 1132                             	.LBB714:
 1133                             		.loc 7 257 29 is_stmt 0
 1134 00e3 61 01                   		cmp	#0, r1
 1135 00e5 2A 05 38 71 02          		ble	.L127
 1136                             		.loc 7 257 12
 1137 00ea 66 09                   		mov.L	#0, r9
 1138 00ec ED 01 4E                		mov.L	312[r0], r1
 1139 00ef 5B 11                   		movu.B	r1, r1
 1140 00f1 E7 01 50                		mov.L	r1, 320[r0]
 1141 00f4 ED 02 44                		mov.L	272[r0], r2
 1142 00f7 5B 22                   		movu.B	r2, r2
 1143 00f9 E7 02 51                		mov.L	r2, 324[r0]
 1144 00fc E7 08 52                		mov.L	r8, 328[r0]
 1145 00ff EF 9F                   		mov.L	r9, r15
 1146                             	.LVL126:
 1147                             		.balign 8,3,2
 1148                             	.L93:
 1149                             	.LBB715:
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 1150                             		.loc 7 258 31
 1151 0101 ED 02 58                		mov.L	352[r0], r2
 1152 0104 61 02                   		cmp	#0, r2
 1153 0106 2A 05 38 26 02          		ble	.L95
 1154 010b DD 04 BA                		mov.W	372[r0], r4
 1155 010e E7 04 53                		mov.L	r4, 332[r0]
 1156                             		.loc 7 258 14
 1157 0111 F9 06 3E 00             		mov.L	#0, 248[r0]
 1158 0115 EF 4D                   		mov.L	r4, r13
 1159 0117 7E 1D                   		neg	r13
 1160 0119 EF FE                   		mov.L	r15, r14
 1161                             	.LVL127:
 1162                             		.balign 8,3,2
 1163                             	.L96:
 1164                             	.LBB716:
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 1165                             		.loc 7 259 33
 1166 011b ED 05 55                		mov.L	340[r0], r5
 1167 011e 61 05                   		cmp	#0, r5
 1168 0120 2A 05 38 EB 01          		ble	.L98
 1169 0125 ED 07 5C                		mov.L	368[r0], r7
 1170 0128 06 89 07 53             		add	332[r0], r7
 1171 012c DD 02 B6                		mov.W	364[r0], r2
 1172 012f E7 02 49                		mov.L	r2, 292[r0]
 1173 0132 ED 03 5A                		mov.L	360[r0], r3
 1174 0135 FC 17 73                		min	r7, r3
 1175 0138 E7 03 48                		mov.L	r3, 288[r0]
 1176 013b ED 08 53                		mov.L	332[r0], r8
 1177 013e FD 74 48 00             		max	#0, r8
 1178 0142 7E 12                   		neg	r2
 1179 0144 E7 02 47                		mov.L	r2, 284[r0]
 1180                             		.loc 7 259 16
 1181 0147 66 0F                   		mov.L	#0, r15
 1182 0149 4B D3                   		add	r13, r3
 1183 014b E7 03 4D                		mov.L	r3, 308[r0]
 1184 014e ED 04 4E                		mov.L	312[r0], r4
 1185 0151 CB 04 3C 01             		mov.B	r4, 316[r0]
 1186 0155 EF 87                   		mov.L	r8, r7
 1187 0157 EF D8                   		mov.L	r13, r8
 1188 0159 FC 43 EF                		xchg	r14, r15
 1189 015c EF 7D                   		mov.L	r7, r13
 1190                             	.LVL128:
 1191 015e EF 00                   		.balign 8,3,2
 1192                             	.L99:
 1193                             	.LBB717:
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 1194                             		.loc 7 260 39
 1195 0160 ED 05 45                		mov.L	276[r0], r5
 1196 0163 61 05                   		cmp	#0, r5
 1197 0165 2A 05 38 85 01          		ble	.L112
 1198 016a ED 02 49                		mov.L	292[r0], r2
 1199 016d FD 74 42 00             		max	#0, r2
 1200 0171 E7 02 43                		mov.L	r2, 268[r0]
 1201 0174 ED 07 57                		mov.L	348[r0], r7
 1202 0177 06 89 07 49             		add	292[r0], r7
 1203 017b ED 03 56                		mov.L	344[r0], r3
 1204 017e FC 17 73                		min	r7, r3
 1205 0181 E7 03 46                		mov.L	r3, 280[r0]
 1206 0184 EF 27                   		mov.L	r2, r7
 1207 0186 62 17                   		add	#1, r7
 1208                             	.LBB718:
 1209                             	.LBB719:
 1210                             	.LBB720:
 1211                             	.LBB721:
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_y_origin =
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // Compute the boundaries of the filter region clamped so as to
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           // ensure that the filter window fits in the input array.
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_start = std::max(0, -in_x_origin);
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_start = std::max(0, -in_y_origin);
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           uint8_t max = 0;
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             for (int filter_x = filter_x_start; filter_x < filter_x_end;
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_x = in_x_origin + filter_x;
 1212                             		.loc 7 278 25
 1213 0188 EF 29                   		mov.L	r2, r9
 1214 018a 06 89 09 47             		add	284[r0], r9
 1215                             	.LBE721:
 1216                             	.LBE720:
 1217                             	.LBE719:
 1218                             	.LBE718:
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 1219                             		.loc 7 260 18
 1220 018e 66 0A                   		mov.L	#0, r10
 1221 0190 06 89 07 47             		add	284[r0], r7
 1222 0194 E7 07 4A                		mov.L	r7, 296[r0]
 1223 0197 06 89 03 47             		add	284[r0], r3
 1224 019b E7 03 4B                		mov.L	r3, 300[r0]
 1225 019e FC 43 E8                		xchg	r14, r8
 1226                             	.LVL129:
 1227                             		.balign 8,3,4
 1228                             	.L113:
 1229                             	.LBB761:
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 1230                             		.loc 7 261 11 is_stmt 1
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 1231                             		.loc 7 263 11
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 1232                             		.loc 7 267 11
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 1233                             		.loc 7 268 11
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 1234                             		.loc 7 270 11
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 1235                             		.loc 7 271 11
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 1236                             		.loc 7 273 11
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 1237                             		.loc 7 273 19 is_stmt 0
 1238 01a1 F9 04 F0 00             		mov.B	#0, 240[r0]
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 1239                             		.loc 7 274 11 is_stmt 1
 1240                             	.LVL130:
 1241                             	.LBB747:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 1242                             		.loc 7 274 56 is_stmt 0
 1243 01a5 ED 04 48                		mov.L	288[r0], r4
 1244 01a8 47 D4                   		cmp	r13, r4
 1245 01aa 2A 05 38 FD 05          		ble	.L143
 1246                             	.LBB742:
 1247                             	.LBB736:
 1248                             	.LBB722:
 1249                             	.LBB723:
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 1250                             		.loc 5 389 3
 1251 01af ED 0C 1D                		mov.L	116[r0], r12
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 1252                             		.loc 5 390 3
 1253 01b2 AF 82                   		mov.L	120[r0], r2
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 1254                             		.loc 5 391 3
 1255 01b4 AF 8B                   		mov.L	124[r0], r3
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 1256                             		.loc 5 386 3
 1257 01b6 E5 00 1B 40             		mov.L	108[r0], 256[r0]
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1258                             		.loc 5 392 15
 1259 01ba FF 37 CF                		mul	r12, r15, r7
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 1260                             		.loc 5 388 3
 1261 01bd E5 00 1C 3F             		mov.L	112[r0], 252[r0]
 1262 01c1 4B E7                   		add	r14, r7
 1263 01c3 FF 35 23                		mul	r2, r3, r5
 1264 01c6 E7 05 41                		mov.L	r5, 260[r0]
 1265 01c9 4B D7                   		add	r13, r7
 1266 01cb FF 25 ED                		add	r14, r13, r5
 1267 01ce 4F 27                   		mul	r2, r7
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1268                             		.loc 5 392 15
 1269 01d0 66 04                   		mov	#0, r4
 1270 01d2 4B 97                   		add	r9, r7
 1271 01d4 66 0B                   		mov	#0, r11
 1272 01d6 4F 37                   		mul	r3, r7
 1273 01d8 4B A7                   		add	r10, r7
 1274 01da 06 89 07 4C             		add	304[r0], r7
 1275                             	.LVL131:
 1276 01de EF 00                   		.balign 8,3,2
 1277                             	.L103:
 1278                             	.LBE723:
 1279                             	.LBE722:
 1280                             	.LBE736:
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 1281                             		.loc 7 276 58
 1282 01e0 ED 06 43                		mov.L	268[r0], r6
 1283 01e3 ED 01 46                		mov.L	280[r0], r1
 1284 01e6 47 16                   		cmp	r1, r6
 1285 01e8 28 79                   		bge	.L107
 1286                             	.LBB737:
 1287                             		.loc 7 278 15 is_stmt 1
 1288                             	.LVL132:
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 1289                             		.loc 7 279 15
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               max = std::max(
 1290                             		.loc 7 280 15
 1291                             	.LBB730:
 1292                             	.LBB724:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 1293                             		.loc 5 386 3
 1294                             	.LBE724:
 1295                             	.LBE730:
 1296                             	.LBE737:
 1297                             	.LBE742:
 1298                             	.LBE747:
 1299                             	.LBE761:
 1300                             	.LBE717:
 1301                             	.LBE716:
 1302                             	.LBE715:
 1303                             	.LBE714:
 1304                             	.LBE796:
 1305                             	.LBE806:
 1306                             	.LBE820:
 1307                             	.LBE830:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1308                             		.loc 5 194 44
 1309                             	.LBB831:
 1310                             	.LBB821:
 1311                             	.LBB807:
 1312                             	.LBB797:
 1313                             	.LBB787:
 1314                             	.LBB781:
 1315                             	.LBB775:
 1316                             	.LBB769:
 1317                             	.LBB762:
 1318                             	.LBB748:
 1319                             	.LBB743:
 1320                             	.LBB738:
 1321                             	.LBB731:
 1322                             	.LBB725:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 1323                             		.loc 5 386 3 is_stmt 0
 1324 01ea ED 01 40                		mov.L	256[r0], r1
 1325 01ed 61 41                   		cmp	#4, r1
 1326 01ef 3B 81 05                		bne	.L59
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 1327                             		.loc 5 387 3 is_stmt 1
 1328                             	.LVL133:
 1329                             	.LBE725:
 1330                             	.LBE731:
 1331                             	.LBE738:
 1332                             	.LBE743:
 1333                             	.LBE748:
 1334                             	.LBE762:
 1335                             	.LBE769:
 1336                             	.LBE775:
 1337                             	.LBE781:
 1338                             	.LBE787:
 1339                             	.LBE797:
 1340                             	.LBE807:
 1341                             	.LBE821:
 1342                             	.LBE831:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 1343                             		.loc 5 217 50
 1344                             	.LBB832:
 1345                             	.LBB822:
 1346                             	.LBB808:
 1347                             	.LBB798:
 1348                             	.LBB788:
 1349                             	.LBB782:
 1350                             	.LBB776:
 1351                             	.LBB770:
 1352                             	.LBB763:
 1353                             	.LBB749:
 1354                             	.LBB744:
 1355                             	.LBB739:
 1356                             	.LBB732:
 1357                             	.LBB726:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 1358                             		.loc 5 388 3
 1359 01f2 ED 04 3F                		mov.L	252[r0], r4
 1360 01f5 47 F4                   		cmp	r15, r4
 1361 01f7 2A 05 38 77 05          		ble	.L59
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 1362                             		.loc 5 389 3
 1363 01fc 61 05                   		cmp	#0, r5
 1364 01fe 28 05 38 70 05          		blt	.L59
 1365 0203 47 C5                   		cmp	r12, r5
 1366 0205 29 05 38 69 05          		bge	.L59
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 1367                             		.loc 5 390 3
 1368 020a 61 09                   		cmp	#0, r9
 1369 020c 28 05 38 62 05          		blt	.L59
 1370 0211 47 29                   		cmp	r2, r9
 1371 0213 29 05 38 5B 05          		bge	.L59
 1372 0218 47 A3                   		cmp	r10, r3
 1373 021a 2A 05 38 54 05          		ble	.L59
 1374 021f ED 04 4A                		mov.L	296[r0], r4
 1375 0222 EF 71                   		mov.L	r7, r1
 1376 0224 E7 07 5F                		mov.L	r7, 380[r0]
 1377 0227 2E 17                   		bra	.L105
 1378                             	.LVL134:
 1379                             	.L172:
 1380                             	.LBE726:
 1381                             	.LBE732:
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 1382                             		.loc 7 278 15
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               max = std::max(
 1383                             		.loc 7 279 15
 1384                             		.loc 7 280 15
 1385                             	.LBB733:
 1386                             	.LBB727:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 1387                             		.loc 5 386 3
 1388                             	.LBE727:
 1389                             	.LBE733:
 1390                             	.LBE739:
 1391                             	.LBE744:
 1392                             	.LBE749:
 1393                             	.LBE763:
 1394                             	.LBE770:
 1395                             	.LBE776:
 1396                             	.LBE782:
 1397                             	.LBE788:
 1398                             	.LBE798:
 1399                             	.LBE808:
 1400                             	.LBE822:
 1401                             	.LBE832:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1402                             		.loc 5 194 44
 1403                             	.LBB833:
 1404                             	.LBB823:
 1405                             	.LBB809:
 1406                             	.LBB799:
 1407                             	.LBB789:
 1408                             	.LBB783:
 1409                             	.LBB777:
 1410                             	.LBB771:
 1411                             	.LBB764:
 1412                             	.LBB750:
 1413                             	.LBB745:
 1414                             	.LBB740:
 1415                             	.LBB734:
 1416                             	.LBB728:
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 1417                             		.loc 5 387 3
 1418                             	.LBE728:
 1419                             	.LBE734:
 1420                             	.LBE740:
 1421                             	.LBE745:
 1422                             	.LBE750:
 1423                             	.LBE764:
 1424                             	.LBE771:
 1425                             	.LBE777:
 1426                             	.LBE783:
 1427                             	.LBE789:
 1428                             	.LBE799:
 1429                             	.LBE809:
 1430                             	.LBE823:
 1431                             	.LBE833:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 1432                             		.loc 5 217 50
 1433                             	.LBB834:
 1434                             	.LBB824:
 1435                             	.LBB810:
 1436                             	.LBB800:
 1437                             	.LBB790:
 1438                             	.LBB784:
 1439                             	.LBB778:
 1440                             	.LBB772:
 1441                             	.LBB765:
 1442                             	.LBB751:
 1443                             	.LBB746:
 1444                             	.LBB741:
 1445                             	.LBB735:
 1446                             	.LBB729:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 1447                             		.loc 5 388 3
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 1448                             		.loc 5 389 3
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 1449                             		.loc 5 390 3
 1450 0229 61 04                   		cmp	#0, r4
 1451 022b 28 05 38 43 05          		blt	.L59
 1452 0230 71 46 01                		add	#1, r4, r6
 1453 0233 4B 31                   		add	r3, r1
 1454 0235 47 24                   		cmp	r2, r4
 1455 0237 29 05 38 37 05          		bge	.L59
 1456 023c EF 64                   		mov.L	r6, r4
 1457                             	.LVL135:
 1458                             		.balign 8,3,1
 1459                             	.L105:
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 1460                             		.loc 5 391 3
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1461                             		.loc 5 392 3
 1462 023e C4 10 F4                		mov.B	[r1], 244[r0]
 1463 0241 5B B7                   		movu.B	r11, r7
 1464 0243 59 06 F4                		movu.B	244[r0], r6
 1465 0246 E7 06 42                		mov.L	r6, 264[r0]
 1466 0249 EF 76                   		mov.L	r7, r6
 1467 024b ED 07 42                		mov.L	264[r0], r7
 1468 024e 47 76                   		cmp	r7, r6
 1469 0250 22 05                   		bgeu	.L106
 1470 0252 CD 0B F4                		mov.B	244[r0], r11
 1471                             		.balign 8,3,2
 1472                             	.L106:
 1473                             	.LVL136:
 1474                             	.LBE729:
 1475                             	.LBE735:
 1476                             	.LBE741:
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 1477                             		.loc 7 276 58 is_stmt 0
 1478 0255 ED 06 4B                		mov.L	300[r0], r6
 1479 0258 47 64                   		cmp	r6, r4
 1480 025a 21 CF                   		bne	.L172
 1481 025c ED 07 5F                		mov.L	380[r0], r7
 1482 025f 66 14                   		mov	#1, r4
 1483                             	.LVL137:
 1484                             		.balign 8,3,1
 1485                             	.L107:
 1486 0261 62 15                   		add	#1, r5
 1487                             	.LVL138:
 1488 0263 06 89 07 41             		add	260[r0], r7
 1489                             	.LBE746:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 1490                             		.loc 7 274 56
 1491 0267 ED 06 4D                		mov.L	308[r0], r6
 1492 026a 47 65                   		cmp	r6, r5
 1493 026c 3B 74 FF                		bne	.L103
 1494 026f 5B 44                   		movu.B	r4, r4
 1495 0271 61 04                   		cmp	#0, r4
 1496 0273 15                      		beq	.L109
 1497 0274 C7 0B F0                		mov.B	r11, 240[r0]
 1498 0277 03                      		.balign 8,3,5
 1499                             	.L109:
 1500 0278 CD 04 F0                		mov.B	240[r0], r4
 1501                             	.LVL139:
 1502                             		.balign 8,3,1
 1503                             	.L100:
 1504                             	.LBE751:
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   max,
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)]);
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             }
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           }
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           max = std::max<uint8_t>(max, params.quantized_activation_min);
 1505                             		.loc 7 285 11 is_stmt 1
 1506 027b 5B 45                   		movu.B	r4, r5
 1507 027d CE 07 3C 01             		mov.B	316[r0], r7
 1508 0281 ED 01 50                		mov.L	320[r0], r1
 1509 0284 47 51                   		cmp	r5, r1
 1510 0286 22 04                   		bgeu	.L110
 1511 0288 CF 47                   		mov.B	r4, r7
 1512                             		.balign 8,3,1
 1513                             	.L110:
 1514                             	.LVL140:
 1515 028a 5B 75                   		movu.B	r7, r5
 1516                             		.loc 7 285 15 is_stmt 0
 1517 028c C7 07 F0                		mov.B	r7, 240[r0]
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           max = std::min<uint8_t>(max, params.quantized_activation_max);
 1518                             		.loc 7 286 11 is_stmt 1
 1519                             	.LVL141:
 1520 028f ED 02 44                		mov.L	272[r0], r2
 1521 0292 CF 23                   		mov.B	r2, r3
 1522 0294 ED 04 51                		mov.L	324[r0], r4
 1523 0297 47 54                   		cmp	r5, r4
 1524 0299 25 04                   		bleu	.L111
 1525 029b CF 73                   		mov.B	r7, r3
 1526                             		.balign 8,3,1
 1527                             	.L111:
 1528                             	.LVL142:
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           output_data[Offset(output_shape, batch, out_y, out_x, channel)] =
 1529                             		.loc 7 287 11
 1530                             	.LBB752:
 1531                             	.LBB753:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 1532                             		.loc 5 386 3
 1533                             	.LBE753:
 1534                             	.LBE752:
 1535                             	.LBE765:
 1536                             	.LBE772:
 1537                             	.LBE778:
 1538                             	.LBE784:
 1539                             	.LBE790:
 1540                             	.LBE800:
 1541                             	.LBE810:
 1542                             	.LBE824:
 1543                             	.LBE834:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1544                             		.loc 5 194 44
 1545                             	.LBB835:
 1546                             	.LBB825:
 1547                             	.LBB811:
 1548                             	.LBB801:
 1549                             	.LBB791:
 1550                             	.LBB785:
 1551                             	.LBB779:
 1552                             	.LBB773:
 1553                             	.LBB766:
 1554                             	.LBB757:
 1555                             	.LBB754:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 1556                             		.loc 5 386 3 is_stmt 0
 1557 029d AD 0F                   		mov.L	84[r0], r7
 1558 029f 61 47                   		cmp	#4, r7
 1559 02a1 3B CF 04                		bne	.L59
 1560                             	.LVL143:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 1561                             		.loc 5 388 3
 1562 02a4 AD 87                   		mov.L	88[r0], r7
 1563 02a6 47 F7                   		cmp	r15, r7
 1564 02a8 2A 05 38 C6 04          		ble	.L59
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 1565                             		.loc 5 389 3 is_stmt 1
 1566 02ad AD 8F                   		mov.L	92[r0], r7
 1567 02af ED 05 3E                		mov.L	248[r0], r5
 1568 02b2 47 57                   		cmp	r5, r7
 1569 02b4 2A 05 38 BA 04          		ble	.L59
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 1570                             		.loc 5 390 3
 1571 02b9 AE 05                   		mov.L	96[r0], r5
 1572 02bb 47 85                   		cmp	r8, r5
 1573 02bd 2A 05 38 B1 04          		ble	.L59
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 1574                             		.loc 5 391 3
 1575 02c2 AE 0C                   		mov.L	100[r0], r4
 1576 02c4 47 A4                   		cmp	r10, r4
 1577 02c6 2A 05 38 A8 04          		ble	.L59
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1578                             		.loc 5 392 3
 1579                             	.LVL144:
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1580                             		.loc 5 392 15 is_stmt 0
 1581 02cb 4F F7                   		mul	r15, r7
 1582                             	.LBE754:
 1583                             	.LBE757:
 1584                             		.loc 7 287 75
 1585 02cd ED 02 52                		mov.L	328[r0], r2
 1586 02d0 4B A2                   		add	r10, r2
 1587                             	.LBB758:
 1588                             	.LBB755:
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1589                             		.loc 5 392 30
 1590 02d2 06 89 07 3E             		add	248[r0], r7
 1591                             	.LBE755:
 1592                             	.LBE758:
 1593                             	.LBE766:
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 1594                             		.loc 7 260 9
 1595 02d6 62 1A                   		add	#1, r10
 1596                             	.LVL145:
 1597                             	.LBB767:
 1598                             	.LBB759:
 1599                             	.LBB756:
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1600                             		.loc 5 392 36
 1601 02d8 4F 57                   		mul	r5, r7
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1602                             		.loc 5 392 51
 1603 02da 4B 87                   		add	r8, r7
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 1604                             		.loc 5 392 57
 1605 02dc 4F 47                   		mul	r4, r7
 1606                             	.LBE756:
 1607                             	.LBE759:
 1608                             		.loc 7 287 75
 1609 02de FE 07 23                		mov.B	r3, [r7,r2]
 1610                             	.LBE767:
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 1611                             		.loc 7 260 39
 1612 02e1 ED 06 45                		mov.L	276[r0], r6
 1613 02e4 47 6A                   		cmp	r6, r10
 1614 02e6 3B BB FE                		bne	.L113
 1615 02e9 FC 43 8E                		xchg	r8, r14
 1616                             	.LVL146:
 1617                             		.balign 8,3,1
 1618                             	.L112:
 1619                             	.LBE773:
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 1620                             		.loc 7 259 7
 1621 02ec 62 1E                   		add	#1, r14
 1622                             	.LVL147:
 1623 02ee ED 06 49                		mov.L	292[r0], r6
 1624 02f1 ED 07 59                		mov.L	356[r0], r7
 1625 02f4 43 76                   		sub	r7, r6
 1626 02f6 E7 06 49                		mov.L	r6, 292[r0]
 1627 02f9 ED 0A 47                		mov.L	284[r0], r10
 1628 02fc 4B 7A                   		add	r7, r10
 1629 02fe E7 0A 47                		mov.L	r10, 284[r0]
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 1630                             		.loc 7 259 33
 1631 0301 ED 01 55                		mov.L	340[r0], r1
 1632 0304 47 1E                   		cmp	r1, r14
 1633 0306 3B 5A FE                		bne	.L99
 1634 0309 EF 8D                   		mov.L	r8, r13
 1635 030b EF FE                   		mov.L	r15, r14
 1636                             	.LVL148:
 1637                             		.balign 8,3,2
 1638                             	.L98:
 1639                             	.LBE779:
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 1640                             		.loc 7 258 5
 1641 030d ED 06 3E                		mov.L	248[r0], r6
 1642 0310 62 16                   		add	#1, r6
 1643 0312 E7 06 3E                		mov.L	r6, 248[r0]
 1644                             	.LVL149:
 1645 0315 06 89 0D 5E             		add	376[r0], r13
 1646 0319 ED 07 53                		mov.L	332[r0], r7
 1647 031c ED 0A 5E                		mov.L	376[r0], r10
 1648 031f 43 A7                   		sub	r10, r7
 1649 0321 E7 07 53                		mov.L	r7, 332[r0]
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 1650                             		.loc 7 258 31
 1651 0324 ED 01 58                		mov.L	352[r0], r1
 1652 0327 47 16                   		cmp	r1, r6
 1653 0329 3B F2 FD                		bne	.L96
 1654 032c EF EF                   		mov.L	r14, r15
 1655                             	.LVL150:
 1656                             		.balign 8,3,1
 1657                             	.L95:
 1658                             	.LBE785:
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 1659                             		.loc 7 257 3
 1660 032e 62 1F                   		add	#1, r15
 1661                             	.LVL151:
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 1662                             		.loc 7 257 29
 1663 0330 ED 03 54                		mov.L	336[r0], r3
 1664 0333 47 3F                   		cmp	r3, r15
 1665 0335 3B CC FD                		bne	.L93
 1666                             	.LVL152:
 1667                             	.LBE791:
 1668                             	.LBE801:
 1669                             	.LBE811:
 1670                             	.LBB812:
 1671                             	.LBB813:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1672                             		.loc 5 185 5 is_stmt 1
 1673 0338 AD 0F                   		mov.L	84[r0], r7
 1674 033a 61 57                   		cmp	#5, r7
 1675 033c 2B 0C                   		ble	.L177
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1676                             		.loc 5 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1677                             		.loc 5 189 16 is_stmt 0
 1678 033e AD 81                   		mov.L	88[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1679                             		.loc 5 189 29
 1680 0340 61 01                   		cmp	#0, r1
 1681 0342 16                      		beq	.L177
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1682                             		.loc 5 189 16
 1683 0343 05 00 00 00             		bsr	__ZdaPv
 1684                             	.LVL153:
 1685 0347 03                      		.balign 8,3,1
 1686                             	.L177:
 1687 0348 AE 8F                   		mov.L	108[r0], r7
 1688                             	.LVL154:
 1689                             	.LBE813:
 1690                             	.LBE812:
 1691                             	.LBB814:
 1692                             	.LBB815:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1693                             		.loc 5 185 5 is_stmt 1
 1694 034a 61 57                   		cmp	#5, r7
 1695 034c 2B 0C                   		ble	.L127
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1696                             		.loc 5 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1697                             		.loc 5 189 16 is_stmt 0
 1698 034e AF 01                   		mov.L	112[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1699                             		.loc 5 189 29
 1700 0350 61 01                   		cmp	#0, r1
 1701 0352 16                      		beq	.L127
 1702                             	.LBE815:
 1703                             	.LBE814:
 1704                             	.LBE825:
 1705                             	.LBE835:
 1706                             	.LBB836:
 1707                             	.LBB837:
 1708                             	.LBB838:
 1709                             	.LBB839:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1710                             		.loc 5 189 16
 1711 0353 05 00 00 00             		bsr	__ZdaPv
 1712                             	.LVL155:
 1713 0357 03                      		.balign 8,3,1
 1714                             	.L127:
 1715                             	.LBE839:
 1716                             	.LBE838:
 1717                             	.LBE837:
 1718                             	.LBE836:
 368:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 1719                             		.loc 1 368 10
 1720 0358 66 01                   		mov.L	#0, r1
 1721                             		.balign 8,3,2
 1722                             	.L181:
 1723                             		.loc 1 369 1
 1724 035a 3F 6D 6A                		rtsd	#424, r6-r13
 1725                             	.LVL156:
 1726                             	.L180:
 354:../src/tensorflow/lite/micro/kernels/pooling.cc ****       MaxEvalFloat(context, node, params, data, input, output);
 1727                             		.loc 1 354 5 is_stmt 1
 355:../src/tensorflow/lite/micro/kernels/pooling.cc ****       break;
 1728                             		.loc 1 355 7
 1729                             	.LBB881:
 1730                             	.LBB882:
 171:../src/tensorflow/lite/micro/kernels/pooling.cc ****   CalculateActivationRange(params->activation, &activation_min,
 1731                             		.loc 1 171 3
 172:../src/tensorflow/lite/micro/kernels/pooling.cc ****                            &activation_max);
 1732                             		.loc 1 172 3
 172:../src/tensorflow/lite/micro/kernels/pooling.cc ****                            &activation_max);
 1733                             		.loc 1 172 27 is_stmt 0
 1734 035d A9 6D                   		mov.L	20[r6], r5
 1735                             	.LVL157:
 1736                             	.LBB883:
 1737                             	.LBB884:
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumIntermediates(const TfLiteNode* node) {
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return node->intermediates->size;
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int64_t NumElements(const TfLiteIntArray* dims) {
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   int64_t count = 1;
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   for (int i = 0; i < dims->size; ++i) {
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   }
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return count;
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int64_t NumElements(const TfLiteTensor* t) {
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return NumElements(t->dims);
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Determines whether tensor is constant.
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // TODO(b/138199592): Introduce new query which checks for constant OR
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // persistent-read-only, which would be useful for most tensor kernels that
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // are potentially dynamic based on the input tensor value availability at the
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // time of prepare.
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline bool IsConstantTensor(const TfLiteTensor* tensor) {
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return tensor->allocation_type == kTfLiteMmapRo;
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Determines whether tensor is dynamic. Note that a tensor can be non-const and
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // not dynamic. This function specifically checks for a dynamic tensor.
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline bool IsDynamicTensor(const TfLiteTensor* tensor) {
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return tensor->allocation_type == kTfLiteDynamic;
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Sets tensor to dynamic.
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline void SetTensorToDynamic(TfLiteTensor* tensor) {
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   if (tensor->allocation_type != kTfLiteDynamic) {
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     tensor->allocation_type = kTfLiteDynamic;
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     tensor->data.raw = nullptr;
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   }
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Sets tensor to persistent and read-only.
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline void SetTensorToPersistentRo(TfLiteTensor* tensor) {
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   if (tensor->allocation_type != kTfLitePersistentRo) {
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     tensor->allocation_type = kTfLitePersistentRo;
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     tensor->data.raw = nullptr;
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   }
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Determines whether it is a hybrid op - one that has float inputs and
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // quantized weights.
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline bool IsHybridOp(const TfLiteTensor* input, const TfLiteTensor* weight) {
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return ((weight->type == kTfLiteUInt8 || weight->type == kTfLiteInt8) &&
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****           input->type == kTfLiteFloat32);
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Check dimensionality match and populate OpData for Conv and DepthwiseConv.
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus PopulateConvolutionQuantizationParams(
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     TfLiteContext* context, const TfLiteTensor* input,
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     const TfLiteTensor* filter, const TfLiteTensor* bias, TfLiteTensor* output,
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     const TfLiteFusedActivation& activation, int32_t* multiplier, int* shift,
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     int32_t* output_activation_min, int32_t* output_activation_max,
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     int32_t* per_channel_multiplier, int* per_channel_shift);
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus PopulateConvolutionQuantizationParams(
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     TfLiteContext* context, const TfLiteTensor* input,
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     const TfLiteTensor* filter, const TfLiteTensor* bias, TfLiteTensor* output,
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     const TfLiteFusedActivation& activation, int32_t* multiplier, int* shift,
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     int32_t* output_activation_min, int32_t* output_activation_max,
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     int32_t* per_channel_multiplier, int* per_channel_shift, int num_channels);
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Calculates the multiplication factor for a quantized convolution (or
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // quantized depthwise convolution) involving the given tensors. Returns an
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // error if the scales of the tensors are not compatible.
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetQuantizedConvolutionMultipler(TfLiteContext* context,
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* input,
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* filter,
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* bias,
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               TfLiteTensor* output,
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               double* multiplier);
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetQuantizedConvolutionMultipler(TfLiteContext* context,
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* input,
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               const TfLiteTensor* filter,
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               TfLiteTensor* output,
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                               double* multiplier);
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Calculates the useful quantized range of an activation layer given its
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // activation tensor.
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus CalculateActivationRangeQuantized(TfLiteContext* context,
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                                TfLiteFusedActivation activation,
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                                TfLiteTensor* output,
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                                int32_t* act_min,
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                                int32_t* act_max);
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Calculates the useful range of an activation layer given its activation
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.a
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** template <typename T>
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** void CalculateActivationRange(TfLiteFusedActivation activation,
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               T* activation_min, T* activation_max) {
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   if (activation == kTfLiteActRelu) {
 1738                             		.loc 2 255 3
 1739 035f 61 15                   		cmp	#1, r5
 1740 0361 3A 13 04                		beq	.L136
 1741                             	.LVL158:
 1742                             	.LBB885:
 1743                             	.LBB886:
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = 0;
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActRelu6) {
 1744                             		.loc 2 258 10
 1745 0364 61 35                   		cmp	#3, r5
 1746 0366 3A 6D 04                		beq	.L137
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = 0;
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 6;
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActReluN1To1) {
 1747                             		.loc 2 261 10
 1748 0369 61 25                   		cmp	#2, r5
 1749 036b 3A 76 04                		beq	.L138
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = -1;
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 1;
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else {
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = std::numeric_limits<T>::lowest();
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 1750                             		.loc 2 266 5
 1751 036e F9 02 46 FF FF 7F 7F    		mov.L	#0x7f7fffff, 280[r0]
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 1752                             		.loc 2 265 5
 1753 0375 F9 02 45 FF FF 7F FF    		mov.L	#0xff7fffff, 276[r0]
 1754                             	.LVL159:
 1755                             		.balign 8,3,3
 1756                             	.L57:
 1757                             	.LBE886:
 1758                             	.LBE885:
 1759                             	.LBE884:
 1760                             	.LBE883:
 174:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_height = params->stride_height;
 1761                             		.loc 1 174 3 is_stmt 1
 175:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_width = params->stride_width;
 1762                             		.loc 1 175 3
 183:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<float>(input),
 1763                             		.loc 1 183 66 is_stmt 0
 1764 037c 72 0F 9C 00             		add	#0x9c, r0, r15
 1765 0380 EF 71                   		mov.L	r7, r1
 175:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_width = params->stride_width;
 1766                             		.loc 1 175 37
 1767 0382 E5 60 02 5F             		mov.L	8[r6], 380[r0]
 1768                             	.LVL160:
 176:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_height = params->filter_height;
 1769                             		.loc 1 176 3 is_stmt 1
 176:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_height = params->filter_height;
 1770                             		.loc 1 176 36 is_stmt 0
 1771 0386 E5 60 01 59             		mov.L	4[r6], 356[r0]
 1772                             	.LVL161:
 177:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_width = params->filter_width;
 1773                             		.loc 1 177 3 is_stmt 1
 177:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_width = params->filter_width;
 1774                             		.loc 1 177 37 is_stmt 0
 1775 038a E5 60 04 5C             		mov.L	16[r6], 368[r0]
 1776                             	.LVL162:
 178:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.height = data.padding.height;
 1777                             		.loc 1 178 3 is_stmt 1
 178:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.height = data.padding.height;
 1778                             		.loc 1 178 36 is_stmt 0
 1779 038e E5 60 03 54             		mov.L	12[r6], 336[r0]
 1780                             	.LVL163:
 179:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.width = data.padding.width;
 1781                             		.loc 1 179 3 is_stmt 1
 179:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.width = data.padding.width;
 1782                             		.loc 1 179 35 is_stmt 0
 1783 0392 D5 A0 02 BC             		mov.W	4[r10], 376[r0]
 1784                             	.LVL164:
 180:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_min = activation_min;
 1785                             		.loc 1 180 3 is_stmt 1
 180:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_min = activation_min;
 1786                             		.loc 1 180 34 is_stmt 0
 1787 0396 D4 A0 BA                		mov.W	[r10], 372[r0]
 1788                             	.LVL165:
 181:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_max = activation_max;
 1789                             		.loc 1 181 3 is_stmt 1
 182:../src/tensorflow/lite/micro/kernels/pooling.cc ****   reference_ops::MaxPool(op_params, tflite::micro::GetTensorShape(input),
 1790                             		.loc 1 182 3
 183:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<float>(input),
 1791                             		.loc 1 183 3
 183:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<float>(input),
 1792                             		.loc 1 183 66 is_stmt 0
 1793 0399 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1794                             	.LVL166:
 185:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<float>(output));
 1795                             		.loc 1 185 55
 1796 039d 72 0F 84 00             		add	#0x84, r0, r15
 1797 03a1 EF 81                   		mov.L	r8, r1
 1798                             	.LBB891:
 1799                             	.LBB892:
 1800                             		.loc 6 62 53
 1801 03a3 E4 70 4E                		mov.L	[r7], 312[r0]
 1802                             	.LVL167:
 1803                             	.LBE892:
 1804                             	.LBE891:
 185:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          tflite::micro::GetTensorData<float>(output));
 1805                             		.loc 1 185 55
 1806 03a6 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1807                             	.LVL168:
 1808                             	.LBB893:
 1809                             	.LBB894:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1810                             		.loc 6 55 28
 1811 03aa 61 08                   		cmp	#0, r8
 1812 03ac 14                      		beq	.L58
 1813 03ad EC 88                   		mov.L	[r8], r8
 1814                             	.LVL169:
 1815 03af 03                      		.balign 8,3,2
 1816                             	.L58:
 1817                             	.LBE894:
 1818                             	.LBE893:
 1819                             	.LBB895:
 1820                             	.LBB896:
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 1821                             		.loc 7 193 3 is_stmt 1
 1822                             	.LBE896:
 1823                             	.LBE895:
 1824                             	.LBE882:
 1825                             	.LBE881:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1826                             		.loc 5 194 44
 1827                             	.LBB1045:
 1828                             	.LBB1033:
 1829                             	.LBB1020:
 1830                             	.LBB1009:
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 1831                             		.loc 7 193 3 is_stmt 0
 1832 03b0 ED 07 27                		mov.L	156[r0], r7
 1833                             	.LVL170:
 1834 03b3 61 47                   		cmp	#4, r7
 1835 03b5 3B BB 03                		bne	.L59
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
 1836                             		.loc 7 194 3 is_stmt 1
 1837                             	.LVL171:
 1838                             	.LBE1009:
 1839                             	.LBE1020:
 1840                             	.LBE1033:
 1841                             	.LBE1045:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1842                             		.loc 5 194 44
 1843                             	.LBB1046:
 1844                             	.LBB1034:
 1845                             	.LBB1021:
 1846                             	.LBB1010:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
 1847                             		.loc 7 194 3 is_stmt 0
 1848 03b8 ED 07 21                		mov.L	132[r0], r7
 1849 03bb 61 47                   		cmp	#4, r7
 1850 03bd 3B B3 03                		bne	.L59
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 1851                             		.loc 7 195 3 is_stmt 1
 1852                             	.LVL172:
 1853                             	.LBB897:
 1854                             	.LBB898:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1855                             		.loc 5 440 3
 1856                             	.LBB899:
 1857                             	.LBB900:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1858                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1859                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1860                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1861                             		.loc 5 198 34 is_stmt 0
 1862 03c0 E5 00 28 44             		mov.L	160[r0], 272[r0]
 1863                             	.LVL173:
 1864                             	.LBE900:
 1865                             	.LBE899:
 1866                             	.LBB901:
 1867                             	.LBB902:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1868                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1869                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1870                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1871                             		.loc 5 198 34 is_stmt 0
 1872 03c4 E5 00 22 3F             		mov.L	136[r0], 252[r0]
 1873                             	.LVL174:
 1874                             	.LBE902:
 1875                             	.LBE901:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1876                             		.loc 5 440 3
 1877 03c8 ED 01 3F                		mov.L	252[r0], r1
 1878 03cb ED 02 44                		mov.L	272[r0], r2
 1879 03ce 47 21                   		cmp	r2, r1
 1880 03d0 3B A0 03                		bne	.L59
 1881                             		.loc 5 441 3 is_stmt 1
 1882                             	.LVL175:
 1883                             	.LBE898:
 1884                             	.LBE897:
 1885                             	.LBE1010:
 1886                             	.LBE1021:
 1887                             	.LBE1034:
 1888                             	.LBE1046:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1889                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1890                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1891                             		.loc 5 198 5
 1892                             	.LBB1047:
 1893                             	.LBB1035:
 1894                             	.LBB1022:
 1895                             	.LBB1011:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_height = input_shape.Dims(1);
 1896                             		.loc 7 196 3
 1897                             	.LBB903:
 1898                             	.LBB904:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1899                             		.loc 5 440 3
 1900                             	.LBB905:
 1901                             	.LBB906:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1902                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1903                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1904                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1905                             		.loc 5 198 34 is_stmt 0
 1906 03d3 ED 0E 2B                		mov.L	172[r0], r14
 1907                             	.LVL176:
 1908                             	.LBE906:
 1909                             	.LBE905:
 1910                             	.LBB907:
 1911                             	.LBB908:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1912                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1913                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1914                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1915                             		.loc 5 198 34 is_stmt 0
 1916 03d6 ED 0F 25                		mov.L	148[r0], r15
 1917                             	.LVL177:
 1918                             	.LBE908:
 1919                             	.LBE907:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 1920                             		.loc 5 440 3
 1921 03d9 47 EF                   		cmp	r14, r15
 1922 03db 3B 95 03                		bne	.L59
 1923                             		.loc 5 441 3 is_stmt 1
 1924                             	.LVL178:
 1925                             	.LBE904:
 1926                             	.LBE903:
 1927                             	.LBE1011:
 1928                             	.LBE1022:
 1929                             	.LBE1035:
 1930                             	.LBE1047:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1931                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1932                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1933                             		.loc 5 198 5
 1934                             	.LBB1048:
 1935                             	.LBB1036:
 1936                             	.LBB1023:
 1937                             	.LBB1012:
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_width = input_shape.Dims(2);
 1938                             		.loc 7 197 3
 1939                             	.LBB909:
 1940                             	.LBB910:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1941                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1942                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1943                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1944                             		.loc 5 198 34 is_stmt 0
 1945 03de E5 00 29 43             		mov.L	164[r0], 268[r0]
 1946                             	.LVL179:
 1947                             	.LBE910:
 1948                             	.LBE909:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_height = output_shape.Dims(1);
 1949                             		.loc 7 198 3 is_stmt 1
 1950                             	.LBB911:
 1951                             	.LBB912:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1952                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1953                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1954                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1955                             		.loc 5 198 34 is_stmt 0
 1956 03e2 ED 0D 2A                		mov.L	168[r0], r13
 1957                             	.LVL180:
 1958                             	.LBE912:
 1959                             	.LBE911:
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_width = output_shape.Dims(2);
 1960                             		.loc 7 199 3 is_stmt 1
 1961                             	.LBB913:
 1962                             	.LBB914:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1963                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1964                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1965                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1966                             		.loc 5 198 34 is_stmt 0
 1967 03e5 E5 00 23 40             		mov.L	140[r0], 256[r0]
 1968                             	.LVL181:
 1969                             	.LBE914:
 1970                             	.LBE913:
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_height = params.stride_height;
 1971                             		.loc 7 200 3 is_stmt 1
 1972                             	.LBB915:
 1973                             	.LBB916:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1974                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1975                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1976                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1977                             		.loc 5 198 34 is_stmt 0
 1978 03e9 E5 00 24 3D             		mov.L	144[r0], 244[r0]
 1979                             	.LVL182:
 1980                             	.LBE916:
 1981                             	.LBE915:
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_width = params.stride_width;
 1982                             		.loc 7 201 3 is_stmt 1
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   for (int batch = 0; batch < batches; ++batch) {
 1983                             		.loc 7 202 3
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 1984                             		.loc 7 203 3
 1985                             	.LBB917:
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 1986                             		.loc 7 203 29 is_stmt 0
 1987 03ed 61 01                   		cmp	#0, r1
 1988 03ef 2A 05 38 67 FF          		ble	.L127
 1989 03f4 ED 05 40                		mov.L	256[r0], r5
 1990 03f7 ED 03 3D                		mov.L	244[r0], r3
 1991 03fa 4F 35                   		mul	r3, r5
 1992 03fc 4F F5                   		mul	r15, r5
 1993 03fe EF 3A                   		mov.L	r3, r10
 1994                             	.LVL183:
 1995 0400 4F FA                   		mul	r15, r10
 1996 0402 FF 37 DF                		mul	r13, r15, r7
 1997 0405 6C 25                   		shll	#2, r5
 1998 0407 E7 05 61                		mov.L	r5, 388[r0]
 1999 040a FD C2 A4                		shll	#2, r10, r4
 2000 040d E7 04 60                		mov.L	r4, 384[r0]
 2001 0410 FD C2 F5                		shll	#2, r15, r5
 2002 0413 E7 05 41                		mov.L	r5, 260[r0]
 2003 0416 6C 27                   		shll	#2, r7
 2004 0418 E7 07 50                		mov.L	r7, 320[r0]
 2005 041b F9 06 5A 00             		mov.L	#0, 360[r0]
 2006 041f F9 06 5B 00             		mov.L	#0, 364[r0]
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 2007                             		.loc 7 203 12
 2008 0423 F9 06 56 00             		mov.L	#0, 344[r0]
 2009                             	.LBB918:
 2010                             	.LBB919:
 2011                             	.LBB920:
 2012                             	.LBB921:
 2013                             	.LBB922:
 2014                             	.LBB923:
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 2015                             		.loc 7 222 58
 2016 0427 E7 08 58                		mov.L	r8, 352[r0]
 2017 042a E7 0F 51                		mov.L	r15, 324[r0]
 2018 042d EF EF                   		mov.L	r14, r15
 2019 042f EF DE                   		mov.L	r13, r14
 2020                             	.LVL184:
 2021                             		.balign 8,3,2
 2022                             	.L63:
 2023                             	.LBE923:
 2024                             	.LBE922:
 2025                             	.LBE921:
 2026                             	.LBE920:
 2027                             	.LBE919:
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 2028                             		.loc 7 204 31
 2029 0431 ED 06 40                		mov.L	256[r0], r6
 2030 0434 61 06                   		cmp	#0, r6
 2031 0436 2A 05 38 00 02          		ble	.L65
 2032 043b DD 03 BC                		mov.W	376[r0], r3
 2033 043e E7 03 52                		mov.L	r3, 328[r0]
 2034 0441 E5 00 5B 57             		mov.L	364[r0], 348[r0]
 2035 0445 7E 13                   		neg	r3
 2036 0447 E7 03 3E                		mov.L	r3, 248[r0]
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 2037                             		.loc 7 204 14
 2038 044a F9 06 4D 00             		mov.L	#0, 308[r0]
 2039 044e EF F8                   		mov.L	r15, r8
 2040                             	.LVL185:
 2041                             		.balign 8,3,2
 2042                             	.L66:
 2043                             	.LBB987:
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 2044                             		.loc 7 205 33
 2045 0450 ED 04 3D                		mov.L	244[r0], r4
 2046 0453 61 04                   		cmp	#0, r4
 2047 0455 2A 05 38 AE 01          		ble	.L68
 2048 045a ED 0F 52                		mov.L	328[r0], r15
 2049 045d FD 74 4F 00             		max	#0, r15
 2050 0461 ED 07 43                		mov.L	268[r0], r7
 2051 0464 06 89 07 52             		add	328[r0], r7
 2052 0468 ED 04 5C                		mov.L	368[r0], r4
 2053 046b FC 17 74                		min	r7, r4
 2054 046e E7 04 48                		mov.L	r4, 288[r0]
 2055 0471 ED 07 5A                		mov.L	360[r0], r7
 2056 0474 06 89 07 3E             		add	248[r0], r7
 2057 0478 DD 05 BA                		mov.W	372[r0], r5
 2058 047b E7 05 49                		mov.L	r5, 292[r0]
 2059 047e 4B F7                   		add	r15, r7
 2060 0480 7E 15                   		neg	r5
 2061 0482 E7 05 47                		mov.L	r5, 284[r0]
 2062 0485 4F E7                   		mul	r14, r7
 2063 0487 E7 07 55                		mov.L	r7, 340[r0]
 2064 048a E5 00 57 53             		mov.L	348[r0], 332[r0]
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 2065                             		.loc 7 205 16
 2066 048e F9 06 42 00             		mov.L	#0, 264[r0]
 2067 0492 06 89 04 3E             		add	248[r0], r4
 2068 0496 E7 04 4F                		mov.L	r4, 316[r0]
 2069 0499 ED 0D 56                		mov.L	344[r0], r13
 2070                             	.LVL186:
 2071                             		.balign 8,3,1
 2072                             	.L69:
 2073                             	.LBB979:
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 2074                             		.loc 7 206 39
 2075 049c 61 08                   		cmp	#0, r8
 2076 049e 2A 05 38 38 01          		ble	.L86
 2077 04a3 ED 09 49                		mov.L	292[r0], r9
 2078 04a6 FD 74 49 00             		max	#0, r9
 2079 04aa ED 0C 49                		mov.L	292[r0], r12
 2080 04ad 4B EC                   		add	r14, r12
 2081 04af ED 04 54                		mov.L	336[r0], r4
 2082 04b2 FC 17 4C                		min	r4, r12
 2083                             	.LBB968:
 2084                             	.LBB950:
 2085                             	.LBB944:
 2086                             	.LBB924:
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 2087                             		.loc 7 224 25
 2088 04b5 ED 0B 47                		mov.L	284[r0], r11
 2089 04b8 4B 9B                   		add	r9, r11
 2090 04ba ED 0A 55                		mov.L	340[r0], r10
 2091 04bd 4B BA                   		add	r11, r10
 2092 04bf ED 01 58                		mov.L	352[r0], r1
 2093 04c2 06 89 01 53             		add	332[r0], r1
 2094 04c6 ED 05 41                		mov.L	260[r0], r5
 2095 04c9 4F 5A                   		mul	r5, r10
 2096 04cb 71 97 01                		add	#1, r9, r7
 2097 04ce FF 06 1A                		sub	r1, r10, r6
 2098 04d1 E7 06 4A                		mov.L	r6, 296[r0]
 2099                             	.LBE924:
 2100                             	.LBE944:
 2101                             	.LBE950:
 2102                             	.LBE968:
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 2103                             		.loc 7 206 18
 2104 04d4 66 05                   		mov.L	#0, r5
 2105 04d6 06 89 07 47             		add	284[r0], r7
 2106 04da E7 07 4B                		mov.L	r7, 300[r0]
 2107 04dd ED 07 47                		mov.L	284[r0], r7
 2108 04e0 4B C7                   		add	r12, r7
 2109 04e2 E7 07 4C                		mov.L	r7, 304[r0]
 2110                             	.LVL187:
 2111                             	.L70:
 2112                             	.LBB969:
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
 2113                             		.loc 7 207 11 is_stmt 1
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 2114                             		.loc 7 209 11
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 2115                             		.loc 7 213 11
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 2116                             		.loc 7 214 11
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 2117                             		.loc 7 216 11
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 2118                             		.loc 7 217 11
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 2119                             		.loc 7 219 11
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 2120                             		.loc 7 219 17 is_stmt 0
 2121 04e5 F9 02 3B FF FF 7F FF    		mov.L	#0xff7fffff, 236[r0]
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 2122                             		.loc 7 220 11 is_stmt 1
 2123                             	.LVL188:
 2124                             	.LBB951:
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 2125                             		.loc 7 220 56 is_stmt 0
 2126 04ec ED 0A 48                		mov.L	288[r0], r10
 2127 04ef 47 AF                   		cmp	r10, r15
 2128 04f1 29 05 38 AD 02          		bge	.L139
 2129                             	.LVL189:
 2130 04f6 EF 00                   		.balign 8,3,2
 2131                             	.L185:
 2132 04f8 ED 04 4A                		mov.L	296[r0], r4
 2133 04fb 4B 14                   		add	r1, r4
 2134 04fd ED 07 3E                		mov.L	248[r0], r7
 2135 0500 4B F7                   		add	r15, r7
 2136 0502 66 0A                   		mov	#0, r10
 2137 0504 FB 32 FF FF 7F FF       		mov.L	#0xff7fffff, r3
 2138                             		.balign 8,3,1
 2139                             	.L74:
 2140                             	.LVL190:
 2141                             	.LBB945:
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 2142                             		.loc 7 222 58
 2143 050a 47 C9                   		cmp	r12, r9
 2144 050c 28 66                   		bge	.L81
 2145                             	.LBB939:
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 2146                             		.loc 7 224 15 is_stmt 1
 2147                             	.LVL191:
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               max = std::max(
 2148                             		.loc 7 225 15
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   max,
 2149                             		.loc 7 226 15
 2150                             	.LBB925:
 2151                             	.LBB926:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 2152                             		.loc 5 386 3
 2153                             	.LBE926:
 2154                             	.LBE925:
 2155                             	.LBE939:
 2156                             	.LBE945:
 2157                             	.LBE951:
 2158                             	.LBE969:
 2159                             	.LBE979:
 2160                             	.LBE987:
 2161                             	.LBE918:
 2162                             	.LBE917:
 2163                             	.LBE1012:
 2164                             	.LBE1023:
 2165                             	.LBE1036:
 2166                             	.LBE1048:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2167                             		.loc 5 194 44
 2168                             	.LBB1049:
 2169                             	.LBB1037:
 2170                             	.LBB1024:
 2171                             	.LBB1013:
 2172                             	.LBB1002:
 2173                             	.LBB995:
 2174                             	.LBB988:
 2175                             	.LBB980:
 2176                             	.LBB970:
 2177                             	.LBB952:
 2178                             	.LBB946:
 2179                             	.LBB940:
 2180                             	.LBB932:
 2181                             	.LBB927:
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 2182                             		.loc 5 387 3
 2183                             	.LBE927:
 2184                             	.LBE932:
 2185                             	.LBE940:
 2186                             	.LBE946:
 2187                             	.LBE952:
 2188                             	.LBE970:
 2189                             	.LBE980:
 2190                             	.LBE988:
 2191                             	.LBE995:
 2192                             	.LBE1002:
 2193                             	.LBE1013:
 2194                             	.LBE1024:
 2195                             	.LBE1037:
 2196                             	.LBE1049:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 2197                             		.loc 5 217 50
 2198                             	.LBB1050:
 2199                             	.LBB1038:
 2200                             	.LBB1025:
 2201                             	.LBB1014:
 2202                             	.LBB1003:
 2203                             	.LBB996:
 2204                             	.LBB989:
 2205                             	.LBB981:
 2206                             	.LBB971:
 2207                             	.LBB953:
 2208                             	.LBB947:
 2209                             	.LBB941:
 2210                             	.LBB933:
 2211                             	.LBB928:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 2212                             		.loc 5 388 3
 2213 050e ED 06 44                		mov.L	272[r0], r6
 2214 0511 47 D6                   		cmp	r13, r6
 2215 0513 2A 05 38 5B 02          		ble	.L59
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 2216                             		.loc 5 389 3
 2217 0518 61 07                   		cmp	#0, r7
 2218 051a 28 05 38 54 02          		blt	.L59
 2219 051f ED 0A 43                		mov.L	268[r0], r10
 2220 0522 47 7A                   		cmp	r7, r10
 2221 0524 2A 05 38 4A 02          		ble	.L59
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 2222                             		.loc 5 390 3
 2223 0529 61 0B                   		cmp	#0, r11
 2224 052b 28 05 38 43 02          		blt	.L59
 2225 0530 47 BE                   		cmp	r11, r14
 2226 0532 2A 05 38 3C 02          		ble	.L59
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 2227                             		.loc 5 391 3
 2228 0537 47 58                   		cmp	r5, r8
 2229 0539 2A 05 38 35 02          		ble	.L59
 2230 053e ED 0A 4B                		mov.L	300[r0], r10
 2231 0541 ED 02 4E                		mov.L	312[r0], r2
 2232 0544 4B 42                   		add	r4, r2
 2233 0546 2E 1A                   		bra	.L78
 2234                             	.LVL192:
 2235                             	.L171:
 2236                             	.LBE928:
 2237                             	.LBE933:
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 2238                             		.loc 7 224 15
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               max = std::max(
 2239                             		.loc 7 225 15
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   max,
 2240                             		.loc 7 226 15
 2241                             	.LBB934:
 2242                             	.LBB929:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 2243                             		.loc 5 386 3
 2244                             	.LBE929:
 2245                             	.LBE934:
 2246                             	.LBE941:
 2247                             	.LBE947:
 2248                             	.LBE953:
 2249                             	.LBE971:
 2250                             	.LBE981:
 2251                             	.LBE989:
 2252                             	.LBE996:
 2253                             	.LBE1003:
 2254                             	.LBE1014:
 2255                             	.LBE1025:
 2256                             	.LBE1038:
 2257                             	.LBE1050:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2258                             		.loc 5 194 44
 2259                             	.LBB1051:
 2260                             	.LBB1039:
 2261                             	.LBB1026:
 2262                             	.LBB1015:
 2263                             	.LBB1004:
 2264                             	.LBB997:
 2265                             	.LBB990:
 2266                             	.LBB982:
 2267                             	.LBB972:
 2268                             	.LBB954:
 2269                             	.LBB948:
 2270                             	.LBB942:
 2271                             	.LBB935:
 2272                             	.LBB930:
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 2273                             		.loc 5 387 3
 2274                             	.LBE930:
 2275                             	.LBE935:
 2276                             	.LBE942:
 2277                             	.LBE948:
 2278                             	.LBE954:
 2279                             	.LBE972:
 2280                             	.LBE982:
 2281                             	.LBE990:
 2282                             	.LBE997:
 2283                             	.LBE1004:
 2284                             	.LBE1015:
 2285                             	.LBE1026:
 2286                             	.LBE1039:
 2287                             	.LBE1051:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 2288                             		.loc 5 217 50
 2289                             	.LBB1052:
 2290                             	.LBB1040:
 2291                             	.LBB1027:
 2292                             	.LBB1016:
 2293                             	.LBB1005:
 2294                             	.LBB998:
 2295                             	.LBB991:
 2296                             	.LBB983:
 2297                             	.LBB973:
 2298                             	.LBB955:
 2299                             	.LBB949:
 2300                             	.LBB943:
 2301                             	.LBB936:
 2302                             	.LBB931:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 2303                             		.loc 5 388 3
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 2304                             		.loc 5 389 3
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 2305                             		.loc 5 390 3
 2306 0548 61 0A                   		cmp	#0, r10
 2307 054a 28 05 38 24 02          		blt	.L59
 2308 054f 71 A6 01                		add	#1, r10, r6
 2309 0552 06 89 02 41             		add	260[r0], r2
 2310 0556 47 AE                   		cmp	r10, r14
 2311 0558 2A 05 38 16 02          		ble	.L59
 2312 055d EF 6A                   		mov.L	r6, r10
 2313                             	.LVL193:
 2314 055f 03                      		.balign 8,3,1
 2315                             	.L78:
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 2316                             		.loc 5 392 3
 2317                             	.LBE931:
 2318                             	.LBE936:
 2319                             	.LBB937:
 2320                             	.LBB938:
 2321                             		.file 8 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3.
   1:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
   3:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Copyright (C) 2001-2018 Free Software Foundation, Inc.
   4:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** //
   5:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // any later version.
  10:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  11:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  16:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  20:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  25:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** /*
  26:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  27:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  30:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  38:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  39:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  42:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  */
  50:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  51:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  */
  55:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  56:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  59:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  73:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** {
  75:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  77:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #if __cplusplus < 201103L
  78:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<bool _BoolType>
  82:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     struct __iter_swap
  83:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
  84:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	static void
  86:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	{
  88:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	    _ValueType1;
  90:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
  91:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  *__a = *__b;
  92:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  *__b = __tmp;
  93:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	}
  94:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     };
  95:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  96:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<>
  97:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     struct __iter_swap<true>
  98:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
  99:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	static void
 101:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	{
 103:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 104:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	}
 105:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     };
 106:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #endif
 107:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 108:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 109:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 112:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 113:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   Nothing.
 114:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 115:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  iterators themselves.
 117:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 118:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     inline void
 120:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 122:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 123:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 125:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 127:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 128:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #if __cplusplus < 201103L
 129:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ValueType1;
 131:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ValueType2;
 133:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 134:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ValueType2>)
 136:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ValueType1>)
 138:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 139:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ReferenceType1;
 141:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ReferenceType2;
 143:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 147:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #else
 148:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       swap(*__a, *__b);
 149:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #endif
 150:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     }
 151:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 152:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 153:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 160:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  The ranges must not overlap.
 163:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 164:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     _ForwardIterator2
 166:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 169:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 170:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 172:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 174:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 176:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       return __first2;
 179:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     }
 180:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 181:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 182:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 183:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 188:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  preprocessor macro.
 191:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 192:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _Tp>
 193:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     inline const _Tp&
 195:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 197:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 198:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       if (__b < __a)
 201:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	return __b;
 202:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       return __a;
 203:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     }
 204:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 205:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 206:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 207:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 211:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 212:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  preprocessor macro.
 215:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 216:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _Tp>
 217:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     inline const _Tp&
 219:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 221:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 222:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       if (__a < __b)
 2322                             		.loc 8 224 15 is_stmt 0
 2323 0560 EC 26                   		mov.L	[r2], r6
 2324                             		.loc 8 224 7
 2325 0562 FC 87 63                		fcmp	r6, r3
 2326 0565 26 04                   		bpz	.L79
 2327 0567 EF 63                   		mov.L	r6, r3
 2328                             		.balign 8,3,2
 2329                             	.L79:
 2330                             	.LVL194:
 2331                             	.LBE938:
 2332                             	.LBE937:
 2333                             	.LBE943:
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 2334                             		.loc 7 222 58
 2335 0569 ED 06 4C                		mov.L	304[r0], r6
 2336 056c 47 6A                   		cmp	r6, r10
 2337 056e 21 DA                   		bne	.L171
 2338 0570 66 1A                   		mov	#1, r10
 2339                             	.LVL195:
 2340                             		.balign 8,3,1
 2341                             	.L81:
 2342 0572 62 17                   		add	#1, r7
 2343                             	.LVL196:
 2344 0574 06 89 04 50             		add	320[r0], r4
 2345                             	.LBE949:
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 2346                             		.loc 7 220 56
 2347 0578 ED 02 4F                		mov.L	316[r0], r2
 2348 057b 47 72                   		cmp	r7, r2
 2349 057d 21 8D                   		bne	.L74
 2350 057f 5B AA                   		movu.B	r10, r10
 2351 0581 61 0A                   		cmp	#0, r10
 2352 0583 15                      		beq	.L83
 2353 0584 E7 03 3B                		mov.L	r3, 236[r0]
 2354 0587 03                      		.balign 8,3,2
 2355                             	.L83:
 2356 0588 ED 07 3B                		mov.L	236[r0], r7
 2357                             	.LVL197:
 2358                             		.balign 8,3,2
 2359                             	.L71:
 2360                             	.LBE955:
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(max, params.float_activation_min,
 2361                             		.loc 7 231 11 is_stmt 1
 2362                             	.LBB956:
 2363                             	.LBB957:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 2364                             		.loc 5 386 3
 2365                             	.LBE957:
 2366                             	.LBE956:
 2367                             	.LBE973:
 2368                             	.LBE983:
 2369                             	.LBE991:
 2370                             	.LBE998:
 2371                             	.LBE1005:
 2372                             	.LBE1016:
 2373                             	.LBE1027:
 2374                             	.LBE1040:
 2375                             	.LBE1052:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2376                             		.loc 5 194 44
 2377                             	.LBB1053:
 2378                             	.LBB1041:
 2379                             	.LBB1028:
 2380                             	.LBB1017:
 2381                             	.LBB1006:
 2382                             	.LBB999:
 2383                             	.LBB992:
 2384                             	.LBB984:
 2385                             	.LBB974:
 2386                             	.LBB960:
 2387                             	.LBB958:
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 2388                             		.loc 5 387 3
 2389                             	.LBE958:
 2390                             	.LBE960:
 2391                             	.LBE974:
 2392                             	.LBE984:
 2393                             	.LBE992:
 2394                             	.LBE999:
 2395                             	.LBE1006:
 2396                             	.LBE1017:
 2397                             	.LBE1028:
 2398                             	.LBE1041:
 2399                             	.LBE1053:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 2400                             		.loc 5 217 50
 2401                             	.LBB1054:
 2402                             	.LBB1042:
 2403                             	.LBB1029:
 2404                             	.LBB1018:
 2405                             	.LBB1007:
 2406                             	.LBB1000:
 2407                             	.LBB993:
 2408                             	.LBB985:
 2409                             	.LBB975:
 2410                             	.LBB961:
 2411                             	.LBB959:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 2412                             		.loc 5 388 3
 2413 058b ED 0A 3F                		mov.L	252[r0], r10
 2414 058e 47 DA                   		cmp	r13, r10
 2415 0590 2A 05 38 DE 01          		ble	.L59
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 2416                             		.loc 5 389 3
 2417 0595 ED 02 40                		mov.L	256[r0], r2
 2418 0598 ED 03 4D                		mov.L	308[r0], r3
 2419 059b 47 32                   		cmp	r3, r2
 2420 059d 2A 05 38 D1 01          		ble	.L59
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 2421                             		.loc 5 390 3
 2422 05a2 ED 04 3D                		mov.L	244[r0], r4
 2423 05a5 ED 06 42                		mov.L	264[r0], r6
 2424 05a8 47 64                   		cmp	r6, r4
 2425 05aa 2A 05 38 C4 01          		ble	.L59
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 2426                             		.loc 5 391 3
 2427 05af ED 02 51                		mov.L	324[r0], r2
 2428 05b2 47 52                   		cmp	r5, r2
 2429 05b4 2A 05 38 BA 01          		ble	.L59
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 2430                             		.loc 5 392 3
 2431                             	.LVL198:
 2432                             	.LBE959:
 2433                             	.LBE961:
 2434                             	.LBB962:
 2435                             	.LBB963:
 2436                             	.LBB964:
 2437                             		.loc 8 224 7 is_stmt 0
 2438 05b9 ED 03 45                		mov.L	276[r0], r3
 2439 05bc FC 87 37                		fcmp	r3, r7
 2440 05bf 26 04                   		bpz	.L84
 225:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	return __b;
 2441                             		.loc 8 225 9
 2442 05c1 EF 37                   		mov.L	r3, r7
 2443                             	.LVL199:
 2444                             		.balign 8,3,2
 2445                             	.L84:
 2446                             	.LBE964:
 2447                             	.LBE963:
 2448                             	.LBB965:
 2449                             	.LBB966:
 200:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	return __b;
 2450                             		.loc 8 200 7
 2451 05c3 ED 04 46                		mov.L	280[r0], r4
 2452 05c6 FC 87 74                		fcmp	r7, r4
 2453 05c9 26 05 38 B7 01          		bn	.L85
 2454                             	.LVL200:
 2455                             	.LBE966:
 2456                             	.LBE965:
 2457                             	.LBE962:
 2458                             	.LBE975:
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 2459                             		.loc 7 206 9
 2460 05ce 62 15                   		add	#1, r5
 2461                             	.LVL201:
 2462                             	.LBB976:
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(max, params.float_activation_min,
 2463                             		.loc 7 231 75
 2464 05d0 FD 22 17                		mov.L	r7, [r1+]
 2465                             	.LBE976:
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 2466                             		.loc 7 206 39
 2467 05d3 47 58                   		cmp	r5, r8
 2468 05d5 3B 10 FF                		bne	.L70
 2469                             	.LVL202:
 2470                             		.balign 8,3,2
 2471                             	.L86:
 2472                             	.LBE985:
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 2473                             		.loc 7 205 7
 2474 05d8 ED 06 42                		mov.L	264[r0], r6
 2475 05db 62 16                   		add	#1, r6
 2476 05dd E7 06 42                		mov.L	r6, 264[r0]
 2477                             	.LVL203:
 2478 05e0 ED 07 49                		mov.L	292[r0], r7
 2479 05e3 ED 0A 59                		mov.L	356[r0], r10
 2480 05e6 43 A7                   		sub	r10, r7
 2481 05e8 E7 07 49                		mov.L	r7, 292[r0]
 2482 05eb ED 01 47                		mov.L	284[r0], r1
 2483 05ee 4B A1                   		add	r10, r1
 2484 05f0 E7 01 47                		mov.L	r1, 284[r0]
 2485 05f3 ED 02 53                		mov.L	332[r0], r2
 2486 05f6 06 89 02 41             		add	260[r0], r2
 2487 05fa E7 02 53                		mov.L	r2, 332[r0]
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 2488                             		.loc 7 205 33
 2489 05fd ED 03 3D                		mov.L	244[r0], r3
 2490 0600 47 36                   		cmp	r3, r6
 2491 0602 3B 9A FE                		bne	.L69
 2492                             	.LVL204:
 2493                             		.balign 8,3,2
 2494                             	.L68:
 2495                             	.LBE993:
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 2496                             		.loc 7 204 5
 2497 0605 ED 05 4D                		mov.L	308[r0], r5
 2498 0608 62 15                   		add	#1, r5
 2499 060a E7 05 4D                		mov.L	r5, 308[r0]
 2500                             	.LVL205:
 2501 060d ED 06 57                		mov.L	348[r0], r6
 2502 0610 06 89 06 60             		add	384[r0], r6
 2503 0614 E7 06 57                		mov.L	r6, 348[r0]
 2504 0617 ED 07 3E                		mov.L	248[r0], r7
 2505 061a 06 89 07 5F             		add	380[r0], r7
 2506 061e E7 07 3E                		mov.L	r7, 248[r0]
 2507 0621 ED 0A 52                		mov.L	328[r0], r10
 2508 0624 ED 02 5F                		mov.L	380[r0], r2
 2509 0627 43 2A                   		sub	r2, r10
 2510 0629 E7 0A 52                		mov.L	r10, 328[r0]
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 2511                             		.loc 7 204 31
 2512 062c ED 03 40                		mov.L	256[r0], r3
 2513 062f 47 35                   		cmp	r3, r5
 2514 0631 3B 1F FE                		bne	.L66
 2515 0634 EF 8F                   		mov.L	r8, r15
 2516                             	.LVL206:
 2517 0636 EF 00                   		.balign 8,3,2
 2518                             	.L65:
 2519                             	.LBE1000:
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 2520                             		.loc 7 203 3
 2521 0638 ED 07 56                		mov.L	344[r0], r7
 2522 063b 62 17                   		add	#1, r7
 2523 063d E7 07 56                		mov.L	r7, 344[r0]
 2524                             	.LVL207:
 2525 0640 ED 0A 5B                		mov.L	364[r0], r10
 2526 0643 06 89 0A 61             		add	388[r0], r10
 2527 0647 E7 0A 5B                		mov.L	r10, 364[r0]
 2528 064a ED 01 5A                		mov.L	360[r0], r1
 2529 064d 06 89 01 43             		add	268[r0], r1
 2530 0651 E7 01 5A                		mov.L	r1, 360[r0]
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 2531                             		.loc 7 203 29
 2532 0654 ED 02 3F                		mov.L	252[r0], r2
 2533 0657 47 27                   		cmp	r2, r7
 2534 0659 3B D8 FD                		bne	.L63
 2535                             	.LBE1007:
 2536                             	.LBE1018:
 2537                             	.LBE1029:
 2538                             	.LBE1042:
 2539                             	.LBE1054:
 368:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 2540                             		.loc 1 368 10
 2541 065c 66 01                   		mov.L	#0, r1
 2542 065e 38 FC FC                		bra	.L181
 2543                             	.LVL208:
 2544                             	.L55:
 360:../src/tensorflow/lite/micro/kernels/pooling.cc ****       MaxEvalInt8(context, node, params, data, input, output);
 2545                             		.loc 1 360 5 is_stmt 1
 361:../src/tensorflow/lite/micro/kernels/pooling.cc ****       break;
 2546                             		.loc 1 361 7
 2547                             	.LBB1055:
 2548                             	.LBB878:
 212:../src/tensorflow/lite/micro/kernels/pooling.cc ****   RuntimeShape output_shape = tflite::micro::GetTensorShape(output);
 2549                             		.loc 1 212 3
 212:../src/tensorflow/lite/micro/kernels/pooling.cc ****   RuntimeShape output_shape = tflite::micro::GetTensorShape(output);
 2550                             		.loc 1 212 65 is_stmt 0
 2551 0661 71 0F 3C                		add	#60, r0, r15
 2552 0664 EF 71                   		mov.L	r7, r1
 2553 0666 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2554                             	.LVL209:
 213:../src/tensorflow/lite/micro/kernels/pooling.cc ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 2555                             		.loc 1 213 3 is_stmt 1
 213:../src/tensorflow/lite/micro/kernels/pooling.cc ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 2556                             		.loc 1 213 67 is_stmt 0
 2557 066a 71 0F 24                		add	#36, r0, r15
 2558 066d EF 81                   		mov.L	r8, r1
 2559 066f 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2560                             	.LVL210:
 214:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2561                             		.loc 1 214 3 is_stmt 1
 2562                             	.LBB841:
 2563                             	.LBB842:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 2564                             		.loc 5 440 3
 2565                             	.LBB843:
 2566                             	.LBB844:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2567                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2568                             		.loc 5 197 5
 2569 0673 AB 8D                   		mov.L	60[r0], r5
 2570 0675 61 35                   		cmp	#3, r5
 2571 0677 2A 05 38 F7 00          		ble	.L59
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2572                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2573                             		.loc 5 198 34 is_stmt 0
 2574 067c 61 55                   		cmp	#5, r5
 2575 067e 2B 05 38 E1 00          		bgt	.L182
 2576 0683 AC 8B                   		mov.L	76[r0], r3
 2577                             	.LVL211:
 2578                             	.LBE844:
 2579                             	.LBE843:
 2580                             	.LBB846:
 2581                             	.LBB847:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2582                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2583                             		.loc 5 197 5
 2584 0685 AA 0C                   		mov.L	36[r0], r4
 2585 0687 61 34                   		cmp	#3, r4
 2586 0689 2A 05 38 E5 00          		ble	.L59
 2587                             	.LVL212:
 2588                             		.balign 8,3,1
 2589                             	.L184:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2590                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2591                             		.loc 5 198 34 is_stmt 0
 2592 068e 61 54                   		cmp	#5, r4
 2593 0690 2A 05 38 1C 01          		ble	.L120
 2594 0695 AA 82                   		mov.L	40[r0], r2
 2595 0697 A8 AA                   		mov.L	12[r2], r2
 2596                             		.balign 8,3,1
 2597                             	.L121:
 2598                             	.LVL213:
 2599                             	.LBE847:
 2600                             	.LBE846:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 2601                             		.loc 5 440 3
 2602 0699 47 32                   		cmp	r3, r2
 2603 069b 3B D5 00                		bne	.L59
 2604                             		.loc 5 441 3 is_stmt 1
 2605                             	.LVL214:
 2606                             	.LBE842:
 2607                             	.LBE841:
 2608                             	.LBE878:
 2609                             	.LBE1055:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2610                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2611                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2612                             		.loc 5 198 5
 2613                             	.LBB1056:
 2614                             	.LBB879:
 216:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.n = 1;
 2615                             		.loc 1 216 3
 217:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.h = input_shape.Dims(1);
 2616                             		.loc 1 217 3
 217:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.h = input_shape.Dims(1);
 2617                             		.loc 1 217 16 is_stmt 0
 2618 069e F9 06 35 01             		mov.L	#1, 212[r0]
 218:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.w = input_shape.Dims(2);
 2619                             		.loc 1 218 3 is_stmt 1
 2620                             	.LVL215:
 2621                             	.LBB855:
 2622                             	.LBB856:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2623                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2624                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2625                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2626                             		.loc 5 198 34 is_stmt 0
 2627 06a2 61 55                   		cmp	#5, r5
 2628 06a4 2A 05 38 0D 01          		ble	.L122
 2629                             	.LVL216:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2630                             		.loc 5 198 36
 2631 06a9 AC 05                   		mov.L	64[r0], r5
 2632                             	.LBE856:
 2633                             	.LBE855:
 218:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.w = input_shape.Dims(2);
 2634                             		.loc 1 218 16
 2635 06ab E5 50 01 36             		mov.L	4[r5], 216[r0]
 219:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.c = depth;
 2636                             		.loc 1 219 3 is_stmt 1
 2637                             	.LVL217:
 2638                             	.LBB857:
 2639                             	.LBB858:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2640                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2641                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2642                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2643                             		.loc 5 198 34 is_stmt 0
 2644 06af A8 D5                   		mov.L	8[r5], r5
 2645                             	.LVL218:
 2646                             	.LBE858:
 2647                             	.LBE857:
 219:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.c = depth;
 2648                             		.loc 1 219 16
 2649 06b1 E7 05 37                		mov.L	r5, 220[r0]
 220:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2650                             		.loc 1 220 3 is_stmt 1
 220:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2651                             		.loc 1 220 16 is_stmt 0
 2652 06b4 E7 03 38                		mov.L	r3, 224[r0]
 222:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.n = 1;
 2653                             		.loc 1 222 3 is_stmt 1
 223:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.h = output_shape.Dims(1);
 2654                             		.loc 1 223 3
 223:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.h = output_shape.Dims(1);
 2655                             		.loc 1 223 17 is_stmt 0
 2656 06b7 F9 06 31 01             		mov.L	#1, 196[r0]
 224:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.w = output_shape.Dims(2);
 2657                             		.loc 1 224 3 is_stmt 1
 2658                             	.LVL219:
 2659                             	.LBB860:
 2660                             	.LBB861:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2661                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2662                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2663                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2664                             		.loc 5 198 34 is_stmt 0
 2665 06bb 61 54                   		cmp	#5, r4
 2666 06bd 2A 05 38 0B 01          		ble	.L183
 2667                             	.LVL220:
 2668                             		.balign 8,3,1
 2669                             	.L134:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2670                             		.loc 5 198 36
 2671 06c2 AA 85                   		mov.L	40[r0], r5
 2672                             	.LBE861:
 2673                             	.LBE860:
 224:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.w = output_shape.Dims(2);
 2674                             		.loc 1 224 17
 2675 06c4 E5 50 01 32             		mov.L	4[r5], 200[r0]
 225:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.c = depth;
 2676                             		.loc 1 225 3 is_stmt 1
 2677                             	.LVL221:
 2678                             	.LBB863:
 2679                             	.LBB864:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2680                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2681                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2682                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2683                             		.loc 5 198 34 is_stmt 0
 2684 06c8 A8 D5                   		mov.L	8[r5], r5
 2685                             	.LVL222:
 2686                             		.balign 8,3,1
 2687                             	.L124:
 2688                             	.LBE864:
 2689                             	.LBE863:
 230:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.padding.h = data.padding.height;
 2690                             		.loc 1 230 24
 2691 06ca E5 60 01 03             		mov.L	4[r6], 12[r0]
 229:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.stride.w = params->stride_width;
 2692                             		.loc 1 229 24
 2693 06ce E5 60 02 04             		mov.L	8[r6], 16[r0]
 245:../src/tensorflow/lite/micro/kernels/pooling.cc ****     ctx.buf = context->GetScratchBuffer(context, data.buffer_idx);
 2694                             		.loc 1 245 12
 2695 06d2 ED A2 04                		mov.L	16[r10], r2
 231:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.padding.w = data.padding.width;
 2696                             		.loc 1 231 25
 2697 06d5 E5 A0 01 06             		mov.L	4[r10], 24[r0]
 225:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.c = depth;
 2698                             		.loc 1 225 17
 2699 06d9 E7 05 33                		mov.L	r5, 204[r0]
 226:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2700                             		.loc 1 226 3 is_stmt 1
 232:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.activation.min = data.activation_min;
 2701                             		.loc 1 232 25 is_stmt 0
 2702 06dc E4 A0 05                		mov.L	[r10], 20[r0]
 233:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.activation.max = data.activation_max;
 2703                             		.loc 1 233 30
 2704 06df E5 A0 05 07             		mov.L	20[r10], 28[r0]
 239:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.c = 1;
 2705                             		.loc 1 239 17
 2706 06e3 E5 60 03 2F             		mov.L	12[r6], 188[r0]
 234:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2707                             		.loc 1 234 30
 2708 06e7 E5 A0 06 08             		mov.L	24[r10], 32[r0]
 226:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2709                             		.loc 1 226 17
 2710 06eb E7 03 34                		mov.L	r3, 208[r0]
 228:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.stride.h = params->stride_height;
 2711                             		.loc 1 228 3 is_stmt 1
 229:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.stride.w = params->stride_width;
 2712                             		.loc 1 229 3
 230:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.padding.h = data.padding.height;
 2713                             		.loc 1 230 3
 231:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.padding.w = data.padding.width;
 2714                             		.loc 1 231 3
 232:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.activation.min = data.activation_min;
 2715                             		.loc 1 232 3
 233:../src/tensorflow/lite/micro/kernels/pooling.cc ****   pool_params.activation.max = data.activation_max;
 2716                             		.loc 1 233 3
 234:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2717                             		.loc 1 234 3
 236:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.n = 1;
 2718                             		.loc 1 236 3
 237:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.h = params->filter_height;
 2719                             		.loc 1 237 3
 238:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.w = params->filter_width;
 2720                             		.loc 1 238 17 is_stmt 0
 2721 06ee E5 60 04 2E             		mov.L	16[r6], 184[r0]
 237:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.h = params->filter_height;
 2722                             		.loc 1 237 17
 2723 06f2 F9 06 2D 01             		mov.L	#1, 180[r0]
 238:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.w = params->filter_width;
 2724                             		.loc 1 238 3 is_stmt 1
 239:../src/tensorflow/lite/micro/kernels/pooling.cc ****   filter_dims.c = 1;
 2725                             		.loc 1 239 3
 240:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2726                             		.loc 1 240 3
 240:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2727                             		.loc 1 240 17 is_stmt 0
 2728 06f6 F9 06 30 01             		mov.L	#1, 192[r0]
 242:../src/tensorflow/lite/micro/kernels/pooling.cc ****   ctx.buf = nullptr;
 2729                             		.loc 1 242 3 is_stmt 1
 243:../src/tensorflow/lite/micro/kernels/pooling.cc ****   ctx.size = 0;
 2730                             		.loc 1 243 3
 243:../src/tensorflow/lite/micro/kernels/pooling.cc ****   ctx.size = 0;
 2731                             		.loc 1 243 11 is_stmt 0
 2732 06fa F9 06 39 00             		mov.L	#0, 228[r0]
 244:../src/tensorflow/lite/micro/kernels/pooling.cc ****   if (data.buffer_idx > -1) {
 2733                             		.loc 1 244 3 is_stmt 1
 244:../src/tensorflow/lite/micro/kernels/pooling.cc ****   if (data.buffer_idx > -1) {
 2734                             		.loc 1 244 12 is_stmt 0
 2735 06fe F9 06 3A 00             		mov.L	#0, 232[r0]
 245:../src/tensorflow/lite/micro/kernels/pooling.cc ****     ctx.buf = context->GetScratchBuffer(context, data.buffer_idx);
 2736                             		.loc 1 245 3 is_stmt 1
 2737 0702 61 02                   		cmp	#0, r2
 2738 0704 29 0C                   		blt	.L125
 246:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 2739                             		.loc 1 246 5
 246:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 2740                             		.loc 1 246 40 is_stmt 0
 2741 0706 ED BA 11                		mov.L	68[r11], r10
 2742                             	.LVL223:
 2743 0709 EF B1                   		mov.L	r11, r1
 2744 070b 7F 1A                   		jsr	r10
 2745                             	.LVL224:
 246:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 2746                             		.loc 1 246 13
 2747 070d E7 01 39                		mov.L	r1, 228[r0]
 2748                             		.balign 8,3,1
 2749                             	.L125:
 249:../src/tensorflow/lite/micro/kernels/pooling.cc ****       arm_max_pool_s8(&ctx, &pool_params, &input_dims,
 2750                             		.loc 1 249 3 is_stmt 1
 2751                             	.LVL225:
 2752                             	.LBB866:
 2753                             	.LBB867:
 2754                             		.loc 6 62 53 is_stmt 0
 2755 0710 EC 74                   		mov.L	[r7], r4
 2756                             	.LVL226:
 2757                             	.LBE867:
 2758                             	.LBE866:
 2759                             	.LBB868:
 2760                             	.LBB869:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2761                             		.loc 6 55 28
 2762 0712 61 08                   		cmp	#0, r8
 2763 0714 14                      		beq	.L133
 2764 0715 EC 88                   		mov.L	[r8], r8
 2765                             	.LVL227:
 2766 0717 03                      		.balign 8,3,3
 2767                             	.L133:
 2768                             	.LBE869:
 2769                             	.LBE868:
 249:../src/tensorflow/lite/micro/kernels/pooling.cc ****       arm_max_pool_s8(&ctx, &pool_params, &input_dims,
 2770                             		.loc 1 249 3
 2771 0718 72 07 C4 00             		add	#0xc4, r0, r7
 2772                             	.LVL228:
 2773 071c 72 0A B4 00             		add	#0xb4, r0, r10
 2774 0720 E7 08 02                		mov.L	r8, 8[r0]
 2775 0723 E3 0A                   		mov.L	r10, [r0]
 2776 0725 A0 0F                   		mov.L	r7, 4[r0]
 2777 0727 72 03 D4 00             		add	#0xd4, r0, r3
 2778 072b 66 C2                   		mov.L	#12, r2
 2779 072d 4B 02                   		add	r0, r2
 2780 072f 72 01 E4 00             		add	#0xe4, r0, r1
 2781 0733 05 00 00 00             		bsr	_arm_max_pool_s8
 2782                             	.LVL229:
 2783 0737 61 01                   		cmp	#0, r1
 2784 0739 21 37                   		bne	.L59
 256:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 2785                             		.loc 1 256 3 is_stmt 1
 2786                             	.LVL230:
 2787                             	.LBB870:
 2788                             	.LBB871:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2789                             		.loc 5 185 5
 2790 073b AA 0F                   		mov.L	36[r0], r7
 2791 073d 61 57                   		cmp	#5, r7
 2792 073f 2B 0B                   		ble	.L126
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2793                             		.loc 5 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2794                             		.loc 5 189 16 is_stmt 0
 2795 0741 AA 81                   		mov.L	40[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2796                             		.loc 5 189 29
 2797 0743 61 01                   		cmp	#0, r1
 2798 0745 15                      		beq	.L126
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2799                             		.loc 5 189 16
 2800 0746 05 00 00 00             		bsr	__ZdaPv
 2801                             	.LVL231:
 2802                             		.balign 8,3,1
 2803                             	.L126:
 2804                             	.LBE871:
 2805                             	.LBE870:
 2806                             	.LBB872:
 2807                             	.LBB840:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2808                             		.loc 5 185 5 is_stmt 1
 2809 074a AB 8F                   		mov.L	60[r0], r7
 2810 074c 61 57                   		cmp	#5, r7
 2811 074e 2A 05 38 08 FC          		ble	.L127
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2812                             		.loc 5 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2813                             		.loc 5 189 16 is_stmt 0
 2814 0753 AC 01                   		mov.L	64[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2815                             		.loc 5 189 29
 2816 0755 61 01                   		cmp	#0, r1
 2817 0757 3A 01 FC                		beq	.L127
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2818                             		.loc 5 189 16
 2819 075a 05 00 00 00             		bsr	__ZdaPv
 2820                             	.LVL232:
 2821 075e 38 FA FB                		bra	.L127
 2822                             	.LVL233:
 2823                             	.L182:
 2824                             	.LBE840:
 2825                             	.LBE872:
 2826                             	.LBB873:
 2827                             	.LBB853:
 2828                             	.LBB850:
 2829                             	.LBB845:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2830                             		.loc 5 198 34
 2831 0761 AC 04                   		mov.L	64[r0], r4
 2832 0763 A8 CB                   		mov.L	12[r4], r3
 2833                             	.LVL234:
 2834                             	.LBE845:
 2835                             	.LBE850:
 2836                             	.LBB851:
 2837                             	.LBB848:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2838                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2839                             		.loc 5 197 5
 2840 0765 AA 0C                   		mov.L	36[r0], r4
 2841 0767 61 34                   		cmp	#3, r4
 2842 0769 2B 05 38 23 FF          		bgt	.L184
 2843                             	.LVL235:
 2844 076e EF 00                   		.balign 8,3,3
 2845                             	.L59:
 2846                             	.LBE848:
 2847                             	.LBE851:
 2848                             	.LBE853:
 2849                             	.LBE873:
 2850                             	.LBE879:
 2851                             	.LBE1056:
 2852                             	.LBB1057:
 2853                             	.LBB683:
 2854                             	.LBB682:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 2855                             		.loc 6 33 3 is_stmt 0
 2856 0770 05 00 00 00             		bsr	_abort
 2857                             	.LVL236:
 2858                             	.L136:
 2859                             	.LBE682:
 2860                             	.LBE683:
 2861                             	.LBE1057:
 2862                             	.LBB1058:
 2863                             	.LBB1043:
 2864                             	.LBB1030:
 2865                             	.LBB889:
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActRelu6) {
 2866                             		.loc 2 257 5
 2867 0774 F9 02 46 FF FF 7F 7F    		mov.L	#0x7f7fffff, 280[r0]
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 2868                             		.loc 2 256 5
 2869 077b F9 06 45 00             		mov.L	#0x0, 276[r0]
 2870 077f 38 FD FB                		bra	.L57
 2871                             	.LVL237:
 2872                             	.L85:
 2873                             	.LBE889:
 2874                             	.LBE1030:
 2875                             	.LBB1031:
 2876                             	.LBB1019:
 2877                             	.LBB1008:
 2878                             	.LBB1001:
 2879                             	.LBB994:
 2880                             	.LBB986:
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 2881                             		.loc 7 206 9
 2882 0782 62 15                   		add	#1, r5
 2883                             	.LVL238:
 2884                             	.LBB977:
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(max, params.float_activation_min,
 2885                             		.loc 7 231 75
 2886 0784 FD 22 14                		mov.L	r4, [r1+]
 2887                             	.LBE977:
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 2888                             		.loc 7 206 39
 2889 0787 47 85                   		cmp	r8, r5
 2890 0789 3A 4F FE                		beq	.L86
 2891                             	.LBB978:
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
 2892                             		.loc 7 207 11 is_stmt 1
 2893                             	.LVL239:
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 2894                             		.loc 7 209 11
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 2895                             		.loc 7 213 11
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 2896                             		.loc 7 214 11
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 2897                             		.loc 7 216 11
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 2898                             		.loc 7 217 11
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 2899                             		.loc 7 219 11
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 2900                             		.loc 7 219 17 is_stmt 0
 2901 078c F9 02 3B FF FF 7F FF    		mov.L	#0xff7fffff, 236[r0]
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 2902                             		.loc 7 220 11 is_stmt 1
 2903                             	.LVL240:
 2904                             	.LBB967:
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 2905                             		.loc 7 220 56 is_stmt 0
 2906 0793 ED 0A 48                		mov.L	288[r0], r10
 2907 0796 47 AF                   		cmp	r10, r15
 2908 0798 28 05 38 5E FD          		blt	.L185
 2909                             	.LVL241:
 2910 079d FC 13 00                		.balign 8,3,5
 2911                             	.L139:
 2912 07a0 FB 72 FF FF 7F FF       		mov.L	#0xff7fffff, r7
 2913 07a6 38 E5 FD                		bra	.L71
 2914                             	.LVL242:
 2915                             	.L143:
 2916                             	.LBE967:
 2917                             	.LBE978:
 2918                             	.LBE986:
 2919                             	.LBE994:
 2920                             	.LBE1001:
 2921                             	.LBE1008:
 2922                             	.LBE1019:
 2923                             	.LBE1031:
 2924                             	.LBE1043:
 2925                             	.LBE1058:
 2926                             	.LBB1059:
 2927                             	.LBB826:
 2928                             	.LBB816:
 2929                             	.LBB802:
 2930                             	.LBB792:
 2931                             	.LBB786:
 2932                             	.LBB780:
 2933                             	.LBB774:
 2934                             	.LBB768:
 2935                             	.LBB760:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 2936                             		.loc 7 274 56
 2937 07a9 66 04                   		mov	#0, r4
 2938 07ab 38 D0 FA                		bra	.L100
 2939                             	.LVL243:
 2940                             	.L120:
 2941                             	.LBE760:
 2942                             	.LBE768:
 2943                             	.LBE774:
 2944                             	.LBE780:
 2945                             	.LBE786:
 2946                             	.LBE792:
 2947                             	.LBE802:
 2948                             	.LBE816:
 2949                             	.LBE826:
 2950                             	.LBE1059:
 2951                             	.LBB1060:
 2952                             	.LBB880:
 2953                             	.LBB874:
 2954                             	.LBB854:
 2955                             	.LBB852:
 2956                             	.LBB849:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2957                             		.loc 5 198 34
 2958 07ae AB 0A                   		mov.L	52[r0], r2
 2959 07b0 38 E9 FE                		bra	.L121
 2960                             	.LVL244:
 2961                             	.L122:
 2962                             	.LBE849:
 2963                             	.LBE852:
 2964                             	.LBE854:
 2965                             	.LBE874:
 218:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.w = input_shape.Dims(2);
 2966                             		.loc 1 218 16
 2967 07b3 E5 00 11 36             		mov.L	68[r0], 216[r0]
 219:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.c = depth;
 2968                             		.loc 1 219 3 is_stmt 1
 2969                             	.LVL245:
 2970                             	.LBB875:
 2971                             	.LBB859:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2972                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2973                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2974                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2975                             		.loc 5 198 34 is_stmt 0
 2976 07b7 AC 85                   		mov.L	72[r0], r5
 2977                             	.LVL246:
 2978                             	.LBE859:
 2979                             	.LBE875:
 219:../src/tensorflow/lite/micro/kernels/pooling.cc ****   input_dims.c = depth;
 2980                             		.loc 1 219 16
 2981 07b9 E7 05 37                		mov.L	r5, 220[r0]
 220:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2982                             		.loc 1 220 3 is_stmt 1
 220:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 2983                             		.loc 1 220 16 is_stmt 0
 2984 07bc E7 03 38                		mov.L	r3, 224[r0]
 222:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.n = 1;
 2985                             		.loc 1 222 3 is_stmt 1
 223:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.h = output_shape.Dims(1);
 2986                             		.loc 1 223 3
 223:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.h = output_shape.Dims(1);
 2987                             		.loc 1 223 17 is_stmt 0
 2988 07bf F9 06 31 01             		mov.L	#1, 196[r0]
 224:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.w = output_shape.Dims(2);
 2989                             		.loc 1 224 3 is_stmt 1
 2990                             	.LVL247:
 2991                             	.LBB876:
 2992                             	.LBB862:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2993                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2994                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2995                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2996                             		.loc 5 198 34 is_stmt 0
 2997 07c3 61 54                   		cmp	#5, r4
 2998 07c5 2B 05 38 FB FE          		bgt	.L134
 2999                             	.LVL248:
 3000                             		.balign 8,3,1
 3001                             	.L183:
 3002                             	.LBE862:
 3003                             	.LBE876:
 224:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.w = output_shape.Dims(2);
 3004                             		.loc 1 224 17
 3005 07ca E5 00 0B 32             		mov.L	44[r0], 200[r0]
 225:../src/tensorflow/lite/micro/kernels/pooling.cc ****   output_dims.c = depth;
 3006                             		.loc 1 225 3 is_stmt 1
 3007                             	.LVL249:
 3008                             	.LBB877:
 3009                             	.LBB865:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3010                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3011                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3012                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3013                             		.loc 5 198 34 is_stmt 0
 3014 07ce AB 05                   		mov.L	48[r0], r5
 3015 07d0 38 FA FE                		bra	.L124
 3016                             	.LVL250:
 3017                             	.L137:
 3018                             	.LBE865:
 3019                             	.LBE877:
 3020                             	.LBE880:
 3021                             	.LBE1060:
 3022                             	.LBB1061:
 3023                             	.LBB1044:
 3024                             	.LBB1032:
 3025                             	.LBB890:
 3026                             	.LBB888:
 3027                             	.LBB887:
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActReluN1To1) {
 3028                             		.loc 2 260 5
 3029 07d3 F9 02 46 00 00 C0 40    		mov.L	#0x40c00000, 280[r0]
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 6;
 3030                             		.loc 2 259 5
 3031 07da F9 06 45 00             		mov.L	#0x0, 276[r0]
 3032 07de 38 9E FB                		bra	.L57
 3033                             	.L138:
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else {
 3034                             		.loc 2 263 5
 3035 07e1 F9 02 46 00 00 80 3F    		mov.L	#0x3f800000, 280[r0]
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 1;
 3036                             		.loc 2 262 5
 3037 07e8 F9 02 45 00 00 80 BF    		mov.L	#0xbf800000, 276[r0]
 3038 07ef 38 8D FB                		bra	.L57
 3039                             	.LBE887:
 3040                             	.LBE888:
 3041                             	.LBE890:
 3042                             	.LBE1032:
 3043                             	.LBE1044:
 3044                             	.LBE1061:
 3045                             	.LFE3965:
 3047 07f2 74 10 01 00 00 00       		.section	.text._ZN6tflite3ops5micro7pooling11AverageEvalEP13TfLiteContextP10TfLiteNode,"ax",@progb
 3048                             		.global	__ZN6tflite3ops5micro7pooling11AverageEvalEP13TfLiteContextP10TfLiteNode
 3050                             	__ZN6tflite3ops5micro7pooling11AverageEvalEP13TfLiteContextP10TfLiteNode:
 3051                             	.LFB3964:
 316:../src/tensorflow/lite/micro/kernels/pooling.cc ****   auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);
 3052                             		.loc 1 316 68 is_stmt 1
 3053                             	.LVL251:
 3054 0000 6E 6D                   		pushm	r6-r13
 3055                             	.LCFI8:
 3056 0002 72 00 7C FE             		add	#-388, r0
 3057                             	.LCFI9:
 317:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3058                             		.loc 1 317 3
 317:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3059                             		.loc 1 317 9 is_stmt 0
 3060 0006 A9 2E                   		mov.L	20[r2], r6
 3061                             	.LVL252:
 319:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3062                             		.loc 1 319 3 is_stmt 1
 319:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3063                             		.loc 1 319 17 is_stmt 0
 3064 0008 ED 2A 04                		mov.L	16[r2], r10
 3065                             	.LVL253:
 321:../src/tensorflow/lite/micro/kernels/pooling.cc ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
 3066                             		.loc 1 321 3 is_stmt 1
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 3067                             		.loc 6 41 3
 3068                             	.LBB1231:
 3069                             	.LBB1232:
 3070                             	.LBB1233:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 3071                             		.loc 6 33 3
 3072 000b 61 01                   		cmp	#0, r1
 3073 000d 3A 83 04                		beq	.L192
 3074 0010 EF 2C                   		mov.L	r2, r12
 3075 0012 EF 1B                   		mov.L	r1, r11
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 3076                             		.loc 6 34 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 3077                             		.loc 6 35 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 3078                             		.loc 6 35 32 is_stmt 0
 3079 0014 EC 25                   		mov.L	[r2], r5
 3080 0016 AD 1F                   		mov.L	84[r1], r7
 3081 0018 A8 5A                   		mov.L	4[r5], r2
 3082                             	.LVL254:
 3083 001a 7F 17                   		jsr	r7
 3084                             	.LVL255:
 3085 001c EF 17                   		mov.L	r1, r7
 3086                             	.LVL256:
 3087                             	.LBE1233:
 3088                             	.LBE1232:
 3089                             	.LBE1231:
 323:../src/tensorflow/lite/micro/kernels/pooling.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
 3090                             		.loc 1 323 3 is_stmt 1
 3091                             	.LBB1236:
 3092                             	.LBB1237:
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 3093                             		.loc 6 47 3
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
 3094                             		.loc 6 48 3
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 3095                             		.loc 6 49 3
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 3096                             		.loc 6 49 32 is_stmt 0
 3097 001e ED C4 01                		mov.L	4[r12], r4
 3098 0021 ED B5 15                		mov.L	84[r11], r5
 3099 0024 EF B1                   		mov.L	r11, r1
 3100                             	.LVL257:
 3101 0026 A8 4A                   		mov.L	4[r4], r2
 3102 0028 7F 15                   		jsr	r5
 3103                             	.LVL258:
 3104 002a EF 1D                   		mov.L	r1, r13
 3105                             	.LVL259:
 3106                             	.LBE1237:
 3107                             	.LBE1236:
 327:../src/tensorflow/lite/micro/kernels/pooling.cc ****     case kTfLiteFloat32:
 3108                             		.loc 1 327 3 is_stmt 1
 327:../src/tensorflow/lite/micro/kernels/pooling.cc ****     case kTfLiteFloat32:
 3109                             		.loc 1 327 18 is_stmt 0
 3110 002c A8 F1                   		mov.L	8[r7], r1
 3111                             	.LVL260:
 327:../src/tensorflow/lite/micro/kernels/pooling.cc ****     case kTfLiteFloat32:
 3112                             		.loc 1 327 3
 3113 002e 61 31                   		cmp	#3, r1
 3114 0030 3A 72 04                		beq	.L217
 3115 0033 61 91                   		cmp	#9, r1
 3116 0035 3A 26 03                		beq	.L218
 3117 0038 61 11                   		cmp	#1, r1
 3118 003a 20 1A                   		beq	.L294
 335:../src/tensorflow/lite/micro/kernels/pooling.cc ****       TF_LITE_KERNEL_LOG(context, "Input type %s is not currently supported",
 3119                             		.loc 1 335 5 is_stmt 1
 336:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          TfLiteTypeGetName(input->type));
 3120                             		.loc 1 336 7
 336:../src/tensorflow/lite/micro/kernels/pooling.cc ****                          TfLiteTypeGetName(input->type));
 3121                             		.loc 1 336 7
 3122 003c ED B7 05                		mov.L	20[r11], r7
 3123                             	.LVL261:
 3124 003f 05 00 00 00             		bsr	_TfLiteTypeGetName
 3125                             	.LVL262:
 3126 0043 A0 09                   		mov.L	r1, 4[r0]
 3127 0045 EF B1                   		mov.L	r11, r1
 3128 0047 F8 02 00 00 00 00       		mov.L	#.LC3, [r0]
 3129 004d 7F 17                   		jsr	r7
 3130                             	.LVL263:
 338:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 3131                             		.loc 1 338 7
 338:../src/tensorflow/lite/micro/kernels/pooling.cc ****   }
 3132                             		.loc 1 338 14 is_stmt 0
 3133 004f 66 11                   		mov.L	#1, r1
 341:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3134                             		.loc 1 341 1
 3135 0051 3F 6D 69                		rtsd	#420, r6-r13
 3136                             	.LVL264:
 3137                             	.L294:
 328:../src/tensorflow/lite/micro/kernels/pooling.cc ****       AverageEvalFloat(context, node, params, data, input, output);
 3138                             		.loc 1 328 5 is_stmt 1
 329:../src/tensorflow/lite/micro/kernels/pooling.cc ****       break;
 3139                             		.loc 1 329 7
 3140                             	.LBB1238:
 3141                             	.LBB1239:
  77:../src/tensorflow/lite/micro/kernels/pooling.cc ****   CalculateActivationRange(params->activation, &activation_min,
 3142                             		.loc 1 77 3
  78:../src/tensorflow/lite/micro/kernels/pooling.cc ****                            &activation_max);
 3143                             		.loc 1 78 3
  78:../src/tensorflow/lite/micro/kernels/pooling.cc ****                            &activation_max);
 3144                             		.loc 1 78 36 is_stmt 0
 3145 0054 A9 6D                   		mov.L	20[r6], r5
 3146                             	.LVL265:
 3147                             	.LBB1240:
 3148                             	.LBB1241:
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = 0;
 3149                             		.loc 2 255 3
 3150 0056 61 15                   		cmp	#1, r5
 3151 0058 3A 3C 04                		beq	.L257
 3152                             	.LVL266:
 3153                             	.LBB1242:
 3154                             	.LBB1243:
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = 0;
 3155                             		.loc 2 258 10
 3156 005b 61 35                   		cmp	#3, r5
 3157 005d 3A FC 03                		beq	.L258
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_min = -1;
 3158                             		.loc 2 261 10
 3159 0060 61 25                   		cmp	#2, r5
 3160 0062 3A F8 06                		beq	.L259
 3161                             		.loc 2 266 5
 3162 0065 F9 02 45 FF FF 7F 7F    		mov.L	#0x7f7fffff, 276[r0]
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 3163                             		.loc 2 265 5
 3164 006c F9 02 44 FF FF 7F FF    		mov.L	#0xff7fffff, 272[r0]
 3165                             	.LVL267:
 3166                             		.balign 8,3,3
 3167                             	.L190:
 3168                             	.LBE1243:
 3169                             	.LBE1242:
 3170                             	.LBE1241:
 3171                             	.LBE1240:
  81:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_height = params->stride_height;
 3172                             		.loc 1 81 3 is_stmt 1
  82:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_width = params->stride_width;
 3173                             		.loc 1 82 3
  90:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              tflite::micro::GetTensorData<float>(input),
 3174                             		.loc 1 90 70 is_stmt 0
 3175 0073 72 0F 9C 00             		add	#0x9c, r0, r15
 3176 0077 EF 71                   		mov.L	r7, r1
  82:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.stride_width = params->stride_width;
 3177                             		.loc 1 82 37
 3178 0079 E5 60 02 5D             		mov.L	8[r6], 372[r0]
 3179                             	.LVL268:
  83:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_height = params->filter_height;
 3180                             		.loc 1 83 3 is_stmt 1
  83:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_height = params->filter_height;
 3181                             		.loc 1 83 36 is_stmt 0
 3182 007d E5 60 01 58             		mov.L	4[r6], 352[r0]
 3183                             	.LVL269:
  84:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_width = params->filter_width;
 3184                             		.loc 1 84 3 is_stmt 1
  84:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.filter_width = params->filter_width;
 3185                             		.loc 1 84 37 is_stmt 0
 3186 0081 E5 60 04 5B             		mov.L	16[r6], 364[r0]
 3187                             	.LVL270:
  85:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.height = data.padding.height;
 3188                             		.loc 1 85 3 is_stmt 1
  85:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.height = data.padding.height;
 3189                             		.loc 1 85 36 is_stmt 0
 3190 0085 E5 60 03 53             		mov.L	12[r6], 332[r0]
 3191                             	.LVL271:
  86:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.width = data.padding.width;
 3192                             		.loc 1 86 3 is_stmt 1
  86:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.padding_values.width = data.padding.width;
 3193                             		.loc 1 86 35 is_stmt 0
 3194 0089 D5 A0 02 B9             		mov.W	4[r10], 370[r0]
 3195                             	.LVL272:
  87:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_min = activation_min;
 3196                             		.loc 1 87 3 is_stmt 1
  87:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_min = activation_min;
 3197                             		.loc 1 87 34 is_stmt 0
 3198 008d D4 A0 B8                		mov.W	[r10], 368[r0]
 3199                             	.LVL273:
  88:../src/tensorflow/lite/micro/kernels/pooling.cc ****   op_params.float_activation_max = activation_max;
 3200                             		.loc 1 88 3 is_stmt 1
  89:../src/tensorflow/lite/micro/kernels/pooling.cc ****   reference_ops::AveragePool(op_params, tflite::micro::GetTensorShape(input),
 3201                             		.loc 1 89 3
  90:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              tflite::micro::GetTensorData<float>(input),
 3202                             		.loc 1 90 3
  90:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              tflite::micro::GetTensorData<float>(input),
 3203                             		.loc 1 90 70 is_stmt 0
 3204 0090 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 3205                             	.LVL274:
  92:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              tflite::micro::GetTensorData<float>(output));
 3206                             		.loc 1 92 59
 3207 0094 72 0F 84 00             		add	#0x84, r0, r15
 3208 0098 EF D1                   		mov.L	r13, r1
 3209                             	.LBB1251:
 3210                             	.LBB1252:
 3211                             		.loc 6 62 53
 3212 009a E4 70 4D                		mov.L	[r7], 308[r0]
 3213                             	.LVL275:
 3214                             	.LBE1252:
 3215                             	.LBE1251:
  92:../src/tensorflow/lite/micro/kernels/pooling.cc ****                              tflite::micro::GetTensorData<float>(output));
 3216                             		.loc 1 92 59
 3217 009d 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 3218                             	.LVL276:
 3219                             	.LBB1253:
 3220                             	.LBB1254:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 3221                             		.loc 6 55 28
 3222 00a1 61 0D                   		cmp	#0, r13
 3223 00a3 15                      		beq	.L191
 3224 00a4 EC DD                   		mov.L	[r13], r13
 3225                             	.LVL277:
 3226 00a6 EF 00                   		.balign 8,3,2
 3227                             	.L191:
 3228                             	.LBE1254:
 3229                             	.LBE1253:
 3230                             	.LBB1255:
 3231                             	.LBB1256:
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 3232                             		.loc 7 30 3 is_stmt 1
 3233                             	.LBE1256:
 3234                             	.LBE1255:
 3235                             	.LBE1239:
 3236                             	.LBE1238:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 3237                             		.loc 5 194 44
 3238                             	.LBB1427:
 3239                             	.LBB1412:
 3240                             	.LBB1396:
 3241                             	.LBB1383:
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 3242                             		.loc 7 30 3 is_stmt 0
 3243 00a8 ED 07 27                		mov.L	156[r0], r7
 3244                             	.LVL278:
 3245 00ab 61 47                   		cmp	#4, r7
 3246 00ad 3B E3 03                		bne	.L192
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
 3247                             		.loc 7 31 3 is_stmt 1
 3248                             	.LVL279:
 3249                             	.LBE1383:
 3250                             	.LBE1396:
 3251                             	.LBE1412:
 3252                             	.LBE1427:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 3253                             		.loc 5 194 44
 3254                             	.LBB1428:
 3255                             	.LBB1413:
 3256                             	.LBB1397:
 3257                             	.LBB1384:
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
 3258                             		.loc 7 31 3 is_stmt 0
 3259 00b0 ED 07 21                		mov.L	132[r0], r7
 3260 00b3 61 47                   		cmp	#4, r7
 3261 00b5 3B DB 03                		bne	.L192
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 3262                             		.loc 7 32 3 is_stmt 1
 3263                             	.LVL280:
 3264                             	.LBB1257:
 3265                             	.LBB1258:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 3266                             		.loc 5 440 3
 3267                             	.LBB1259:
 3268                             	.LBB1260:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3269                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3270                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3271                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3272                             		.loc 5 198 34 is_stmt 0
 3273 00b8 E5 00 28 47             		mov.L	160[r0], 284[r0]
 3274                             	.LVL281:
 3275                             	.LBE1260:
 3276                             	.LBE1259:
 3277                             	.LBB1261:
 3278                             	.LBB1262:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3279                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3280                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3281                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3282                             		.loc 5 198 34 is_stmt 0
 3283 00bc E5 00 22 3D             		mov.L	136[r0], 244[r0]
 3284                             	.LVL282:
 3285                             	.LBE1262:
 3286                             	.LBE1261:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 3287                             		.loc 5 440 3
 3288 00c0 ED 04 3D                		mov.L	244[r0], r4
 3289 00c3 ED 05 47                		mov.L	284[r0], r5
 3290 00c6 47 54                   		cmp	r5, r4
 3291 00c8 3B C8 03                		bne	.L192
 3292                             		.loc 5 441 3 is_stmt 1
 3293                             	.LVL283:
 3294                             	.LBE1258:
 3295                             	.LBE1257:
 3296                             	.LBE1384:
 3297                             	.LBE1397:
 3298                             	.LBE1413:
 3299                             	.LBE1428:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3300                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3301                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3302                             		.loc 5 198 5
 3303                             	.LBB1429:
 3304                             	.LBB1414:
 3305                             	.LBB1398:
 3306                             	.LBB1385:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_height = input_shape.Dims(1);
 3307                             		.loc 7 33 3
 3308                             	.LBB1263:
 3309                             	.LBB1264:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 3310                             		.loc 5 440 3
 3311                             	.LBB1265:
 3312                             	.LBB1266:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3313                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3314                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3315                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3316                             		.loc 5 198 34 is_stmt 0
 3317 00cb ED 08 2B                		mov.L	172[r0], r8
 3318                             	.LVL284:
 3319                             	.LBE1266:
 3320                             	.LBE1265:
 3321                             	.LBB1267:
 3322                             	.LBB1268:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3323                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3324                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3325                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3326                             		.loc 5 198 34 is_stmt 0
 3327 00ce ED 09 25                		mov.L	148[r0], r9
 3328                             	.LVL285:
 3329                             	.LBE1268:
 3330                             	.LBE1267:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 3331                             		.loc 5 440 3
 3332 00d1 47 89                   		cmp	r8, r9
 3333 00d3 3B BD 03                		bne	.L192
 3334                             		.loc 5 441 3 is_stmt 1
 3335                             	.LVL286:
 3336                             	.LBE1264:
 3337                             	.LBE1263:
 3338                             	.LBE1385:
 3339                             	.LBE1398:
 3340                             	.LBE1414:
 3341                             	.LBE1429:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3342                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3343                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3344                             		.loc 5 198 5
 3345                             	.LBB1430:
 3346                             	.LBB1415:
 3347                             	.LBB1399:
 3348                             	.LBB1386:
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_width = input_shape.Dims(2);
 3349                             		.loc 7 34 3
 3350                             	.LBB1269:
 3351                             	.LBB1270:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3352                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3353                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3354                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3355                             		.loc 5 198 34 is_stmt 0
 3356 00d6 E5 00 29 46             		mov.L	164[r0], 280[r0]
 3357                             	.LVL287:
 3358                             	.LBE1270:
 3359                             	.LBE1269:
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_height = output_shape.Dims(1);
 3360                             		.loc 7 35 3 is_stmt 1
 3361                             	.LBB1271:
 3362                             	.LBB1272:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3363                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3364                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3365                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3366                             		.loc 5 198 34 is_stmt 0
 3367 00da ED 0C 2A                		mov.L	168[r0], r12
 3368                             	.LVL288:
 3369                             	.LBE1272:
 3370                             	.LBE1271:
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_width = output_shape.Dims(2);
 3371                             		.loc 7 36 3 is_stmt 1
 3372                             	.LBB1273:
 3373                             	.LBB1274:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3374                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3375                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3376                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3377                             		.loc 5 198 34 is_stmt 0
 3378 00dd E5 00 23 3F             		mov.L	140[r0], 252[r0]
 3379                             	.LVL289:
 3380                             	.LBE1274:
 3381                             	.LBE1273:
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_height = params.stride_height;
 3382                             		.loc 7 37 3 is_stmt 1
 3383                             	.LBB1275:
 3384                             	.LBB1276:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 3385                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3386                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3387                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3388                             		.loc 5 198 34 is_stmt 0
 3389 00e1 E5 00 24 3C             		mov.L	144[r0], 240[r0]
 3390                             	.LVL290:
 3391                             	.LBE1276:
 3392                             	.LBE1275:
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_width = params.stride_width;
 3393                             		.loc 7 38 3 is_stmt 1
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   for (int batch = 0; batch < batches; ++batch) {
 3394                             		.loc 7 39 3
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 3395                             		.loc 7 40 3
 3396                             	.LBB1277:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 3397                             		.loc 7 40 29 is_stmt 0
 3398 00e5 61 04                   		cmp	#0, r4
 3399 00e7 2A 05 38 6C 02          		ble	.L248
 3400 00ec ED 05 3F                		mov.L	252[r0], r5
 3401 00ef ED 07 3C                		mov.L	240[r0], r7
 3402 00f2 4F 75                   		mul	r7, r5
 3403 00f4 4F 95                   		mul	r9, r5
 3404 00f6 EF 7A                   		mov.L	r7, r10
 3405                             	.LVL291:
 3406 00f8 4F 9A                   		mul	r9, r10
 3407 00fa FF 37 C9                		mul	r12, r9, r7
 3408 00fd 6C 25                   		shll	#2, r5
 3409 00ff E7 05 5F                		mov.L	r5, 380[r0]
 3410 0102 FD C2 A4                		shll	#2, r10, r4
 3411 0105 E7 04 5E                		mov.L	r4, 376[r0]
 3412 0108 FD C2 95                		shll	#2, r9, r5
 3413 010b E7 05 41                		mov.L	r5, 260[r0]
 3414 010e 6C 27                   		shll	#2, r7
 3415 0110 E7 07 50                		mov.L	r7, 320[r0]
 3416 0113 F9 06 59 00             		mov.L	#0, 356[r0]
 3417 0117 F9 06 5A 00             		mov.L	#0, 360[r0]
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 3418                             		.loc 7 40 12
 3419 011b F9 06 55 00             		mov.L	#0, 340[r0]
 3420                             	.LBB1278:
 3421                             	.LBB1279:
 3422                             	.LBB1280:
 3423                             	.LBB1281:
 3424                             	.LBB1282:
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 3425                             		.loc 7 58 56
 3426 011f E7 0D 57                		mov.L	r13, 348[r0]
 3427 0122 EF CE                   		mov.L	r12, r14
 3428 0124 E7 09 51                		mov.L	r9, 324[r0]
 3429 0127 EF 8F                   		mov.L	r8, r15
 3430                             	.LVL292:
 3431                             		.balign 8,3,2
 3432                             	.L196:
 3433                             	.LBE1282:
 3434                             	.LBE1281:
 3435                             	.LBE1280:
 3436                             	.LBE1279:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 3437                             		.loc 7 41 31
 3438 0129 ED 07 3F                		mov.L	252[r0], r7
 3439 012c 61 07                   		cmp	#0, r7
 3440 012e 2A 05 38 01 02          		ble	.L198
 3441 0133 DD 04 B9                		mov.W	370[r0], r4
 3442 0136 E7 04 4E                		mov.L	r4, 312[r0]
 3443 0139 E5 00 5A 56             		mov.L	360[r0], 344[r0]
 3444 013d EF 4D                   		mov.L	r4, r13
 3445 013f 7E 1D                   		neg	r13
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 3446                             		.loc 7 41 14
 3447 0141 F9 06 49 00             		mov.L	#0, 292[r0]
 3448 0145 EF F8                   		mov.L	r15, r8
 3449 0147 E7 0D 3E                		mov.L	r13, 248[r0]
 3450                             	.LVL293:
 3451                             		.balign 8,3,2
 3452                             	.L199:
 3453                             	.LBB1355:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 3454                             		.loc 7 42 33
 3455 014a ED 05 3C                		mov.L	240[r0], r5
 3456 014d 61 05                   		cmp	#0, r5
 3457 014f 2A 05 38 AC 01          		ble	.L201
 3458 0154 ED 0F 4E                		mov.L	312[r0], r15
 3459 0157 FD 74 4F 00             		max	#0, r15
 3460 015b ED 07 46                		mov.L	280[r0], r7
 3461 015e 06 89 07 4E             		add	312[r0], r7
 3462 0162 ED 05 5B                		mov.L	364[r0], r5
 3463 0165 FC 17 75                		min	r7, r5
 3464 0168 E7 05 48                		mov.L	r5, 288[r0]
 3465 016b ED 07 59                		mov.L	356[r0], r7
 3466 016e 06 89 07 3E             		add	248[r0], r7
 3467 0172 DD 0A B8                		mov.W	368[r0], r10
 3468 0175 E7 0A 43                		mov.L	r10, 268[r0]
 3469 0178 4B F7                   		add	r15, r7
 3470 017a 7E 1A                   		neg	r10
 3471 017c E7 0A 40                		mov.L	r10, 256[r0]
 3472 017f 4F E7                   		mul	r14, r7
 3473 0181 E7 07 54                		mov.L	r7, 336[r0]
 3474 0184 E5 00 56 52             		mov.L	344[r0], 328[r0]
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 3475                             		.loc 7 42 16
 3476 0188 F9 06 42 00             		mov.L	#0, 264[r0]
 3477 018c 06 89 05 3E             		add	248[r0], r5
 3478 0190 E7 05 4F                		mov.L	r5, 316[r0]
 3479 0193 ED 0D 55                		mov.L	340[r0], r13
 3480                             	.LVL294:
 3481                             		.balign 8,3,1
 3482                             	.L202:
 3483                             	.LBB1345:
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 3484                             		.loc 7 43 39
 3485 0196 61 08                   		cmp	#0, r8
 3486 0198 2A 05 38 33 01          		ble	.L214
 3487 019d ED 09 43                		mov.L	268[r0], r9
 3488 01a0 FD 74 49 00             		max	#0, r9
 3489 01a4 ED 0C 43                		mov.L	268[r0], r12
 3490 01a7 4B EC                   		add	r14, r12
 3491 01a9 ED 0A 53                		mov.L	332[r0], r10
 3492 01ac FC 17 AC                		min	r10, r12
 3493                             	.LBB1332:
 3494                             	.LBB1307:
 3495                             	.LBB1283:
 3496                             	.LBB1284:
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 3497                             		.loc 7 62 25
 3498 01af ED 0B 40                		mov.L	256[r0], r11
 3499 01b2 4B 9B                   		add	r9, r11
 3500 01b4 ED 0A 54                		mov.L	336[r0], r10
 3501 01b7 4B BA                   		add	r11, r10
 3502 01b9 ED 02 57                		mov.L	348[r0], r2
 3503 01bc 06 89 02 52             		add	328[r0], r2
 3504 01c0 ED 04 41                		mov.L	260[r0], r4
 3505 01c3 4F 4A                   		mul	r4, r10
 3506 01c5 71 97 01                		add	#1, r9, r7
 3507 01c8 FF 05 2A                		sub	r2, r10, r5
 3508 01cb E7 05 4A                		mov.L	r5, 296[r0]
 3509                             	.LBE1284:
 3510                             	.LBE1283:
 3511                             	.LBE1307:
 3512                             	.LBE1332:
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 3513                             		.loc 7 43 18
 3514 01ce 66 0A                   		mov.L	#0, r10
 3515 01d0 06 89 07 40             		add	256[r0], r7
 3516 01d4 E7 07 4B                		mov.L	r7, 300[r0]
 3517 01d7 ED 07 40                		mov.L	256[r0], r7
 3518 01da 4B C7                   		add	r12, r7
 3519 01dc E7 07 4C                		mov.L	r7, 304[r0]
 3520                             	.LVL295:
 3521 01df 03                      		.balign 8,3,2
 3522                             	.L203:
 3523                             	.LBB1333:
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
 3524                             		.loc 7 44 11 is_stmt 1
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 3525                             		.loc 7 46 11
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 3526                             		.loc 7 50 11
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 3527                             		.loc 7 51 11
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 3528                             		.loc 7 53 11
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 3529                             		.loc 7 54 11
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           float filter_count = 0;
 3530                             		.loc 7 56 11
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 3531                             		.loc 7 57 11
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 3532                             		.loc 7 58 11
 3533                             	.LBB1308:
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 3534                             		.loc 7 58 56 is_stmt 0
 3535 01e0 ED 04 48                		mov.L	288[r0], r4
 3536 01e3 47 F4                   		cmp	r15, r4
 3537 01e5 2A 05 38 99 02          		ble	.L260
 3538                             	.LVL296:
 3539                             		.balign 8,3,5
 3540                             	.L296:
 3541                             	.LBE1308:
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 3542                             		.loc 7 57 17
 3543 01ea 66 03                   		mov.L	#0x0, r3
 3544 01ec ED 01 4A                		mov.L	296[r0], r1
 3545 01ef 4B 21                   		add	r2, r1
 3546 01f1 ED 05 3E                		mov.L	248[r0], r5
 3547 01f4 4B F5                   		add	r15, r5
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           float filter_count = 0;
 3548                             		.loc 7 56 17
 3549 01f6 EF 37                   		mov.L	r3, r7
 3550 01f8 EF 26                   		mov.L	r2, r6
 3551                             	.LVL297:
 3552                             		.balign 8,3,1
 3553                             	.L211:
 3554                             	.LBB1309:
 3555                             	.LBB1302:
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 3556                             		.loc 7 60 58
 3557 01fa 47 C9                   		cmp	r12, r9
 3558 01fc 28 72                   		bge	.L205
 3559                             	.LBB1297:
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 3560                             		.loc 7 62 15 is_stmt 1
 3561                             	.LVL298:
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               total +=
 3562                             		.loc 7 63 15
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)];
 3563                             		.loc 7 64 15
 3564                             	.LBB1285:
 3565                             	.LBB1286:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 3566                             		.loc 5 386 3
 3567                             	.LBE1286:
 3568                             	.LBE1285:
 3569                             	.LBE1297:
 3570                             	.LBE1302:
 3571                             	.LBE1309:
 3572                             	.LBE1333:
 3573                             	.LBE1345:
 3574                             	.LBE1355:
 3575                             	.LBE1278:
 3576                             	.LBE1277:
 3577                             	.LBE1386:
 3578                             	.LBE1399:
 3579                             	.LBE1415:
 3580                             	.LBE1430:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 3581                             		.loc 5 194 44
 3582                             	.LBB1431:
 3583                             	.LBB1416:
 3584                             	.LBB1400:
 3585                             	.LBB1387:
 3586                             	.LBB1374:
 3587                             	.LBB1365:
 3588                             	.LBB1356:
 3589                             	.LBB1346:
 3590                             	.LBB1334:
 3591                             	.LBB1310:
 3592                             	.LBB1303:
 3593                             	.LBB1298:
 3594                             	.LBB1292:
 3595                             	.LBB1287:
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 3596                             		.loc 5 387 3
 3597                             	.LBE1287:
 3598                             	.LBE1292:
 3599                             	.LBE1298:
 3600                             	.LBE1303:
 3601                             	.LBE1310:
 3602                             	.LBE1334:
 3603                             	.LBE1346:
 3604                             	.LBE1356:
 3605                             	.LBE1365:
 3606                             	.LBE1374:
 3607                             	.LBE1387:
 3608                             	.LBE1400:
 3609                             	.LBE1416:
 3610                             	.LBE1431:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 3611                             		.loc 5 217 50
 3612                             	.LBB1432:
 3613                             	.LBB1417:
 3614                             	.LBB1401:
 3615                             	.LBB1388:
 3616                             	.LBB1375:
 3617                             	.LBB1366:
 3618                             	.LBB1357:
 3619                             	.LBB1347:
 3620                             	.LBB1335:
 3621                             	.LBB1311:
 3622                             	.LBB1304:
 3623                             	.LBB1299:
 3624                             	.LBB1293:
 3625                             	.LBB1288:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 3626                             		.loc 5 388 3
 3627 01fe ED 04 47                		mov.L	284[r0], r4
 3628 0201 47 D4                   		cmp	r13, r4
 3629 0203 2A 05 38 8B 02          		ble	.L192
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 3630                             		.loc 5 389 3
 3631 0208 61 05                   		cmp	#0, r5
 3632 020a 28 05 38 84 02          		blt	.L192
 3633 020f ED 04 46                		mov.L	280[r0], r4
 3634 0212 47 54                   		cmp	r5, r4
 3635 0214 2A 05 38 7A 02          		ble	.L192
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 3636                             		.loc 5 390 3
 3637 0219 61 0B                   		cmp	#0, r11
 3638 021b 28 05 38 73 02          		blt	.L192
 3639 0220 47 EB                   		cmp	r14, r11
 3640 0222 29 05 38 6C 02          		bge	.L192
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 3641                             		.loc 5 391 3
 3642 0227 47 A8                   		cmp	r10, r8
 3643 0229 2A 05 38 65 02          		ble	.L192
 3644 022e ED 04 4B                		mov.L	300[r0], r4
 3645 0231 ED 02 4D                		mov.L	308[r0], r2
 3646 0234 4B 12                   		add	r1, r2
 3647 0236 E7 0A 60                		mov.L	r10, 384[r0]
 3648 0239 2E 1F                   		bra	.L209
 3649                             	.LVL299:
 3650                             	.L210:
 3651                             	.LBE1288:
 3652                             	.LBE1293:
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 3653                             		.loc 7 62 15
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               total +=
 3654                             		.loc 7 63 15
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)];
 3655                             		.loc 7 64 15
 3656                             	.LBB1294:
 3657                             	.LBB1289:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 3658                             		.loc 5 386 3
 3659                             	.LBE1289:
 3660                             	.LBE1294:
 3661                             	.LBE1299:
 3662                             	.LBE1304:
 3663                             	.LBE1311:
 3664                             	.LBE1335:
 3665                             	.LBE1347:
 3666                             	.LBE1357:
 3667                             	.LBE1366:
 3668                             	.LBE1375:
 3669                             	.LBE1388:
 3670                             	.LBE1401:
 3671                             	.LBE1417:
 3672                             	.LBE1432:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 3673                             		.loc 5 194 44
 3674                             	.LBB1433:
 3675                             	.LBB1418:
 3676                             	.LBB1402:
 3677                             	.LBB1389:
 3678                             	.LBB1376:
 3679                             	.LBB1367:
 3680                             	.LBB1358:
 3681                             	.LBB1348:
 3682                             	.LBB1336:
 3683                             	.LBB1312:
 3684                             	.LBB1305:
 3685                             	.LBB1300:
 3686                             	.LBB1295:
 3687                             	.LBB1290:
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 3688                             		.loc 5 387 3
 3689                             	.LBE1290:
 3690                             	.LBE1295:
 3691                             	.LBE1300:
 3692                             	.LBE1305:
 3693                             	.LBE1312:
 3694                             	.LBE1336:
 3695                             	.LBE1348:
 3696                             	.LBE1358:
 3697                             	.LBE1367:
 3698                             	.LBE1376:
 3699                             	.LBE1389:
 3700                             	.LBE1402:
 3701                             	.LBE1418:
 3702                             	.LBE1433:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 3703                             		.loc 5 217 50
 3704                             	.LBB1434:
 3705                             	.LBB1419:
 3706                             	.LBB1403:
 3707                             	.LBB1390:
 3708                             	.LBB1377:
 3709                             	.LBB1368:
 3710                             	.LBB1359:
 3711                             	.LBB1349:
 3712                             	.LBB1337:
 3713                             	.LBB1313:
 3714                             	.LBB1306:
 3715                             	.LBB1301:
 3716                             	.LBB1296:
 3717                             	.LBB1291:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 3718                             		.loc 5 388 3
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 3719                             		.loc 5 389 3
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 3720                             		.loc 5 390 3
 3721 023b 61 04                   		cmp	#0, r4
 3722 023d 28 05 38 51 02          		blt	.L192
 3723 0242 71 4A 01                		add	#1, r4, r10
 3724 0245 E7 0A 3B                		mov.L	r10, 236[r0]
 3725 0248 06 89 02 41             		add	260[r0], r2
 3726 024c 47 4E                   		cmp	r4, r14
 3727 024e 2A 05 38 40 02          		ble	.L192
 3728 0253 EF A4                   		mov.L	r10, r4
 3729                             	.LVL300:
 3730 0255 FC 13 00                		.balign 8,3,6
 3731                             	.L209:
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 3732                             		.loc 5 392 3
 3733                             	.LBE1291:
 3734                             	.LBE1296:
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             }
 3735                             		.loc 7 66 27 is_stmt 0
 3736 0258 FD 72 23 00 00 80 3F    		fadd	#0x3f800000, r3
 3737                             	.LVL301:
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)];
 3738                             		.loc 7 64 21
 3739 025f EC 2A                   		mov.L	[r2], r10
 3740 0261 FC 8B A7                		fadd	r10, r7
 3741                             	.LVL302:
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             }
 3742                             		.loc 7 66 15 is_stmt 1
 3743                             	.LBE1301:
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 3744                             		.loc 7 60 58 is_stmt 0
 3745 0264 ED 0A 4C                		mov.L	304[r0], r10
 3746 0267 47 A4                   		cmp	r10, r4
 3747 0269 21 D2                   		bne	.L210
 3748 026b ED 0A 60                		mov.L	384[r0], r10
 3749                             	.LVL303:
 3750                             		.balign 8,3,1
 3751                             	.L205:
 3752 026e 62 15                   		add	#1, r5
 3753                             	.LVL304:
 3754 0270 06 89 01 50             		add	320[r0], r1
 3755                             	.LBE1306:
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 3756                             		.loc 7 58 56
 3757 0274 ED 04 4F                		mov.L	316[r0], r4
 3758 0277 47 54                   		cmp	r5, r4
 3759 0279 21 81                   		bne	.L211
 3760 027b EF 62                   		mov.L	r6, r2
 3761 027d FC 93 37                		fdiv	r3, r7
 3762                             	.LVL305:
 3763                             	.LBE1313:
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           output_data[Offset(output_shape, batch, out_y, out_x, channel)] =
 3764                             		.loc 7 69 11 is_stmt 1
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(average, params.float_activation_min,
 3765                             		.loc 7 70 11
 3766                             	.LBB1314:
 3767                             	.LBB1315:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 3768                             		.loc 5 386 3
 3769                             	.LBE1315:
 3770                             	.LBE1314:
 3771                             	.LBE1337:
 3772                             	.LBE1349:
 3773                             	.LBE1359:
 3774                             	.LBE1368:
 3775                             	.LBE1377:
 3776                             	.LBE1390:
 3777                             	.LBE1403:
 3778                             	.LBE1419:
 3779                             	.LBE1434:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 3780                             		.loc 5 194 44
 3781                             	.LBB1435:
 3782                             	.LBB1420:
 3783                             	.LBB1404:
 3784                             	.LBB1391:
 3785                             	.LBB1378:
 3786                             	.LBB1369:
 3787                             	.LBB1360:
 3788                             	.LBB1350:
 3789                             	.LBB1338:
 3790                             	.LBB1321:
 3791                             	.LBB1316:
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 3792                             		.loc 5 387 3
 3793                             	.LBE1316:
 3794                             	.LBE1321:
 3795                             	.LBE1338:
 3796                             	.LBE1350:
 3797                             	.LBE1360:
 3798                             	.LBE1369:
 3799                             	.LBE1378:
 3800                             	.LBE1391:
 3801                             	.LBE1404:
 3802                             	.LBE1420:
 3803                             	.LBE1435:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 3804                             		.loc 5 217 50
 3805                             	.LBB1436:
 3806                             	.LBB1421:
 3807                             	.LBB1405:
 3808                             	.LBB1392:
 3809                             	.LBB1379:
 3810                             	.LBB1370:
 3811                             	.LBB1361:
 3812                             	.LBB1351:
 3813                             	.LBB1339:
 3814                             	.LBB1322:
 3815                             	.LBB1317:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 3816                             		.loc 5 388 3
 3817 0280 ED 05 3D                		mov.L	244[r0], r5
 3818                             	.LVL306:
 3819 0283 47 D5                   		cmp	r13, r5
 3820 0285 2A 05 38 09 02          		ble	.L192
 3821                             	.LVL307:
 3822                             		.balign 8,3,2
 3823                             	.L297:
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 3824                             		.loc 5 389 3
 3825 028a ED 04 3F                		mov.L	252[r0], r4
 3826 028d ED 05 49                		mov.L	292[r0], r5
 3827 0290 47 54                   		cmp	r5, r4
 3828 0292 2A 05 38 FC 01          		ble	.L192
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 3829                             		.loc 5 390 3
 3830 0297 ED 04 3C                		mov.L	240[r0], r4
 3831 029a ED 05 42                		mov.L	264[r0], r5
 3832 029d 47 54                   		cmp	r5, r4
 3833 029f 2A 05 38 EF 01          		ble	.L192
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 3834                             		.loc 5 391 3
 3835 02a4 ED 04 51                		mov.L	324[r0], r4
 3836 02a7 47 A4                   		cmp	r10, r4
 3837 02a9 2A 05 38 E5 01          		ble	.L192
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 3838                             		.loc 5 392 3
 3839                             	.LVL308:
 3840                             	.LBE1317:
 3841                             	.LBE1322:
 3842                             	.LBB1323:
 3843                             	.LBB1324:
 3844                             	.LBB1325:
 224:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	return __b;
 3845                             		.loc 8 224 7 is_stmt 0
 3846 02ae ED 05 44                		mov.L	272[r0], r5
 3847 02b1 FC 87 57                		fcmp	r5, r7
 3848 02b4 26 04                   		bpz	.L212
 3849                             		.loc 8 225 9
 3850 02b6 EF 57                   		mov.L	r5, r7
 3851                             	.LVL309:
 3852                             		.balign 8,3,2
 3853                             	.L212:
 3854                             	.LBE1325:
 3855                             	.LBE1324:
 3856                             	.LBB1326:
 3857                             	.LBB1327:
 200:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	return __b;
 3858                             		.loc 8 200 7
 3859 02b8 ED 04 45                		mov.L	276[r0], r4
 3860 02bb FC 87 74                		fcmp	r7, r4
 3861 02be 26 05 38 A7 01          		bn	.L213
 3862                             	.LVL310:
 3863                             	.LBE1327:
 3864                             	.LBE1326:
 3865                             	.LBE1323:
 3866                             	.LBE1339:
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 3867                             		.loc 7 43 9
 3868 02c3 62 1A                   		add	#1, r10
 3869                             	.LVL311:
 3870                             	.LBB1340:
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(average, params.float_activation_min,
 3871                             		.loc 7 70 75
 3872 02c5 FD 22 27                		mov.L	r7, [r2+]
 3873                             	.LBE1340:
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 3874                             		.loc 7 43 39
 3875 02c8 47 A8                   		cmp	r10, r8
 3876 02ca 3B 16 FF                		bne	.L203
 3877                             	.LVL312:
 3878                             		.balign 8,3,2
 3879                             	.L214:
 3880                             	.LBE1351:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 3881                             		.loc 7 42 7
 3882 02cd ED 04 42                		mov.L	264[r0], r4
 3883 02d0 62 14                   		add	#1, r4
 3884 02d2 E7 04 42                		mov.L	r4, 264[r0]
 3885                             	.LVL313:
 3886 02d5 ED 05 43                		mov.L	268[r0], r5
 3887 02d8 ED 07 58                		mov.L	352[r0], r7
 3888 02db 43 75                   		sub	r7, r5
 3889 02dd E7 05 43                		mov.L	r5, 268[r0]
 3890 02e0 ED 0A 40                		mov.L	256[r0], r10
 3891 02e3 4B 7A                   		add	r7, r10
 3892 02e5 E7 0A 40                		mov.L	r10, 256[r0]
 3893 02e8 ED 04 52                		mov.L	328[r0], r4
 3894                             	.LVL314:
 3895 02eb 06 89 04 41             		add	260[r0], r4
 3896 02ef E7 04 52                		mov.L	r4, 328[r0]
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 3897                             		.loc 7 42 33
 3898 02f2 ED 05 42                		mov.L	264[r0], r5
 3899 02f5 ED 07 3C                		mov.L	240[r0], r7
 3900 02f8 47 75                   		cmp	r7, r5
 3901 02fa 3B 9C FE                		bne	.L202
 3902                             	.LVL315:
 3903                             		.balign 8,3,2
 3904                             	.L201:
 3905                             	.LBE1361:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 3906                             		.loc 7 41 5
 3907 02fd ED 07 49                		mov.L	292[r0], r7
 3908 0300 62 17                   		add	#1, r7
 3909 0302 E7 07 49                		mov.L	r7, 292[r0]
 3910                             	.LVL316:
 3911 0305 ED 0A 56                		mov.L	344[r0], r10
 3912 0308 06 89 0A 5E             		add	376[r0], r10
 3913 030c E7 0A 56                		mov.L	r10, 344[r0]
 3914 030f ED 04 3E                		mov.L	248[r0], r4
 3915 0312 06 89 04 5D             		add	372[r0], r4
 3916 0316 E7 04 3E                		mov.L	r4, 248[r0]
 3917 0319 ED 05 4E                		mov.L	312[r0], r5
 3918 031c ED 07 5D                		mov.L	372[r0], r7
 3919                             	.LVL317:
 3920 031f 43 75                   		sub	r7, r5
 3921 0321 E7 05 4E                		mov.L	r5, 312[r0]
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 3922                             		.loc 7 41 31
 3923 0324 ED 0A 49                		mov.L	292[r0], r10
 3924 0327 ED 04 3F                		mov.L	252[r0], r4
 3925 032a 47 4A                   		cmp	r4, r10
 3926 032c 3B 1E FE                		bne	.L199
 3927 032f EF 8F                   		mov.L	r8, r15
 3928                             	.LVL318:
 3929                             		.balign 8,3,2
 3930                             	.L198:
 3931                             	.LBE1370:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 3932                             		.loc 7 40 3
 3933 0331 ED 04 55                		mov.L	340[r0], r4
 3934 0334 62 14                   		add	#1, r4
 3935 0336 E7 04 55                		mov.L	r4, 340[r0]
 3936                             	.LVL319:
 3937 0339 ED 05 5A                		mov.L	360[r0], r5
 3938 033c 06 89 05 5F             		add	380[r0], r5
 3939 0340 E7 05 5A                		mov.L	r5, 360[r0]
 3940 0343 ED 07 59                		mov.L	356[r0], r7
 3941 0346 06 89 07 46             		add	280[r0], r7
 3942 034a E7 07 59                		mov.L	r7, 356[r0]
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 3943                             		.loc 7 40 29
 3944 034d ED 0A 3D                		mov.L	244[r0], r10
 3945 0350 47 A4                   		cmp	r10, r4
 3946 0352 3B D7 FD                		bne	.L196
 3947                             	.LVL320:
 3948                             		.balign 8,3,1
 3949                             	.L248:
 3950                             	.LBE1379:
 3951                             	.LBE1392:
 3952                             	.LBE1405:
 3953                             	.LBE1421:
 3954                             	.LBE1436:
 340:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 3955                             		.loc 1 340 10
 3956 0355 66 01                   		mov.L	#0, r1
 3957 0357 03                      		.balign 8,3,2
 3958                             	.L295:
 341:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3959                             		.loc 1 341 1
 3960 0358 3F 6D 69                		rtsd	#420, r6-r13
 3961                             	.LVL321:
 3962                             	.L218:
 3963                             	.LBB1437:
 3964                             	.LBB1438:
 102:../src/tensorflow/lite/micro/kernels/pooling.cc ****     PoolParams op_params;
 3965                             		.loc 1 102 3 is_stmt 1
 3966                             	.LBB1439:
 118:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(input_shape.DimensionsCount(), 4);
 3967                             		.loc 1 118 5
 118:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(input_shape.DimensionsCount(), 4);
 3968                             		.loc 1 118 67 is_stmt 0
 3969 035b 71 0F 6C                		add	#0x6c, r0, r15
 3970 035e EF 71                   		mov.L	r7, r1
 3971 0360 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 3972                             	.LVL322:
 119:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3973                             		.loc 1 119 5 is_stmt 1
 3974                             	.LBE1439:
 3975                             	.LBE1438:
 3976                             	.LBE1437:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 3977                             		.loc 5 194 44
 3978                             	.LBB1643:
 3979                             	.LBB1625:
 3980                             	.LBB1478:
 119:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3981                             		.loc 1 119 5 is_stmt 0
 3982 0364 AE 8D                   		mov.L	108[r0], r5
 3983 0366 61 45                   		cmp	#4, r5
 3984 0368 3B 28 01                		bne	.L192
 121:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 3985                             		.loc 1 121 5 is_stmt 1
 121:../src/tensorflow/lite/micro/kernels/pooling.cc ****     TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 3986                             		.loc 1 121 69 is_stmt 0
 3987 036b 71 0F 54                		add	#0x54, r0, r15
 3988 036e EF D1                   		mov.L	r13, r1
 3989 0370 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 3990                             	.LVL323:
 122:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3991                             		.loc 1 122 5 is_stmt 1
 3992                             	.LBE1478:
 3993                             	.LBE1625:
 3994                             	.LBE1643:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 3995                             		.loc 5 194 44
 3996                             	.LBB1644:
 3997                             	.LBB1626:
 3998                             	.LBB1479:
 122:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 3999                             		.loc 1 122 5 is_stmt 0
 4000 0374 AD 0D                   		mov.L	84[r0], r5
 4001 0376 61 45                   		cmp	#4, r5
 4002 0378 3B 18 01                		bne	.L192
 124:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4003                             		.loc 1 124 5 is_stmt 1
 4004                             	.LVL324:
 4005                             	.LBB1440:
 4006                             	.LBB1441:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 4007                             		.loc 5 440 3
 4008                             	.LBB1442:
 4009                             	.LBB1443:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4010                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4011                             		.loc 5 197 5
 4012 037b AE 8D                   		mov.L	108[r0], r5
 4013 037d 61 35                   		cmp	#3, r5
 4014 037f 2A 05 38 0F 01          		ble	.L192
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4015                             		.loc 5 198 5
 4016 0384 AE 0C                   		mov.L	100[r0], r4
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4017                             		.loc 5 198 34 is_stmt 0
 4018 0386 61 55                   		cmp	#5, r5
 4019 0388 2A 05 38 BC 00          		ble	.L243
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4020                             		.loc 5 198 36
 4021 038d AF 03                   		mov.L	112[r0], r3
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4022                             		.loc 5 198 34
 4023 038f A8 BD                   		mov.L	12[r3], r5
 4024                             	.LVL325:
 4025                             	.LBE1443:
 4026                             	.LBE1442:
 4027                             	.LBE1441:
 4028                             	.LBE1440:
 4029                             	.LBE1479:
 4030                             	.LBE1626:
 4031                             	.LBE1644:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4032                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4033                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4034                             		.loc 5 198 5
 4035                             	.LBB1645:
 4036                             	.LBB1627:
 4037                             	.LBB1480:
 4038                             	.LBB1449:
 4039                             	.LBB1446:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 4040                             		.loc 5 440 3 is_stmt 0
 4041 0391 47 54                   		cmp	r5, r4
 4042 0393 3B FD 00                		bne	.L192
 4043                             		.loc 5 441 3 is_stmt 1
 4044                             	.LVL326:
 4045                             	.LBE1446:
 4046                             	.LBE1449:
 4047                             	.LBE1480:
 4048                             	.LBE1627:
 4049                             	.LBE1645:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4050                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4051                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4052                             		.loc 5 198 5
 4053                             	.LBB1646:
 4054                             	.LBB1628:
 4055                             	.LBB1481:
 126:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.n = 1;
 4056                             		.loc 1 126 5
 127:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.h = input_shape.Dims(1);
 4057                             		.loc 1 127 5
 128:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.w = input_shape.Dims(2);
 4058                             		.loc 1 128 18 is_stmt 0
 4059 0396 E5 30 01 36             		mov.L	4[r3], 216[r0]
 4060                             	.LBB1450:
 4061                             	.LBB1451:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4062                             		.loc 5 198 34
 4063 039a A8 B4                   		mov.L	8[r3], r4
 4064                             	.LBE1451:
 4065                             	.LBE1450:
 127:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.h = input_shape.Dims(1);
 4066                             		.loc 1 127 18
 4067 039c F9 06 35 01             		mov.L	#1, 212[r0]
 128:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.w = input_shape.Dims(2);
 4068                             		.loc 1 128 5 is_stmt 1
 4069                             	.LVL327:
 4070                             	.LBB1455:
 4071                             	.LBB1456:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4072                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4073                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4074                             		.loc 5 198 5
 4075                             	.LBE1456:
 4076                             	.LBE1455:
 129:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.c = depth;
 4077                             		.loc 1 129 5
 4078                             	.LBB1458:
 4079                             	.LBB1452:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4080                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4081                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4082                             		.loc 5 198 5
 4083                             		.balign 8,3,1
 4084                             	.L256:
 4085                             	.LBE1452:
 4086                             	.LBE1458:
 140:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.padding.h = data.padding.height;
 4087                             		.loc 1 140 26 is_stmt 0
 4088 03a0 E5 60 01 0F             		mov.L	4[r6], 60[r0]
 139:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.stride.w = params->stride_width;
 4089                             		.loc 1 139 26
 4090 03a4 E5 60 02 10             		mov.L	8[r6], 64[r0]
 155:../src/tensorflow/lite/micro/kernels/pooling.cc ****       ctx.buf = context->GetScratchBuffer(context, data.buffer_idx);
 4091                             		.loc 1 155 14
 4092 03a8 ED A2 04                		mov.L	16[r10], r2
 141:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.padding.w = data.padding.width;
 4093                             		.loc 1 141 27
 4094 03ab E5 A0 01 12             		mov.L	4[r10], 72[r0]
 129:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.c = depth;
 4095                             		.loc 1 129 18
 4096 03af E7 04 37                		mov.L	r4, 220[r0]
 130:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4097                             		.loc 1 130 5 is_stmt 1
 142:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.activation.min = data.activation_min;
 4098                             		.loc 1 142 27 is_stmt 0
 4099 03b2 E4 A0 11                		mov.L	[r10], 68[r0]
 130:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4100                             		.loc 1 130 18
 4101 03b5 E7 05 38                		mov.L	r5, 224[r0]
 132:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.n = 1;
 4102                             		.loc 1 132 5 is_stmt 1
 133:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.h = output_shape.Dims(1);
 4103                             		.loc 1 133 5
 143:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.activation.max = data.activation_max;
 4104                             		.loc 1 143 32 is_stmt 0
 4105 03b8 E5 A0 05 13             		mov.L	20[r10], 76[r0]
 149:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.c = 1;
 4106                             		.loc 1 149 19
 4107 03bc E5 60 03 2F             		mov.L	12[r6], 188[r0]
 134:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.w = output_shape.Dims(2);
 4108                             		.loc 1 134 19
 4109 03c0 E5 00 17 32             		mov.L	92[r0], 200[r0]
 135:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.c = depth;
 4110                             		.loc 1 135 19
 4111 03c4 E5 00 18 33             		mov.L	96[r0], 204[r0]
 133:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.h = output_shape.Dims(1);
 4112                             		.loc 1 133 19
 4113 03c8 F9 06 31 01             		mov.L	#1, 196[r0]
 134:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.w = output_shape.Dims(2);
 4114                             		.loc 1 134 5 is_stmt 1
 4115                             	.LVL328:
 4116                             	.LBB1459:
 4117                             	.LBB1460:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4118                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4119                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4120                             		.loc 5 198 5
 4121                             	.LBE1460:
 4122                             	.LBE1459:
 135:../src/tensorflow/lite/micro/kernels/pooling.cc ****     output_dims.c = depth;
 4123                             		.loc 1 135 5
 4124                             	.LBB1461:
 4125                             	.LBB1462:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4126                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4127                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4128                             		.loc 5 198 5
 4129                             	.LBE1462:
 4130                             	.LBE1461:
 136:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4131                             		.loc 1 136 5
 144:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4132                             		.loc 1 144 32 is_stmt 0
 4133 03cc E5 A0 06 14             		mov.L	24[r10], 80[r0]
 136:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4134                             		.loc 1 136 19
 4135 03d0 E7 05 34                		mov.L	r5, 208[r0]
 138:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.stride.h = params->stride_height;
 4136                             		.loc 1 138 5 is_stmt 1
 139:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.stride.w = params->stride_width;
 4137                             		.loc 1 139 5
 140:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.padding.h = data.padding.height;
 4138                             		.loc 1 140 5
 141:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.padding.w = data.padding.width;
 4139                             		.loc 1 141 5
 142:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.activation.min = data.activation_min;
 4140                             		.loc 1 142 5
 143:../src/tensorflow/lite/micro/kernels/pooling.cc ****     pool_params.activation.max = data.activation_max;
 4141                             		.loc 1 143 5
 144:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4142                             		.loc 1 144 5
 146:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.n = 1;
 4143                             		.loc 1 146 5
 147:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.h = params->filter_height;
 4144                             		.loc 1 147 5
 148:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.w = params->filter_width;
 4145                             		.loc 1 148 19 is_stmt 0
 4146 03d3 E5 60 04 2E             		mov.L	16[r6], 184[r0]
 147:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.h = params->filter_height;
 4147                             		.loc 1 147 19
 4148 03d7 F9 06 2D 01             		mov.L	#1, 180[r0]
 148:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.w = params->filter_width;
 4149                             		.loc 1 148 5 is_stmt 1
 149:../src/tensorflow/lite/micro/kernels/pooling.cc ****     filter_dims.c = 1;
 4150                             		.loc 1 149 5
 150:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4151                             		.loc 1 150 5
 150:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4152                             		.loc 1 150 19 is_stmt 0
 4153 03db F9 06 30 01             		mov.L	#1, 192[r0]
 152:../src/tensorflow/lite/micro/kernels/pooling.cc ****     ctx.buf = nullptr;
 4154                             		.loc 1 152 5 is_stmt 1
 153:../src/tensorflow/lite/micro/kernels/pooling.cc ****     ctx.size = 0;
 4155                             		.loc 1 153 5
 153:../src/tensorflow/lite/micro/kernels/pooling.cc ****     ctx.size = 0;
 4156                             		.loc 1 153 13 is_stmt 0
 4157 03df F9 06 39 00             		mov.L	#0, 228[r0]
 154:../src/tensorflow/lite/micro/kernels/pooling.cc ****     if (data.buffer_idx > -1) {
 4158                             		.loc 1 154 5 is_stmt 1
 154:../src/tensorflow/lite/micro/kernels/pooling.cc ****     if (data.buffer_idx > -1) {
 4159                             		.loc 1 154 14 is_stmt 0
 4160 03e3 F9 06 3A 00             		mov.L	#0, 232[r0]
 155:../src/tensorflow/lite/micro/kernels/pooling.cc ****       ctx.buf = context->GetScratchBuffer(context, data.buffer_idx);
 4161                             		.loc 1 155 5 is_stmt 1
 4162 03e7 61 02                   		cmp	#0, r2
 4163 03e9 29 0C                   		blt	.L255
 156:../src/tensorflow/lite/micro/kernels/pooling.cc ****     }
 4164                             		.loc 1 156 7
 156:../src/tensorflow/lite/micro/kernels/pooling.cc ****     }
 4165                             		.loc 1 156 42 is_stmt 0
 4166 03eb ED BA 11                		mov.L	68[r11], r10
 4167                             	.LVL329:
 4168 03ee EF B1                   		mov.L	r11, r1
 4169 03f0 7F 1A                   		jsr	r10
 4170                             	.LVL330:
 156:../src/tensorflow/lite/micro/kernels/pooling.cc ****     }
 4171                             		.loc 1 156 15
 4172 03f2 E7 01 39                		mov.L	r1, 228[r0]
 4173                             		.balign 8,3,1
 4174                             	.L255:
 159:../src/tensorflow/lite/micro/kernels/pooling.cc ****         arm_avgpool_s8(&ctx, &pool_params, &input_dims,
 4175                             		.loc 1 159 5 is_stmt 1
 4176                             	.LVL331:
 4177                             	.LBB1463:
 4178                             	.LBB1464:
 4179                             		.loc 6 62 53 is_stmt 0
 4180 03f5 EC 74                   		mov.L	[r7], r4
 4181                             	.LVL332:
 4182                             	.LBE1464:
 4183                             	.LBE1463:
 4184                             	.LBB1465:
 4185                             	.LBB1466:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 4186                             		.loc 6 55 28
 4187 03f7 61 0D                   		cmp	#0, r13
 4188 03f9 13                      		beq	.L246
 4189 03fa EC DD                   		mov.L	[r13], r13
 4190                             	.LVL333:
 4191                             		.balign 8,3,3
 4192                             	.L246:
 4193                             	.LBE1466:
 4194                             	.LBE1465:
 159:../src/tensorflow/lite/micro/kernels/pooling.cc ****         arm_avgpool_s8(&ctx, &pool_params, &input_dims,
 4195                             		.loc 1 159 5
 4196 03fc 72 07 C4 00             		add	#0xc4, r0, r7
 4197                             	.LVL334:
 4198 0400 72 0A B4 00             		add	#0xb4, r0, r10
 4199 0404 E7 0D 02                		mov.L	r13, 8[r0]
 4200 0407 E3 0A                   		mov.L	r10, [r0]
 4201 0409 A0 0F                   		mov.L	r7, 4[r0]
 4202 040b 72 03 D4 00             		add	#0xd4, r0, r3
 4203 040f 71 02 3C                		add	#60, r0, r2
 4204 0412 72 01 E4 00             		add	#0xe4, r0, r1
 4205 0416 05 00 00 00             		bsr	_arm_avgpool_s8
 4206                             	.LVL335:
 4207 041a 61 01                   		cmp	#0, r1
 4208 041c 21 74                   		bne	.L192
 4209                             	.LVL336:
 4210                             	.LBB1467:
 4211                             	.LBB1468:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4212                             		.loc 5 185 5 is_stmt 1
 4213 041e AD 0F                   		mov.L	84[r0], r7
 4214 0420 61 57                   		cmp	#5, r7
 4215 0422 2B 0B                   		ble	.L247
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4216                             		.loc 5 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4217                             		.loc 5 189 16 is_stmt 0
 4218 0424 AD 81                   		mov.L	88[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4219                             		.loc 5 189 29
 4220 0426 61 01                   		cmp	#0, r1
 4221 0428 15                      		beq	.L247
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4222                             		.loc 5 189 16
 4223 0429 05 00 00 00             		bsr	__ZdaPv
 4224                             	.LVL337:
 4225                             		.balign 8,3,1
 4226                             	.L247:
 4227                             	.LBE1468:
 4228                             	.LBE1467:
 4229                             	.LBB1469:
 4230                             	.LBB1470:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4231                             		.loc 5 185 5 is_stmt 1
 4232 042d AE 8F                   		mov.L	108[r0], r7
 4233 042f 61 57                   		cmp	#5, r7
 4234 0431 2A 05 38 22 FF          		ble	.L248
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4235                             		.loc 5 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4236                             		.loc 5 189 16 is_stmt 0
 4237 0436 AF 01                   		mov.L	112[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4238                             		.loc 5 189 29
 4239 0438 61 01                   		cmp	#0, r1
 4240 043a 3A 1B FF                		beq	.L248
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4241                             		.loc 5 189 16
 4242 043d 05 00 00 00             		bsr	__ZdaPv
 4243                             	.LVL338:
 4244                             		.balign 8,3,1
 4245                             	.L298:
 4246                             	.LBE1470:
 4247                             	.LBE1469:
 4248                             	.LBE1481:
 4249                             	.LBE1628:
 4250                             	.LBE1646:
 340:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 4251                             		.loc 1 340 10
 4252 0441 66 01                   		mov.L	#0, r1
 4253 0443 38 15 FF                		bra	.L295
 4254                             	.LVL339:
 4255                             	.L243:
 4256                             	.LBB1647:
 4257                             	.LBB1629:
 4258                             	.LBB1482:
 4259                             	.LBB1472:
 4260                             	.LBB1447:
 4261                             	.LBB1445:
 4262                             	.LBB1444:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4263                             		.loc 5 198 34
 4264 0446 AF 8D                   		mov.L	124[r0], r5
 4265                             	.LVL340:
 4266                             	.LBE1444:
 4267                             	.LBE1445:
 4268                             	.LBE1447:
 4269                             	.LBE1472:
 4270                             	.LBE1482:
 4271                             	.LBE1629:
 4272                             	.LBE1647:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4273                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4274                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4275                             		.loc 5 198 5
 4276                             	.LBB1648:
 4277                             	.LBB1630:
 4278                             	.LBB1483:
 4279                             	.LBB1473:
 4280                             	.LBB1448:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 4281                             		.loc 5 440 3 is_stmt 0
 4282 0448 47 54                   		cmp	r5, r4
 4283 044a 21 46                   		bne	.L192
 4284                             		.loc 5 441 3 is_stmt 1
 4285                             	.LVL341:
 4286                             	.LBE1448:
 4287                             	.LBE1473:
 4288                             	.LBE1483:
 4289                             	.LBE1630:
 4290                             	.LBE1648:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4291                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4292                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4293                             		.loc 5 198 5
 4294                             	.LBB1649:
 4295                             	.LBB1631:
 4296                             	.LBB1484:
 126:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.n = 1;
 4297                             		.loc 1 126 5
 127:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.h = input_shape.Dims(1);
 4298                             		.loc 1 127 5
 128:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.w = input_shape.Dims(2);
 4299                             		.loc 1 128 18 is_stmt 0
 4300 044c E5 00 1D 36             		mov.L	116[r0], 216[r0]
 4301                             	.LBB1474:
 4302                             	.LBB1453:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4303                             		.loc 5 198 34
 4304 0450 AF 84                   		mov.L	120[r0], r4
 4305                             	.LBE1453:
 4306                             	.LBE1474:
 127:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.h = input_shape.Dims(1);
 4307                             		.loc 1 127 18
 4308 0452 F9 06 35 01             		mov.L	#1, 212[r0]
 128:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.w = input_shape.Dims(2);
 4309                             		.loc 1 128 5 is_stmt 1
 4310                             	.LVL342:
 4311                             	.LBB1475:
 4312                             	.LBB1457:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4313                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4314                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4315                             		.loc 5 198 5
 4316                             	.LBE1457:
 4317                             	.LBE1475:
 129:../src/tensorflow/lite/micro/kernels/pooling.cc ****     input_dims.c = depth;
 4318                             		.loc 1 129 5
 4319                             	.LBB1476:
 4320                             	.LBB1454:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4321                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4322                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4323                             		.loc 5 198 5
 4324 0456 38 4A FF                		bra	.L256
 4325                             	.LVL343:
 4326                             	.L258:
 4327                             	.LBE1454:
 4328                             	.LBE1476:
 4329                             	.LBE1484:
 4330                             	.LBE1631:
 4331                             	.LBE1649:
 4332                             	.LBB1650:
 4333                             	.LBB1422:
 4334                             	.LBB1406:
 4335                             	.LBB1248:
 4336                             	.LBB1246:
 4337                             	.LBB1244:
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActReluN1To1) {
 4338                             		.loc 2 260 5 is_stmt 0
 4339 0459 F9 02 45 00 00 C0 40    		mov.L	#0x40c00000, 276[r0]
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 6;
 4340                             		.loc 2 259 5
 4341 0460 F9 06 44 00             		mov.L	#0x0, 272[r0]
 4342 0464 38 0F FC                		bra	.L190
 4343                             	.LVL344:
 4344                             	.L213:
 4345                             	.LBE1244:
 4346                             	.LBE1246:
 4347                             	.LBE1248:
 4348                             	.LBE1406:
 4349                             	.LBB1407:
 4350                             	.LBB1393:
 4351                             	.LBB1380:
 4352                             	.LBB1371:
 4353                             	.LBB1362:
 4354                             	.LBB1352:
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 4355                             		.loc 7 43 9
 4356 0467 62 1A                   		add	#1, r10
 4357                             	.LVL345:
 4358                             	.LBB1341:
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(average, params.float_activation_min,
 4359                             		.loc 7 70 75
 4360 0469 FD 22 24                		mov.L	r4, [r2+]
 4361                             	.LBE1341:
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 4362                             		.loc 7 43 39
 4363 046c 47 8A                   		cmp	r8, r10
 4364 046e 3A 5F FE                		beq	.L214
 4365                             	.LBB1342:
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
 4366                             		.loc 7 44 11 is_stmt 1
 4367                             	.LVL346:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 4368                             		.loc 7 46 11
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 4369                             		.loc 7 50 11
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 4370                             		.loc 7 51 11
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 4371                             		.loc 7 53 11
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 4372                             		.loc 7 54 11
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           float filter_count = 0;
 4373                             		.loc 7 56 11
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 4374                             		.loc 7 57 11
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 4375                             		.loc 7 58 11
 4376                             	.LBB1328:
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 4377                             		.loc 7 58 56 is_stmt 0
 4378 0471 ED 04 48                		mov.L	288[r0], r4
 4379 0474 47 F4                   		cmp	r15, r4
 4380 0476 2B 05 38 72 FD          		bgt	.L296
 4381                             	.LVL347:
 4382 047b 77 10 01 00 00          		.balign 8,3,5
 4383                             	.L260:
 4384 0480 FB 72 00 00 80 3F       		mov.L	#0x3f800000, r7
 4385                             	.LBE1328:
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           output_data[Offset(output_shape, batch, out_y, out_x, channel)] =
 4386                             		.loc 7 69 11 is_stmt 1
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               ActivationFunctionWithMinMax(average, params.float_activation_min,
 4387                             		.loc 7 70 11
 4388                             	.LVL348:
 4389                             	.LBB1329:
 4390                             	.LBB1318:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 4391                             		.loc 5 386 3
 4392                             	.LBE1318:
 4393                             	.LBE1329:
 4394                             	.LBE1342:
 4395                             	.LBE1352:
 4396                             	.LBE1362:
 4397                             	.LBE1371:
 4398                             	.LBE1380:
 4399                             	.LBE1393:
 4400                             	.LBE1407:
 4401                             	.LBE1422:
 4402                             	.LBE1650:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 4403                             		.loc 5 194 44
 4404                             	.LBB1651:
 4405                             	.LBB1423:
 4406                             	.LBB1408:
 4407                             	.LBB1394:
 4408                             	.LBB1381:
 4409                             	.LBB1372:
 4410                             	.LBB1363:
 4411                             	.LBB1353:
 4412                             	.LBB1343:
 4413                             	.LBB1330:
 4414                             	.LBB1319:
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 4415                             		.loc 5 387 3
 4416                             	.LBE1319:
 4417                             	.LBE1330:
 4418                             	.LBE1343:
 4419                             	.LBE1353:
 4420                             	.LBE1363:
 4421                             	.LBE1372:
 4422                             	.LBE1381:
 4423                             	.LBE1394:
 4424                             	.LBE1408:
 4425                             	.LBE1423:
 4426                             	.LBE1651:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 4427                             		.loc 5 217 50
 4428                             	.LBB1652:
 4429                             	.LBB1424:
 4430                             	.LBB1409:
 4431                             	.LBB1395:
 4432                             	.LBB1382:
 4433                             	.LBB1373:
 4434                             	.LBB1364:
 4435                             	.LBB1354:
 4436                             	.LBB1344:
 4437                             	.LBB1331:
 4438                             	.LBB1320:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 4439                             		.loc 5 388 3
 4440 0486 ED 05 3D                		mov.L	244[r0], r5
 4441 0489 47 D5                   		cmp	r13, r5
 4442 048b 2B 05 38 FD FD          		bgt	.L297
 4443                             	.LVL349:
 4444                             		.balign 8,3,3
 4445                             	.L192:
 4446                             	.LBE1320:
 4447                             	.LBE1331:
 4448                             	.LBE1344:
 4449                             	.LBE1354:
 4450                             	.LBE1364:
 4451                             	.LBE1373:
 4452                             	.LBE1382:
 4453                             	.LBE1395:
 4454                             	.LBE1409:
 4455                             	.LBE1424:
 4456                             	.LBE1652:
 4457                             	.LBB1653:
 4458                             	.LBB1235:
 4459                             	.LBB1234:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 4460                             		.loc 6 33 3 is_stmt 0
 4461 0490 05 00 00 00             		bsr	_abort
 4462                             	.LVL350:
 4463                             	.L257:
 4464                             	.LBE1234:
 4465                             	.LBE1235:
 4466                             	.LBE1653:
 4467                             	.LBB1654:
 4468                             	.LBB1425:
 4469                             	.LBB1410:
 4470                             	.LBB1249:
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else if (activation == kTfLiteActRelu6) {
 4471                             		.loc 2 257 5
 4472 0494 F9 02 45 FF FF 7F 7F    		mov.L	#0x7f7fffff, 276[r0]
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = std::numeric_limits<T>::max();
 4473                             		.loc 2 256 5
 4474 049b F9 06 44 00             		mov.L	#0x0, 272[r0]
 4475 049f 38 D4 FB                		bra	.L190
 4476                             	.LVL351:
 4477                             	.L217:
 4478                             	.LBE1249:
 4479                             	.LBE1410:
 4480                             	.LBE1425:
 4481                             	.LBE1654:
 4482                             	.LBB1655:
 4483                             	.LBB1632:
 102:../src/tensorflow/lite/micro/kernels/pooling.cc ****     PoolParams op_params;
 4484                             		.loc 1 102 3 is_stmt 1
 4485                             	.LBB1485:
 103:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.stride_height = params->stride_height;
 4486                             		.loc 1 103 5
 104:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.stride_width = params->stride_width;
 4487                             		.loc 1 104 5
 113:../src/tensorflow/lite/micro/kernels/pooling.cc ****                                tflite::micro::GetTensorData<uint8_t>(input),
 4488                             		.loc 1 113 72 is_stmt 0
 4489 04a2 71 0F 24                		add	#36, r0, r15
 4490 04a5 EF 71                   		mov.L	r7, r1
 104:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.stride_width = params->stride_width;
 4491                             		.loc 1 104 39
 4492 04a7 E5 60 02 59             		mov.L	8[r6], 356[r0]
 4493                             	.LVL352:
 105:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.filter_height = params->filter_height;
 4494                             		.loc 1 105 5 is_stmt 1
 105:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.filter_height = params->filter_height;
 4495                             		.loc 1 105 38 is_stmt 0
 4496 04ab E5 60 01 54             		mov.L	4[r6], 336[r0]
 4497                             	.LVL353:
 106:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.filter_width = params->filter_width;
 4498                             		.loc 1 106 5 is_stmt 1
 106:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.filter_width = params->filter_width;
 4499                             		.loc 1 106 39 is_stmt 0
 4500 04af E5 60 04 55             		mov.L	16[r6], 340[r0]
 4501                             	.LVL354:
 107:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.padding_values.height = data.padding.height;
 4502                             		.loc 1 107 5 is_stmt 1
 107:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.padding_values.height = data.padding.height;
 4503                             		.loc 1 107 38 is_stmt 0
 4504 04b3 E5 60 03 51             		mov.L	12[r6], 324[r0]
 4505                             	.LVL355:
 108:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.padding_values.width = data.padding.width;
 4506                             		.loc 1 108 5 is_stmt 1
 108:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.padding_values.width = data.padding.width;
 4507                             		.loc 1 108 37 is_stmt 0
 4508 04b7 D5 A0 02 B0             		mov.W	4[r10], 352[r0]
 4509                             	.LVL356:
 109:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.quantized_activation_min = data.activation_min;
 4510                             		.loc 1 109 5 is_stmt 1
 109:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.quantized_activation_min = data.activation_min;
 4511                             		.loc 1 109 36 is_stmt 0
 4512 04bb D4 A0 AC                		mov.W	[r10], 344[r0]
 4513                             	.LVL357:
 110:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.quantized_activation_max = data.activation_max;
 4514                             		.loc 1 110 5 is_stmt 1
 110:../src/tensorflow/lite/micro/kernels/pooling.cc ****     op_params.quantized_activation_max = data.activation_max;
 4515                             		.loc 1 110 47 is_stmt 0
 4516 04be E5 A0 05 46             		mov.L	20[r10], 280[r0]
 4517                             	.LVL358:
 111:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4518                             		.loc 1 111 5 is_stmt 1
 111:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 4519                             		.loc 1 111 47 is_stmt 0
 4520 04c2 E5 A0 06 4B             		mov.L	24[r10], 300[r0]
 113:../src/tensorflow/lite/micro/kernels/pooling.cc ****                                tflite::micro::GetTensorData<uint8_t>(input),
 4521                             		.loc 1 113 5 is_stmt 1
 113:../src/tensorflow/lite/micro/kernels/pooling.cc ****                                tflite::micro::GetTensorData<uint8_t>(input),
 4522                             		.loc 1 113 72 is_stmt 0
 4523 04c6 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 4524                             	.LVL359:
 115:../src/tensorflow/lite/micro/kernels/pooling.cc ****                                tflite::micro::GetTensorData<uint8_t>(output));
 4525                             		.loc 1 115 61
 4526 04ca 66 CF                   		mov.L	#12, r15
 4527 04cc 4B 0F                   		add	r0, r15
 4528 04ce EF D1                   		mov.L	r13, r1
 4529                             	.LBB1486:
 4530                             	.LBB1487:
 4531                             		.loc 6 62 53
 4532 04d0 E4 70 47                		mov.L	[r7], 284[r0]
 4533                             	.LVL360:
 4534                             	.LBE1487:
 4535                             	.LBE1486:
 115:../src/tensorflow/lite/micro/kernels/pooling.cc ****                                tflite::micro::GetTensorData<uint8_t>(output));
 4536                             		.loc 1 115 61
 4537 04d3 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 4538                             	.LVL361:
 4539                             	.LBB1488:
 4540                             	.LBB1489:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 4541                             		.loc 6 55 28
 4542 04d7 61 0D                   		cmp	#0, r13
 4543 04d9 13                      		beq	.L219
 4544 04da EC DD                   		mov.L	[r13], r13
 4545                             	.LVL362:
 4546                             		.balign 8,3,2
 4547                             	.L219:
 4548                             	.LBE1489:
 4549                             	.LBE1488:
 4550                             	.LBB1490:
 4551                             	.LBB1491:
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                    params.quantized_activation_max);
 4552                             		.loc 7 84 3 is_stmt 1
 4553 04dc ED 07 46                		mov.L	280[r0], r7
 4554                             	.LVL363:
 4555 04df ED 0A 4B                		mov.L	300[r0], r10
 4556                             	.LVL364:
 4557 04e2 47 A7                   		cmp	r10, r7
 4558 04e4 2A AC                   		bgt	.L192
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 4559                             		.loc 7 86 3
 4560                             	.LVL365:
 4561                             	.LBE1491:
 4562                             	.LBE1490:
 4563                             	.LBE1485:
 4564                             	.LBE1632:
 4565                             	.LBE1655:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 4566                             		.loc 5 194 44
 4567                             	.LBB1656:
 4568                             	.LBB1633:
 4569                             	.LBB1614:
 4570                             	.LBB1600:
 4571                             	.LBB1590:
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   TFLITE_DCHECK_EQ(output_shape.DimensionsCount(), 4);
 4572                             		.loc 7 86 3 is_stmt 0
 4573 04e6 AA 0F                   		mov.L	36[r0], r7
 4574 04e8 61 47                   		cmp	#4, r7
 4575 04ea 21 A6                   		bne	.L192
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
 4576                             		.loc 7 87 3 is_stmt 1
 4577                             	.LVL366:
 4578                             	.LBE1590:
 4579                             	.LBE1600:
 4580                             	.LBE1614:
 4581                             	.LBE1633:
 4582                             	.LBE1656:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 4583                             		.loc 5 194 44
 4584                             	.LBB1657:
 4585                             	.LBB1634:
 4586                             	.LBB1615:
 4587                             	.LBB1601:
 4588                             	.LBB1591:
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int batches = MatchingDim(input_shape, 0, output_shape, 0);
 4589                             		.loc 7 87 3 is_stmt 0
 4590 04ec A8 8F                   		mov.L	12[r0], r7
 4591 04ee 61 47                   		cmp	#4, r7
 4592 04f0 21 A0                   		bne	.L192
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int depth = MatchingDim(input_shape, 3, output_shape, 3);
 4593                             		.loc 7 88 3 is_stmt 1
 4594                             	.LVL367:
 4595                             	.LBB1492:
 4596                             	.LBB1493:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 4597                             		.loc 5 440 3
 4598                             	.LBB1494:
 4599                             	.LBB1495:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4600                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4601                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4602                             		.loc 5 198 5
 4603                             	.LBE1495:
 4604                             	.LBE1494:
 4605                             	.LBB1496:
 4606                             	.LBB1497:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4607                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4608                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4609                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4610                             		.loc 5 198 34 is_stmt 0
 4611 04f2 E5 00 04 4F             		mov.L	16[r0], 316[r0]
 4612                             	.LVL368:
 4613                             	.LBE1497:
 4614                             	.LBE1496:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 4615                             		.loc 5 440 3
 4616 04f6 ED 04 4F                		mov.L	316[r0], r4
 4617 04f9 06 85 04 0A             		cmp	40[r0].L, r4
 4618 04fd 21 93                   		bne	.L192
 4619                             		.loc 5 441 3 is_stmt 1
 4620                             	.LVL369:
 4621                             	.LBE1493:
 4622                             	.LBE1492:
 4623                             	.LBE1591:
 4624                             	.LBE1601:
 4625                             	.LBE1615:
 4626                             	.LBE1634:
 4627                             	.LBE1657:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4628                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4629                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4630                             		.loc 5 198 5
 4631                             	.LBB1658:
 4632                             	.LBB1635:
 4633                             	.LBB1616:
 4634                             	.LBB1602:
 4635                             	.LBB1592:
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_height = input_shape.Dims(1);
 4636                             		.loc 7 89 3
 4637                             	.LBB1498:
 4638                             	.LBB1499:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 4639                             		.loc 5 440 3
 4640                             	.LBB1500:
 4641                             	.LBB1501:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4642                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4643                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4644                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4645                             		.loc 5 198 34 is_stmt 0
 4646 04ff E5 00 0D 4C             		mov.L	52[r0], 304[r0]
 4647                             	.LVL370:
 4648                             	.LBE1501:
 4649                             	.LBE1500:
 4650                             	.LBB1502:
 4651                             	.LBB1503:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4652                             		.loc 5 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4653                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4654                             		.loc 5 198 5
 4655                             	.LBE1503:
 4656                             	.LBE1502:
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 4657                             		.loc 5 440 3 is_stmt 0
 4658 0503 A9 8F                   		mov.L	28[r0], r7
 4659 0505 ED 04 4C                		mov.L	304[r0], r4
 4660 0508 47 47                   		cmp	r4, r7
 4661 050a 21 86                   		bne	.L192
 4662                             		.loc 5 441 3 is_stmt 1
 4663                             	.LVL371:
 4664                             	.LBE1499:
 4665                             	.LBE1498:
 4666                             	.LBE1592:
 4667                             	.LBE1602:
 4668                             	.LBE1616:
 4669                             	.LBE1635:
 4670                             	.LBE1658:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4671                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4672                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4673                             		.loc 5 198 5
 4674                             	.LBB1659:
 4675                             	.LBB1636:
 4676                             	.LBB1617:
 4677                             	.LBB1603:
 4678                             	.LBB1593:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int input_width = input_shape.Dims(2);
 4679                             		.loc 7 90 3
 4680                             	.LBB1504:
 4681                             	.LBB1505:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4682                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4683                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4684                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4685                             		.loc 5 198 34 is_stmt 0
 4686 050c E5 00 0B 57             		mov.L	44[r0], 348[r0]
 4687                             	.LVL372:
 4688                             	.LBE1505:
 4689                             	.LBE1504:
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_height = output_shape.Dims(1);
 4690                             		.loc 7 91 3 is_stmt 1
 4691                             	.LBB1506:
 4692                             	.LBB1507:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4693                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4694                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4695                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4696                             		.loc 5 198 34 is_stmt 0
 4697 0510 E5 00 0C 52             		mov.L	48[r0], 328[r0]
 4698                             	.LVL373:
 4699                             	.LBE1507:
 4700                             	.LBE1506:
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int output_width = output_shape.Dims(2);
 4701                             		.loc 7 92 3 is_stmt 1
 4702                             	.LBB1508:
 4703                             	.LBB1509:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4704                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4705                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4706                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4707                             		.loc 5 198 34 is_stmt 0
 4708 0514 E5 00 05 53             		mov.L	20[r0], 332[r0]
 4709                             	.LVL374:
 4710                             	.LBE1509:
 4711                             	.LBE1508:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_height = params.stride_height;
 4712                             		.loc 7 93 3 is_stmt 1
 4713                             	.LBB1510:
 4714                             	.LBB1511:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 4715                             		.loc 5 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4716                             		.loc 5 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4717                             		.loc 5 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 4718                             		.loc 5 198 34 is_stmt 0
 4719 0518 E5 00 06 50             		mov.L	24[r0], 320[r0]
 4720                             	.LVL375:
 4721                             	.LBE1511:
 4722                             	.LBE1510:
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   const int stride_width = params.stride_width;
 4723                             		.loc 7 94 3 is_stmt 1
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****   for (int batch = 0; batch < batches; ++batch) {
 4724                             		.loc 7 95 3
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 4725                             		.loc 7 96 3
 4726                             	.LBB1512:
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 4727                             		.loc 7 96 29 is_stmt 0
 4728 051c ED 07 4F                		mov.L	316[r0], r7
 4729 051f 61 07                   		cmp	#0, r7
 4730 0521 2A 05 38 32 FE          		ble	.L248
 4731 0526 EF 4A                   		mov.L	r4, r10
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 4732                             		.loc 7 96 12
 4733 0528 66 0F                   		mov.L	#0, r15
 4734 052a 60 1A                   		sub	#1, r10
 4735 052c E7 0A 49                		mov.L	r10, 292[r0]
 4736 052f E7 0D 4A                		mov.L	r13, 296[r0]
 4737                             	.LVL376:
 4738                             		.balign 8,3,2
 4739                             	.L223:
 4740                             	.LBB1513:
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 4741                             		.loc 7 97 31
 4742 0532 ED 05 53                		mov.L	332[r0], r5
 4743 0535 61 05                   		cmp	#0, r5
 4744 0537 2A 05 38 F1 01          		ble	.L225
 4745 053c DD 0A B0                		mov.W	352[r0], r10
 4746 053f E7 0A 4D                		mov.L	r10, 308[r0]
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 4747                             		.loc 7 97 14
 4748 0542 F9 06 45 00             		mov.L	#0, 276[r0]
 4749 0546 7E 1A                   		neg	r10
 4750 0548 E7 0A 41                		mov.L	r10, 260[r0]
 4751                             	.LVL377:
 4752                             		.balign 8,3,2
 4753                             	.L226:
 4754                             	.LBB1514:
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 4755                             		.loc 7 98 33
 4756 054b ED 04 50                		mov.L	320[r0], r4
 4757 054e 61 04                   		cmp	#0, r4
 4758 0550 2A 05 38 B3 01          		ble	.L228
 4759 0555 ED 07 57                		mov.L	348[r0], r7
 4760 0558 06 89 07 4D             		add	308[r0], r7
 4761 055c DD 0A AC                		mov.W	344[r0], r10
 4762 055f E7 0A 48                		mov.L	r10, 288[r0]
 4763 0562 ED 04 55                		mov.L	340[r0], r4
 4764 0565 FC 17 74                		min	r7, r4
 4765 0568 E7 04 4E                		mov.L	r4, 312[r0]
 4766 056b ED 05 4D                		mov.L	308[r0], r5
 4767 056e FD 74 45 00             		max	#0, r5
 4768 0572 E7 05 3B                		mov.L	r5, 236[r0]
 4769 0575 7E 1A                   		neg	r10
 4770 0577 E7 0A 3F                		mov.L	r10, 252[r0]
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 4771                             		.loc 7 98 16
 4772 057a F9 06 43 00             		mov.L	#0, 268[r0]
 4773 057e 06 89 04 41             		add	260[r0], r4
 4774 0582 E7 04 44                		mov.L	r4, 272[r0]
 4775 0585 EF FD                   		mov.L	r15, r13
 4776                             	.LVL378:
 4777 0587 03                      		.balign 8,3,2
 4778                             	.L229:
 4779                             	.LBB1515:
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 4780                             		.loc 7 99 39
 4781 0588 ED 07 4C                		mov.L	304[r0], r7
 4782 058b 61 07                   		cmp	#0, r7
 4783 058d 2A 05 38 4F 01          		ble	.L237
 4784 0592 ED 0E 48                		mov.L	288[r0], r14
 4785 0595 FD 74 4E 00             		max	#0, r14
 4786 0599 ED 07 52                		mov.L	328[r0], r7
 4787 059c 06 89 07 48             		add	288[r0], r7
 4788 05a0 ED 05 51                		mov.L	324[r0], r5
 4789 05a3 FC 17 75                		min	r7, r5
 4790 05a6 E7 05 40                		mov.L	r5, 256[r0]
 4791                             	.LBB1516:
 4792                             	.LBB1517:
 4793                             	.LBB1518:
 4794                             	.LBB1519:
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 4795                             		.loc 7 118 25
 4796 05a9 ED 0F 3F                		mov.L	252[r0], r15
 4797 05ac 4B EF                   		add	r14, r15
 4798                             	.LBE1519:
 4799                             	.LBE1518:
 4800                             	.LBE1517:
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_x * stride_width) - params.padding_values.width;
 4801                             		.loc 7 100 11 is_stmt 1
 4802                             	.LVL379:
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               (out_y * stride_height) - params.padding_values.height;
 4803                             		.loc 7 102 11
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_x_end =
 4804                             		.loc 7 106 11
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_width, input_width - in_x_origin);
 4805                             		.loc 7 107 11
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int filter_y_end =
 4806                             		.loc 7 109 11
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               std::min(params.filter_height, input_height - in_y_origin);
 4807                             		.loc 7 110 11
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           int filter_count = 0;
 4808                             		.loc 7 112 11
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 4809                             		.loc 7 113 11
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 4810                             		.loc 7 114 11
 4811                             	.LBB1546:
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 4812                             		.loc 7 114 56 is_stmt 0
 4813 05ae ED 07 3B                		mov.L	236[r0], r7
 4814 05b1 ED 0A 4E                		mov.L	312[r0], r10
 4815 05b4 47 A7                   		cmp	r10, r7
 4816 05b6 29 05 38 B3 01          		bge	.L230
 4817 05bb 66 02                   		mov.L	#0, r2
 4818 05bd 43 E5                   		sub	r14, r5
 4819 05bf E7 05 42                		mov.L	r5, 264[r0]
 4820                             	.LVL380:
 4821                             		.balign 8,3,1
 4822                             	.L238:
 4823                             	.LBB1540:
 4824                             	.LBB1534:
 4825                             	.LBB1520:
 4826                             	.LBB1521:
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 4827                             		.loc 5 389 3
 4828 05c2 ED 0C 0B                		mov.L	44[r0], r12
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 4829                             		.loc 5 390 3
 4830 05c5 AB 06                   		mov.L	48[r0], r6
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 4831                             		.loc 5 391 3
 4832 05c7 AB 09                   		mov.L	52[r0], r1
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 4833                             		.loc 5 386 3
 4834 05c9 E5 00 09 3D             		mov.L	36[r0], 244[r0]
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 4835                             		.loc 5 392 15
 4836 05cd FF 37 CD                		mul	r12, r13, r7
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 4837                             		.loc 5 388 3
 4838 05d0 E5 00 0A 3C             		mov.L	40[r0], 240[r0]
 4839 05d4 06 89 07 41             		add	260[r0], r7
 4840 05d8 FF 34 61                		mul	r6, r1, r4
 4841 05db E7 04 3E                		mov.L	r4, 248[r0]
 4842 05de 06 89 07 3B             		add	236[r0], r7
 4843 05e2 ED 04 41                		mov.L	260[r0], r4
 4844 05e5 06 89 04 3B             		add	236[r0], r4
 4845 05e9 4F 67                   		mul	r6, r7
 4846                             	.LBE1521:
 4847                             	.LBE1520:
 4848                             	.LBE1534:
 4849                             	.LBE1540:
 4850                             	.LBE1546:
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           int filter_count = 0;
 4851                             		.loc 7 112 19
 4852 05eb 66 0B                   		mov.L	#0, r11
 4853 05ed 4B F7                   		add	r15, r7
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           for (int filter_y = filter_y_start; filter_y < filter_y_end;
 4854                             		.loc 7 113 15
 4855 05ef 66 0A                   		mov.L	#0, r10
 4856 05f1 4F 17                   		mul	r1, r7
 4857 05f3 4B 27                   		add	r2, r7
 4858 05f5 06 89 07 47             		add	284[r0], r7
 4859                             	.LVL381:
 4860                             		.balign 8,3,2
 4861                             	.L235:
 4862                             	.LBB1547:
 4863                             	.LBB1541:
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 4864                             		.loc 7 116 58
 4865 05f9 ED 05 40                		mov.L	256[r0], r5
 4866 05fc 47 5E                   		cmp	r5, r14
 4867 05fe 28 64                   		bge	.L231
 4868                             	.LBB1535:
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 4869                             		.loc 7 118 15 is_stmt 1
 4870                             	.LVL382:
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               acc +=
 4871                             		.loc 7 119 15
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)];
 4872                             		.loc 7 120 15
 4873                             	.LBB1528:
 4874                             	.LBB1522:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 4875                             		.loc 5 386 3
 4876                             	.LBE1522:
 4877                             	.LBE1528:
 4878                             	.LBE1535:
 4879                             	.LBE1541:
 4880                             	.LBE1547:
 4881                             	.LBE1516:
 4882                             	.LBE1515:
 4883                             	.LBE1514:
 4884                             	.LBE1513:
 4885                             	.LBE1512:
 4886                             	.LBE1593:
 4887                             	.LBE1603:
 4888                             	.LBE1617:
 4889                             	.LBE1636:
 4890                             	.LBE1659:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 4891                             		.loc 5 194 44
 4892                             	.LBB1660:
 4893                             	.LBB1637:
 4894                             	.LBB1618:
 4895                             	.LBB1604:
 4896                             	.LBB1594:
 4897                             	.LBB1584:
 4898                             	.LBB1578:
 4899                             	.LBB1572:
 4900                             	.LBB1566:
 4901                             	.LBB1560:
 4902                             	.LBB1548:
 4903                             	.LBB1542:
 4904                             	.LBB1536:
 4905                             	.LBB1529:
 4906                             	.LBB1523:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 4907                             		.loc 5 386 3 is_stmt 0
 4908 0600 ED 05 3D                		mov.L	244[r0], r5
 4909 0603 61 45                   		cmp	#4, r5
 4910 0605 3B 8B FE                		bne	.L192
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 4911                             		.loc 5 387 3 is_stmt 1
 4912                             	.LVL383:
 4913                             	.LBE1523:
 4914                             	.LBE1529:
 4915                             	.LBE1536:
 4916                             	.LBE1542:
 4917                             	.LBE1548:
 4918                             	.LBE1560:
 4919                             	.LBE1566:
 4920                             	.LBE1572:
 4921                             	.LBE1578:
 4922                             	.LBE1584:
 4923                             	.LBE1594:
 4924                             	.LBE1604:
 4925                             	.LBE1618:
 4926                             	.LBE1637:
 4927                             	.LBE1660:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 4928                             		.loc 5 217 50
 4929                             	.LBB1661:
 4930                             	.LBB1638:
 4931                             	.LBB1619:
 4932                             	.LBB1605:
 4933                             	.LBB1595:
 4934                             	.LBB1585:
 4935                             	.LBB1579:
 4936                             	.LBB1573:
 4937                             	.LBB1567:
 4938                             	.LBB1561:
 4939                             	.LBB1549:
 4940                             	.LBB1543:
 4941                             	.LBB1537:
 4942                             	.LBB1530:
 4943                             	.LBB1524:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 4944                             		.loc 5 388 3
 4945 0608 ED 05 3C                		mov.L	240[r0], r5
 4946 060b 47 D5                   		cmp	r13, r5
 4947 060d 2A 05 38 81 FE          		ble	.L192
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 4948                             		.loc 5 389 3
 4949 0612 61 04                   		cmp	#0, r4
 4950 0614 28 05 38 7A FE          		blt	.L192
 4951 0619 47 4C                   		cmp	r4, r12
 4952 061b 2A 05 38 73 FE          		ble	.L192
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 4953                             		.loc 5 390 3
 4954 0620 61 0F                   		cmp	#0, r15
 4955 0622 28 05 38 6C FE          		blt	.L192
 4956 0627 47 6F                   		cmp	r6, r15
 4957 0629 29 05 38 65 FE          		bge	.L192
 4958 062e 47 12                   		cmp	r1, r2
 4959 0630 29 05 38 5E FE          		bge	.L192
 4960 0635 EF A8                   		mov.L	r10, r8
 4961 0637 ED 09 42                		mov.L	264[r0], r9
 4962 063a 4B A9                   		add	r10, r9
 4963 063c EF 73                   		mov.L	r7, r3
 4964 063e 2E 1A                   		bra	.L233
 4965                             	.LVL384:
 4966                             	.L234:
 4967                             	.LBE1524:
 4968                             	.LBE1530:
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               const int in_y = in_y_origin + filter_y;
 4969                             		.loc 7 118 15
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               acc +=
 4970                             		.loc 7 119 15
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)];
 4971                             		.loc 7 120 15
 4972                             	.LBB1531:
 4973                             	.LBB1525:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 4974                             		.loc 5 386 3
 4975                             	.LBE1525:
 4976                             	.LBE1531:
 4977                             	.LBE1537:
 4978                             	.LBE1543:
 4979                             	.LBE1549:
 4980                             	.LBE1561:
 4981                             	.LBE1567:
 4982                             	.LBE1573:
 4983                             	.LBE1579:
 4984                             	.LBE1585:
 4985                             	.LBE1595:
 4986                             	.LBE1605:
 4987                             	.LBE1619:
 4988                             	.LBE1638:
 4989                             	.LBE1661:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 4990                             		.loc 5 194 44
 4991                             	.LBB1662:
 4992                             	.LBB1639:
 4993                             	.LBB1620:
 4994                             	.LBB1606:
 4995                             	.LBB1596:
 4996                             	.LBB1586:
 4997                             	.LBB1580:
 4998                             	.LBB1574:
 4999                             	.LBB1568:
 5000                             	.LBB1562:
 5001                             	.LBB1550:
 5002                             	.LBB1544:
 5003                             	.LBB1538:
 5004                             	.LBB1532:
 5005                             	.LBB1526:
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 5006                             		.loc 5 387 3
 5007                             	.LBE1526:
 5008                             	.LBE1532:
 5009                             	.LBE1538:
 5010                             	.LBE1544:
 5011                             	.LBE1550:
 5012                             	.LBE1562:
 5013                             	.LBE1568:
 5014                             	.LBE1574:
 5015                             	.LBE1580:
 5016                             	.LBE1586:
 5017                             	.LBE1596:
 5018                             	.LBE1606:
 5019                             	.LBE1620:
 5020                             	.LBE1639:
 5021                             	.LBE1662:
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 5022                             		.loc 5 217 50
 5023                             	.LBB1663:
 5024                             	.LBB1640:
 5025                             	.LBB1621:
 5026                             	.LBB1607:
 5027                             	.LBB1597:
 5028                             	.LBB1587:
 5029                             	.LBB1581:
 5030                             	.LBB1575:
 5031                             	.LBB1569:
 5032                             	.LBB1563:
 5033                             	.LBB1551:
 5034                             	.LBB1545:
 5035                             	.LBB1539:
 5036                             	.LBB1533:
 5037                             	.LBB1527:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 5038                             		.loc 5 388 3
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 5039                             		.loc 5 389 3
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 5040                             		.loc 5 390 3
 5041 0640 ED 05 3F                		mov.L	252[r0], r5
 5042 0643 4B A5                   		add	r10, r5
 5043 0645 4B E5                   		add	r14, r5
 5044 0647 43 85                   		sub	r8, r5
 5045 0649 26 05 38 45 FE          		bn	.L192
 5046 064e 4B 13                   		add	r1, r3
 5047 0650 47 56                   		cmp	r5, r6
 5048 0652 2A 05 38 3C FE          		ble	.L192
 5049                             	.LVL385:
 5050 0657 03                      		.balign 8,3,1
 5051                             	.L233:
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 5052                             		.loc 5 391 3
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 5053                             		.loc 5 392 3
 5054                             	.LBE1527:
 5055                             	.LBE1533:
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             }
 5056                             		.loc 7 122 27 is_stmt 0
 5057 0658 62 1A                   		add	#1, r10
 5058                             	.LVL386:
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                   input_data[Offset(input_shape, batch, in_y, in_x, channel)];
 5059                             		.loc 7 120 19
 5060 065a 58 35                   		movu.B	[r3], r5
 5061 065c 4B 5B                   		add	r5, r11
 5062                             	.LVL387:
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****             }
 5063                             		.loc 7 122 15 is_stmt 1
 5064                             	.LBE1539:
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                  ++filter_x) {
 5065                             		.loc 7 116 58 is_stmt 0
 5066 065e 47 A9                   		cmp	r10, r9
 5067 0660 21 E0                   		bne	.L234
 5068                             	.LVL388:
 5069                             		.balign 8,3,1
 5070                             	.L231:
 5071 0662 62 14                   		add	#1, r4
 5072                             	.LVL389:
 5073 0664 06 89 07 3E             		add	248[r0], r7
 5074                             	.LBE1545:
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****                ++filter_y) {
 5075                             		.loc 7 114 56
 5076 0668 ED 05 44                		mov.L	272[r0], r5
 5077 066b 47 54                   		cmp	r5, r4
 5078 066d 21 8C                   		bne	.L235
 5079                             	.LBE1551:
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           acc = std::max(acc, params.quantized_activation_min);
 5080                             		.loc 7 125 11 is_stmt 1
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           acc = std::max(acc, params.quantized_activation_min);
 5081                             		.loc 7 125 37 is_stmt 0
 5082 066f FD A1 A7                		shar	#1, r10, r7
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           acc = std::max(acc, params.quantized_activation_min);
 5083                             		.loc 7 125 22
 5084 0672 4B 7B                   		add	r7, r11
 5085                             	.LVL390:
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           acc = std::max(acc, params.quantized_activation_min);
 5086                             		.loc 7 125 42
 5087 0674 FC 27 AB                		divu	r10, r11
 5088                             	.LVL391:
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           acc = std::min(acc, params.quantized_activation_max);
 5089                             		.loc 7 126 11 is_stmt 1
 5090                             	.LBB1552:
 5091                             	.LBB1553:
 224:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	return __b;
 5092                             		.loc 8 224 7 is_stmt 0
 5093 0677 ED 07 46                		mov.L	280[r0], r7
 5094 067a 47 B7                   		cmp	r11, r7
 5095 067c 2A 5E                   		bgt	.L263
 5096                             	.LVL392:
 5097                             	.LBE1553:
 5098                             	.LBE1552:
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           output_data[Offset(output_shape, batch, out_y, out_x, channel)] =
 5099                             		.loc 7 127 11 is_stmt 1
 5100 067e ED 0A 4B                		mov.L	300[r0], r10
 5101                             	.LVL393:
 5102 0681 FC 17 AB                		min	r10, r11
 5103                             	.LVL394:
 5104                             		.balign 8,3,1
 5105                             	.L236:
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               static_cast<uint8_t>(acc);
 5106                             		.loc 7 128 11
 5107                             	.LBB1554:
 5108                             	.LBB1555:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 5109                             		.loc 5 386 3
 5110                             	.LBE1555:
 5111                             	.LBE1554:
 5112                             	.LBE1563:
 5113                             	.LBE1569:
 5114                             	.LBE1575:
 5115                             	.LBE1581:
 5116                             	.LBE1587:
 5117                             	.LBE1597:
 5118                             	.LBE1607:
 5119                             	.LBE1621:
 5120                             	.LBE1640:
 5121                             	.LBE1663:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 5122                             		.loc 5 194 44
 5123                             	.LBB1664:
 5124                             	.LBB1641:
 5125                             	.LBB1622:
 5126                             	.LBB1608:
 5127                             	.LBB1598:
 5128                             	.LBB1588:
 5129                             	.LBB1582:
 5130                             	.LBB1576:
 5131                             	.LBB1570:
 5132                             	.LBB1564:
 5133                             	.LBB1558:
 5134                             	.LBB1556:
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 5135                             		.loc 5 386 3 is_stmt 0
 5136 0684 A8 8F                   		mov.L	12[r0], r7
 5137 0686 61 47                   		cmp	#4, r7
 5138 0688 3B 08 FE                		bne	.L192
 5139                             	.LVL395:
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 5140                             		.loc 5 388 3
 5141 068b A9 07                   		mov.L	16[r0], r7
 5142 068d 47 D7                   		cmp	r13, r7
 5143 068f 2A 05 38 FF FD          		ble	.L192
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 5144                             		.loc 5 389 3 is_stmt 1
 5145 0694 A9 0F                   		mov.L	20[r0], r7
 5146 0696 ED 04 45                		mov.L	276[r0], r4
 5147                             	.LVL396:
 5148 0699 47 47                   		cmp	r4, r7
 5149 069b 2A 05 38 F3 FD          		ble	.L192
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 5150                             		.loc 5 390 3
 5151 06a0 A9 85                   		mov.L	24[r0], r5
 5152 06a2 ED 0A 43                		mov.L	268[r0], r10
 5153 06a5 47 A5                   		cmp	r10, r5
 5154 06a7 2A 05 38 E7 FD          		ble	.L192
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 5155                             		.loc 5 391 3
 5156 06ac ED 0A 07                		mov.L	28[r0], r10
 5157 06af 47 A2                   		cmp	r10, r2
 5158 06b1 29 05 38 DD FD          		bge	.L192
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 5159                             		.loc 5 392 3
 5160                             	.LVL397:
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 5161                             		.loc 5 392 15 is_stmt 0
 5162 06b6 4F D7                   		mul	r13, r7
 5163                             	.LBE1556:
 5164                             	.LBE1558:
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               static_cast<uint8_t>(acc);
 5165                             		.loc 7 128 75
 5166 06b8 ED 04 4A                		mov.L	296[r0], r4
 5167 06bb 4B 24                   		add	r2, r4
 5168                             	.LBB1559:
 5169                             	.LBB1557:
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 5170                             		.loc 5 392 30
 5171 06bd 06 89 07 45             		add	276[r0], r7
 5172 06c1 71 23 01                		add	#1, r2, r3
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 5173                             		.loc 5 392 36
 5174 06c4 4F 57                   		mul	r5, r7
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 5175                             		.loc 5 392 51
 5176 06c6 06 89 07 43             		add	268[r0], r7
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 5177                             		.loc 5 392 57
 5178 06ca 4F A7                   		mul	r10, r7
 5179                             	.LBE1557:
 5180                             	.LBE1559:
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****               static_cast<uint8_t>(acc);
 5181                             		.loc 7 128 75
 5182 06cc FE 07 4B                		mov.B	r11, [r7,r4]
 5183                             	.LVL398:
 5184                             	.LBE1564:
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           const int in_x_origin =
 5185                             		.loc 7 99 39
 5186 06cf ED 04 49                		mov.L	292[r0], r4
 5187 06d2 47 42                   		cmp	r4, r2
 5188 06d4 12                      		beq	.L237
 5189 06d5 EF 32                   		mov.L	r3, r2
 5190 06d7 38 EB FE                		bra	.L238
 5191                             	.LVL399:
 5192                             	.L263:
 5193 06da EF 7B                   		mov.L	r7, r11
 5194                             	.LVL400:
 5195 06dc 2E A8                   		bra	.L236
 5196                             	.LVL401:
 5197                             	.L237:
 5198                             	.LBE1570:
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 5199                             		.loc 7 98 7
 5200 06de ED 0A 43                		mov.L	268[r0], r10
 5201 06e1 62 1A                   		add	#1, r10
 5202 06e3 E7 0A 43                		mov.L	r10, 268[r0]
 5203                             	.LVL402:
 5204 06e6 ED 04 3F                		mov.L	252[r0], r4
 5205 06e9 06 89 04 54             		add	336[r0], r4
 5206 06ed E7 04 3F                		mov.L	r4, 252[r0]
 5207 06f0 ED 05 48                		mov.L	288[r0], r5
 5208 06f3 ED 07 54                		mov.L	336[r0], r7
 5209 06f6 43 75                   		sub	r7, r5
 5210 06f8 E7 05 48                		mov.L	r5, 288[r0]
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****         for (int channel = 0; channel < depth; ++channel) {
 5211                             		.loc 7 98 33
 5212 06fb ED 04 50                		mov.L	320[r0], r4
 5213 06fe 47 4A                   		cmp	r4, r10
 5214 0700 3B 88 FE                		bne	.L229
 5215 0703 EF DF                   		mov.L	r13, r15
 5216                             	.LVL403:
 5217                             		.balign 8,3,2
 5218                             	.L228:
 5219                             	.LBE1576:
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 5220                             		.loc 7 97 5
 5221 0705 ED 05 45                		mov.L	276[r0], r5
 5222 0708 62 15                   		add	#1, r5
 5223 070a E7 05 45                		mov.L	r5, 276[r0]
 5224                             	.LVL404:
 5225 070d ED 07 41                		mov.L	260[r0], r7
 5226 0710 06 89 07 59             		add	356[r0], r7
 5227 0714 E7 07 41                		mov.L	r7, 260[r0]
 5228 0717 ED 0A 4D                		mov.L	308[r0], r10
 5229 071a ED 04 59                		mov.L	356[r0], r4
 5230 071d 43 4A                   		sub	r4, r10
 5231 071f E7 0A 4D                		mov.L	r10, 308[r0]
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****       for (int out_x = 0; out_x < output_width; ++out_x) {
 5232                             		.loc 7 97 31
 5233 0722 ED 07 53                		mov.L	332[r0], r7
 5234 0725 47 75                   		cmp	r7, r5
 5235 0727 3B 24 FE                		bne	.L226
 5236                             	.LVL405:
 5237                             		.balign 8,3,1
 5238                             	.L225:
 5239                             	.LBE1582:
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 5240                             		.loc 7 96 3
 5241 072a 62 1F                   		add	#1, r15
 5242                             	.LVL406:
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****     for (int out_y = 0; out_y < output_height; ++out_y) {
 5243                             		.loc 7 96 29
 5244 072c ED 07 4F                		mov.L	316[r0], r7
 5245 072f 47 7F                   		cmp	r7, r15
 5246 0731 3B 01 FE                		bne	.L223
 5247                             	.LVL407:
 5248                             	.LBE1588:
 5249                             	.LBE1598:
 5250                             	.LBE1608:
 5251                             	.LBB1609:
 5252                             	.LBB1610:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 5253                             		.loc 5 185 5 is_stmt 1
 5254 0734 A8 8F                   		mov.L	12[r0], r7
 5255 0736 61 57                   		cmp	#5, r7
 5256 0738 2B 0B                   		ble	.L291
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5257                             		.loc 5 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5258                             		.loc 5 189 16 is_stmt 0
 5259 073a A9 01                   		mov.L	16[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5260                             		.loc 5 189 29
 5261 073c 61 01                   		cmp	#0, r1
 5262 073e 15                      		beq	.L291
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5263                             		.loc 5 189 16
 5264 073f 05 00 00 00             		bsr	__ZdaPv
 5265                             	.LVL408:
 5266                             		.balign 8,3,1
 5267                             	.L291:
 5268 0743 AA 0F                   		mov.L	36[r0], r7
 5269                             	.LVL409:
 5270                             	.LBE1610:
 5271                             	.LBE1609:
 5272                             	.LBB1611:
 5273                             	.LBB1612:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 5274                             		.loc 5 185 5 is_stmt 1
 5275 0745 61 57                   		cmp	#5, r7
 5276 0747 2A 05 38 0C FC          		ble	.L248
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5277                             		.loc 5 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5278                             		.loc 5 189 16 is_stmt 0
 5279 074c AA 81                   		mov.L	40[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5280                             		.loc 5 189 29
 5281 074e 61 01                   		cmp	#0, r1
 5282 0750 3A 05 FC                		beq	.L248
 5283                             	.LBE1612:
 5284                             	.LBE1611:
 5285                             	.LBE1622:
 5286                             	.LBB1623:
 5287                             	.LBB1477:
 5288                             	.LBB1471:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5289                             		.loc 5 189 16
 5290 0753 05 00 00 00             		bsr	__ZdaPv
 5291                             	.LVL410:
 5292 0757 38 EA FC                		bra	.L298
 5293                             	.LVL411:
 5294                             	.L259:
 5295                             	.LBE1471:
 5296                             	.LBE1477:
 5297                             	.LBE1623:
 5298                             	.LBE1641:
 5299                             	.LBE1664:
 5300                             	.LBB1665:
 5301                             	.LBB1426:
 5302                             	.LBB1411:
 5303                             	.LBB1250:
 5304                             	.LBB1247:
 5305                             	.LBB1245:
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   } else {
 5306                             		.loc 2 263 5
 5307 075a F9 02 45 00 00 80 3F    		mov.L	#0x3f800000, 276[r0]
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     *activation_max = 1;
 5308                             		.loc 2 262 5
 5309 0761 F9 02 44 00 00 80 BF    		mov.L	#0xbf800000, 272[r0]
 5310 0768 38 0B F9                		bra	.L190
 5311                             	.LVL412:
 5312                             	.L230:
 5313                             	.LBE1245:
 5314                             	.LBE1247:
 5315                             	.LBE1250:
 5316                             	.LBE1411:
 5317                             	.LBE1426:
 5318                             	.LBE1665:
 5319                             	.LBB1666:
 5320                             	.LBB1642:
 5321                             	.LBB1624:
 5322                             	.LBB1613:
 5323                             	.LBB1599:
 5324                             	.LBB1589:
 5325                             	.LBB1583:
 5326                             	.LBB1577:
 5327                             	.LBB1571:
 5328                             	.LBB1565:
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\pooling.h ****           acc = std::max(acc, params.quantized_activation_min);
 5329                             		.loc 7 125 11 is_stmt 1
 5330 076b 05 00 00 00             		bsr	_abort
 5331                             	.LVL413:
 5332                             	.LBE1565:
 5333                             	.LBE1571:
 5334                             	.LBE1577:
 5335                             	.LBE1583:
 5336                             	.LBE1589:
 5337                             	.LBE1599:
 5338                             	.LBE1613:
 5339                             	.LBE1624:
 5340                             	.LBE1642:
 5341                             	.LBE1666:
 5342                             	.LFE3964:
 5344 076f 03                      		.section	.text._ZN6tflite3ops5micro24Register_AVERAGE_POOL_2DEv,"ax",@progbits
 5345                             		.global	__ZN6tflite3ops5micro24Register_AVERAGE_POOL_2DEv
 5347                             	__ZN6tflite3ops5micro24Register_AVERAGE_POOL_2DEv:
 5348                             	.LFB3966:
 370:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 371:../src/tensorflow/lite/micro/kernels/pooling.cc **** }  // namespace pooling
 372:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 373:../src/tensorflow/lite/micro/kernels/pooling.cc **** TfLiteRegistration Register_AVERAGE_POOL_2D() {
 5349                             		.loc 1 373 47
 374:../src/tensorflow/lite/micro/kernels/pooling.cc ****   return {/*init=*/pooling::Init,
 5350                             		.loc 1 374 3
 375:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*free=*/nullptr,
 376:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*prepare=*/pooling::AveragePrepare,
 377:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*invoke=*/pooling::AverageEval,
 378:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*profiling_string=*/nullptr,
 379:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*builtin_code=*/0,
 380:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*custom_name=*/nullptr,
 381:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*version=*/0};
 5351                             		.loc 1 381 24 is_stmt 0
 5352 0000 FB 22 00 00 00 00       		mov.L	#.LANCHOR0, r2
 5353 0006 EF F1                   		mov.L	r15, r1
 5354 0008 75 43 20                		mov.L	#32, r3
 5355 000b 7F 8F                   		smovf
 382:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 5356                             		.loc 1 382 1
 5357 000d EF F1                   		mov.L	r15, r1
 5358 000f 02                      		rts
 5359                             	.LFE3966:
 5361                             		.section	.text._ZN6tflite3ops5micro20Register_MAX_POOL_2DEv,"ax",@progbits
 5362                             		.global	__ZN6tflite3ops5micro20Register_MAX_POOL_2DEv
 5364                             	__ZN6tflite3ops5micro20Register_MAX_POOL_2DEv:
 5365                             	.LFB3967:
 383:../src/tensorflow/lite/micro/kernels/pooling.cc **** 
 384:../src/tensorflow/lite/micro/kernels/pooling.cc **** TfLiteRegistration Register_MAX_POOL_2D() {
 5366                             		.loc 1 384 43 is_stmt 1
 385:../src/tensorflow/lite/micro/kernels/pooling.cc ****   return {/*init=*/pooling::Init,
 5367                             		.loc 1 385 3
 386:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*free=*/nullptr,
 387:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*prepare=*/pooling::MaxPrepare,
 388:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*invoke=*/pooling::MaxEval,
 389:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*profiling_string=*/nullptr,
 390:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*builtin_code=*/0,
 391:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*custom_name=*/nullptr,
 392:../src/tensorflow/lite/micro/kernels/pooling.cc ****           /*version=*/0};
 5368                             		.loc 1 392 24 is_stmt 0
 5369 0000 FB 22 20 00 00 00       		mov.L	#.LANCHOR0+32, r2
 5370 0006 EF F1                   		mov.L	r15, r1
 5371 0008 75 43 20                		mov.L	#32, r3
 5372 000b 7F 8F                   		smovf
 393:../src/tensorflow/lite/micro/kernels/pooling.cc **** }
 5373                             		.loc 1 393 1
 5374 000d EF F1                   		mov.L	r15, r1
 5375 000f 02                      		rts
 5376                             	.LFE3967:
 5378                             		.section C,"a",@progbits
 5379                             		.p2align 2
 5380                             		.balign 4
 5381                             		.set	.LANCHOR0,. + 0
 5382                             	.LC0:
 5383 0000 00 00 00 00             		.long	__ZN6tflite3ops5micro7pooling4InitEP13TfLiteContextPKcm
 5384 0004 00 00 00 00             		.long	0
 5385 0008 00 00 00 00             		.long	__ZN6tflite3ops5micro7pooling14AveragePrepareEP13TfLiteContextP10TfLiteNode
 5386 000c 00 00 00 00             		.long	__ZN6tflite3ops5micro7pooling11AverageEvalEP13TfLiteContextP10TfLiteNode
 5387 0010 00 00 00 00             		.long	0
 5388 0014 00 00 00 00             		.long	0
 5389 0018 00 00 00 00             		.long	0
 5390 001c 00 00 00 00             		.long	0
 5391                             	.LC1:
 5392 0020 00 00 00 00             		.long	__ZN6tflite3ops5micro7pooling4InitEP13TfLiteContextPKcm
 5393 0024 00 00 00 00             		.long	0
 5394 0028 00 00 00 00             		.long	__ZN6tflite3ops5micro7pooling10MaxPrepareEP13TfLiteContextP10TfLiteNode
 5395 002c 00 00 00 00             		.long	__ZN6tflite3ops5micro7pooling7MaxEvalEP13TfLiteContextP10TfLiteNode
 5396 0030 00 00 00 00             		.long	0
 5397 0034 00 00 00 00             		.long	0
 5398 0038 00 00 00 00             		.long	0
 5399 003c 00 00 00 00             		.long	0
 5400                             		.section	.rodata._ZN6tflite3ops5micro7pooling11AverageEvalEP13TfLiteContextP10TfLiteNode.str1.1,"a
 5401                             	.LC3:
 5402 0000 49 6E 70 75 74 20 74 79 		.string	"Input type %s is not currently supported"
 5402      70 65 20 25 73 20 69 73 
 5402      20 6E 6F 74 20 63 75 72 
 5402      72 65 6E 74 6C 79 20 73 
 5402      75 70 70 6F 72 74 65 64 
 5403                             		.section	.rodata._ZN6tflite3ops5micro7pooling7MaxEvalEP13TfLiteContextP10TfLiteNode.str1.1,"aMS",@
 5404                             	.LC2:
 5405 0000 54 79 70 65 20 25 73 20 		.string	"Type %s not currently supported."
 5405      6E 6F 74 20 63 75 72 72 
 5405      65 6E 74 6C 79 20 73 75 
 5405      70 70 6F 72 74 65 64 2E 
 5405      00 
 5602                             	.Letext0:
 5603                             		.file 9 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3.
 5604                             		.file 10 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5605                             		.file 11 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5606                             		.file 12 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5607                             		.file 13 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5608                             		.file 14 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5609                             		.file 15 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5610                             		.file 16 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5611                             		.file 17 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5612                             		.file 18 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5613                             		.file 19 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5614                             		.file 20 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5615                             		.file 21 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5616                             		.file 22 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5617                             		.file 23 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5618                             		.file 24 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5619                             		.file 25 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5620                             		.file 26 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5621                             		.file 27 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5622                             		.file 28 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5623                             		.file 29 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5624                             		.file 30 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5625                             		.file 31 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5626                             		.file 32 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5627                             		.file 33 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5628                             		.file 34 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5629                             		.file 35 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 5630                             		.file 36 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\
 5631                             		.file 37 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\loc
 5632                             		.file 38 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_ty
 5633                             		.file 39 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\ree
 5634                             		.file 40 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5635                             		.file 41 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 5636                             		.file 42 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\wchar.h"
 5637                             		.file 43 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_st
 5638                             		.file 44 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdint.h
 5639                             		.file 45 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\locale.h
 5640                             		.file 46 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\ctype.h"
 5641                             		.file 47 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdlib.h
 5642                             		.file 48 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdio.h"
 5643                             		.file 49 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\err
 5644                             		.file 50 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
 5645                             		.file 51 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\th
 5646                             		.file 52 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\string.h
 5647                             		.file 53 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 5648                             		.file 54 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 5649                             		.file 55 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 5650                             		.file 56 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
 5651                             		.file 57 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
 5652                             		.file 58 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\wctype.h
 5653                             		.file 59 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 5654                             		.file 60 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 5655                             		.file 61 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
 5656                             		.file 62 "<built-in>"
