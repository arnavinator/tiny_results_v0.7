   1                             		.file	"arm_nn_activations_q15.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.arm_nn_activations_direct_q15,"ax",@progbits
   5                             		.global	_arm_nn_activations_direct_q15
   7                             	_arm_nn_activations_direct_q15:
   8                             	.LFB27:
   9                             		.file 1 "../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c"
   1:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** /*
   2:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * Copyright (C) 2010-2020 Arm Limited or its affiliates. All rights reserved.
   3:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *
   4:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * SPDX-License-Identifier: Apache-2.0
   5:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *
   6:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * not use this file except in compliance with the License.
   8:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * You may obtain a copy of the License at
   9:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *
  10:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  11:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *
  12:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  13:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * See the License for the specific language governing permissions and
  16:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * limitations under the License.
  17:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  */
  18:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  19:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** /* ----------------------------------------------------------------------
  20:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * Project:      CMSIS NN Library
  21:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * Title:        arm_nn_activations_q15.c
  22:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * Description:  Q15 neural network activation function using direct table look-up
  23:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *
  24:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * $Date:        09. October 2020
  25:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * $Revision:    V.1.0.1
  26:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *
  27:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * Target Processor:  Cortex-M cores
  28:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *
  29:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * -------------------------------------------------------------------- */
  30:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  31:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** #include "arm_nn_tables.h"
  32:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** #include "arm_nnfunctions.h"
  33:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  34:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** /**
  35:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *  @ingroup groupNN
  36:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  */
  37:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  38:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** /**
  39:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * @addtogroup Acti
  40:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * @{
  41:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  */
  42:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  43:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** /**
  44:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * @brief neural network activation function using direct table look-up
  45:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *
  46:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  * @note  Refer header file for details.
  47:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  *
  48:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****  */
  49:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  50:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** void arm_nn_activations_direct_q15(q15_t *data, uint16_t size, uint16_t int_width, arm_nn_activatio
  51:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** {
  10                             		.loc 1 51 1
  11                             	.LVL0:
  12 0000 6E 6C                   		pushm	r6-r12
  13                             	.LCFI0:
  52:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     uint16_t i = size;
  14                             		.loc 1 52 5
  15                             	.LVL1:
  53:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     q15_t *pIn = data;
  16                             		.loc 1 53 5
  54:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     q15_t *pOut = data;
  55:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     uint16_t shift_size = 8 + 3 - int_width;
  56:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     uint32_t bit_mask = 0x7FF >> int_width;
  17                             		.loc 1 56 31 is_stmt 0
  18 0002 5F 37                   		movu.W	r3, r7
  19 0004 FB AA FF 07             		mov.L	#0x7ff, r10
  20 0008 FD 61 7A                		shar	r7, r10
  57:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     uint32_t full_frac = bit_mask + 1;
  58:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     const q15_t *lookup_table;
  59:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  60:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     switch (type)
  61:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     {
  62:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     case ARM_SIGMOID:
  63:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         lookup_table = sigmoidTable_q15;
  64:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         break;
  65:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     case ARM_TANH:
  66:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     default:
  67:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         lookup_table = tanhTable_q15;
  68:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         break;
  69:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     }
  70:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  71:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     while (i)
  21                             		.loc 1 71 11
  22 000b 5F 25                   		movu.W	r2, r5
  23                             	.LVL2:
  54:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     q15_t *pOut = data;
  24                             		.loc 1 54 5 is_stmt 1
  55:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     uint32_t bit_mask = 0x7FF >> int_width;
  25                             		.loc 1 55 5
  55:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     uint32_t bit_mask = 0x7FF >> int_width;
  26                             		.loc 1 55 14 is_stmt 0
  27 000d 66 BF                   		mov.L	#11, r15
  28 000f 43 3F                   		sub	r3, r15
  29                             	.LVL3:
  56:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     uint32_t full_frac = bit_mask + 1;
  30                             		.loc 1 56 5 is_stmt 1
  57:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     uint32_t full_frac = bit_mask + 1;
  31                             		.loc 1 57 5
  57:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     uint32_t full_frac = bit_mask + 1;
  32                             		.loc 1 57 14 is_stmt 0
  33 0011 71 A7 01                		add	#1, r10, r7
  34                             	.LVL4:
  58:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  35                             		.loc 1 58 5 is_stmt 1
  60:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     {
  36                             		.loc 1 60 5
  67:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         break;
  37                             		.loc 1 67 22 is_stmt 0
  38 0014 61 04                   		cmp	#0, r4
  39 0016 FB 42 00 00 00 00       		mov.L	#_sigmoidTable_q15, r4
  40                             	.LVL5:
  41 001c FD 70 F4 00 00 00 00    		stnz	#_tanhTable_q15, r4
  42                             	.LVL6:
  43                             		.loc 1 71 11
  44 0023 61 05                   		cmp	#0, r5
  45 0025 20 53                   		beq	.L1
  46 0027 71 2E FF                		add	#-1, r2, r14
  47 002a 5F EE                   		movu.W	r14, r14
  48 002c 5F FF                   		movu.W	r15, r15
  49                             	.LVL7:
  50 002e 62 1E                   		add	#1, r14
  51 0030 4B EE                   		add	r14, r14
  52 0032 4B 1E                   		add	r1, r14
  53                             	.LVL8:
  54                             		.balign 8,3,1
  55                             	.L3:
  56                             	.LBB2:
  72:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     {
  73:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         q15_t out;
  57                             		.loc 1 73 9 is_stmt 1
  74:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         q15_t in = *pIn++;
  58                             		.loc 1 74 9
  59                             		.loc 1 74 24 is_stmt 0
  60 0034 EF 13                   		mov.L	r1, r3
  61                             		.loc 1 74 15
  62 0036 FD 29 35                		mov.W	[r3+], r5
  63                             	.LVL9:
  75:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         q15_t frac = (uint32_t)in & bit_mask;
  64                             		.loc 1 75 9 is_stmt 1
  76:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         q15_t value = lookup_table[(uint8_t)(in >> shift_size)];
  65                             		.loc 1 76 9
  75:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         q15_t frac = (uint32_t)in & bit_mask;
  66                             		.loc 1 75 35 is_stmt 0
  67 0039 EF A2                   		mov.L	r10, r2
  68 003b 53 52                   		and	r5, r2
  69                             	.LBB3:
  77:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         if ((in >> shift_size) != 0x7f)
  78:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         {
  79:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****             q15_t value2 = lookup_table[(uint8_t)(1 + ((uint8_t)(in >> shift_size)))];
  70                             		.loc 1 79 13 is_stmt 1
  71                             	.LBE3:
  76:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         q15_t value = lookup_table[(uint8_t)(in >> shift_size)];
  72                             		.loc 1 76 49 is_stmt 0
  73 003d DF 55                   		mov.W	r5, r5
  74                             	.LBB4:
  80:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****             /* doing the interpolation here for better accuracy */
  81:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****             out = ((q31_t)(full_frac - frac) * value + (q31_t)value2 * frac) >> shift_size;
  75                             		.loc 1 81 70
  76 003f DF 22                   		mov.W	r2, r2
  77                             	.LBE4:
  76:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         if ((in >> shift_size) != 0x7f)
  78                             		.loc 1 76 49
  79 0041 FD 61 F5                		shar	r15, r5
  80                             	.LVL10:
  81                             	.LBB5:
  82                             		.loc 1 81 13 is_stmt 1
  79:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****             /* doing the interpolation here for better accuracy */
  83                             		.loc 1 79 41 is_stmt 0
  84 0044 71 56 01                		add	#1, r5, r6
  85                             		.loc 1 81 38
  86 0047 FF 0C 27                		sub	r2, r7, r12
  79:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****             /* doing the interpolation here for better accuracy */
  87                             		.loc 1 79 41
  88 004a 5B 66                   		movu.B	r6, r6
  89                             	.LBE5:
  76:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         if ((in >> shift_size) != 0x7f)
  90                             		.loc 1 76 36
  91 004c 75 4B FF                		mov.L	#0xff, r11
  92 004f 53 5B                   		and	r5, r11
  76:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         if ((in >> shift_size) != 0x7f)
  93                             		.loc 1 76 15
  94 0051 FE 5B 4B                		mov.W	[r11,r4], r11
  95                             	.LVL11:
  77:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         {
  96                             		.loc 1 77 9 is_stmt 1
  82:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         }
  83:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         else
  84:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         {
  85:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****             /* the largest positive value does not have a right side for linear interpolation */
  86:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****             out = value;
  87:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         }
  88:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** 
  89:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         *pOut++ = out;
  97                             		.loc 1 89 9
  77:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         {
  98                             		.loc 1 77 12 is_stmt 0
  99 0054 75 55 7F                		cmp	#0x7f, r5
 100 0057 20 1A                   		beq	.L4
 101                             	.LBB6:
  81:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         }
 102                             		.loc 1 81 46
 103 0059 DF BB                   		mov.W	r11, r11
 104                             	.LVL12:
  81:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         }
 105                             		.loc 1 81 56
 106 005b FE 56 45                		mov.W	[r6,r4], r5
 107                             	.LVL13:
  81:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         }
 108                             		.loc 1 81 46
 109 005e 4F CB                   		mul	r12, r11
 110                             	.LVL14:
  81:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         }
 111                             		.loc 1 81 70
 112 0060 4F 25                   		mul	r2, r5
  81:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         }
 113                             		.loc 1 81 54
 114 0062 4B B5                   		add	r11, r5
  81:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         }
 115                             		.loc 1 81 78
 116 0064 FD 61 F5                		shar	r15, r5
  81:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         }
 117                             		.loc 1 81 17
 118 0067 D3 15                   		mov.W	r5, [r1]
 119                             	.LVL15:
 120                             	.LBE6:
  90:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         i--;
 121                             		.loc 1 90 9 is_stmt 1
 122                             	.LBE2:
  71:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     {
 123                             		.loc 1 71 11 is_stmt 0
 124 0069 47 E3                   		cmp	r14, r3
 125 006b 20 0D                   		beq	.L1
 126                             		.balign 8,3,1
 127                             	.L5:
 128 006d EF 31                   		mov.L	r3, r1
 129 006f 2E C5                   		bra	.L3
 130                             	.LVL16:
 131                             	.L4:
 132                             	.LBB7:
  89:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         i--;
 133                             		.loc 1 89 9 is_stmt 1
  89:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****         i--;
 134                             		.loc 1 89 17 is_stmt 0
 135 0071 D3 1B                   		mov.W	r11, [r1]
 136                             	.LVL17:
 137                             		.loc 1 90 9 is_stmt 1
 138                             	.LBE7:
  71:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     {
 139                             		.loc 1 71 11 is_stmt 0
 140 0073 47 E3                   		cmp	r14, r3
 141 0075 21 F8                   		bne	.L5
 142                             	.LVL18:
 143 0077 03                      		.balign 8,3,2
 144                             	.L1:
  91:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c ****     }
  92:../src/CMSIS/NN/Source/ActivationFunctions/arm_nn_activations_q15.c **** }
 145                             		.loc 1 92 1
 146 0078 3F 6C 07                		rtsd	#28, r6-r12
 147                             	.LFE27:
 193                             	.Letext0:
 194                             		.file 2 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\\
 195                             		.file 3 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_std
 196                             		.file 4 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\lock
 197                             		.file 5 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_typ
 198                             		.file 6 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.20
 199                             		.file 7 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\reen
 200                             		.file 8 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
 201                             		.file 9 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CMS
 202                             		.file 10 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
 203                             		.file 11 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
