   1                             		.file	"greedy_memory_planner.cc"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text._ZN6tflite19GreedyMemoryPlannerD2Ev,"ax",@progbits
   5                             		.global	__ZN6tflite19GreedyMemoryPlannerD2Ev
   7                             	__ZN6tflite19GreedyMemoryPlannerD2Ev:
   8                             	.LFB17:
   9                             		.file 1 "../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc"
   1:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
   3:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** You may obtain a copy of the License at
   6:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
   7:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
   9:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** limitations under the License.
  14:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** ==============================================================================*/
  15:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  16:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** #include "tensorflow/lite/micro/memory_planner/greedy_memory_planner.h"
  17:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  18:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** namespace tflite {
  19:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  20:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** // Simple stable in-place sort function. Not time-efficient for large arrays.
  21:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** // Would normally be in an anonymous namespace to keep it private, but we want
  22:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** // to be able to test it externally.
  23:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** void ReverseSortInPlace(int* values, int* ids, int size) {
  24:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   bool any_swapped;
  25:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   do {
  26:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     any_swapped = false;
  27:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int i = 1; i < size; ++i) {
  28:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (values[i - 1] < values[i]) {
  29:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int value_temp = values[i - 1];
  30:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         values[i - 1] = values[i];
  31:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         values[i] = value_temp;
  32:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int id_temp = ids[i - 1];
  33:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i - 1] = ids[i];
  34:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i] = id_temp;
  35:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         any_swapped = true;
  36:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
  37:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
  38:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } while (any_swapped);
  39:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
  40:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  41:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** GreedyMemoryPlanner::GreedyMemoryPlanner(unsigned char* scratch_buffer,
  42:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                                          int scratch_buffer_size)
  43:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     : buffer_count_(0), need_to_calculate_offsets_(true) {
  44:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // Allocate the arrays we need within the scratch buffer arena.
  45:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   max_buffer_count_ = scratch_buffer_size / per_buffer_size();
  46:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  47:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   unsigned char* next_free = scratch_buffer;
  48:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   requirements_ = reinterpret_cast<BufferRequirements*>(next_free);
  49:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(BufferRequirements) * max_buffer_count_;
  50:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  51:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   buffer_sizes_sorted_ = reinterpret_cast<int*>(next_free);
  52:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(int) * max_buffer_count_;
  53:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  54:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   buffer_ids_sorted_ = reinterpret_cast<int*>(next_free);
  55:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(int) * max_buffer_count_;
  56:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  57:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   buffers_sorted_by_offset_ = reinterpret_cast<ListEntry*>(next_free);
  58:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(ListEntry) * max_buffer_count_;
  59:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  60:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   buffer_offsets_ = reinterpret_cast<int*>(next_free);
  61:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
  62:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  63:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** GreedyMemoryPlanner::~GreedyMemoryPlanner() {
  10                             		.loc 1 63 1
  11                             	.LVL0:
  64:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // We don't own the scratch buffer, so don't deallocate anything.
  65:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
  12                             		.loc 1 65 1 is_stmt 0
  13 0000 02                      		rts
  14                             	.LFE17:
  16                             		.global	__ZN6tflite19GreedyMemoryPlannerD1Ev
  17                             		.set	__ZN6tflite19GreedyMemoryPlannerD1Ev,__ZN6tflite19GreedyMemoryPlannerD2Ev
  18                             		.section	.text._ZN6tflite19GreedyMemoryPlanner14GetBufferCountEv,"ax",@progbits
  19                             		.global	__ZN6tflite19GreedyMemoryPlanner14GetBufferCountEv
  21                             	__ZN6tflite19GreedyMemoryPlanner14GetBufferCountEv:
  22                             	.LFB27:
  66:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  67:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** TfLiteStatus GreedyMemoryPlanner::AddBuffer(
  68:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     tflite::ErrorReporter* error_reporter, int size, int first_time_used,
  69:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     int last_time_used) {
  70:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (buffer_count_ >= max_buffer_count_) {
  71:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "Too many buffers (max is %d)",
  72:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          max_buffer_count_);
  73:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return kTfLiteError;
  74:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
  75:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   BufferRequirements* current = &requirements_[buffer_count_];
  76:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->size = size;
  77:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->first_time_used = first_time_used;
  78:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->last_time_used = last_time_used;
  79:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->offline_offset = kOnlinePlannedBuffer;
  80:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ++buffer_count_;
  81:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   need_to_calculate_offsets_ = true;
  82:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
  83:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
  84:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  85:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** TfLiteStatus GreedyMemoryPlanner::AddBuffer(
  86:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     tflite::ErrorReporter* error_reporter, int size, int first_time_used,
  87:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     int last_time_used, int offline_offset) {
  88:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   BufferRequirements* current = &requirements_[buffer_count_];
  89:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (AddBuffer(error_reporter, size, first_time_used, last_time_used) !=
  90:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       kTfLiteOk) {
  91:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return kTfLiteError;
  92:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
  93:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->offline_offset = offline_offset;
  94:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
  95:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
  96:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  97:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** bool GreedyMemoryPlanner::DoesEntryOverlapInTime(
  98:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const GreedyMemoryPlanner::ListEntry* entry, const int first_time_used,
  99:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int last_time_used) const {
 100:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   const BufferRequirements* entry_requirements =
 101:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       &requirements_[entry->requirements_index];
 102:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (entry_requirements->first_time_used > last_time_used) {
 103:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 104:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 105:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (first_time_used > entry_requirements->last_time_used) {
 106:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 107:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 108:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return true;
 109:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 110:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 111:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** GreedyMemoryPlanner::ListEntry*
 112:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** GreedyMemoryPlanner::NextSimultaneouslyActiveBuffer(
 113:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const GreedyMemoryPlanner::ListEntry* start, const int first_time_used,
 114:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int last_time_used) {
 115:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* result = nullptr;
 116:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* candidate_next_entry;
 117:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (start == nullptr) {
 118:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     candidate_next_entry = &buffers_sorted_by_offset_[first_entry_index_];
 119:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } else {
 120:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (start->next_entry_index == -1) {
 121:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       return nullptr;
 122:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 123:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     candidate_next_entry = &buffers_sorted_by_offset_[start->next_entry_index];
 124:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 125:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   do {
 126:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (DoesEntryOverlapInTime(candidate_next_entry, first_time_used,
 127:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                                last_time_used)) {
 128:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       result = candidate_next_entry;
 129:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 130:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 131:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (candidate_next_entry->next_entry_index == -1) {
 132:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 133:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 134:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     candidate_next_entry =
 135:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         &buffers_sorted_by_offset_[candidate_next_entry->next_entry_index];
 136:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } while (true);
 137:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return result;
 138:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 139:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 140:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** void GreedyMemoryPlanner::CalculateOffsetsIfNeeded() {
 141:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (!need_to_calculate_offsets_ || (buffer_count_ == 0)) {
 142:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return;
 143:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 144:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   need_to_calculate_offsets_ = false;
 145:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 146:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // Start off by ordering the buffers in descending order of size.
 147:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // This helps find a more compact layout. Intuitively, you can think
 148:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // about putting the large buffers in place first, and then the
 149:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // smaller buffers can fit in the gaps, rather than fragmenting the
 150:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // gaps with small buffers at the beginning. Add offline planned offsets
 151:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // first in the list, since they have a predetermined offset.
 152:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int idx_from_tail = buffer_count_;
 153:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int idx_from_head = 0;
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 155:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 156:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       idx_from_tail--;
 157:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_sizes_sorted_[idx_from_tail] = requirements_[i].size;
 158:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_ids_sorted_[idx_from_tail] = i;
 159:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_offsets_[i] = -1;
 160:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     } else {
 161:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_sizes_sorted_[idx_from_head] = requirements_[i].size;
 162:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_ids_sorted_[idx_from_head] = i;
 163:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_offsets_[i] = requirements_[i].offline_offset;
 164:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       idx_from_head++;
 165:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 166:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 167:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 168:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // This sorting algorithm is naive, and may end up taking a very long time
 169:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // with hundreds of buffers. Do not sort the offline planned offsets.
 170:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ReverseSortInPlace(&buffer_sizes_sorted_[idx_from_head],
 171:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                      &buffer_ids_sorted_[idx_from_head],
 172:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                      buffer_count_ - idx_from_head);
 173:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 174:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // Initialize the first entry to the first buffer in
 175:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // buffer_ids_sorted_.
 176:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   //   - If there are no offline planned offsets, the largest buffer will be
 177:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   //     first, and the buffers will be handled in size order.
 178:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   //   - If offline offsets are present, these will be handled first in order
 179:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   //     for the greedy algorithm to utilized gaps in the offline plan.
 180:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   first_entry_index_ = 0;
 181:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free_entry_ = 1;
 182:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* first_entry = &buffers_sorted_by_offset_[first_entry_index_];
 183:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   first_entry->next_entry_index = -1;  // to mark the entry as end of list
 184:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int buffer_id = buffer_ids_sorted_[0];
 185:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   first_entry->requirements_index = buffer_id;
 186:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (requirements_[buffer_id].offline_offset == kOnlinePlannedBuffer) {
 187:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     buffer_offsets_[buffer_id] = 0;
 188:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 189:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   first_entry->offset = buffer_offsets_[buffer_id];
 190:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 191:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // Work through the rest of the buffers to find a good gap to place each one.
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 1; i < buffer_count_; ++i) {
 193:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 194:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     buffer_id = buffer_ids_sorted_[i];
 195:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Look at what size and time range the buffer needs to be active.
 196:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* wanted_requirements = &requirements_[buffer_id];
 197:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_size = wanted_requirements->size;
 198:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_first_time_used = wanted_requirements->first_time_used;
 199:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_last_time_used = wanted_requirements->last_time_used;
 200:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 201:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Find the first buffer that's active in our time range. All placed
 202:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // buffers are stored in the order of their starting position in the arena
 203:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // so that it's easy to find the next buffer in memory, and so the gap.
 204:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The candidate_entry variable holds the buffer that we're considering
 205:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // placing the current buffer after.
 206:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 207:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     int candidate_offset = 0;
 208:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Loop through the offset-ordered list of buffers, looking for gaps.
 209:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (wanted_requirements->offline_offset == kOnlinePlannedBuffer) {
 210:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       ListEntry* prior_entry = nullptr;
 211:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       while (true) {
 212:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         // Find out what the next active buffer is.
 213:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ListEntry* next_entry = NextSimultaneouslyActiveBuffer(
 214:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             prior_entry, wanted_first_time_used, wanted_last_time_used);
 215:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 216:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (prior_entry) {
 217:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           BufferRequirements* candidate_requirements =
 218:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****               &requirements_[prior_entry->requirements_index];
 219:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           const int prior_entry_offset =
 220:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****               prior_entry->offset + candidate_requirements->size;
 221:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           if (prior_entry_offset > candidate_offset) {
 222:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             candidate_offset = prior_entry_offset;
 223:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           }
 224:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 225:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (next_entry == nullptr) {
 226:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // We're at the end of the list, so we can always append the buffer
 227:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // here.
 228:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           break;
 229:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 230:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         // Find out how much space there is between us and the next buffer.
 231:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int gap = next_entry->offset - candidate_offset;
 232:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (gap >= wanted_size) {
 233:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // This entry has a big enough gap between it and the next, so
 234:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // use it!
 235:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           break;
 236:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 237:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         // The gap wasn't big enough, so move on to another candidate.
 238:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         prior_entry = next_entry;
 239:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 240:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     } else {
 241:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       // Offline planned offset are to be considered constant
 242:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       candidate_offset = wanted_requirements->offline_offset;
 243:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 244:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // At this point, we've either found a gap (possibly at the end of the
 245:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // list) and want to place the buffer there, or there are no other active
 246:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // buffers in this time range and so we can put it at offset zero.
 247:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Record the buffer's offset in our plan.
 248:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     buffer_offsets_[buffer_id] = candidate_offset;
 249:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Add the newly-placed buffer to our offset-ordered list, so that
 250:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // subsequent passes can fit in their buffers around it.
 251:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     ListEntry* new_entry = &buffers_sorted_by_offset_[next_free_entry_];
 252:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     new_entry->offset = candidate_offset;
 253:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     new_entry->requirements_index = buffer_id;
 254:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int new_entry_index = next_free_entry_;
 255:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     ++next_free_entry_;
 256:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 257:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (first_entry->offset > candidate_offset) {
 258:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       // The new entry offset is smaller than the first entry offset =>
 259:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       // replace the first entry
 260:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       first_entry = new_entry;
 261:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       first_entry->next_entry_index = first_entry_index_;
 262:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       first_entry_index_ = new_entry_index;
 263:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     } else {
 264:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       ListEntry* current_entry = first_entry;
 265:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       // Make sure that we insert the buffer at the correct place in the
 266:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       // buffer-offset-ordered list
 267:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       while (true) {
 268:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int next_entry_index = current_entry->next_entry_index;
 269:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (next_entry_index == -1) {
 270:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // We're at the end of the list, so just add the new entry here.
 271:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           current_entry->next_entry_index = new_entry_index;
 272:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           new_entry->next_entry_index = -1;
 273:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           break;
 274:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 275:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         // not at the end of the list -> take a look at next entry
 276:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ListEntry* next_entry = &buffers_sorted_by_offset_[next_entry_index];
 277:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (next_entry->offset > candidate_offset) {
 278:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // We're at the right spot to do an insertion and retain the sorting
 279:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // order, so place the new entry here.
 280:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           new_entry->next_entry_index = current_entry->next_entry_index;
 281:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           current_entry->next_entry_index = new_entry_index;
 282:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           break;
 283:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 284:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         current_entry = next_entry;
 285:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 286:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 287:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 288:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 289:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 290:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** size_t GreedyMemoryPlanner::GetMaximumMemorySize() {
 291:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 292:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (buffer_count_ == 0) {
 293:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return 0;
 294:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 295:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* entry = &buffers_sorted_by_offset_[first_entry_index_];
 296:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   size_t max_size = 0;
 297:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   while (entry) {
 298:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* requirements =
 299:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         &requirements_[entry->requirements_index];
 300:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // TODO(b/148246793): Update all size and offset variables types from
 301:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     //                    int to size_t
 302:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const size_t current_size = entry->offset + requirements->size;
 303:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (current_size > max_size) {
 304:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       max_size = current_size;
 305:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 306:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (entry->next_entry_index == -1) {
 307:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 308:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 309:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     entry = &buffers_sorted_by_offset_[entry->next_entry_index];
 310:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 311:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return max_size;
 312:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 313:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 314:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** void GreedyMemoryPlanner::PrintMemoryPlan(ErrorReporter* error_reporter) {
 315:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 316:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 317:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 318:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(
 319:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         error_reporter,
 320:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         "Planner buffer ID: %d, calculated offset: %d, size required: %d, "
 321:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         "first_time_created: %d, "
 322:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         "last_time_used: %d",
 323:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         i, buffer_offsets_[i], requirements_[i].size,
 324:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         requirements_[i].first_time_used, requirements_[i].last_time_used);
 325:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 326:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 327:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   constexpr int kLineWidth = 80;
 328:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int max_size = kLineWidth;
 329:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int max_time = 0;
 330:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 331:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* requirements = &requirements_[i];
 332:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int offset = buffer_offsets_[i];
 333:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int last_time_used = requirements->last_time_used;
 334:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int size = offset + requirements->size;
 335:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (size > max_size) {
 336:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       max_size = size;
 337:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 338:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (last_time_used > max_time) {
 339:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       max_time = last_time_used;
 340:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 341:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 342:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 343:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   char line[kLineWidth + 1];
 344:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int t = 0; t <= max_time; ++t) {
 345:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int c = 0; c < kLineWidth; ++c) {
 346:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       line[c] = '.';
 347:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 348:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int i = 0; i < buffer_count_; ++i) {
 349:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       BufferRequirements* requirements = &requirements_[i];
 350:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if ((t < requirements->first_time_used) ||
 351:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           (t > requirements->last_time_used)) {
 352:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         continue;
 353:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 354:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int offset = buffer_offsets_[i];
 355:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (offset == -1) {
 356:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         continue;
 357:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 358:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int size = requirements->size;
 359:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int line_start = (offset * kLineWidth) / max_size;
 360:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int line_end = ((offset + size) * kLineWidth) / max_size;
 361:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       for (int n = line_start; n < line_end; ++n) {
 362:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (line[n] == '.') {
 363:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           char display;
 364:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           if (i < 10) {
 365:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = '0' + i;
 366:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           } else if (i < 36) {
 367:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = 'a' + (i - 10);
 368:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           } else if (i < 62) {
 369:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = 'A' + (i - 36);
 370:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           } else {
 371:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = '*';
 372:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           }
 373:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           line[n] = display;
 374:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         } else {
 375:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           line[n] = '!';
 376:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 377:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 378:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 379:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     line[kLineWidth] = 0;
 380:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "%s", (const char*)line);
 381:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 382:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 383:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 384:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** int GreedyMemoryPlanner::GetBufferCount() { return buffer_count_; }
  23                             		.loc 1 384 43 is_stmt 1
  24                             	.LVL1:
  25                             		.loc 1 384 45
  26                             		.loc 1 384 67 is_stmt 0
  27 0000 A8 91                   		mov.L	8[r1], r1
  28                             	.LVL2:
  29 0002 02                      		rts
  30                             	.LFE27:
  32                             		.section	.text._ZN6tflite19GreedyMemoryPlannerD0Ev,"ax",@progbits
  33                             		.global	__ZN6tflite19GreedyMemoryPlannerD0Ev
  35                             	__ZN6tflite19GreedyMemoryPlannerD0Ev:
  36                             	.LFB19:
  63:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // We don't own the scratch buffer, so don't deallocate anything.
  37                             		.loc 1 63 1 is_stmt 1
  38                             	.LVL3:
  65:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  39                             		.loc 1 65 1 is_stmt 0
  40 0000 75 42 2C                		mov.L	#44, r2
  41 0003 04 00 00 00             		bra	__ZdlPvm
  42                             	.LVL4:
  43                             	.LFE19:
  45                             		.section	.text._ZN6tflite19GreedyMemoryPlanner9AddBufferEPNS_13ErrorReporterEiii,"ax",@progbits
  46                             		.global	__ZN6tflite19GreedyMemoryPlanner9AddBufferEPNS_13ErrorReporterEiii
  48                             	__ZN6tflite19GreedyMemoryPlanner9AddBufferEPNS_13ErrorReporterEiii:
  49                             	.LFB20:
  69:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (buffer_count_ >= max_buffer_count_) {
  50                             		.loc 1 69 25 is_stmt 1
  51                             	.LVL5:
  52 0000 7E A7                   		push.l	r7
  53                             	.LCFI0:
  54 0002 60 C0                   		sub	#12, r0
  55                             	.LCFI1:
  70:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "Too many buffers (max is %d)",
  56                             		.loc 1 70 3
  70:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "Too many buffers (max is %d)",
  57                             		.loc 1 70 7 is_stmt 0
  58 0004 ED 1F 02                		mov.L	8[r1], r15
  70:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "Too many buffers (max is %d)",
  59                             		.loc 1 70 24
  60 0007 A8 1D                   		mov.L	4[r1], r5
  69:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (buffer_count_ >= max_buffer_count_) {
  61                             		.loc 1 69 25
  62 0009 A9 0F                   		mov.L	20[r0], r7
  70:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "Too many buffers (max is %d)",
  63                             		.loc 1 70 3
  64 000b 47 5F                   		cmp	r5, r15
  65 000d 28 23                   		bge	.L9
  66 000f EF 1E                   		mov.L	r1, r14
  75:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->size = size;
  67                             		.loc 1 75 3 is_stmt 1
  75:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->size = size;
  68                             		.loc 1 75 23 is_stmt 0
  69 0011 FD C4 F5                		shll	#4, r15, r5
  80:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   need_to_calculate_offsets_ = true;
  70                             		.loc 1 80 3
  71 0014 62 1F                   		add	#1, r15
  75:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->size = size;
  72                             		.loc 1 75 23
  73 0016 06 89 15 03             		add	12[r1].L, r5
  74                             	.LVL6:
  76:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->first_time_used = first_time_used;
  75                             		.loc 1 76 3 is_stmt 1
  76:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->first_time_used = first_time_used;
  76                             		.loc 1 76 17 is_stmt 0
  77 001a E3 53                   		mov.L	r3, [r5]
  77:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->last_time_used = last_time_used;
  78                             		.loc 1 77 3 is_stmt 1
  77:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->last_time_used = last_time_used;
  79                             		.loc 1 77 28 is_stmt 0
  80 001c A0 D4                   		mov.L	r4, 8[r5]
  78:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->offline_offset = kOnlinePlannedBuffer;
  81                             		.loc 1 78 3 is_stmt 1
  78:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->offline_offset = kOnlinePlannedBuffer;
  82                             		.loc 1 78 27 is_stmt 0
  83 001e A0 DF                   		mov.L	r7, 12[r5]
  79:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ++buffer_count_;
  84                             		.loc 1 79 3 is_stmt 1
  82:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
  85                             		.loc 1 82 10 is_stmt 0
  86 0020 66 01                   		mov.L	#0, r1
  87                             	.LVL7:
  79:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ++buffer_count_;
  88                             		.loc 1 79 27
  89 0022 F9 56 01 FF             		mov.L	#-1, 4[r5]
  80:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   need_to_calculate_offsets_ = true;
  90                             		.loc 1 80 3 is_stmt 1
  91 0026 E7 EF 02                		mov.L	r15, 8[r14]
  81:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
  92                             		.loc 1 81 3
  81:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
  93                             		.loc 1 81 30 is_stmt 0
  94 0029 F9 E4 28 01             		mov.B	#1, 40[r14]
  82:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
  95                             		.loc 1 82 3 is_stmt 1
  83:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
  96                             		.loc 1 83 1 is_stmt 0
  97 002d 3F 77 04                		rtsd	#16, r7-r7
  98                             	.LVL8:
  99                             	.L9:
 100 0030 EF 21                   		mov.L	r2, r1
 101                             	.LVL9:
  71:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          max_buffer_count_);
 102                             		.loc 1 71 5 is_stmt 1
  71:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          max_buffer_count_);
 103                             		.loc 1 71 5
 104 0032 A0 0D                   		mov.L	r5, 4[r0]
 105 0034 F8 02 00 00 00 00       		mov.L	#.LC0, [r0]
 106 003a 05 00 00 00             		bsr	__ZN6tflite13ErrorReporter6ReportEPKcz
 107                             	.LVL10:
  73:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 108                             		.loc 1 73 5
  73:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 109                             		.loc 1 73 12 is_stmt 0
 110 003e 66 11                   		mov.L	#1, r1
  83:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 111                             		.loc 1 83 1
 112 0040 3F 77 04                		rtsd	#16, r7-r7
 113                             	.LFE20:
 115                             		.section	.text._ZN6tflite18ReverseSortInPlaceEPiS0_i,"ax",@progbits
 116                             		.global	__ZN6tflite18ReverseSortInPlaceEPiS0_i
 118                             	__ZN6tflite18ReverseSortInPlaceEPiS0_i:
 119                             	.LFB12:
  23:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   bool any_swapped;
 120                             		.loc 1 23 58 is_stmt 1
 121                             	.LVL11:
  24:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   do {
 122                             		.loc 1 24 3
  25:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     any_swapped = false;
 123                             		.loc 1 25 3
 124                             	.LBB27:
  26:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int i = 1; i < size; ++i) {
 125                             		.loc 1 26 5
  27:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (values[i - 1] < values[i]) {
 126                             		.loc 1 27 5
 127                             	.LBB28:
  27:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (values[i - 1] < values[i]) {
 128                             		.loc 1 27 23 is_stmt 0
 129 0000 61 13                   		cmp	#1, r3
 130 0002 2B 3B                   		ble	.L18
 131                             	.LBE28:
 132                             	.LBE27:
  23:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   bool any_swapped;
 133                             		.loc 1 23 58
 134 0004 6E 7A                   		pushm	r7-r10
 135                             	.LCFI2:
 136 0006 71 1F FC                		add	#-4, r1, r15
 137 0009 6C 23                   		shll	#2, r3
 138                             	.LVL12:
 139 000b 4B 3F                   		add	r3, r15
 140                             	.LBB37:
 141                             	.LBB35:
 142                             	.LBB29:
 143                             	.LBB30:
  35:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 144                             		.loc 1 35 21
 145 000d 66 1A                   		mov	#1, r10
 146                             	.LVL13:
 147 000f 03                      		.balign 8,3,1
 148                             	.L14:
 149 0010 EF 24                   		mov.L	r2, r4
 150                             	.LBE30:
 151                             	.LBE29:
 152                             	.LBE35:
 153                             	.LBE37:
  23:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   bool any_swapped;
 154                             		.loc 1 23 58
 155 0012 EF 15                   		mov.L	r1, r5
 156                             	.LBB38:
  26:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int i = 1; i < size; ++i) {
 157                             		.loc 1 26 17
 158 0014 66 07                   		mov	#0, r7
 159                             	.LVL14:
 160                             		.balign 8,3,1
 161                             	.L13:
 162                             	.LBE38:
  28:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int value_temp = values[i - 1];
 163                             		.loc 1 28 7 is_stmt 1
 164                             	.LBB39:
 165                             	.LBB36:
 166                             	.LBB34:
 167                             	.LBB31:
  29:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         values[i - 1] = values[i];
 168                             		.loc 1 29 9
 169                             	.LBE31:
  28:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int value_temp = values[i - 1];
 170                             		.loc 1 28 23 is_stmt 0
 171 0016 EC 53                   		mov.L	[r5], r3
 172                             	.LVL15:
 173                             	.LBB32:
  30:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         values[i] = value_temp;
 174                             		.loc 1 30 9 is_stmt 1
 175                             	.LBE32:
  28:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int value_temp = values[i - 1];
 176                             		.loc 1 28 35 is_stmt 0
 177 0018 ED 5E 01                		mov.L	4[r5], r14
  28:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int value_temp = values[i - 1];
 178                             		.loc 1 28 7
 179 001b 47 E3                   		cmp	r14, r3
 180 001d 28 0F                   		bge	.L12
 181                             	.LBB33:
  30:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         values[i] = value_temp;
 182                             		.loc 1 30 23
 183 001f E3 5E                   		mov.L	r14, [r5]
  31:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int id_temp = ids[i - 1];
 184                             		.loc 1 31 9 is_stmt 1
  31:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int id_temp = ids[i - 1];
 185                             		.loc 1 31 19 is_stmt 0
 186 0021 A0 5B                   		mov.L	r3, 4[r5]
  32:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i - 1] = ids[i];
 187                             		.loc 1 32 9 is_stmt 1
  32:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i - 1] = ids[i];
 188                             		.loc 1 32 19 is_stmt 0
 189 0023 EC 43                   		mov.L	[r4], r3
 190                             	.LVL16:
  33:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i] = id_temp;
 191                             		.loc 1 33 9 is_stmt 1
  35:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 192                             		.loc 1 35 21 is_stmt 0
 193 0025 CF A7                   		mov.B	r10, r7
 194                             	.LVL17:
  33:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i] = id_temp;
 195                             		.loc 1 33 20
 196 0027 E1 44 01                		mov.L	4[r4], [r4]
 197                             	.LVL18:
  34:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         any_swapped = true;
 198                             		.loc 1 34 9 is_stmt 1
  34:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         any_swapped = true;
 199                             		.loc 1 34 16 is_stmt 0
 200 002a A0 4B                   		mov.L	r3, 4[r4]
  35:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 201                             		.loc 1 35 9 is_stmt 1
 202                             	.LVL19:
 203                             		.balign 8,3,1
 204                             	.L12:
 205 002c 62 45                   		add	#4, r5
 206 002e 62 44                   		add	#4, r4
 207                             	.LBE33:
 208                             	.LBE34:
  27:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (values[i - 1] < values[i]) {
 209                             		.loc 1 27 23 is_stmt 0 discriminator 2
 210 0030 47 F5                   		cmp	r15, r5
 211 0032 21 E4                   		bne	.L13
 212                             	.LBE36:
 213                             	.LBE39:
  25:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     any_swapped = false;
 214                             		.loc 1 25 3
 215 0034 5B 77                   		movu.B	r7, r7
 216                             	.LVL20:
 217 0036 61 07                   		cmp	#0, r7
 218 0038 21 D8                   		bne	.L14
  39:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 219                             		.loc 1 39 1
 220 003a 3F 7A 04                		rtsd	#16, r7-r10
 221                             	.LVL21:
 222                             	.L18:
 223                             	.LCFI3:
 224 003d 02                      		rts
 225                             	.LFE12:
 227 003e EF 00                   		.section	.text._ZN6tflite19GreedyMemoryPlannerC2EPhi,"ax",@progbits
 228                             		.global	__ZN6tflite19GreedyMemoryPlannerC2EPhi
 230                             	__ZN6tflite19GreedyMemoryPlannerC2EPhi:
 231                             	.LFB14:
  41:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                                          int scratch_buffer_size)
 232                             		.loc 1 41 1 is_stmt 1
 233                             	.LVL22:
 234                             	.LBB40:
 235                             	.LBB41:
  45:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 236                             		.loc 1 45 43 is_stmt 0
 237 0000 FB 52 CD CC CC CC       		mov.L	#-858993459, r5
 238 0006 FC 1F 53                		emulu	r5, r3
 239                             	.LVL23:
 240 0009 FD 85 43                		shlr	#5, r4, r3
  49:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 241                             		.loc 1 49 43
 242 000c FD C4 34                		shll	#4, r3, r4
  52:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 243                             		.loc 1 52 28
 244 000f FD C2 35                		shll	#2, r3, r5
  49:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 245                             		.loc 1 49 13
 246 0012 4B 24                   		add	r2, r4
  58:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 247                             		.loc 1 58 34
 248 0014 66 CE                   		mov.L	#12, r14
 249 0016 4F 3E                   		mul	r3, r14
  52:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 250                             		.loc 1 52 13
 251 0018 FF 2F 54                		add	r5, r4, r15
  55:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 252                             		.loc 1 55 13
 253 001b 4B F5                   		add	r15, r5
 254                             	.LBE41:
  43:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // Allocate the arrays we need within the scratch buffer arena.
 255                             		.loc 1 43 56
 256 001d F8 12 00 00 00 00       		mov.L	#__ZTVN6tflite19GreedyMemoryPlannerE+8, [r1]
 257                             	.LBB42:
  58:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 258                             		.loc 1 58 13
 259 0023 4B 5E                   		add	r5, r14
 260                             	.LBE42:
  43:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   // Allocate the arrays we need within the scratch buffer arena.
 261                             		.loc 1 43 56
 262 0025 3E 12 00                		mov.L	#0, 8[r1]
 263 0028 F9 14 28 01             		mov.B	#1, 40[r1]
 264                             	.LBB43:
  45:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 265                             		.loc 1 45 3 is_stmt 1
 266                             	.LBE43:
 267                             	.LBE40:
 268                             		.file 2 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** #ifndef TENSORFLOW_LITE_MICRO_MEMORY_PLANNER_GREEDY_MEMORY_PLANNER_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** #define TENSORFLOW_LITE_MICRO_MEMORY_PLANNER_GREEDY_MEMORY_PLANNER_H_
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** #include "tensorflow/lite/micro/compatibility.h"
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** #include "tensorflow/lite/micro/memory_planner/memory_planner.h"
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** namespace tflite {
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** constexpr int kOnlinePlannedBuffer = -1;
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** // A memory planner that uses a greedy algorithm to arrange buffers in memory
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** // to minimize the overall arena size needed.
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** // The algorithm works like this:
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - The client enters the buffer information through AddBuffer().
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - When a function like GetOffsetForBuffer() is called, the
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //    CalculateOffsetsIfNeeded() method is invoked.
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - If an up to date plan is not already present, one will be calculated.
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - The buffers are sorted in descending order of size.
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - The largest buffer is placed at offset zero.
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - The rest of the buffers are looped through in descending size order.
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - The other buffers that need to be in memory at the same time are found.
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - The first gap between simultaneously active buffers that the current
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //    buffer fits into will be used.
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - If no large-enough gap is found, the current buffer is placed after the
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //    last buffer that's simultaneously active.
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //  - This continues until all buffers are placed, and the offsets stored.
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** //
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** // This is not guaranteed to produce the best placement, since that's an
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** // NP-Complete problem, but in practice it should produce one that's decent.
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** class GreedyMemoryPlanner : public MemoryPlanner {
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****  public:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // You need to pass in an area of memory to be used for planning. This memory
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // needs to have a lifetime as long as the planner, but isn't owned by this
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // object, so management should be handled by the client. This is so it can be
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // stack or globally allocated if necessary on devices without dynamic memory
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // allocation. How many buffers can be planned for will depend on the size of
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // this scratch memory, so you should enlarge it if you see an error when
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // calling AddBuffer(). The memory can be reused once you're done with the
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // planner, as long as you copy the calculated offsets to another location.
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // Each buffer requires about 36 bytes of scratch.
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   GreedyMemoryPlanner(unsigned char* scratch_buffer, int scratch_buffer_size);
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   ~GreedyMemoryPlanner() override;
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // Record details of a buffer we want to place.
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   TfLiteStatus AddBuffer(ErrorReporter* error_reporter, int size,
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****                          int first_time_used, int last_time_used) override;
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // Record details of an offline planned buffer offset we want to place.
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // offline_offset is the buffer offset from the start of the arena.
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   TfLiteStatus AddBuffer(ErrorReporter* error_reporter, int size,
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****                          int first_time_used, int last_time_used,
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****                          int offline_offset);
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // Returns the high-water mark of used memory. This is the minimum size of a
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // memory arena you'd need to allocate to hold these buffers.
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   size_t GetMaximumMemorySize() override;
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // How many buffers have been recorded.
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   int GetBufferCount() override;
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // Where a given buffer should be placed in the memory arena.
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // This information is stored in the memory arena itself, so once the arena
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // is used for inference, it will be overwritten.
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   TfLiteStatus GetOffsetForBuffer(ErrorReporter* error_reporter,
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****                                   int buffer_index, int* offset) override;
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // Prints an ascii-art diagram of the buffer layout plan.
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   void PrintMemoryPlan(ErrorReporter* error_reporter);
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // Debug method to check whether any buffer allocations are overlapping. This
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // is an O(N^2) complexity operation, so only use for testing.
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   bool DoAnyBuffersOverlap(ErrorReporter* error_reporter);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // Used to store a list of buffers ordered by their offset.
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   struct ListEntry {
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****     int offset;
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****     int requirements_index;
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****     int next_entry_index;
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   };
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h **** 
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   // Number of bytes required in order to plan a buffer.
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****   static size_t per_buffer_size() {
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****     const int per_buffer_size =
 269                             		.loc 2 99 5
 270                             	.LVL24:
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****         sizeof(BufferRequirements) +  // requirements_
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****         sizeof(int) +                 // buffer_sizes_sorted_
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****         sizeof(int) +                 // buffer_ids_sorted_
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****         sizeof(ListEntry) +           // buffers_sorted_by_offset_
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****         sizeof(int);                  // buffer_offsets_;
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/memory_planner\greedy_memory_planner.h ****     return per_buffer_size;
 271                             		.loc 2 105 5
 272                             	.LBB45:
 273                             	.LBB44:
  45:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 274                             		.loc 1 45 21 is_stmt 0
 275 002c A0 1B                   		mov.L	r3, 4[r1]
  47:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   requirements_ = reinterpret_cast<BufferRequirements*>(next_free);
 276                             		.loc 1 47 3 is_stmt 1
 277                             	.LVL25:
  48:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(BufferRequirements) * max_buffer_count_;
 278                             		.loc 1 48 3
  48:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(BufferRequirements) * max_buffer_count_;
 279                             		.loc 1 48 17 is_stmt 0
 280 002e A0 9A                   		mov.L	r2, 12[r1]
  49:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 281                             		.loc 1 49 3 is_stmt 1
 282                             	.LVL26:
  51:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(int) * max_buffer_count_;
 283                             		.loc 1 51 3
  51:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(int) * max_buffer_count_;
 284                             		.loc 1 51 24 is_stmt 0
 285 0030 A1 14                   		mov.L	r4, 16[r1]
  52:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 286                             		.loc 1 52 3 is_stmt 1
 287                             	.LVL27:
  54:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(int) * max_buffer_count_;
 288                             		.loc 1 54 3
  54:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(int) * max_buffer_count_;
 289                             		.loc 1 54 22 is_stmt 0
 290 0032 E7 1F 05                		mov.L	r15, 20[r1]
  55:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 291                             		.loc 1 55 3 is_stmt 1
 292                             	.LVL28:
  57:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(ListEntry) * max_buffer_count_;
 293                             		.loc 1 57 3
  57:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free += sizeof(ListEntry) * max_buffer_count_;
 294                             		.loc 1 57 29 is_stmt 0
 295 0035 A1 95                   		mov.L	r5, 24[r1]
  58:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 296                             		.loc 1 58 3 is_stmt 1
 297                             	.LVL29:
  60:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 298                             		.loc 1 60 3
  60:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 299                             		.loc 1 60 19 is_stmt 0
 300 0037 E7 1E 09                		mov.L	r14, 36[r1]
 301                             	.LBE44:
 302                             	.LBE45:
  61:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 303                             		.loc 1 61 1
 304 003a 02                      		rts
 305                             	.LFE14:
 307                             		.global	__ZN6tflite19GreedyMemoryPlannerC1EPhi
 308                             		.set	__ZN6tflite19GreedyMemoryPlannerC1EPhi,__ZN6tflite19GreedyMemoryPlannerC2EPhi
 309                             		.section	.text._ZN6tflite19GreedyMemoryPlanner9AddBufferEPNS_13ErrorReporterEiiii,"ax",@progbits
 310                             		.global	__ZN6tflite19GreedyMemoryPlanner9AddBufferEPNS_13ErrorReporterEiiii
 312                             	__ZN6tflite19GreedyMemoryPlanner9AddBufferEPNS_13ErrorReporterEiiii:
 313                             	.LFB21:
  87:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   BufferRequirements* current = &requirements_[buffer_count_];
 314                             		.loc 1 87 45 is_stmt 1
 315                             	.LVL30:
 316 0000 6E 6C                   		pushm	r6-r12
 317                             	.LCFI4:
 318 0002 71 00 F0                		add	#-16, r0
 319                             	.LCFI5:
  88:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (AddBuffer(error_reporter, size, first_time_used, last_time_used) !=
 320                             		.loc 1 88 3
  87:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   BufferRequirements* current = &requirements_[buffer_count_];
 321                             		.loc 1 87 45 is_stmt 0
 322 0005 75 47 30                		mov.L	#48, r7
 323 0008 4B 07                   		add	r0, r7
  89:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       kTfLiteOk) {
 324                             		.loc 1 89 70
 325 000a EC 1A                   		mov.L	[r1], r10
  88:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (AddBuffer(error_reporter, size, first_time_used, last_time_used) !=
 326                             		.loc 1 88 48
 327 000c ED 1F 02                		mov.L	8[r1], r15
  89:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       kTfLiteOk) {
 328                             		.loc 1 89 70
 329 000f ED AE 02                		mov.L	8[r10], r14
  88:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (AddBuffer(error_reporter, size, first_time_used, last_time_used) !=
 330                             		.loc 1 88 23
 331 0012 FD C4 FA                		shll	#4, r15, r10
  87:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   BufferRequirements* current = &requirements_[buffer_count_];
 332                             		.loc 1 87 45
 333 0015 EC 76                   		mov.L	[r7], r6
  88:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (AddBuffer(error_reporter, size, first_time_used, last_time_used) !=
 334                             		.loc 1 88 23
 335 0017 06 89 1A 03             		add	12[r1].L, r10
 336                             	.LVL31:
  89:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       kTfLiteOk) {
 337                             		.loc 1 89 3 is_stmt 1
  87:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   BufferRequirements* current = &requirements_[buffer_count_];
 338                             		.loc 1 87 45 is_stmt 0
 339 001b A8 7F                   		mov.L	4[r7], r7
 340 001d 74 0E 00 00 00 00       		cmp	#__ZN6tflite19GreedyMemoryPlanner9AddBufferEPNS_13ErrorReporterEiii, r14
 341 0023 21 23                   		bne	.L23
 342 0025 EF 49                   		mov.L	r4, r9
 343                             	.LVL32:
 344                             	.LBB48:
 345                             	.LBB49:
  70:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "Too many buffers (max is %d)",
 346                             		.loc 1 70 3 is_stmt 1
  70:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "Too many buffers (max is %d)",
 347                             		.loc 1 70 24 is_stmt 0
 348 0027 A8 1C                   		mov.L	4[r1], r4
 349                             	.LVL33:
  70:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "Too many buffers (max is %d)",
 350                             		.loc 1 70 3
 351 0029 47 4F                   		cmp	r4, r15
 352 002b 28 28                   		bge	.L29
  75:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->size = size;
 353                             		.loc 1 75 3 is_stmt 1
 354                             	.LVL34:
  76:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->first_time_used = first_time_used;
 355                             		.loc 1 76 3
  76:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->first_time_used = first_time_used;
 356                             		.loc 1 76 17 is_stmt 0
 357 002d E3 A3                   		mov.L	r3, [r10]
  77:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->last_time_used = last_time_used;
 358                             		.loc 1 77 3 is_stmt 1
  77:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->last_time_used = last_time_used;
 359                             		.loc 1 77 28 is_stmt 0
 360 002f E7 A9 02                		mov.L	r9, 8[r10]
  78:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->offline_offset = kOnlinePlannedBuffer;
 361                             		.loc 1 78 3 is_stmt 1
  80:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   need_to_calculate_offsets_ = true;
 362                             		.loc 1 80 3 is_stmt 0
 363 0032 71 F4 01                		add	#1, r15, r4
  78:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   current->offline_offset = kOnlinePlannedBuffer;
 364                             		.loc 1 78 27
 365 0035 E7 A6 03                		mov.L	r6, 12[r10]
  79:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ++buffer_count_;
 366                             		.loc 1 79 3 is_stmt 1
  80:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   need_to_calculate_offsets_ = true;
 367                             		.loc 1 80 3
 368 0038 A0 94                   		mov.L	r4, 8[r1]
  81:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
 369                             		.loc 1 81 3
  81:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
 370                             		.loc 1 81 30 is_stmt 0
 371 003a F9 14 28 01             		mov.B	#1, 40[r1]
  82:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 372                             		.loc 1 82 3 is_stmt 1
 373                             	.LVL35:
 374                             		.balign 8,3,1
 375                             	.L26:
 376                             	.LBE49:
 377                             	.LBE48:
  93:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
 378                             		.loc 1 93 3
  94:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 379                             		.loc 1 94 10 is_stmt 0
 380 003e 66 01                   		mov.L	#0, r1
  93:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
 381                             		.loc 1 93 27
 382 0040 E7 A7 01                		mov.L	r7, 4[r10]
  94:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 383                             		.loc 1 94 3 is_stmt 1
  95:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 384                             		.loc 1 95 1 is_stmt 0
 385 0043 3F 6C 0B                		rtsd	#44, r6-r12
 386                             	.LVL36:
 387                             	.L23:
  89:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       kTfLiteOk) {
 388                             		.loc 1 89 16
 389 0046 E3 06                   		mov.L	r6, [r0]
 390 0048 7F 1E                   		jsr	r14
 391                             	.LVL37:
  89:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       kTfLiteOk) {
 392                             		.loc 1 89 3
 393 004a 61 01                   		cmp	#0, r1
 394 004c 20 F2                   		beq	.L26
  91:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 395                             		.loc 1 91 12
 396 004e 66 11                   		mov.L	#1, r1
  95:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 397                             		.loc 1 95 1
 398 0050 3F 6C 0B                		rtsd	#44, r6-r12
 399                             	.LVL38:
 400                             	.L29:
 401                             	.LBB51:
 402                             	.LBB50:
  71:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          max_buffer_count_);
 403                             		.loc 1 71 5 is_stmt 1
  71:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          max_buffer_count_);
 404                             		.loc 1 71 5
 405 0053 A0 0C                   		mov.L	r4, 4[r0]
 406 0055 EF 21                   		mov.L	r2, r1
 407                             	.LVL39:
 408 0057 F8 02 00 00 00 00       		mov.L	#.LC0, [r0]
 409 005d 05 00 00 00             		bsr	__ZN6tflite13ErrorReporter6ReportEPKcz
 410                             	.LVL40:
  73:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 411                             		.loc 1 73 5
 412                             	.LBE50:
 413                             	.LBE51:
  91:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 414                             		.loc 1 91 12 is_stmt 0
 415 0061 66 11                   		mov.L	#1, r1
  95:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 416                             		.loc 1 95 1
 417 0063 3F 6C 0B                		rtsd	#44, r6-r12
 418                             	.LFE21:
 420 0066 EF 00                   		.section	.text._ZNK6tflite19GreedyMemoryPlanner22DoesEntryOverlapInTimeEPKNS0_9ListEntryEii,"ax",@
 421                             		.global	__ZNK6tflite19GreedyMemoryPlanner22DoesEntryOverlapInTimeEPKNS0_9ListEntryEii
 423                             	__ZNK6tflite19GreedyMemoryPlanner22DoesEntryOverlapInTimeEPKNS0_9ListEntryEii:
 424                             	.LFB22:
  99:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   const BufferRequirements* entry_requirements =
 425                             		.loc 1 99 37 is_stmt 1
 426                             	.LVL41:
 100:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       &requirements_[entry->requirements_index];
 427                             		.loc 1 100 3
 101:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (entry_requirements->first_time_used > last_time_used) {
 428                             		.loc 1 101 47 is_stmt 0
 429 0000 A8 2D                   		mov.L	4[r2], r5
 100:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       &requirements_[entry->requirements_index];
 430                             		.loc 1 100 29
 431 0002 6C 45                   		shll	#4, r5
 432 0004 06 89 15 03             		add	12[r1].L, r5
 433                             	.LVL42:
 102:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 434                             		.loc 1 102 3 is_stmt 1
 435 0008 A8 D2                   		mov.L	8[r5], r2
 436                             	.LVL43:
 437 000a 47 42                   		cmp	r4, r2
 438 000c 2A 0C                   		bgt	.L32
 105:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 439                             		.loc 1 105 3
 440 000e A8 D9                   		mov.L	12[r5], r1
 441                             	.LVL44:
 442 0010 47 31                   		cmp	r3, r1
 443 0012 FC DB 18                		scge.L	r1
 109:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 444                             		.loc 1 109 1 is_stmt 0
 445 0015 64 11                   		and #1, r1
 446 0017 02                      		rts
 447                             	.LVL45:
 448                             	.L32:
 103:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 449                             		.loc 1 103 12
 450 0018 66 01                   		mov	#0, r1
 451                             	.LVL46:
 109:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 452                             		.loc 1 109 1
 453 001a 64 11                   		and #1, r1
 454 001c 02                      		rts
 455                             	.LFE22:
 457                             		.section	.text._ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii
 458                             		.global	__ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii
 460                             	__ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii:
 461                             	.LFB23:
 114:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* result = nullptr;
 462                             		.loc 1 114 31 is_stmt 1
 463                             	.LVL47:
 115:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* candidate_next_entry;
 464                             		.loc 1 115 3
 116:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (start == nullptr) {
 465                             		.loc 1 116 3
 117:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     candidate_next_entry = &buffers_sorted_by_offset_[first_entry_index_];
 466                             		.loc 1 117 3
 467 0000 61 02                   		cmp	#0, r2
 468 0002 20 34                   		beq	.L42
 120:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       return nullptr;
 469                             		.loc 1 120 5
 120:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       return nullptr;
 470                             		.loc 1 120 16 is_stmt 0
 471 0004 A8 A5                   		mov.L	8[r2], r5
 120:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       return nullptr;
 472                             		.loc 1 120 5
 473 0006 75 05 FF                		cmp	#-1, r5
 474 0009 20 31                   		beq	.L40
 475                             		.balign 8,3,1
 476                             	.L41:
 118:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } else {
 477                             		.loc 1 118 29
 478 000b ED 1E 06                		mov.L	24[r1], r14
 118:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } else {
 479                             		.loc 1 118 73
 480 000e 63 C5                   		mul	#12, r5
 118:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } else {
 481                             		.loc 1 118 26
 482 0010 4B E5                   		add	r14, r5
 483                             	.LVL48:
 484                             	.LBB54:
 485                             	.LBB55:
 101:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (entry_requirements->first_time_used > last_time_used) {
 486                             		.loc 1 101 8
 487 0012 A8 99                   		mov.L	12[r1], r1
 488                             	.LVL49:
 489                             		.balign 8,3,1
 490                             	.L35:
 491                             	.LBE55:
 492                             	.LBE54:
 125:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (DoesEntryOverlapInTime(candidate_next_entry, first_time_used,
 493                             		.loc 1 125 3 is_stmt 1
 126:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                                last_time_used)) {
 494                             		.loc 1 126 5
 495                             	.LBB58:
 496                             	.LBB56:
 100:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       &requirements_[entry->requirements_index];
 497                             		.loc 1 100 3
 105:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 498                             		.loc 1 105 3
 499                             	.LBE56:
 500                             	.LBE58:
 131:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 501                             		.loc 1 131 5
 134:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         &buffers_sorted_by_offset_[candidate_next_entry->next_entry_index];
 502                             		.loc 1 134 5
 503                             	.LBB59:
 504                             	.LBB57:
 101:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (entry_requirements->first_time_used > last_time_used) {
 505                             		.loc 1 101 47 is_stmt 0
 506 0014 A8 5A                   		mov.L	4[r5], r2
 507 0016 6C 42                   		shll	#4, r2
 100:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       &requirements_[entry->requirements_index];
 508                             		.loc 1 100 29
 509 0018 4B 12                   		add	r1, r2
 510                             	.LVL50:
 102:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 511                             		.loc 1 102 3 is_stmt 1
 512 001a 06 85 24 02             		cmp	8[r2].L, r4
 513 001e 29 0B                   		blt	.L38
 105:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 514                             		.loc 1 105 3 is_stmt 0
 515 0020 06 85 23 03             		cmp	12[r2].L, r3
 516 0024 2A 05                   		bgt	.L38
 517                             	.LBE57:
 518                             	.LBE59:
 138:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 519                             		.loc 1 138 1
 520 0026 EF 51                   		mov.L	r5, r1
 521 0028 02                      		rts
 522                             	.L38:
 131:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 523                             		.loc 1 131 31
 524 0029 A8 D5                   		mov.L	8[r5], r5
 525                             	.LVL51:
 131:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 526                             		.loc 1 131 5
 527 002b 75 05 FF                		cmp	#-1, r5
 528 002e 20 0C                   		beq	.L40
 135:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } while (true);
 529                             		.loc 1 135 74
 530 0030 63 C5                   		mul	#12, r5
 134:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         &buffers_sorted_by_offset_[candidate_next_entry->next_entry_index];
 531                             		.loc 1 134 26
 532 0032 4B E5                   		add	r14, r5
 533                             	.LVL52:
 126:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                                last_time_used)) {
 534                             		.loc 1 126 5
 535 0034 2E E0                   		bra	.L35
 536                             	.LVL53:
 537                             	.L42:
 118:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } else {
 538                             		.loc 1 118 5 is_stmt 1
 118:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } else {
 539                             		.loc 1 118 73 is_stmt 0
 540 0036 AA 15                   		mov.L	32[r1], r5
 541 0038 2E D3                   		bra	.L41
 542                             	.LVL54:
 543                             	.L40:
 121:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 544                             		.loc 1 121 14
 545 003a 66 05                   		mov.L	#0, r5
 138:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 546                             		.loc 1 138 1
 547 003c EF 51                   		mov.L	r5, r1
 548 003e 02                      		rts
 549                             	.LFE23:
 551 003f 03                      		.section	.text._ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv,"ax",@progbits
 552                             		.global	__ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv
 554                             	__ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv:
 555                             	.LFB24:
 140:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (!need_to_calculate_offsets_ || (buffer_count_ == 0)) {
 556                             		.loc 1 140 54 is_stmt 1
 557                             	.LVL55:
 558 0000 6E 6D                   		pushm	r6-r13
 559                             	.LCFI6:
 141:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return;
 560                             		.loc 1 141 3
 141:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return;
 561                             		.loc 1 141 8 is_stmt 0
 562 0002 CD 19 28                		mov.B	40[r1], r9
 141:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return;
 563                             		.loc 1 141 3
 564 0005 5B 97                   		movu.B	r9, r7
 565 0007 61 07                   		cmp	#0, r7
 566 0009 3A 27 01                		beq	.L43
 141:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return;
 567                             		.loc 1 141 39 discriminator 1
 568 000c A8 94                   		mov.L	8[r1], r4
 141:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return;
 569                             		.loc 1 141 35 discriminator 1
 570 000e 61 04                   		cmp	#0, r4
 571 0010 3A 20 01                		beq	.L43
 144:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 572                             		.loc 1 144 3 is_stmt 1
 573 0013 ED 1F 03                		mov.L	12[r1], r15
 144:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 574                             		.loc 1 144 30 is_stmt 0
 575 0016 F9 14 28 00             		mov.B	#0, 40[r1]
 152:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int idx_from_head = 0;
 576                             		.loc 1 152 3 is_stmt 1
 577                             	.LVL56:
 153:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 578                             		.loc 1 153 3
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 579                             		.loc 1 154 3
 580 001a ED 1D 04                		mov.L	16[r1], r13
 581 001d A9 1E                   		mov.L	20[r1], r6
 582 001f ED 1C 09                		mov.L	36[r1], r12
 583                             	.LBB81:
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 584                             		.loc 1 154 21 is_stmt 0
 585 0022 2A 05 38 D9 01          		ble	.L76
 586 0027 EF FA                   		mov.L	r15, r10
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 587                             		.loc 1 154 12
 588 0029 66 07                   		mov.L	#0, r7
 589                             	.LBE81:
 153:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 590                             		.loc 1 153 7
 591 002b 66 05                   		mov.L	#0, r5
 592                             	.LVL57:
 593                             		.balign 8,3,1
 594                             	.L47:
 595                             	.LBB82:
 155:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       idx_from_tail--;
 596                             		.loc 1 155 5 is_stmt 1
 161:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_ids_sorted_[idx_from_head] = i;
 597                             		.loc 1 161 7
 155:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       idx_from_tail--;
 598                             		.loc 1 155 5 is_stmt 0
 599 002d ED A2 01                		mov.L	4[r10], r2
 600 0030 FD C2 53                		shll	#2, r5, r3
 601 0033 71 38 04                		add	#4, r3, r8
 602 0036 EC AE                   		mov.L	[r10], r14
 603 0038 FF 2B 3D                		add	r3, r13, r11
 604 003b 4B 63                   		add	r6, r3
 605 003d 75 02 FF                		cmp	#-1, r2
 606 0040 3A F3 00                		beq	.L89
 161:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_ids_sorted_[idx_from_head] = i;
 607                             		.loc 1 161 43
 608 0043 E3 BE                   		mov.L	r14, [r11]
 162:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_offsets_[i] = requirements_[i].offline_offset;
 609                             		.loc 1 162 7 is_stmt 1
 164:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 610                             		.loc 1 164 20 is_stmt 0
 611 0045 62 15                   		add	#1, r5
 612                             	.LVL58:
 162:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_offsets_[i] = requirements_[i].offline_offset;
 613                             		.loc 1 162 41
 614 0047 E3 37                   		mov.L	r7, [r3]
 163:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       idx_from_head++;
 615                             		.loc 1 163 7 is_stmt 1
 616 0049 FF 2B 8D                		add	r8, r13, r11
 163:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       idx_from_head++;
 617                             		.loc 1 163 26 is_stmt 0
 618 004c ED A3 01                		mov.L	4[r10], r3
 619 004f FE 27 C3                		mov.L	r3, [r7,r12]
 164:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 620                             		.loc 1 164 7 is_stmt 1
 621                             	.LVL59:
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 622                             		.loc 1 154 3 is_stmt 0
 623 0052 62 17                   		add	#1, r7
 624                             	.LVL60:
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 625                             		.loc 1 154 23
 626 0054 A8 92                   		mov.L	8[r1], r2
 627 0056 FF 23 86                		add	r8, r6, r3
 628                             	.LVL61:
 629 0059 71 AA 10                		add	#16, r10
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 630                             		.loc 1 154 21
 631 005c 47 72                   		cmp	r7, r2
 632 005e 2A CF                   		bgt	.L47
 633                             		.balign 8,3,2
 634                             	.L49:
 635 0060 FF 04 52                		sub	r5, r2, r4
 636                             	.LVL62:
 637                             		.balign 8,3,1
 638                             	.L46:
 639                             	.LBE82:
 170:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                      &buffer_ids_sorted_[idx_from_head],
 640                             		.loc 1 170 3 is_stmt 1
 641                             	.LBB83:
 642                             	.LBB84:
  24:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   do {
 643                             		.loc 1 24 3
  25:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     any_swapped = false;
 644                             		.loc 1 25 3
 645                             	.LBB85:
  26:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int i = 1; i < size; ++i) {
 646                             		.loc 1 26 5
  27:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (values[i - 1] < values[i]) {
 647                             		.loc 1 27 5
 648                             	.LBB86:
  27:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (values[i - 1] < values[i]) {
 649                             		.loc 1 27 23 is_stmt 0
 650 0063 61 14                   		cmp	#1, r4
 651 0065 2B 33                   		ble	.L57
 652 0067 71 B8 FC                		add	#-4, r11, r8
 653 006a 6C 24                   		shll	#2, r4
 654 006c 4B 48                   		add	r4, r8
 655                             	.LVL63:
 656                             		.balign 8,3,1
 657                             	.L56:
 658 006e EF 3A                   		mov.L	r3, r10
 659                             	.LBE86:
 660                             	.LBE85:
 661                             	.LBE84:
 662                             	.LBE83:
 663                             	.LBB96:
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 664                             		.loc 1 154 21
 665 0070 EF B7                   		mov.L	r11, r7
 666                             	.LBE96:
 667                             	.LBB97:
 668                             	.LBB94:
 669                             	.LBB92:
  26:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int i = 1; i < size; ++i) {
 670                             		.loc 1 26 17
 671 0072 66 02                   		mov	#0, r2
 672                             	.LVL64:
 673                             		.balign 8,3,1
 674                             	.L55:
 675                             	.LBE92:
 676                             	.LBE94:
 677                             	.LBE97:
  28:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int value_temp = values[i - 1];
 678                             		.loc 1 28 7 is_stmt 1
 679                             	.LBB98:
 680                             	.LBB95:
 681                             	.LBB93:
 682                             	.LBB91:
 683                             	.LBB87:
 684                             	.LBB88:
  29:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         values[i - 1] = values[i];
 685                             		.loc 1 29 9
 686                             	.LBE88:
  28:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int value_temp = values[i - 1];
 687                             		.loc 1 28 23 is_stmt 0
 688 0074 EC 75                   		mov.L	[r7], r5
 689                             	.LVL65:
 690                             	.LBB89:
  30:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         values[i] = value_temp;
 691                             		.loc 1 30 9 is_stmt 1
 692                             	.LBE89:
  28:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int value_temp = values[i - 1];
 693                             		.loc 1 28 35 is_stmt 0
 694 0076 A8 7C                   		mov.L	4[r7], r4
  28:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int value_temp = values[i - 1];
 695                             		.loc 1 28 7
 696 0078 47 45                   		cmp	r4, r5
 697 007a 28 10                   		bge	.L54
 698                             	.LBB90:
  30:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         values[i] = value_temp;
 699                             		.loc 1 30 23
 700 007c E3 74                   		mov.L	r4, [r7]
  31:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int id_temp = ids[i - 1];
 701                             		.loc 1 31 9 is_stmt 1
  31:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int id_temp = ids[i - 1];
 702                             		.loc 1 31 19 is_stmt 0
 703 007e A0 7D                   		mov.L	r5, 4[r7]
  32:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i - 1] = ids[i];
 704                             		.loc 1 32 9 is_stmt 1
  32:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i - 1] = ids[i];
 705                             		.loc 1 32 19 is_stmt 0
 706 0080 EC A5                   		mov.L	[r10], r5
 707                             	.LVL66:
  33:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i] = id_temp;
 708                             		.loc 1 33 9 is_stmt 1
  35:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 709                             		.loc 1 35 21 is_stmt 0
 710 0082 CF 92                   		mov.B	r9, r2
 711                             	.LVL67:
  33:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         ids[i] = id_temp;
 712                             		.loc 1 33 20
 713 0084 E1 AA 01                		mov.L	4[r10], [r10]
 714                             	.LVL68:
  34:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         any_swapped = true;
 715                             		.loc 1 34 9 is_stmt 1
  34:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         any_swapped = true;
 716                             		.loc 1 34 16 is_stmt 0
 717 0087 E7 A5 01                		mov.L	r5, 4[r10]
  35:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 718                             		.loc 1 35 9 is_stmt 1
 719                             	.LVL69:
 720                             		.balign 8,3,1
 721                             	.L54:
 722 008a 62 47                   		add	#4, r7
 723 008c 62 4A                   		add	#4, r10
 724                             	.LBE90:
 725                             	.LBE87:
  27:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (values[i - 1] < values[i]) {
 726                             		.loc 1 27 23 is_stmt 0
 727 008e 47 78                   		cmp	r7, r8
 728 0090 21 E4                   		bne	.L55
 729                             	.LBE91:
 730                             	.LBE93:
  25:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     any_swapped = false;
 731                             		.loc 1 25 3
 732 0092 5B 22                   		movu.B	r2, r2
 733 0094 61 02                   		cmp	#0, r2
 734 0096 21 D8                   		bne	.L56
 735                             	.LVL70:
 736                             		.balign 8,3,1
 737                             	.L57:
 738                             	.LBE95:
 739                             	.LBE98:
 180:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free_entry_ = 1;
 740                             		.loc 1 180 3 is_stmt 1
 182:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   first_entry->next_entry_index = -1;  // to mark the entry as end of list
 741                             		.loc 1 182 29 is_stmt 0
 742 0098 A9 92                   		mov.L	24[r1], r2
 180:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   next_free_entry_ = 1;
 743                             		.loc 1 180 22
 744 009a 3E 18 00                		mov.L	#0, 32[r1]
 181:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* first_entry = &buffers_sorted_by_offset_[first_entry_index_];
 745                             		.loc 1 181 3 is_stmt 1
 181:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* first_entry = &buffers_sorted_by_offset_[first_entry_index_];
 746                             		.loc 1 181 20 is_stmt 0
 747 009d 3E 17 01                		mov.L	#1, 28[r1]
 182:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   first_entry->next_entry_index = -1;  // to mark the entry as end of list
 748                             		.loc 1 182 3 is_stmt 1
 749                             	.LVL71:
 183:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int buffer_id = buffer_ids_sorted_[0];
 750                             		.loc 1 183 3
 183:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int buffer_id = buffer_ids_sorted_[0];
 751                             		.loc 1 183 33 is_stmt 0
 752 00a0 F9 26 02 FF             		mov.L	#-1, 8[r2]
 184:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   first_entry->requirements_index = buffer_id;
 753                             		.loc 1 184 3 is_stmt 1
 184:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   first_entry->requirements_index = buffer_id;
 754                             		.loc 1 184 7 is_stmt 0
 755 00a4 EC 6A                   		mov.L	[r6], r10
 756                             	.LVL72:
 185:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (requirements_[buffer_id].offline_offset == kOnlinePlannedBuffer) {
 757                             		.loc 1 185 3 is_stmt 1
 186:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     buffer_offsets_[buffer_id] = 0;
 758                             		.loc 1 186 32 is_stmt 0
 759 00a6 FD C4 A7                		shll	#4, r10, r7
 185:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (requirements_[buffer_id].offline_offset == kOnlinePlannedBuffer) {
 760                             		.loc 1 185 35
 761 00a9 E7 2A 01                		mov.L	r10, 4[r2]
 186:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     buffer_offsets_[buffer_id] = 0;
 762                             		.loc 1 186 3 is_stmt 1
 186:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     buffer_offsets_[buffer_id] = 0;
 763                             		.loc 1 186 32 is_stmt 0
 764 00ac 4B F7                   		add	r15, r7
 186:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     buffer_offsets_[buffer_id] = 0;
 765                             		.loc 1 186 3
 766 00ae A8 7F                   		mov.L	4[r7], r7
 767 00b0 75 07 FF                		cmp	#-1, r7
 768 00b3 3A 40 01                		beq	.L90
 769 00b6 FE 6A CA                		mov.L	[r10,r12], r10
 770                             	.LVL73:
 771                             		.balign 8,3,1
 772                             	.L58:
 189:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 773                             		.loc 1 189 3 is_stmt 1
 774                             	.LBB99:
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 775                             		.loc 1 192 21 is_stmt 0
 776 00b9 A8 97                   		mov.L	8[r1], r7
 777                             	.LBE99:
 189:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 778                             		.loc 1 189 23
 779 00bb E3 2A                   		mov.L	r10, [r2]
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 780                             		.loc 1 192 3 is_stmt 1
 781                             	.LVL74:
 782                             	.LBB139:
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 783                             		.loc 1 192 21 is_stmt 0
 784 00bd 61 17                   		cmp	#1, r7
 785 00bf 2B 71                   		ble	.L43
 786 00c1 EF 28                   		mov.L	r2, r8
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 787                             		.loc 1 192 12
 788 00c3 66 17                   		mov.L	#1, r7
 789 00c5 2E 14                   		bra	.L72
 790                             	.LVL75:
 791                             	.L92:
 792                             	.LBB100:
 793                             	.LBB101:
 260:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       first_entry->next_entry_index = first_entry_index_;
 794                             		.loc 1 260 7 is_stmt 1
 261:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       first_entry_index_ = new_entry_index;
 795                             		.loc 1 261 7
 261:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       first_entry_index_ = new_entry_index;
 796                             		.loc 1 261 37 is_stmt 0
 797 00c7 E5 13 08 02             		mov.L	32[r1], 8[r3]
 262:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     } else {
 798                             		.loc 1 262 7 is_stmt 1
 799 00cb EF 38                   		mov.L	r3, r8
 262:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     } else {
 800                             		.loc 1 262 26 is_stmt 0
 801 00cd E7 19 08                		mov.L	r9, 32[r1]
 802                             	.LVL76:
 803                             		.balign 8,3,1
 804                             	.L70:
 805                             	.LBE101:
 806                             	.LBE100:
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 807                             		.loc 1 192 21 discriminator 2
 808 00d0 ED 1A 02                		mov.L	8[r1], r10
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 809                             		.loc 1 192 3 discriminator 2
 810 00d3 62 17                   		add	#1, r7
 811                             	.LVL77:
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 812                             		.loc 1 192 21 discriminator 2
 813 00d5 47 7A                   		cmp	r7, r10
 814 00d7 2B 59                   		ble	.L43
 815                             	.LVL78:
 816                             		.balign 8,3,3
 817                             	.L72:
 818                             	.LBB135:
 194:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Look at what size and time range the buffer needs to be active.
 819                             		.loc 1 194 5 is_stmt 1
 194:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Look at what size and time range the buffer needs to be active.
 820                             		.loc 1 194 15 is_stmt 0
 821 00d9 FE 67 6B                		mov.L	[r7,r6], r11
 822                             	.LVL79:
 196:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_size = wanted_requirements->size;
 823                             		.loc 1 196 5 is_stmt 1
 196:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_size = wanted_requirements->size;
 824                             		.loc 1 196 71 is_stmt 0
 825 00dc FD C4 BA                		shll	#4, r11, r10
 196:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_size = wanted_requirements->size;
 826                             		.loc 1 196 25
 827 00df 4B FA                   		add	r15, r10
 828                             	.LVL80:
 197:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_first_time_used = wanted_requirements->first_time_used;
 829                             		.loc 1 197 5 is_stmt 1
 198:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_last_time_used = wanted_requirements->last_time_used;
 830                             		.loc 1 198 5
 199:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 831                             		.loc 1 199 5
 207:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Loop through the offset-ordered list of buffers, looking for gaps.
 832                             		.loc 1 207 5
 209:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       ListEntry* prior_entry = nullptr;
 833                             		.loc 1 209 5
 834                             	.LBB107:
 209:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       ListEntry* prior_entry = nullptr;
 835                             		.loc 1 209 30 is_stmt 0
 836 00e1 ED A5 01                		mov.L	4[r10], r5
 209:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       ListEntry* prior_entry = nullptr;
 837                             		.loc 1 209 5
 838 00e4 75 05 FF                		cmp	#-1, r5
 839 00e7 20 6C                   		beq	.L91
 840                             	.LVL81:
 841                             		.balign 8,3,5
 842                             	.L59:
 843                             	.LBE107:
 248:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Add the newly-placed buffer to our offset-ordered list, so that
 844                             		.loc 1 248 5 is_stmt 1
 248:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Add the newly-placed buffer to our offset-ordered list, so that
 845                             		.loc 1 248 32 is_stmt 0
 846 00e9 FE 2B C5                		mov.L	r5, [r11,r12]
 847                             	.LVL82:
 251:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     new_entry->offset = candidate_offset;
 848                             		.loc 1 251 5 is_stmt 1
 251:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     new_entry->offset = candidate_offset;
 849                             		.loc 1 251 55 is_stmt 0
 850 00ec ED 19 07                		mov.L	28[r1], r9
 251:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     new_entry->offset = candidate_offset;
 851                             		.loc 1 251 71
 852 00ef 66 C3                   		mov.L	#12, r3
 853 00f1 4F 93                   		mul	r9, r3
 255:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 854                             		.loc 1 255 5
 855 00f3 71 94 01                		add	#1, r9, r4
 251:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     new_entry->offset = candidate_offset;
 856                             		.loc 1 251 16
 857 00f6 4B 23                   		add	r2, r3
 858                             	.LVL83:
 252:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     new_entry->requirements_index = buffer_id;
 859                             		.loc 1 252 5 is_stmt 1
 252:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     new_entry->requirements_index = buffer_id;
 860                             		.loc 1 252 23 is_stmt 0
 861 00f8 E3 35                   		mov.L	r5, [r3]
 253:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int new_entry_index = next_free_entry_;
 862                             		.loc 1 253 5 is_stmt 1
 253:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int new_entry_index = next_free_entry_;
 863                             		.loc 1 253 35 is_stmt 0
 864 00fa E7 3B 01                		mov.L	r11, 4[r3]
 254:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     ++next_free_entry_;
 865                             		.loc 1 254 5 is_stmt 1
 866                             	.LVL84:
 255:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 867                             		.loc 1 255 5
 868                             	.LBB129:
 257:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       // The new entry offset is smaller than the first entry offset =>
 869                             		.loc 1 257 5 is_stmt 0
 870 00fd EC 8A                   		mov.L	[r8], r10
 871                             	.LBE129:
 255:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 872                             		.loc 1 255 5
 873 00ff A1 9C                   		mov.L	r4, 28[r1]
 257:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       // The new entry offset is smaller than the first entry offset =>
 874                             		.loc 1 257 5 is_stmt 1
 875                             	.LBB130:
 876 0101 47 5A                   		cmp	r5, r10
 877 0103 2A C4                   		bgt	.L92
 878 0105 EF 8B                   		mov.L	r8, r11
 879                             	.LVL85:
 880 0107 2E 13                   		bra	.L69
 881                             	.LVL86:
 882                             	.L71:
 883                             	.LBB102:
 884                             	.LBB103:
 276:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (next_entry->offset > candidate_offset) {
 885                             		.loc 1 276 76 is_stmt 0
 886 0109 66 CA                   		mov.L	#12, r10
 887 010b 4F 4A                   		mul	r4, r10
 276:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (next_entry->offset > candidate_offset) {
 888                             		.loc 1 276 20
 889 010d 4B 2A                   		add	r2, r10
 890                             	.LVL87:
 277:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // We're at the right spot to do an insertion and retain the sorting
 891                             		.loc 1 277 9 is_stmt 1
 277:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // We're at the right spot to do an insertion and retain the sorting
 892                             		.loc 1 277 25 is_stmt 0
 893 010f EC AD                   		mov.L	[r10], r13
 277:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // We're at the right spot to do an insertion and retain the sorting
 894                             		.loc 1 277 9
 895 0111 47 5D                   		cmp	r5, r13
 896 0113 2B 05 38 D6 00          		bgt	.L93
 897 0118 EF AB                   		mov.L	r10, r11
 898                             	.LVL88:
 899                             		.balign 8,3,1
 900                             	.L69:
 901                             	.LBE103:
 267:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         const int next_entry_index = current_entry->next_entry_index;
 902                             		.loc 1 267 7 is_stmt 1
 903                             	.LBB104:
 268:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (next_entry_index == -1) {
 904                             		.loc 1 268 9
 276:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (next_entry->offset > candidate_offset) {
 905                             		.loc 1 276 9
 268:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (next_entry_index == -1) {
 906                             		.loc 1 268 19 is_stmt 0
 907 011a ED B4 02                		mov.L	8[r11], r4
 908                             	.LVL89:
 269:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // We're at the end of the list, so just add the new entry here.
 909                             		.loc 1 269 9 is_stmt 1
 910 011d 75 04 FF                		cmp	#-1, r4
 911 0120 21 E9                   		bne	.L71
 271:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           new_entry->next_entry_index = -1;
 912                             		.loc 1 271 11
 271:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           new_entry->next_entry_index = -1;
 913                             		.loc 1 271 43 is_stmt 0
 914 0122 E7 B9 02                		mov.L	r9, 8[r11]
 272:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           break;
 915                             		.loc 1 272 11 is_stmt 1
 272:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           break;
 916                             		.loc 1 272 39 is_stmt 0
 917 0125 A0 B4                   		mov.L	r4, 8[r3]
 273:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 918                             		.loc 1 273 11 is_stmt 1
 919                             	.LBE104:
 920                             	.LBE102:
 921                             	.LBE130:
 922                             	.LBE135:
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 923                             		.loc 1 192 21 is_stmt 0
 924 0127 ED 1A 02                		mov.L	8[r1], r10
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 925                             		.loc 1 192 3
 926 012a 62 17                   		add	#1, r7
 927                             	.LVL90:
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 928                             		.loc 1 192 21
 929 012c 47 7A                   		cmp	r7, r10
 930 012e 2A AB                   		bgt	.L72
 931                             	.LVL91:
 932                             		.balign 8,3,2
 933                             	.L43:
 934                             	.LBE139:
 288:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 935                             		.loc 1 288 1
 936 0130 3F 6D 08                		rtsd	#32, r6-r13
 937                             	.LVL92:
 938                             	.L89:
 939                             	.LBB140:
 156:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_sizes_sorted_[idx_from_tail] = requirements_[i].size;
 940                             		.loc 1 156 7 is_stmt 1
 156:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_sizes_sorted_[idx_from_tail] = requirements_[i].size;
 941                             		.loc 1 156 20 is_stmt 0
 942 0133 60 14                   		sub	#1, r4
 943                             	.LVL93:
 157:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_ids_sorted_[idx_from_tail] = i;
 944                             		.loc 1 157 7 is_stmt 1
 945 0135 71 AA 10                		add	#16, r10
 157:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_ids_sorted_[idx_from_tail] = i;
 946                             		.loc 1 157 43 is_stmt 0
 947 0138 FD C2 48                		shll	#2, r4, r8
 948 013b FE 24 DE                		mov.L	r14, [r4,r13]
 158:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_offsets_[i] = -1;
 949                             		.loc 1 158 7 is_stmt 1
 158:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       buffer_offsets_[i] = -1;
 950                             		.loc 1 158 41 is_stmt 0
 951 013e 4B 68                   		add	r6, r8
 952 0140 E3 87                   		mov.L	r7, [r8]
 159:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     } else {
 953                             		.loc 1 159 7 is_stmt 1
 159:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     } else {
 954                             		.loc 1 159 26 is_stmt 0
 955 0142 FE 27 C2                		mov.L	r2, [r7,r12]
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 956                             		.loc 1 154 23
 957 0145 A8 92                   		mov.L	8[r1], r2
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 958                             		.loc 1 154 3
 959 0147 62 17                   		add	#1, r7
 960                             	.LVL94:
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 961                             		.loc 1 154 21
 962 0149 47 72                   		cmp	r7, r2
 963 014b 2B 05 38 E0 FE          		bgt	.L47
 964 0150 38 10 FF                		bra	.L49
 965                             	.LVL95:
 966                             	.L91:
 967                             	.LBE140:
 968                             	.LBB141:
 969                             	.LBB136:
 197:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_first_time_used = wanted_requirements->first_time_used;
 970                             		.loc 1 197 15
 971 0153 EC AE                   		mov.L	[r10], r14
 198:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int wanted_last_time_used = wanted_requirements->last_time_used;
 972                             		.loc 1 198 15
 973 0155 ED AD 02                		mov.L	8[r10], r13
 199:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 974                             		.loc 1 199 15
 975 0158 ED A9 03                		mov.L	12[r10], r9
 976                             	.LBB131:
 977                             	.LBB108:
 210:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       while (true) {
 978                             		.loc 1 210 18
 979 015b 66 04                   		mov.L	#0, r4
 980                             	.LBE108:
 981                             	.LBE131:
 207:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // Loop through the offset-ordered list of buffers, looking for gaps.
 982                             		.loc 1 207 9
 983 015d 66 05                   		mov.L	#0, r5
 984                             	.LVL96:
 985                             	.LBB132:
 986                             	.LBB127:
 211:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         // Find out what the next active buffer is.
 987                             		.loc 1 211 7 is_stmt 1
 988                             	.LBB109:
 213:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             prior_entry, wanted_first_time_used, wanted_last_time_used);
 989                             		.loc 1 213 9
 990                             	.LBB110:
 991                             	.LBB111:
 115:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* candidate_next_entry;
 992                             		.loc 1 115 3
 116:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (start == nullptr) {
 993                             		.loc 1 116 3
 117:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     candidate_next_entry = &buffers_sorted_by_offset_[first_entry_index_];
 994                             		.loc 1 117 3
 995 015f 61 04                   		cmp	#0, r4
 996 0161 20 48                   		beq	.L94
 997                             	.LVL97:
 998                             		.balign 8,3,1
 999                             	.L61:
 120:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       return nullptr;
 1000                             		.loc 1 120 5
 120:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       return nullptr;
 1001                             		.loc 1 120 16 is_stmt 0
 1002 0163 ED 4A 02                		mov.L	8[r4], r10
 120:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       return nullptr;
 1003                             		.loc 1 120 5
 1004 0166 75 0A FF                		cmp	#-1, r10
 1005 0169 20 61                   		beq	.L75
 1006                             	.LVL98:
 1007                             		.balign 8,3,1
 1008                             	.L87:
 123:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1009                             		.loc 1 123 5 is_stmt 1
 123:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1010                             		.loc 1 123 78 is_stmt 0
 1011 016b 63 CA                   		mul	#12, r10
 123:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1012                             		.loc 1 123 26
 1013 016d 4B 2A                   		add	r2, r10
 1014                             	.LVL99:
 125:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (DoesEntryOverlapInTime(candidate_next_entry, first_time_used,
 1015                             		.loc 1 125 3 is_stmt 1
 126:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                                last_time_used)) {
 1016                             		.loc 1 126 5
 1017                             	.LBB112:
 1018                             	.LBB113:
 100:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       &requirements_[entry->requirements_index];
 1019                             		.loc 1 100 3
 105:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 1020                             		.loc 1 105 3
 1021                             	.LBE113:
 1022                             	.LBE112:
 131:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 1023                             		.loc 1 131 5
 134:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         &buffers_sorted_by_offset_[candidate_next_entry->next_entry_index];
 1024                             		.loc 1 134 5
 1025                             	.LBB117:
 1026                             	.LBB114:
 101:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (entry_requirements->first_time_used > last_time_used) {
 1027                             		.loc 1 101 47 is_stmt 0
 1028 016f ED A3 01                		mov.L	4[r10], r3
 1029 0172 6C 43                   		shll	#4, r3
 100:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       &requirements_[entry->requirements_index];
 1030                             		.loc 1 100 29
 1031 0174 4B F3                   		add	r15, r3
 1032                             	.LVL100:
 102:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 1033                             		.loc 1 102 3 is_stmt 1
 1034 0176 06 85 39 02             		cmp	8[r3].L, r9
 1035 017a 29 43                   		blt	.L64
 1036 017c 76 10 01 00             		.balign 8,3,4
 1037                             	.L96:
 105:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 1038                             		.loc 1 105 3 is_stmt 0
 1039 0180 06 85 3D 03             		cmp	12[r3].L, r13
 1040 0184 2A 39                   		bgt	.L64
 1041                             	.LVL101:
 1042                             	.LBE114:
 1043                             	.LBE117:
 1044                             	.LBE111:
 1045                             	.LBE110:
 216:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           BufferRequirements* candidate_requirements =
 1046                             		.loc 1 216 9 is_stmt 1
 1047                             	.LBB121:
 1048 0186 61 04                   		cmp	#0, r4
 1049 0188 20 54                   		beq	.L95
 1050                             	.LBB122:
 217:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****               &requirements_[prior_entry->requirements_index];
 1051                             		.loc 1 217 11
 1052                             	.LVL102:
 219:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****               prior_entry->offset + candidate_requirements->size;
 1053                             		.loc 1 219 11
 221:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             candidate_offset = prior_entry_offset;
 1054                             		.loc 1 221 11
 218:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           const int prior_entry_offset =
 1055                             		.loc 1 218 61 is_stmt 0
 1056 018a A8 4B                   		mov.L	4[r4], r3
 220:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           if (prior_entry_offset > candidate_offset) {
 1057                             		.loc 1 220 61
 1058 018c 6C 43                   		shll	#4, r3
 1059 018e 4B F3                   		add	r15, r3
 1060                             	.LVL103:
 219:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****               prior_entry->offset + candidate_requirements->size;
 1061                             		.loc 1 219 21
 1062 0190 EC 33                   		mov.L	[r3], r3
 1063                             	.LVL104:
 1064 0192 06 88 43                		add	[r4].L, r3
 1065 0195 FC 13 35                		max	r3, r5
 1066                             	.LVL105:
 1067                             	.LBE122:
 1068                             	.LBE121:
 225:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // We're at the end of the list, so we can always append the buffer
 1069                             		.loc 1 225 9 is_stmt 1
 231:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (gap >= wanted_size) {
 1070                             		.loc 1 231 9
 232:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // This entry has a big enough gap between it and the next, so
 1071                             		.loc 1 232 9
 231:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (gap >= wanted_size) {
 1072                             		.loc 1 231 19 is_stmt 0
 1073 0198 EC A4                   		mov.L	[r10], r4
 1074                             	.LVL106:
 1075 019a 43 54                   		sub	r5, r4
 1076                             	.LVL107:
 232:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // This entry has a big enough gap between it and the next, so
 1077                             		.loc 1 232 9
 1078 019c 47 E4                   		cmp	r14, r4
 1079 019e 29 05 38 49 FF          		bge	.L59
 1080                             	.LBE109:
 1081                             	.LBE127:
 1082                             	.LBE132:
 1083                             	.LBE136:
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 1084                             		.loc 1 192 12
 1085 01a3 EF A4                   		mov.L	r10, r4
 1086                             	.LVL108:
 1087                             		.balign 8,3,1
 1088                             	.L97:
 1089                             	.LBB137:
 1090                             	.LBB133:
 1091                             	.LBB128:
 211:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         // Find out what the next active buffer is.
 1092                             		.loc 1 211 7 is_stmt 1
 1093                             	.LBB126:
 213:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             prior_entry, wanted_first_time_used, wanted_last_time_used);
 1094                             		.loc 1 213 9
 1095                             	.LBB124:
 1096                             	.LBB120:
 115:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   ListEntry* candidate_next_entry;
 1097                             		.loc 1 115 3
 116:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (start == nullptr) {
 1098                             		.loc 1 116 3
 117:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     candidate_next_entry = &buffers_sorted_by_offset_[first_entry_index_];
 1099                             		.loc 1 117 3
 1100 01a5 61 04                   		cmp	#0, r4
 1101 01a7 21 BC                   		bne	.L61
 1102                             	.LVL109:
 1103                             		.balign 8,3,1
 1104                             	.L94:
 118:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } else {
 1105                             		.loc 1 118 5
 118:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } else {
 1106                             		.loc 1 118 73 is_stmt 0
 1107 01a9 ED 1A 08                		mov.L	32[r1], r10
 1108 01ac 63 CA                   		mul	#12, r10
 118:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   } else {
 1109                             		.loc 1 118 26
 1110 01ae 4B 2A                   		add	r2, r10
 1111                             	.LVL110:
 125:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (DoesEntryOverlapInTime(candidate_next_entry, first_time_used,
 1112                             		.loc 1 125 3 is_stmt 1
 126:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                                last_time_used)) {
 1113                             		.loc 1 126 5
 1114                             	.LBB118:
 1115                             	.LBB115:
 100:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       &requirements_[entry->requirements_index];
 1116                             		.loc 1 100 3
 105:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 1117                             		.loc 1 105 3
 1118                             	.LBE115:
 1119                             	.LBE118:
 131:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 1120                             		.loc 1 131 5
 134:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         &buffers_sorted_by_offset_[candidate_next_entry->next_entry_index];
 1121                             		.loc 1 134 5
 1122                             	.LBB119:
 1123                             	.LBB116:
 101:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (entry_requirements->first_time_used > last_time_used) {
 1124                             		.loc 1 101 47 is_stmt 0
 1125 01b0 ED A3 01                		mov.L	4[r10], r3
 1126 01b3 6C 43                   		shll	#4, r3
 100:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       &requirements_[entry->requirements_index];
 1127                             		.loc 1 100 29
 1128 01b5 4B F3                   		add	r15, r3
 1129                             	.LVL111:
 102:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return false;
 1130                             		.loc 1 102 3 is_stmt 1
 1131 01b7 06 85 39 02             		cmp	8[r3].L, r9
 1132 01bb 28 C5                   		bge	.L96
 1133                             	.LVL112:
 1134                             		.balign 8,3,1
 1135                             	.L64:
 1136                             	.LBE116:
 1137                             	.LBE119:
 131:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 1138                             		.loc 1 131 31 is_stmt 0
 1139 01bd ED AA 02                		mov.L	8[r10], r10
 1140                             	.LVL113:
 131:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 1141                             		.loc 1 131 5
 1142 01c0 75 0A FF                		cmp	#-1, r10
 1143 01c3 21 A8                   		bne	.L87
 1144                             	.LVL114:
 1145                             	.LBE120:
 1146                             	.LBE124:
 216:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           BufferRequirements* candidate_requirements =
 1147                             		.loc 1 216 9 is_stmt 1
 1148                             	.LBB125:
 1149 01c5 61 04                   		cmp	#0, r4
 1150 01c7 3A 22 FF                		beq	.L59
 1151                             	.LVL115:
 1152                             		.balign 8,3,1
 1153                             	.L75:
 1154                             	.LBB123:
 217:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****               &requirements_[prior_entry->requirements_index];
 1155                             		.loc 1 217 11
 219:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****               prior_entry->offset + candidate_requirements->size;
 1156                             		.loc 1 219 11
 221:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             candidate_offset = prior_entry_offset;
 1157                             		.loc 1 221 11
 218:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           const int prior_entry_offset =
 1158                             		.loc 1 218 61 is_stmt 0
 1159 01ca ED 4A 01                		mov.L	4[r4], r10
 220:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           if (prior_entry_offset > candidate_offset) {
 1160                             		.loc 1 220 61
 1161 01cd 6C 4A                   		shll	#4, r10
 1162 01cf 4B FA                   		add	r15, r10
 1163                             	.LVL116:
 219:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****               prior_entry->offset + candidate_requirements->size;
 1164                             		.loc 1 219 21
 1165 01d1 EC AA                   		mov.L	[r10], r10
 1166                             	.LVL117:
 1167 01d3 06 88 4A                		add	[r4].L, r10
 1168 01d6 FC 13 A5                		max	r10, r5
 1169                             	.LVL118:
 1170                             	.LBE123:
 1171                             	.LBE125:
 225:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // We're at the end of the list, so we can always append the buffer
 1172                             		.loc 1 225 9 is_stmt 1
 1173 01d9 38 10 FF                		bra	.L59
 1174                             	.LVL119:
 1175                             	.L95:
 231:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (gap >= wanted_size) {
 1176                             		.loc 1 231 9
 232:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // This entry has a big enough gap between it and the next, so
 1177                             		.loc 1 232 9
 231:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (gap >= wanted_size) {
 1178                             		.loc 1 231 19 is_stmt 0
 1179 01dc EC A4                   		mov.L	[r10], r4
 1180 01de 43 54                   		sub	r5, r4
 1181                             	.LVL120:
 232:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           // This entry has a big enough gap between it and the next, so
 1182                             		.loc 1 232 9
 1183 01e0 47 4E                   		cmp	r4, r14
 1184 01e2 2A 05 38 05 FF          		ble	.L59
 1185                             	.LBE126:
 1186                             	.LBE128:
 1187                             	.LBE133:
 1188                             	.LBE137:
 192:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // The id is the order the buffer was originally added by the client.
 1189                             		.loc 1 192 12
 1190 01e7 EF A4                   		mov.L	r10, r4
 1191                             	.LVL121:
 1192 01e9 2E BC                   		bra	.L97
 1193                             	.LVL122:
 1194                             	.L93:
 1195                             	.LBB138:
 1196                             	.LBB134:
 1197                             	.LBB106:
 1198                             	.LBB105:
 280:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           current_entry->next_entry_index = new_entry_index;
 1199                             		.loc 1 280 11 is_stmt 1
 280:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           current_entry->next_entry_index = new_entry_index;
 1200                             		.loc 1 280 39 is_stmt 0
 1201 01eb A0 B4                   		mov.L	r4, 8[r3]
 281:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           break;
 1202                             		.loc 1 281 11 is_stmt 1
 281:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           break;
 1203                             		.loc 1 281 43 is_stmt 0
 1204 01ed E7 B9 02                		mov.L	r9, 8[r11]
 282:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 1205                             		.loc 1 282 11 is_stmt 1
 1206 01f0 38 E0 FE                		bra	.L70
 1207                             	.LVL123:
 1208                             	.L90:
 1209                             	.LBE105:
 1210                             	.LBE106:
 1211                             	.LBE134:
 1212                             	.LBE138:
 1213                             	.LBE141:
 187:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1214                             		.loc 1 187 5
 187:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1215                             		.loc 1 187 32 is_stmt 0
 1216 01f3 66 07                   		mov.L	#0, r7
 1217 01f5 FE 2A C7                		mov.L	r7, [r10,r12]
 1218 01f8 66 0A                   		mov.L	#0, r10
 1219                             	.LVL124:
 1220 01fa 38 BF FE                		bra	.L58
 1221                             	.LVL125:
 1222                             	.L76:
 1223                             	.LBB142:
 154:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (requirements_[i].offline_offset == kOnlinePlannedBuffer) {
 1224                             		.loc 1 154 21
 1225 01fd EF 63                   		mov.L	r6, r3
 1226 01ff EF DB                   		mov.L	r13, r11
 1227 0201 38 62 FE                		bra	.L46
 1228                             	.LBE142:
 1229                             	.LFE24:
 1231 0204 76 10 01 00             		.section	.text._ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv,"ax",@progbits
 1232                             		.global	__ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv
 1234                             	__ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv:
 1235                             	.LFB25:
 290:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 1236                             		.loc 1 290 52 is_stmt 1
 1237                             	.LVL126:
 1238 0000 7E A7                   		push.l	r7
 1239                             	.LCFI7:
 291:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (buffer_count_ == 0) {
 1240                             		.loc 1 291 3
 290:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 1241                             		.loc 1 290 52 is_stmt 0
 1242 0002 EF 17                   		mov.L	r1, r7
 291:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if (buffer_count_ == 0) {
 1243                             		.loc 1 291 27
 1244 0004 05 00 00 00             		bsr	__ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv
 1245                             	.LVL127:
 292:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return 0;
 1246                             		.loc 1 292 3 is_stmt 1
 1247 0008 A8 F5                   		mov.L	8[r7], r5
 1248 000a 61 05                   		cmp	#0, r5
 1249 000c 20 47                   		beq	.L103
 1250                             	.LVL128:
 1251                             	.LBB146:
 1252                             	.LBB147:
 295:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   size_t max_size = 0;
 1253                             		.loc 1 295 3
 295:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   size_t max_size = 0;
 1254                             		.loc 1 295 67 is_stmt 0
 1255 000e AA 75                   		mov.L	32[r7], r5
 295:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   size_t max_size = 0;
 1256                             		.loc 1 295 23
 1257 0010 A9 F2                   		mov.L	24[r7], r2
 295:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   size_t max_size = 0;
 1258                             		.loc 1 295 67
 1259 0012 63 C5                   		mul	#12, r5
 295:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   size_t max_size = 0;
 1260                             		.loc 1 295 14
 1261 0014 4B 25                   		add	r2, r5
 1262                             	.LVL129:
 296:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   while (entry) {
 1263                             		.loc 1 296 3 is_stmt 1
 297:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* requirements =
 1264                             		.loc 1 297 3
 297:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* requirements =
 1265                             		.loc 1 297 10 is_stmt 0
 1266 0016 20 3D                   		beq	.L103
 1267                             	.LBB148:
 298:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         &requirements_[entry->requirements_index];
 1268                             		.loc 1 298 5 is_stmt 1
 299:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // TODO(b/148246793): Update all size and offset variables types from
 1269                             		.loc 1 299 49 is_stmt 0
 1270 0018 A8 5B                   		mov.L	4[r5], r3
 299:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // TODO(b/148246793): Update all size and offset variables types from
 1271                             		.loc 1 299 10
 1272 001a ED 7E 03                		mov.L	12[r7], r14
 1273                             	.LVL130:
 302:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (current_size > max_size) {
 1274                             		.loc 1 302 5 is_stmt 1
 306:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 1275                             		.loc 1 306 16 is_stmt 0
 1276 001d A8 D4                   		mov.L	8[r5], r4
 302:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (current_size > max_size) {
 1277                             		.loc 1 302 63
 1278 001f FD C4 37                		shll	#4, r3, r7
 1279                             	.LVL131:
 1280 0022 4B E7                   		add	r14, r7
 302:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (current_size > max_size) {
 1281                             		.loc 1 302 47
 1282 0024 EC 71                   		mov.L	[r7], r1
 1283 0026 06 88 51                		add	[r5].L, r1
 1284                             	.LVL132:
 303:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       max_size = current_size;
 1285                             		.loc 1 303 5 is_stmt 1
 306:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 1286                             		.loc 1 306 5
 1287 0029 75 04 FF                		cmp	#-1, r4
 1288 002c 21 1C                   		bne	.L100
 1289 002e 2E 22                   		bra	.L98
 1290                             	.LVL133:
 1291                             	.L101:
 299:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     // TODO(b/148246793): Update all size and offset variables types from
 1292                             		.loc 1 299 49 is_stmt 0
 1293 0030 A8 3D                   		mov.L	4[r3], r5
 306:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 1294                             		.loc 1 306 16
 1295 0032 A8 B4                   		mov.L	8[r3], r4
 302:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (current_size > max_size) {
 1296                             		.loc 1 302 63
 1297 0034 6C 45                   		shll	#4, r5
 1298 0036 4B E5                   		add	r14, r5
 302:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (current_size > max_size) {
 1299                             		.loc 1 302 47
 1300 0038 EC 55                   		mov.L	[r5], r5
 1301 003a 06 88 35                		add	[r3].L, r5
 1302 003d 47 51                   		cmp	r5, r1
 1303 003f 22 04                   		bgeu 1f
 1304 0041 EF 51                   		mov r5, r1
 1305                             	1:
 1306                             	.LVL134:
 306:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       break;
 1307                             		.loc 1 306 5 is_stmt 1
 1308 0043 75 04 FF                		cmp	#-1, r4
 1309 0046 12                      		beq	.L98
 1310                             	.LVL135:
 1311 0047 03                      		.balign 8,3,1
 1312                             	.L100:
 298:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         &requirements_[entry->requirements_index];
 1313                             		.loc 1 298 5
 309:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1314                             		.loc 1 309 5
 309:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1315                             		.loc 1 309 63 is_stmt 0
 1316 0048 63 C4                   		mul	#12, r4
 309:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1317                             		.loc 1 309 11
 1318 004a FF 23 42                		add	r4, r2, r3
 1319                             	.LVL136:
 302:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (current_size > max_size) {
 1320                             		.loc 1 302 5 is_stmt 1
 303:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       max_size = current_size;
 1321                             		.loc 1 303 5
 1322                             	.LBE148:
 297:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* requirements =
 1323                             		.loc 1 297 3
 297:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* requirements =
 1324                             		.loc 1 297 10 is_stmt 0
 1325 004d 21 E3                   		bne	.L101
 1326                             	.LVL137:
 1327 004f 03                      		.balign 8,3,2
 1328                             	.L98:
 1329                             	.LBE147:
 1330                             	.LBE146:
 312:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 1331                             		.loc 1 312 1
 1332 0050 3F 77 01                		rtsd	#4, r7-r7
 1333                             	.LVL138:
 1334                             	.L103:
 293:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1335                             		.loc 1 293 12
 1336 0053 66 01                   		mov.L	#0, r1
 312:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 1337                             		.loc 1 312 1
 1338 0055 3F 77 01                		rtsd	#4, r7-r7
 1339                             	.LFE25:
 1341                             		.section	.text._ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEPNS_13ErrorReporterEiPi,"ax",@p
 1342                             		.global	__ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEPNS_13ErrorReporterEiPi
 1344                             	__ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEPNS_13ErrorReporterEiPi:
 1345                             	.LFB28:
 385:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 386:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** TfLiteStatus GreedyMemoryPlanner::GetOffsetForBuffer(
 387:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     tflite::ErrorReporter* error_reporter, int buffer_index, int* offset) {
 1346                             		.loc 1 387 75 is_stmt 1
 1347                             	.LVL139:
 1348 0000 6E 6B                   		pushm	r6-r11
 1349                             	.LCFI8:
 1350 0002 60 C0                   		sub	#12, r0
 1351                             	.LCFI9:
 1352                             		.loc 1 387 75 is_stmt 0
 1353 0004 EF 37                   		mov.L	r3, r7
 388:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 1354                             		.loc 1 388 3 is_stmt 1
 387:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 1355                             		.loc 1 387 75 is_stmt 0
 1356 0006 EF 1A                   		mov.L	r1, r10
 1357 0008 EF 2B                   		mov.L	r2, r11
 1358 000a EF 46                   		mov.L	r4, r6
 1359                             		.loc 1 388 27
 1360 000c 05 00 00 00             		bsr	__ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv
 1361                             	.LVL140:
 389:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   if ((buffer_index < 0) || (buffer_index >= buffer_count_)) {
 1362                             		.loc 1 389 3 is_stmt 1
 1363 0010 ED A5 02                		mov.L	8[r10], r5
 1364 0013 61 07                   		cmp	#0, r7
 1365 0015 29 13                   		blt	.L113
 1366                             		.loc 1 389 26 is_stmt 0 discriminator 1
 1367 0017 47 75                   		cmp	r7, r5
 1368 0019 2B 0F                   		ble	.L113
 390:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter,
 391:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          "buffer index %d is outside range 0 to %d",
 392:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          buffer_index, buffer_count_);
 393:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     return kTfLiteError;
 394:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 395:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   *offset = buffer_offsets_[buffer_index];
 1369                             		.loc 1 395 3 is_stmt 1
 1370                             		.loc 1 395 41 is_stmt 0
 1371 001b ED AA 09                		mov.L	36[r10], r10
 1372                             	.LVL141:
 396:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
 1373                             		.loc 1 396 10
 1374 001e 66 01                   		mov.L	#0, r1
 395:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return kTfLiteOk;
 1375                             		.loc 1 395 11
 1376 0020 FE 67 AA                		mov.L	[r7,r10], r10
 1377 0023 E3 6A                   		mov.L	r10, [r6]
 1378                             		.loc 1 396 3 is_stmt 1
 397:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 1379                             		.loc 1 397 1 is_stmt 0
 1380 0025 3F 6B 09                		rtsd	#36, r6-r11
 1381                             	.LVL142:
 1382                             	.L113:
 1383                             	.LBB151:
 1384                             	.LBB152:
 390:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          "buffer index %d is outside range 0 to %d",
 1385                             		.loc 1 390 5 is_stmt 1
 390:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          "buffer index %d is outside range 0 to %d",
 1386                             		.loc 1 390 5
 1387 0028 A0 85                   		mov.L	r5, 8[r0]
 1388 002a A0 0F                   		mov.L	r7, 4[r0]
 1389 002c EF B1                   		mov.L	r11, r1
 1390 002e F8 02 00 00 00 00       		mov.L	#.LC1, [r0]
 1391 0034 05 00 00 00             		bsr	__ZN6tflite13ErrorReporter6ReportEPKcz
 1392                             	.LVL143:
 393:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1393                             		.loc 1 393 5
 390:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****                          "buffer index %d is outside range 0 to %d",
 1394                             		.loc 1 390 5 is_stmt 0
 1395 0038 66 11                   		mov.L	#1, r1
 1396                             	.LBE152:
 1397                             	.LBE151:
 1398                             		.loc 1 397 1
 1399 003a 3F 6B 09                		rtsd	#36, r6-r11
 1400                             	.LFE28:
 1402                             		.section	.text._ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEPNS_13ErrorReporterE,"ax",@progbit
 1403                             		.global	__ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEPNS_13ErrorReporterE
 1405                             	__ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEPNS_13ErrorReporterE:
 1406                             	.LFB26:
 314:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 1407                             		.loc 1 314 74 is_stmt 1
 1408                             	.LVL144:
 1409 0000 6E 6D                   		pushm	r6-r13
 1410                             	.LCFI10:
 1411 0002 71 00 94                		add	#-108, r0
 1412                             	.LCFI11:
 315:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 1413                             		.loc 1 315 3
 314:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 1414                             		.loc 1 314 74 is_stmt 0
 1415 0005 EF 19                   		mov.L	r1, r9
 1416 0007 EF 27                   		mov.L	r2, r7
 315:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 1417                             		.loc 1 315 27
 1418 0009 05 00 00 00             		bsr	__ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv
 1419                             	.LVL145:
 317:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(
 1420                             		.loc 1 317 3 is_stmt 1
 1421                             	.LBB153:
 317:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(
 1422                             		.loc 1 317 23 is_stmt 0
 1423 000d ED 9E 02                		mov.L	8[r9], r14
 317:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(
 1424                             		.loc 1 317 21
 1425 0010 61 0E                   		cmp	#0, r14
 1426 0012 2A 05 38 5B 01          		ble	.L118
 317:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(
 1427                             		.loc 1 317 12
 1428 0017 66 0A                   		mov.L	#0, r10
 318:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         error_reporter,
 1429                             		.loc 1 318 5
 1430 0019 FB 62 00 00 00 00       		mov.L	#.LC2, r6
 1431                             	.LVL146:
 1432 001f 03                      		.balign 8,3,2
 1433                             	.L119:
 318:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         error_reporter,
 1434                             		.loc 1 318 5 is_stmt 1 discriminator 2
 318:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         error_reporter,
 1435                             		.loc 1 318 5 discriminator 2
 1436 0020 FD C4 A5                		shll	#4, r10, r5
 1437 0023 ED 94 09                		mov.L	36[r9], r4
 1438 0026 06 89 95 03             		add	12[r9].L, r5
 1439 002a E5 50 03 05             		mov.L	12[r5], 20[r0]
 1440 002e EF 71                   		mov.L	r7, r1
 1441 0030 E5 50 02 04             		mov.L	8[r5], 16[r0]
 1442 0034 E4 50 03                		mov.L	[r5], 12[r0]
 1443 0037 FE 6A 44                		mov.L	[r10,r4], r4
 1444 003a A0 84                   		mov.L	r4, 8[r0]
 1445 003c E3 06                   		mov.L	r6, [r0]
 1446 003e E7 0A 01                		mov.L	r10, 4[r0]
 317:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(
 1447                             		.loc 1 317 3 is_stmt 0 discriminator 2
 1448 0041 62 1A                   		add	#1, r10
 1449                             	.LVL147:
 318:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         error_reporter,
 1450                             		.loc 1 318 5 discriminator 2
 1451 0043 05 00 00 00             		bsr	__ZN6tflite13ErrorReporter6ReportEPKcz
 1452                             	.LVL148:
 317:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(
 1453                             		.loc 1 317 23 discriminator 2
 1454 0047 ED 9E 02                		mov.L	8[r9], r14
 317:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(
 1455                             		.loc 1 317 21 discriminator 2
 1456 004a 47 AE                   		cmp	r10, r14
 1457 004c 2A D4                   		bgt	.L119
 1458                             	.LVL149:
 1459                             	.LBE153:
 1460                             	.LBB154:
 330:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* requirements = &requirements_[i];
 1461                             		.loc 1 330 21
 1462 004e 61 0E                   		cmp	#0, r14
 1463 0050 2A 05 38 1D 01          		ble	.L118
 1464 0055 ED 9A 03                		mov.L	12[r9], r10
 1465                             	.LVL150:
 1466 0058 FD C4 E2                		shll	#4, r14, r2
 1467 005b ED 94 09                		mov.L	36[r9], r4
 1468                             	.LBE154:
 329:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 1469                             		.loc 1 329 7
 1470 005e 66 0D                   		mov.L	#0, r13
 1471 0060 4B A2                   		add	r10, r2
 328:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int max_time = 0;
 1472                             		.loc 1 328 7
 1473 0062 75 48 50                		mov.L	#0x50, r8
 1474                             	.LVL151:
 1475                             		.balign 8,3,1
 1476                             	.L123:
 1477                             	.LBB156:
 1478                             	.LBB155:
 331:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int offset = buffer_offsets_[i];
 1479                             		.loc 1 331 5 is_stmt 1
 332:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int last_time_used = requirements->last_time_used;
 1480                             		.loc 1 332 5
 1481 0065 ED A3 03                		mov.L	12[r10], r3
 332:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int last_time_used = requirements->last_time_used;
 1482                             		.loc 1 332 15 is_stmt 0
 1483 0068 FD 2A 45                		mov.L	[r4+], r5
 1484                             	.LVL152:
 333:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int size = offset + requirements->size;
 1485                             		.loc 1 333 5 is_stmt 1
 334:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (size > max_size) {
 1486                             		.loc 1 334 5
 335:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       max_size = size;
 1487                             		.loc 1 335 5
 334:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     if (size > max_size) {
 1488                             		.loc 1 334 15 is_stmt 0
 1489 006b 06 88 A5                		add	[r10].L, r5
 1490                             	.LVL153:
 1491 006e FC 13 58                		max	r5, r8
 1492                             	.LVL154:
 338:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       max_time = last_time_used;
 1493                             		.loc 1 338 5 is_stmt 1
 1494 0071 FC 13 3D                		max	r3, r13
 1495                             	.LVL155:
 1496 0074 71 AA 10                		add	#16, r10
 1497                             	.LVL156:
 1498                             	.LBE155:
 330:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* requirements = &requirements_[i];
 1499                             		.loc 1 330 21 is_stmt 0
 1500 0077 47 2A                   		cmp	r2, r10
 1501 0079 21 EC                   		bne	.L123
 1502                             	.LVL157:
 1503                             		.balign 8,3,1
 1504                             	.L122:
 1505                             	.LBE156:
 329:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 1506                             		.loc 1 329 7
 1507 007b 66 0C                   		mov.L	#0, r12
 1508 007d 75 4B 50                		mov.L	#0x50, r11
 1509 0080 75 46 2E                		mov	#46, r6
 1510                             	.LBB157:
 1511                             	.LBB158:
 380:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1512                             		.loc 1 380 5
 1513 0083 FB A2 6C 00 00 00       		mov.L	#.LC3, r10
 1514                             		.balign 8,3,2
 1515                             	.L146:
 1516                             	.LVL158:
 1517 0089 75 41 18                		mov.L	#24, r1
 1518 008c 4B 01                   		add	r0, r1
 1519 008e EF B3                   		mov.L	r11, r3
 1520 0090 CF 62                   		mov.B	r6, r2
 1521 0092 7F 88                   		sstr.b
 1522                             	.LVL159:
 1523                             	.LBB159:
 348:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       BufferRequirements* requirements = &requirements_[i];
 1524                             		.loc 1 348 23
 1525 0094 61 0E                   		cmp	#0, r14
 1526 0096 2B 6E                   		ble	.L144
 1527 0098 ED 94 03                		mov.L	12[r9], r4
 348:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       BufferRequirements* requirements = &requirements_[i];
 1528                             		.loc 1 348 14
 1529 009b 66 03                   		mov.L	#0, r3
 1530                             	.LVL160:
 1531                             		.balign 8,3,1
 1532                             	.L145:
 1533                             	.LBB160:
 349:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if ((t < requirements->first_time_used) ||
 1534                             		.loc 1 349 7 is_stmt 1
 350:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           (t > requirements->last_time_used)) {
 1535                             		.loc 1 350 7
 1536 009d A8 C5                   		mov.L	8[r4], r5
 1537 009f 47 C5                   		cmp	r12, r5
 1538 00a1 2A 5A                   		bgt	.L127
 350:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           (t > requirements->last_time_used)) {
 1539                             		.loc 1 350 47 is_stmt 0 discriminator 2
 1540 00a3 A8 CD                   		mov.L	12[r4], r5
 1541 00a5 47 C5                   		cmp	r12, r5
 1542 00a7 29 54                   		blt	.L127
 354:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (offset == -1) {
 1543                             		.loc 1 354 7 is_stmt 1
 354:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (offset == -1) {
 1544                             		.loc 1 354 17 is_stmt 0
 1545 00a9 ED 95 09                		mov.L	36[r9], r5
 1546 00ac FE 63 55                		mov.L	[r3,r5], r5
 1547                             	.LVL161:
 355:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         continue;
 1548                             		.loc 1 355 7 is_stmt 1
 1549 00af 75 05 FF                		cmp	#-1, r5
 1550 00b2 20 49                   		beq	.L127
 358:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int line_start = (offset * kLineWidth) / max_size;
 1551                             		.loc 1 358 7
 1552                             	.LVL162:
 359:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int line_end = ((offset + size) * kLineWidth) / max_size;
 1553                             		.loc 1 359 7
 360:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       for (int n = line_start; n < line_end; ++n) {
 1554                             		.loc 1 360 37 is_stmt 0
 1555 00b4 EF 52                   		mov.L	r5, r2
 1556 00b6 06 88 42                		add	[r4].L, r2
 359:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int line_end = ((offset + size) * kLineWidth) / max_size;
 1557                             		.loc 1 359 38
 1558 00b9 75 15 50                		mul	#0x50, r5
 1559                             	.LVL163:
 359:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int line_end = ((offset + size) * kLineWidth) / max_size;
 1560                             		.loc 1 359 17
 1561 00bc FC 23 85                		div	r8, r5
 1562                             	.LVL164:
 360:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       for (int n = line_start; n < line_end; ++n) {
 1563                             		.loc 1 360 7 is_stmt 1
 360:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       for (int n = line_start; n < line_end; ++n) {
 1564                             		.loc 1 360 45 is_stmt 0
 1565 00bf 75 12 50                		mul	#0x50, r2
 360:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       for (int n = line_start; n < line_end; ++n) {
 1566                             		.loc 1 360 17
 1567 00c2 FC 23 82                		div	r8, r2
 1568                             	.LVL165:
 361:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (line[n] == '.') {
 1569                             		.loc 1 361 7 is_stmt 1
 1570                             	.LBB161:
 361:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (line[n] == '.') {
 1571                             		.loc 1 361 34 is_stmt 0
 1572 00c5 47 25                   		cmp	r2, r5
 1573 00c7 28 34                   		bge	.L127
 1574 00c9 75 41 18                		mov.L	#24, r1
 1575 00cc 4B 01                   		add	r0, r1
 1576 00ce 4B 15                   		add	r1, r5
 1577                             	.LVL166:
 1578 00d0 4B 12                   		add	r1, r2
 1579                             	.LVL167:
 1580 00d2 75 53 3D                		cmp	#61, r3
 1581 00d5 2A 57                   		bgt	.L132
 1582 00d7 75 53 23                		cmp	#35, r3
 1583 00da 2B 5E                   		ble	.L133
 1584                             	.LBB162:
 1585                             	.LBB163:
 369:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           } else {
 1586                             		.loc 1 369 21
 1587 00dc 71 3E 1D                		add	#29, r3, r14
 1588 00df 0A                      		bra	.L136
 1589                             	.LVL168:
 1590                             	.L155:
 1591                             	.LBE163:
 375:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 1592                             		.loc 1 375 19
 1593 00e0 F8 54 21                		mov.B	#33, [r5]
 1594                             	.LVL169:
 1595 00e3 62 15                   		add	#1, r5
 1596                             	.LVL170:
 1597                             	.LBE162:
 361:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (line[n] == '.') {
 1598                             		.loc 1 361 34
 1599 00e5 47 52                   		cmp	r5, r2
 1600 00e7 20 11                   		beq	.L131
 1601                             	.LVL171:
 1602                             		.balign 8,3,3
 1603                             	.L136:
 1604                             	.LBE161:
 1605                             	.LBE160:
 1606                             	.LBE159:
 1607                             	.LBE158:
 1608                             	.LBE157:
 362:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           char display;
 1609                             		.loc 1 362 9 is_stmt 1
 1610                             	.LBB194:
 1611                             	.LBB188:
 1612                             	.LBB183:
 1613                             	.LBB178:
 1614                             	.LBB173:
 1615                             	.LBB168:
 375:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 1616                             		.loc 1 375 11
 362:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           char display;
 1617                             		.loc 1 362 9 is_stmt 0
 1618 00e9 58 51                   		movu.B	[r5], r1
 1619 00eb 75 51 2E                		cmp	#46, r1
 1620 00ee 21 F2                   		bne	.L155
 1621                             	.LBB164:
 363:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           if (i < 10) {
 1622                             		.loc 1 363 11 is_stmt 1
 364:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = '0' + i;
 1623                             		.loc 1 364 11
 366:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = 'a' + (i - 10);
 1624                             		.loc 1 366 18
 368:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = 'A' + (i - 36);
 1625                             		.loc 1 368 18
 369:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           } else {
 1626                             		.loc 1 369 13
 1627                             	.LVL172:
 373:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         } else {
 1628                             		.loc 1 373 11
 373:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         } else {
 1629                             		.loc 1 373 19 is_stmt 0
 1630 00f0 C3 5E                   		mov.B	r14, [r5]
 1631                             	.LVL173:
 1632 00f2 62 15                   		add	#1, r5
 1633                             	.LVL174:
 1634                             	.LBE164:
 1635                             	.LBE168:
 361:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (line[n] == '.') {
 1636                             		.loc 1 361 34
 1637 00f4 47 52                   		cmp	r5, r2
 1638 00f6 21 F3                   		bne	.L136
 1639                             	.LVL175:
 1640                             		.balign 8,3,1
 1641                             	.L131:
 1642 00f8 ED 9E 02                		mov.L	8[r9], r14
 1643                             		.balign 8,3,1
 1644                             	.L127:
 1645                             	.LBE173:
 1646                             	.LBE178:
 348:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       BufferRequirements* requirements = &requirements_[i];
 1647                             		.loc 1 348 5 discriminator 2
 1648 00fb 62 13                   		add	#1, r3
 1649                             	.LVL176:
 1650 00fd 71 44 10                		add	#16, r4
 1651                             	.LVL177:
 348:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       BufferRequirements* requirements = &requirements_[i];
 1652                             		.loc 1 348 23 discriminator 2
 1653 0100 47 E3                   		cmp	r14, r3
 1654 0102 29 9B                   		blt	.L145
 1655                             	.LVL178:
 1656                             		.balign 8,3,1
 1657                             	.L144:
 1658                             	.LBE183:
 379:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "%s", (const char*)line);
 1659                             		.loc 1 379 5 is_stmt 1
 380:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1660                             		.loc 1 380 5 is_stmt 0
 1661 0104 E3 0A                   		mov.L	r10, [r0]
 1662 0106 EF 71                   		mov.L	r7, r1
 1663                             	.LBE188:
 344:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int c = 0; c < kLineWidth; ++c) {
 1664                             		.loc 1 344 3
 1665 0108 62 1C                   		add	#1, r12
 1666                             	.LVL179:
 1667                             	.LBB189:
 380:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1668                             		.loc 1 380 5
 1669 010a 75 45 18                		mov.L	#24, r5
 1670 010d 4B 05                   		add	r0, r5
 1671 010f A0 0D                   		mov.L	r5, 4[r0]
 379:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     TF_LITE_REPORT_ERROR(error_reporter, "%s", (const char*)line);
 1672                             		.loc 1 379 22
 1673 0111 F9 04 68 00             		mov.B	#0, 104[r0]
 380:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1674                             		.loc 1 380 5 is_stmt 1
 380:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 1675                             		.loc 1 380 5
 1676 0115 05 00 00 00             		bsr	__ZN6tflite13ErrorReporter6ReportEPKcz
 1677                             	.LVL180:
 1678                             	.LBE189:
 344:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int c = 0; c < kLineWidth; ++c) {
 1679                             		.loc 1 344 21 is_stmt 0
 1680 0119 47 CD                   		cmp	r12, r13
 1681 011b 29 51                   		blt	.L156
 1682 011d ED 9E 02                		mov.L	8[r9], r14
 1683 0120 38 69 FF                		bra	.L146
 1684                             	.LVL181:
 1685                             	.L157:
 1686                             	.LBB190:
 1687                             	.LBB184:
 1688                             	.LBB179:
 1689                             	.LBB174:
 1690                             	.LBB169:
 375:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 1691                             		.loc 1 375 19
 1692 0123 F8 54 21                		mov.B	#33, [r5]
 1693                             		.balign 8,3,1
 1694                             	.L130:
 1695                             	.LVL182:
 1696 0126 62 15                   		add	#1, r5
 1697                             	.LVL183:
 1698                             	.LBE169:
 361:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (line[n] == '.') {
 1699                             		.loc 1 361 34
 1700 0128 47 52                   		cmp	r5, r2
 1701 012a 20 CE                   		beq	.L131
 1702                             	.LVL184:
 1703                             		.balign 8,3,3
 1704                             	.L132:
 1705                             	.LBE174:
 1706                             	.LBE179:
 1707                             	.LBE184:
 1708                             	.LBE190:
 1709                             	.LBE194:
 362:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           char display;
 1710                             		.loc 1 362 9 is_stmt 1
 1711                             	.LBB195:
 1712                             	.LBB191:
 1713                             	.LBB185:
 1714                             	.LBB180:
 1715                             	.LBB175:
 1716                             	.LBB170:
 375:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 1717                             		.loc 1 375 11
 362:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           char display;
 1718                             		.loc 1 362 9 is_stmt 0
 1719 012c 58 51                   		movu.B	[r5], r1
 1720 012e 75 51 2E                		cmp	#46, r1
 1721 0131 21 F2                   		bne	.L157
 1722                             	.LBB165:
 363:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           if (i < 10) {
 1723                             		.loc 1 363 11 is_stmt 1
 364:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = '0' + i;
 1724                             		.loc 1 364 11
 366:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = 'a' + (i - 10);
 1725                             		.loc 1 366 18
 368:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = 'A' + (i - 36);
 1726                             		.loc 1 368 18
 1727                             	.LVL185:
 373:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         } else {
 1728                             		.loc 1 373 11
 373:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         } else {
 1729                             		.loc 1 373 19 is_stmt 0
 1730 0133 F8 54 2A                		mov.B	#42, [r5]
 1731 0136 2E F0                   		bra	.L130
 1732                             	.LVL186:
 1733                             	.L133:
 1734 0138 61 93                   		cmp	#9, r3
 1735 013a 2B 1A                   		ble	.L137
 367:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           } else if (i < 62) {
 1736                             		.loc 1 367 21
 1737 013c 71 3E 57                		add	#0x57, r3, r14
 1738 013f 0A                      		bra	.L140
 1739                             	.LVL187:
 1740                             	.L158:
 1741                             	.LBE165:
 375:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 1742                             		.loc 1 375 19
 1743 0140 F8 54 21                		mov.B	#33, [r5]
 1744                             		.balign 8,3,1
 1745                             	.L139:
 1746                             	.LVL188:
 1747 0143 62 15                   		add	#1, r5
 1748                             	.LVL189:
 1749                             	.LBE170:
 361:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (line[n] == '.') {
 1750                             		.loc 1 361 34
 1751 0145 47 52                   		cmp	r5, r2
 1752 0147 20 B1                   		beq	.L131
 1753                             	.LVL190:
 1754                             		.balign 8,3,3
 1755                             	.L140:
 1756                             	.LBE175:
 1757                             	.LBE180:
 1758                             	.LBE185:
 1759                             	.LBE191:
 1760                             	.LBE195:
 362:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           char display;
 1761                             		.loc 1 362 9 is_stmt 1
 1762                             	.LBB196:
 1763                             	.LBB192:
 1764                             	.LBB186:
 1765                             	.LBB181:
 1766                             	.LBB176:
 1767                             	.LBB171:
 375:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 1768                             		.loc 1 375 11
 362:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           char display;
 1769                             		.loc 1 362 9 is_stmt 0
 1770 0149 58 51                   		movu.B	[r5], r1
 1771 014b 75 51 2E                		cmp	#46, r1
 1772 014e 21 F2                   		bne	.L158
 1773                             	.LBB166:
 363:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           if (i < 10) {
 1774                             		.loc 1 363 11 is_stmt 1
 364:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = '0' + i;
 1775                             		.loc 1 364 11
 366:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = 'a' + (i - 10);
 1776                             		.loc 1 366 18
 367:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           } else if (i < 62) {
 1777                             		.loc 1 367 13
 1778                             	.LVL191:
 373:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         } else {
 1779                             		.loc 1 373 11
 373:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         } else {
 1780                             		.loc 1 373 19 is_stmt 0
 1781 0150 C3 5E                   		mov.B	r14, [r5]
 1782 0152 2E F1                   		bra	.L139
 1783                             	.LVL192:
 1784                             	.L137:
 365:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           } else if (i < 36) {
 1785                             		.loc 1 365 21
 1786 0154 71 3E 30                		add	#48, r3, r14
 1787 0157 0A                      		bra	.L143
 1788                             	.LVL193:
 1789                             	.L159:
 1790                             	.LBE166:
 375:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 1791                             		.loc 1 375 19
 1792 0158 F8 54 21                		mov.B	#33, [r5]
 1793                             		.balign 8,3,1
 1794                             	.L142:
 1795                             	.LVL194:
 1796 015b 62 15                   		add	#1, r5
 1797                             	.LVL195:
 1798                             	.LBE171:
 361:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         if (line[n] == '.') {
 1799                             		.loc 1 361 34
 1800 015d 47 52                   		cmp	r5, r2
 1801 015f 20 99                   		beq	.L131
 1802                             	.LVL196:
 1803                             		.balign 8,3,3
 1804                             	.L143:
 1805                             	.LBE176:
 1806                             	.LBE181:
 1807                             	.LBE186:
 1808                             	.LBE192:
 1809                             	.LBE196:
 362:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           char display;
 1810                             		.loc 1 362 9 is_stmt 1
 1811                             	.LBB197:
 1812                             	.LBB193:
 1813                             	.LBB187:
 1814                             	.LBB182:
 1815                             	.LBB177:
 1816                             	.LBB172:
 375:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         }
 1817                             		.loc 1 375 11
 362:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           char display;
 1818                             		.loc 1 362 9 is_stmt 0
 1819 0161 58 51                   		movu.B	[r5], r1
 1820 0163 75 51 2E                		cmp	#46, r1
 1821 0166 21 F2                   		bne	.L159
 1822                             	.LBB167:
 363:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           if (i < 10) {
 1823                             		.loc 1 363 11 is_stmt 1
 364:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****             display = '0' + i;
 1824                             		.loc 1 364 11
 365:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           } else if (i < 36) {
 1825                             		.loc 1 365 13
 1826                             	.LVL197:
 373:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         } else {
 1827                             		.loc 1 373 11
 373:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         } else {
 1828                             		.loc 1 373 19 is_stmt 0
 1829 0168 C3 5E                   		mov.B	r14, [r5]
 1830 016a 2E F1                   		bra	.L142
 1831                             	.LVL198:
 1832                             	.L156:
 1833                             	.LBE167:
 1834                             	.LBE172:
 1835                             	.LBE177:
 1836                             	.LBE182:
 1837                             	.LBE187:
 1838                             	.LBE193:
 1839                             	.LBE197:
 382:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 1840                             		.loc 1 382 1
 1841 016c 3F 6D 23                		rtsd	#140, r6-r13
 1842                             	.LVL199:
 1843                             	.L118:
 328:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   int max_time = 0;
 1844                             		.loc 1 328 7
 1845 016f 75 48 50                		mov.L	#0x50, r8
 329:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 1846                             		.loc 1 329 7
 1847 0172 66 0D                   		mov.L	#0, r13
 1848 0174 38 07 FF                		bra	.L122
 1849                             	.LFE26:
 1851 0177 03                      		.section	.text._ZN6tflite19GreedyMemoryPlanner19DoAnyBuffersOverlapEPNS_13ErrorReporterE,"ax",@pro
 1852                             		.global	__ZN6tflite19GreedyMemoryPlanner19DoAnyBuffersOverlapEPNS_13ErrorReporterE
 1854                             	__ZN6tflite19GreedyMemoryPlanner19DoAnyBuffersOverlapEPNS_13ErrorReporterE:
 1855                             	.LFB29:
 398:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** 
 399:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** bool GreedyMemoryPlanner::DoAnyBuffersOverlap(ErrorReporter* error_reporter) {
 1856                             		.loc 1 399 78 is_stmt 1
 1857                             	.LVL200:
 1858 0000 6E 6D                   		pushm	r6-r13
 1859                             	.LCFI12:
 1860 0002 71 00 D4                		add	#-44, r0
 1861                             	.LCFI13:
 400:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 1862                             		.loc 1 400 3
 399:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   CalculateOffsetsIfNeeded();
 1863                             		.loc 1 399 78 is_stmt 0
 1864 0005 EF 16                   		mov.L	r1, r6
 1865 0007 EF 2B                   		mov.L	r2, r11
 1866                             		.loc 1 400 27
 1867 0009 05 00 00 00             		bsr	__ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv
 1868                             	.LVL201:
 401:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   bool were_overlaps_found = false;
 1869                             		.loc 1 401 3 is_stmt 1
 402:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 1870                             		.loc 1 402 3
 1871                             	.LBB198:
 1872                             		.loc 1 402 23 is_stmt 0
 1873 000d A8 E3                   		mov.L	8[r6], r3
 1874                             		.loc 1 402 21
 1875 000f 61 03                   		cmp	#0, r3
 1876 0011 2A 05 38 86 00          		ble	.L165
 1877                             		.loc 1 402 12
 1878 0016 66 0A                   		mov.L	#0, r10
 1879                             	.LBE198:
 401:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   bool were_overlaps_found = false;
 1880                             		.loc 1 401 8
 1881 0018 66 0E                   		mov	#0, r14
 1882                             	.LVL202:
 1883                             		.balign 8,3,1
 1884                             	.L164:
 1885                             	.LBB203:
 1886                             	.LBB199:
 403:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* a_requirements = &requirements_[i];
 1887                             		.loc 1 403 5 is_stmt 1
 404:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int a_start_offset = buffer_offsets_[i];
 1888                             		.loc 1 404 15 is_stmt 0
 1889 001a AA 6C                   		mov.L	36[r6], r4
 403:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* a_requirements = &requirements_[i];
 1890                             		.loc 1 403 25
 1891 001c FD C4 A5                		shll	#4, r10, r5
 1892 001f 06 89 65 03             		add	12[r6].L, r5
 1893                             	.LVL203:
 1894                             		.loc 1 404 5 is_stmt 1
 405:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int a_first_time_used = a_requirements->first_time_used;
 1895                             		.loc 1 405 15 is_stmt 0
 1896 0023 ED 5C 02                		mov.L	8[r5], r12
 406:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int a_last_time_used = a_requirements->last_time_used;
 1897                             		.loc 1 406 15
 1898 0026 ED 59 03                		mov.L	12[r5], r9
 1899                             	.LBB200:
 407:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int a_end_offset = a_start_offset + a_requirements->size;
 408:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int j = 0; j < buffer_count_; ++j) {
 1900                             		.loc 1 408 14
 1901 0029 66 07                   		mov.L	#0, r7
 1902                             	.LBE200:
 404:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int a_first_time_used = a_requirements->first_time_used;
 1903                             		.loc 1 404 15
 1904 002b FE 6A 48                		mov.L	[r10,r4], r8
 1905                             	.LVL204:
 405:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int a_last_time_used = a_requirements->last_time_used;
 1906                             		.loc 1 405 5 is_stmt 1
 406:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     const int a_end_offset = a_start_offset + a_requirements->size;
 1907                             		.loc 1 406 5
 407:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int j = 0; j < buffer_count_; ++j) {
 1908                             		.loc 1 407 5
 407:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     for (int j = 0; j < buffer_count_; ++j) {
 1909                             		.loc 1 407 15 is_stmt 0
 1910 002e EF 8D                   		mov.L	r8, r13
 1911 0030 06 88 5D                		add	[r5].L, r13
 1912                             	.LVL205:
 1913                             		.loc 1 408 5 is_stmt 1
 1914                             		.balign 8,3,1
 1915                             	.L163:
 1916                             	.LBB202:
 1917                             	.LBB201:
 409:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (i == j) {
 1918                             		.loc 1 409 7
 410:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         continue;
 411:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 412:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       BufferRequirements* b_requirements = &requirements_[j];
 1919                             		.loc 1 412 7
 409:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (i == j) {
 1920                             		.loc 1 409 7 is_stmt 0
 1921 0033 47 7A                   		cmp	r7, r10
 1922 0035 20 51                   		beq	.L162
 1923                             		.loc 1 412 27
 1924 0037 FD C4 75                		shll	#4, r7, r5
 1925 003a 06 89 65 03             		add	12[r6].L, r5
 1926                             	.LVL206:
 413:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int b_start_offset = buffer_offsets_[j];
 1927                             		.loc 1 413 7 is_stmt 1
 414:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int b_first_time_used = b_requirements->first_time_used;
 1928                             		.loc 1 414 7
 415:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int b_last_time_used = b_requirements->last_time_used;
 1929                             		.loc 1 415 7
 1930                             		.loc 1 415 17 is_stmt 0
 1931 003e A8 DC                   		mov.L	12[r5], r4
 1932                             	.LVL207:
 416:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int b_end_offset = b_start_offset + b_requirements->size;
 1933                             		.loc 1 416 7 is_stmt 1
 417:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if ((a_first_time_used > b_last_time_used) ||
 1934                             		.loc 1 417 7
 1935 0040 47 4C                   		cmp	r4, r12
 1936 0042 2A 44                   		bgt	.L162
 414:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int b_last_time_used = b_requirements->last_time_used;
 1937                             		.loc 1 414 17 is_stmt 0 discriminator 2
 1938 0044 A8 D2                   		mov.L	8[r5], r2
 1939                             		.loc 1 417 50 discriminator 2
 1940 0046 47 29                   		cmp	r2, r9
 1941 0048 29 3E                   		blt	.L162
 413:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       const int b_first_time_used = b_requirements->first_time_used;
 1942                             		.loc 1 413 17
 1943 004a AA 69                   		mov.L	36[r6], r1
 1944 004c FE 67 11                		mov.L	[r7,r1], r1
 416:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if ((a_first_time_used > b_last_time_used) ||
 1945                             		.loc 1 416 17
 1946 004f EF 1F                   		mov.L	r1, r15
 1947 0051 06 88 5F                		add	[r5].L, r15
 418:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           (b_first_time_used > a_last_time_used)) {
 419:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         // Buffers don't overlap in time.
 420:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         continue;
 421:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 422:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if ((a_start_offset >= b_end_offset) ||
 1948                             		.loc 1 422 7 is_stmt 1
 1949 0054 47 F8                   		cmp	r15, r8
 1950 0056 28 30                   		bge	.L162
 423:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           (b_start_offset >= a_end_offset)) {
 424:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         // No overlap in memory.
 425:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****         continue;
 426:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       }
 427:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       were_overlaps_found = true;
 1951                             		.loc 1 427 7 discriminator 2
 1952                             	.LVL208:
 428:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       TF_LITE_REPORT_ERROR(
 1953                             		.loc 1 428 7 discriminator 2
 1954                             		.loc 1 428 7 discriminator 2
 422:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           (b_start_offset >= a_end_offset)) {
 1955                             		.loc 1 422 44 is_stmt 0 discriminator 2
 1956 0058 47 1D                   		cmp	r1, r13
 1957 005a 2B 2C                   		ble	.L162
 1958                             		.loc 1 428 7
 1959 005c A1 87                   		mov.L	r7, 24[r0]
 1960                             	.LVL209:
 1961 005e E7 0F 0A                		mov.L	r15, 40[r0]
 1962 0061 A2 09                   		mov.L	r1, 36[r0]
 1963 0063 A2 04                   		mov.L	r4, 32[r0]
 1964 0065 A1 8A                   		mov.L	r2, 28[r0]
 1965 0067 E7 0D 05                		mov.L	r13, 20[r0]
 1966 006a E7 08 04                		mov.L	r8, 16[r0]
 1967 006d E7 09 03                		mov.L	r9, 12[r0]
 1968 0070 E7 0C 02                		mov.L	r12, 8[r0]
 1969 0073 F8 02 00 00 00 00       		mov.L	#.LC4, [r0]
 1970 0079 E7 0A 01                		mov.L	r10, 4[r0]
 1971 007c EF B1                   		mov.L	r11, r1
 1972 007e 05 00 00 00             		bsr	__ZN6tflite13ErrorReporter6ReportEPKcz
 1973                             	.LVL210:
 1974 0082 A8 E3                   		mov.L	8[r6], r3
 427:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       TF_LITE_REPORT_ERROR(
 1975                             		.loc 1 427 27
 1976 0084 66 1E                   		mov	#1, r14
 1977                             	.LVL211:
 1978                             		.balign 8,3,1
 1979                             	.L162:
 1980                             	.LBE201:
 408:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (i == j) {
 1981                             		.loc 1 408 5 discriminator 2
 1982 0086 62 17                   		add	#1, r7
 1983                             	.LVL212:
 408:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****       if (i == j) {
 1984                             		.loc 1 408 23 discriminator 2
 1985 0088 47 37                   		cmp	r3, r7
 1986 008a 29 A9                   		blt	.L163
 1987                             	.LBE202:
 1988                             	.LBE199:
 402:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* a_requirements = &requirements_[i];
 1989                             		.loc 1 402 3
 1990 008c 62 1A                   		add	#1, r10
 1991                             	.LVL213:
 402:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     BufferRequirements* a_requirements = &requirements_[i];
 1992                             		.loc 1 402 21
 1993 008e 47 3A                   		cmp	r3, r10
 1994 0090 29 8A                   		blt	.L164
 1995                             	.LBE203:
 429:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           error_reporter, "Overlap: %d (%d=>%d, %d->%d) vs %d (%d=>%d, %d->%d)",
 430:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           i, a_first_time_used, a_last_time_used, a_start_offset, a_end_offset,
 431:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****           j, b_first_time_used, b_last_time_used, b_start_offset, b_end_offset);
 432:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****     }
 433:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   }
 434:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   return were_overlaps_found;
 1996                             		.loc 1 434 3 is_stmt 1
 435:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 1997                             		.loc 1 435 1 is_stmt 0
 1998 0092 66 11                   		mov.L	#1, r1
 1999 0094 53 E1                   		and	r14, r1
 2000 0096 3F 6D 13                		rtsd	#76, r6-r13
 2001                             	.LVL214:
 2002                             	.L165:
 401:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc ****   for (int i = 0; i < buffer_count_; ++i) {
 2003                             		.loc 1 401 8
 2004 0099 66 0E                   		mov	#0, r14
 434:../src/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc **** }
 2005                             		.loc 1 434 3 is_stmt 1
 2006                             		.loc 1 435 1 is_stmt 0
 2007 009b 66 11                   		mov.L	#1, r1
 2008 009d 53 E1                   		and	r14, r1
 2009 009f 3F 6D 13                		rtsd	#76, r6-r13
 2010                             	.LFE29:
 2012                             		.weak	__ZTVN6tflite19GreedyMemoryPlannerE
 2013 00a2 74 10 01 00 00 00       		.section	.rodata._ZTVN6tflite19GreedyMemoryPlannerE,"aG",@progbits,_ZTVN6tflite19GreedyMemoryPlann
 2014                             		.balign 4
 2017                             	__ZTVN6tflite19GreedyMemoryPlannerE:
 2018 0000 00 00 00 00             		.long	0
 2019 0004 00 00 00 00             		.long	0
 2020 0008 00 00 00 00             		.long	__ZN6tflite19GreedyMemoryPlannerD1Ev
 2021 000c 00 00 00 00             		.long	__ZN6tflite19GreedyMemoryPlannerD0Ev
 2022 0010 00 00 00 00             		.long	__ZN6tflite19GreedyMemoryPlanner9AddBufferEPNS_13ErrorReporterEiii
 2023 0014 00 00 00 00             		.long	__ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv
 2024 0018 00 00 00 00             		.long	__ZN6tflite19GreedyMemoryPlanner14GetBufferCountEv
 2025 001c 00 00 00 00             		.long	__ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEPNS_13ErrorReporterEiPi
 2026                             		.section	.rodata._ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEPNS_13ErrorReporterE.str1.1,"aMS
 2027                             	.LC2:
 2028 0000 50 6C 61 6E 6E 65 72 20 		.string	"Planner buffer ID: %d, calculated offset: %d, size required: %d, first_time_created: %d, 
 2028      62 75 66 66 65 72 20 49 
 2028      44 3A 20 25 64 2C 20 63 
 2028      61 6C 63 75 6C 61 74 65 
 2028      64 20 6F 66 66 73 65 74 
 2029                             	.LC3:
 2030 006c 25 73 00                		.string	"%s"
 2031                             		.section	.rodata._ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEPNS_13ErrorReporterEiPi.str1.
 2032                             	.LC1:
 2033 0000 62 75 66 66 65 72 20 69 		.string	"buffer index %d is outside range 0 to %d"
 2033      6E 64 65 78 20 25 64 20 
 2033      69 73 20 6F 75 74 73 69 
 2033      64 65 20 72 61 6E 67 65 
 2033      20 30 20 74 6F 20 25 64 
 2034                             		.section	.rodata._ZN6tflite19GreedyMemoryPlanner19DoAnyBuffersOverlapEPNS_13ErrorReporterE.str1.1,
 2035                             	.LC4:
 2036 0000 4F 76 65 72 6C 61 70 3A 		.string	"Overlap: %d (%d=>%d, %d->%d) vs %d (%d=>%d, %d->%d)"
 2036      20 25 64 20 28 25 64 3D 
 2036      3E 25 64 2C 20 25 64 2D 
 2036      3E 25 64 29 20 76 73 20 
 2036      25 64 20 28 25 64 3D 3E 
 2037                             		.section	.rodata._ZN6tflite19GreedyMemoryPlanner9AddBufferEPNS_13ErrorReporterEiii.str1.1,"aMS",@p
 2038                             	.LC0:
 2039 0000 54 6F 6F 20 6D 61 6E 79 		.string	"Too many buffers (max is %d)"
 2039      20 62 75 66 66 65 72 73 
 2039      20 28 6D 61 78 20 69 73 
 2039      20 25 64 29 00 
 2316                             	.Letext0:
 2317                             		.file 3 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.20
 2318                             		.file 4 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
 2319                             		.file 5 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3.
 2320                             		.file 6 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.20
 2321                             		.file 7 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
 2322                             		.file 8 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
 2323                             		.file 9 "<built-in>"
 2324                             		.file 10 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
