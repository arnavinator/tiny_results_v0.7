   1                             		.file	"tanh.cc"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text._ZN6tflite3ops5micro11activations12_GLOBAL__N_18TanhInitEP13TfLiteContextPKcm,"ax",
   6                             	__ZN6tflite3ops5micro11activations12_GLOBAL__N_18TanhInitEP13TfLiteContextPKcm:
   7                             	.LFB2233:
   8                             		.file 1 "../src/tensorflow/lite/micro/kernels/tanh.cc"
   1:../src/tensorflow/lite/micro/kernels/tanh.cc **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
   3:../src/tensorflow/lite/micro/kernels/tanh.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow/lite/micro/kernels/tanh.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow/lite/micro/kernels/tanh.cc **** You may obtain a copy of the License at
   6:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
   7:../src/tensorflow/lite/micro/kernels/tanh.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
   9:../src/tensorflow/lite/micro/kernels/tanh.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow/lite/micro/kernels/tanh.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow/lite/micro/kernels/tanh.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow/lite/micro/kernels/tanh.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow/lite/micro/kernels/tanh.cc **** limitations under the License.
  14:../src/tensorflow/lite/micro/kernels/tanh.cc **** ==============================================================================*/
  15:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  16:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/kernels/internal/reference/integer_ops/tanh.h"
  17:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  18:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/c/builtin_op_data.h"
  19:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/c/common.h"
  20:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/kernels/internal/common.h"
  21:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  22:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/kernels/internal/reference/tanh.h"
  23:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  24:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/kernels/kernel_util.h"
  25:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/kernels/op_macros.h"
  26:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  27:../src/tensorflow/lite/micro/kernels/tanh.cc **** #include "tensorflow/lite/micro/micro_utils.h"
  28:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  29:../src/tensorflow/lite/micro/kernels/tanh.cc **** namespace tflite {
  30:../src/tensorflow/lite/micro/kernels/tanh.cc **** namespace ops {
  31:../src/tensorflow/lite/micro/kernels/tanh.cc **** namespace micro {
  32:../src/tensorflow/lite/micro/kernels/tanh.cc **** namespace activations {
  33:../src/tensorflow/lite/micro/kernels/tanh.cc **** namespace {
  34:../src/tensorflow/lite/micro/kernels/tanh.cc **** constexpr int kInputTensor = 0;
  35:../src/tensorflow/lite/micro/kernels/tanh.cc **** constexpr int kOutputTensor = 0;
  36:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  37:../src/tensorflow/lite/micro/kernels/tanh.cc **** struct OpData {
  38:../src/tensorflow/lite/micro/kernels/tanh.cc ****   int32_t input_zero_point;
  39:../src/tensorflow/lite/micro/kernels/tanh.cc ****   int32_t input_range_radius;
  40:../src/tensorflow/lite/micro/kernels/tanh.cc ****   int32_t input_multiplier;
  41:../src/tensorflow/lite/micro/kernels/tanh.cc ****   int input_left_shift;
  42:../src/tensorflow/lite/micro/kernels/tanh.cc **** };
  43:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  44:../src/tensorflow/lite/micro/kernels/tanh.cc **** void* TanhInit(TfLiteContext* context, const char* buffer, size_t length) {
   9                             		.loc 1 44 75
  10                             	.LVL0:
  45:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  11                             		.loc 1 45 3
  12 0000 AB 95                   		mov.L	56[r1], r5
  13 0002 61 05                   		cmp	#0, r5
  14 0004 17                      		beq	.L4
  46:../src/tensorflow/lite/micro/kernels/tanh.cc ****   return context->AllocatePersistentBuffer(context, sizeof(OpData));
  15                             		.loc 1 46 3
  16                             		.loc 1 46 43 is_stmt 0
  17 0005 75 42 10                		mov.L	#16, r2
  18                             	.LVL1:
  19 0008 7F 15                   		jsr	r5
  20                             	.LVL2:
  47:../src/tensorflow/lite/micro/kernels/tanh.cc **** }
  21                             		.loc 1 47 1
  22 000a 02                      		rts
  23                             	.LVL3:
  24                             	.L4:
  45:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  25                             		.loc 1 45 3 discriminator 1
  26 000b 05 00 00 00             		bsr	_abort
  27                             	.LVL4:
  28                             	.LFE2233:
  30                             		.section	.text._ZN6tflite3ops5micro11activations12_GLOBAL__N_111TanhPrepareEP13TfLiteContextP10TfL
  32                             	__ZN6tflite3ops5micro11activations12_GLOBAL__N_111TanhPrepareEP13TfLiteContextP10TfLiteNode:
  33                             	.LFB2235:
  48:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  49:../src/tensorflow/lite/micro/kernels/tanh.cc **** TfLiteStatus CalculateArithmeticOpData(TfLiteContext* context, TfLiteNode* node,
  50:../src/tensorflow/lite/micro/kernels/tanh.cc ****                                        OpData* data) {
  51:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);
  52:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  53:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
  54:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE(context, input != nullptr);
  55:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
  56:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE(context, output != nullptr);
  57:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  58:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);
  59:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  60:../src/tensorflow/lite/micro/kernels/tanh.cc ****   if (input->type == kTfLiteUInt8 || input->type == kTfLiteInt8) {
  61:../src/tensorflow/lite/micro/kernels/tanh.cc ****     static constexpr int kInputIntegerBits = 4;
  62:../src/tensorflow/lite/micro/kernels/tanh.cc ****     const double input_real_multiplier =
  63:../src/tensorflow/lite/micro/kernels/tanh.cc ****         static_cast<double>(input->params.scale) *
  64:../src/tensorflow/lite/micro/kernels/tanh.cc ****         static_cast<double>(1 << (31 - kInputIntegerBits));
  65:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  66:../src/tensorflow/lite/micro/kernels/tanh.cc ****     const double q = std::frexp(input_real_multiplier, &data->input_left_shift);
  67:../src/tensorflow/lite/micro/kernels/tanh.cc ****     data->input_multiplier = static_cast<int32_t>(TfLiteRound(q * (1ll << 31)));
  68:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  69:../src/tensorflow/lite/micro/kernels/tanh.cc ****     data->input_range_radius =
  70:../src/tensorflow/lite/micro/kernels/tanh.cc ****         CalculateInputRadius(kInputIntegerBits, data->input_left_shift, 31);
  71:../src/tensorflow/lite/micro/kernels/tanh.cc ****   }
  72:../src/tensorflow/lite/micro/kernels/tanh.cc ****   return kTfLiteOk;
  73:../src/tensorflow/lite/micro/kernels/tanh.cc **** }
  74:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  75:../src/tensorflow/lite/micro/kernels/tanh.cc **** TfLiteStatus TanhPrepare(TfLiteContext* context, TfLiteNode* node) {
  34                             		.loc 1 75 68 is_stmt 1
  35                             	.LVL5:
  36 0000 6E 6C                   		pushm	r6-r12
  37                             	.LCFI0:
  38 0002 71 00 E4                		add	#-28, r0
  39                             	.LCFI1:
  76:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
  40                             		.loc 1 76 3
  41 0005 ED 2B 04                		mov.L	16[r2], r11
  42 0008 61 0B                   		cmp	#0, r11
  43 000a 3A 6A 01                		beq	.L21
  44 000d EF 2A                   		mov.L	r2, r10
  45 000f EF 16                   		mov.L	r1, r6
  77:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  78:../src/tensorflow/lite/micro/kernels/tanh.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
  46                             		.loc 1 78 3
  47                             	.LVL6:
  79:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  80:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
  48                             		.loc 1 80 3
  49                             		.loc 1 80 39 is_stmt 0
  50 0011 66 03                   		mov.L	#0, r3
  51 0013 05 00 00 00             		bsr	__ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
  52                             	.LVL7:
  81:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE(context, input != nullptr);
  53                             		.loc 1 81 3 is_stmt 1
  54                             		.loc 1 81 3
  55 0017 61 01                   		cmp	#0, r1
  56 0019 20 77                   		beq	.L22
  82:../src/tensorflow/lite/micro/kernels/tanh.cc ****   data->input_zero_point = input->params.zero_point;
  57                             		.loc 1 82 3
  58                             		.loc 1 82 26 is_stmt 0
  59 001b E1 1B 04                		mov.L	16[r1], [r11]
  83:../src/tensorflow/lite/micro/kernels/tanh.cc ****   return CalculateArithmeticOpData(context, node, data);
  60                             		.loc 1 83 3 is_stmt 1
  61                             	.LVL8:
  62                             	.LBB2256:
  63                             	.LBB2257:
  51:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  64                             		.loc 1 51 3
  51:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  65                             		.loc 1 51 3
  66                             	.LBB2258:
  67                             	.LBB2259:
  68                             		.file 2 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
  69                             		.loc 2 152 48
  70                             		.loc 2 152 69 is_stmt 0
  71 001e EC A7                   		mov.L	[r10], r7
  72 0020 EC 77                   		mov.L	[r7], r7
  73                             	.LBE2259:
  74                             	.LBE2258:
  51:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  75                             		.loc 1 51 3
  76 0022 61 17                   		cmp	#1, r7
  77 0024 21 3B                   		bne	.L23
  52:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
  78                             		.loc 1 52 3 is_stmt 1
  52:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
  79                             		.loc 1 52 3
  80                             	.LVL9:
  81                             	.LBB2260:
  82                             	.LBB2261:
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
  83                             		.loc 2 153 49
  84                             		.loc 2 153 71 is_stmt 0
  85 0026 ED A5 01                		mov.L	4[r10], r5
  86 0029 EC 5C                   		mov.L	[r5], r12
  87                             	.LBE2261:
  88                             	.LBE2260:
  52:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
  89                             		.loc 1 52 3
  90 002b 61 1C                   		cmp	#1, r12
  91 002d 3A 87 00                		beq	.L10
  52:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
  92                             		.loc 1 52 3 is_stmt 1
  52:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
  93                             		.loc 1 52 3
  94                             	.LVL10:
  95                             	.LBE2257:
  96                             	.LBE2256:
  97                             		.loc 2 153 49
  98                             	.LBB2273:
  99                             	.LBB2269:
  52:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
 100                             		.loc 1 52 3 is_stmt 0
 101 0030 ED 6A 05                		mov.L	20[r6], r10
 102                             	.LVL11:
 103 0033 A1 87                   		mov.L	r7, 24[r0]
 104 0035 E7 0C 05                		mov.L	r12, 20[r0]
 105 0038 F9 02 04 55 00 00 00    		mov.L	#.LC4, 16[r0]
 106 003f F9 02 03 81 00 00 00    		mov.L	#.LC7, 12[r0]
 107 0046 3E 02 34                		mov.L	#52, 8[r0]
 108 0049 F9 02 01 11 00 00 00    		mov.L	#.LC2, 4[r0]
 109 0050 EF 61                   		mov.L	r6, r1
 110                             	.LVL12:
 111 0052 F8 02 67 00 00 00       		mov.L	#.LC6, [r0]
 112 0058 7F 1A                   		jsr	r10
 113                             	.LVL13:
  52:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
 114                             		.loc 1 52 3 is_stmt 1
 115                             		.balign 8,3,1
 116                             	.L5:
 117                             	.LBE2269:
 118                             	.LBE2273:
  84:../src/tensorflow/lite/micro/kernels/tanh.cc **** }
 119                             		.loc 1 84 1 is_stmt 0
 120 005a EF 71                   		mov.L	r7, r1
 121 005c 3F 6C 0E                		rtsd	#56, r6-r12
 122                             	.LVL14:
 123                             	.L23:
 124                             	.LBB2274:
 125                             	.LBB2270:
  51:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 126                             		.loc 1 51 3 is_stmt 1
  51:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 127                             		.loc 1 51 3
 128                             	.LBE2270:
 129                             	.LBE2274:
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 130                             		.loc 2 152 48
 131                             	.LBB2275:
 132                             	.LBB2271:
  51:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 133                             		.loc 1 51 3 is_stmt 0
 134 005f ED 6A 05                		mov.L	20[r6], r10
 135                             	.LVL15:
 136 0062 3E 06 01                		mov.L	#1, 24[r0]
 137 0065 A1 0F                   		mov.L	r7, 20[r0]
 138 0067 F9 02 04 55 00 00 00    		mov.L	#.LC4, 16[r0]
 139 006e F9 02 03 57 00 00 00    		mov.L	#.LC5, 12[r0]
 140 0075 3E 02 33                		mov.L	#51, 8[r0]
 141 0078 F9 02 01 11 00 00 00    		mov.L	#.LC2, 4[r0]
 142 007f EF 61                   		mov.L	r6, r1
 143                             	.LVL16:
 144 0081 F8 02 67 00 00 00       		mov.L	#.LC6, [r0]
 145 0087 7F 1A                   		jsr	r10
 146                             	.LVL17:
  51:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 147                             		.loc 1 51 3 is_stmt 1
 148 0089 66 17                   		mov.L	#1, r7
 149                             	.LBE2271:
 150                             	.LBE2275:
 151                             		.loc 1 84 1 is_stmt 0
 152 008b EF 71                   		mov.L	r7, r1
 153 008d 3F 6C 0E                		rtsd	#56, r6-r12
 154                             	.LVL18:
 155                             	.L22:
 156                             	.LBB2276:
 157                             	.LBB2277:
  81:../src/tensorflow/lite/micro/kernels/tanh.cc ****   data->input_zero_point = input->params.zero_point;
 158                             		.loc 1 81 3 is_stmt 1
  81:../src/tensorflow/lite/micro/kernels/tanh.cc ****   data->input_zero_point = input->params.zero_point;
 159                             		.loc 1 81 3
 160 0090 A9 6F                   		mov.L	20[r6], r7
 161 0092 F9 02 03 00 00 00 00    		mov.L	#.LC1, 12[r0]
 162 0099 3E 02 51                		mov.L	#0x51, 8[r0]
 163                             	.LVL19:
 164                             	.L20:
 165 009c F9 02 01 11 00 00 00    		mov.L	#.LC2, 4[r0]
 166 00a3 EF 61                   		mov.L	r6, r1
 167 00a5 F8 02 3E 00 00 00       		mov.L	#.LC3, [r0]
 168 00ab 7F 17                   		jsr	r7
 169                             	.LVL20:
  81:../src/tensorflow/lite/micro/kernels/tanh.cc ****   data->input_zero_point = input->params.zero_point;
 170                             		.loc 1 81 3
 171 00ad 66 17                   		mov.L	#1, r7
 172                             	.LBE2277:
 173                             	.LBE2276:
 174                             		.loc 1 84 1 is_stmt 0
 175 00af EF 71                   		mov.L	r7, r1
 176 00b1 3F 6C 0E                		rtsd	#56, r6-r12
 177                             	.LVL21:
 178                             	.L10:
 179                             	.LBB2278:
 180                             	.LBB2272:
  53:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE(context, input != nullptr);
 181                             		.loc 1 53 3 is_stmt 1
  53:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE(context, input != nullptr);
 182                             		.loc 1 53 39 is_stmt 0
 183 00b4 66 03                   		mov.L	#0, r3
 184 00b6 EF A2                   		mov.L	r10, r2
 185 00b8 EF 61                   		mov.L	r6, r1
 186                             	.LVL22:
 187 00ba 05 00 00 00             		bsr	__ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 188                             	.LVL23:
  54:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
 189                             		.loc 1 54 3
 190 00be 71 17 00                		add	#0, r1, r7
 191 00c1 20 60                   		beq	.L24
  55:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE(context, output != nullptr);
 192                             		.loc 1 55 3 is_stmt 1
  55:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TF_LITE_ENSURE(context, output != nullptr);
 193                             		.loc 1 55 35 is_stmt 0
 194 00c3 66 03                   		mov.L	#0, r3
 195 00c5 EF A2                   		mov.L	r10, r2
 196 00c7 EF 61                   		mov.L	r6, r1
 197 00c9 05 00 00 00             		bsr	__ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
 198                             	.LVL24:
  56:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 199                             		.loc 1 56 3
 200 00cd 71 1A 00                		add	#0, r1, r10
 201                             	.LVL25:
 202 00d0 3A 95 00                		beq	.L25
  58:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 203                             		.loc 1 58 3 is_stmt 1
  58:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 204                             		.loc 1 58 3
 205 00d3 EC 71                   		mov.L	[r7], r1
 206 00d5 06 84 A1                		cmp	[r10].L, r1
 207 00d8 21 0F                   		bne	.L26
  60:../src/tensorflow/lite/micro/kernels/tanh.cc ****     static constexpr int kInputIntegerBits = 4;
 208                             		.loc 1 60 3
 209                             	.LBB2262:
 210 00da 61 31                   		cmp	#3, r1
 211 00dc 20 54                   		beq	.L14
  60:../src/tensorflow/lite/micro/kernels/tanh.cc ****     static constexpr int kInputIntegerBits = 4;
 212                             		.loc 1 60 35 is_stmt 0
 213 00de 61 91                   		cmp	#9, r1
 214 00e0 20 50                   		beq	.L14
 215                             	.LBE2262:
  72:../src/tensorflow/lite/micro/kernels/tanh.cc **** }
 216                             		.loc 1 72 10
 217 00e2 66 07                   		mov.L	#0, r7
 218 00e4 38 76 FF                		bra	.L5
 219                             	.L26:
  58:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 220                             		.loc 1 58 3 is_stmt 1
  58:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 221                             		.loc 1 58 3
 222 00e7 A9 6F                   		mov.L	20[r6], r7
 223 00e9 05 00 00 00             		bsr	_TfLiteTypeGetName
 224                             	.LVL26:
 225 00ed EF 1B                   		mov.L	r1, r11
 226                             	.LVL27:
 227 00ef EC A1                   		mov.L	[r10], r1
 228 00f1 05 00 00 00             		bsr	_TfLiteTypeGetName
 229                             	.LVL28:
 230 00f5 A1 81                   		mov.L	r1, 24[r0]
 231 00f7 E7 0B 05                		mov.L	r11, 20[r0]
 232 00fa F9 02 04 A4 00 00 00    		mov.L	#.LC9, 16[r0]
 233 0101 F9 02 03 B1 00 00 00    		mov.L	#.LC10, 12[r0]
 234 0108 3E 02 3A                		mov.L	#58, 8[r0]
 235 010b F9 02 01 11 00 00 00    		mov.L	#.LC2, 4[r0]
 236 0112 EF 61                   		mov.L	r6, r1
 237 0114 F8 02 BD 00 00 00       		mov.L	#.LC11, [r0]
 238 011a 7F 17                   		jsr	r7
 239                             	.LVL29:
  58:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 240                             		.loc 1 58 3
 241 011c EF C7                   		mov.L	r12, r7
 242 011e 38 3C FF                		bra	.L5
 243                             	.LVL30:
 244                             	.L24:
  54:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
 245                             		.loc 1 54 3
  54:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
 246                             		.loc 1 54 3
 247 0121 A9 6F                   		mov.L	20[r6], r7
 248 0123 F9 02 03 00 00 00 00    		mov.L	#.LC1, 12[r0]
 249 012a 3E 02 36                		mov.L	#54, 8[r0]
 250 012d 38 6F FF                		bra	.L20
 251                             	.LVL31:
 252                             	.L14:
 253                             	.LBB2267:
 254                             	.LBB2263:
  61:../src/tensorflow/lite/micro/kernels/tanh.cc ****     const double input_real_multiplier =
 255                             		.loc 1 61 5
  62:../src/tensorflow/lite/micro/kernels/tanh.cc ****         static_cast<double>(input->params.scale) *
 256                             		.loc 1 62 5
  66:../src/tensorflow/lite/micro/kernels/tanh.cc ****     data->input_multiplier = static_cast<int32_t>(TfLiteRound(q * (1ll << 31)));
 257                             		.loc 1 66 5
  62:../src/tensorflow/lite/micro/kernels/tanh.cc ****         static_cast<double>(input->params.scale) *
 258                             		.loc 1 62 18 is_stmt 0
 259 0130 A8 F9                   		mov.L	12[r7], r1
  66:../src/tensorflow/lite/micro/kernels/tanh.cc ****     data->input_multiplier = static_cast<int32_t>(TfLiteRound(q * (1ll << 31)));
 260                             		.loc 1 66 32
 261 0132 71 B2 0C                		add	#12, r11, r2
 262 0135 FD 72 31 00 00 00 4D    		fmul	#0x4d000000, r1
 263                             	.LVL32:
 264 013c 05 00 00 00             		bsr	_frexp
 265                             	.LVL33:
  67:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 266                             		.loc 1 67 5 is_stmt 1
 267                             	.LBB2264:
 268                             	.LBB2265:
 269                             		.file 3 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_CPPMATH_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_CPPMATH_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** #include <cmath>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** namespace tflite {
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** #if defined(TF_LITE_USE_GLOBAL_CMATH_FUNCTIONS) ||                           \
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h ****     (defined(__ANDROID__) && !defined(__NDK_MAJOR__)) || defined(ARDUINO) || \
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h ****     defined(__ZEPHYR__)
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** #define TF_LITE_GLOBAL_STD_PREFIX
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** #else
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** #define TF_LITE_GLOBAL_STD_PREFIX std
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** #endif
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** 
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** #define DECLARE_STD_GLOBAL_SWITCH1(tf_name, std_name) \
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h ****   template <class T>                                  \
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h ****   inline T tf_name(const T x) {                       \
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h ****     return TF_LITE_GLOBAL_STD_PREFIX::std_name(x);    \
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h ****   }
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** 
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\cppmath.h **** DECLARE_STD_GLOBAL_SWITCH1(TfLiteRound, round);
 270                             		.loc 3 36 1 is_stmt 0
 271 0140 FD 72 31 00 00 00 4F    		fmul	#0x4f000000, r1
 272                             	.LVL34:
 273 0147 05 00 00 00             		bsr	_round
 274                             	.LVL35:
 275                             	.LBE2265:
 276                             	.LBE2264:
  70:../src/tensorflow/lite/micro/kernels/tanh.cc ****   }
 277                             		.loc 1 70 29
 278 014b ED B2 03                		mov.L	12[r11], r2
 279 014e 75 43 1F                		mov.L	#31, r3
  67:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 280                             		.loc 1 67 30
 281 0151 FC 97 17                		ftoi	r1, r7
  70:../src/tensorflow/lite/micro/kernels/tanh.cc ****   }
 282                             		.loc 1 70 29
 283 0154 66 41                   		mov.L	#4, r1
  67:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 284                             		.loc 1 67 30
 285 0156 E7 B7 02                		mov.L	r7, 8[r11]
  69:../src/tensorflow/lite/micro/kernels/tanh.cc ****         CalculateInputRadius(kInputIntegerBits, data->input_left_shift, 31);
 286                             		.loc 1 69 5 is_stmt 1
  70:../src/tensorflow/lite/micro/kernels/tanh.cc ****   }
 287                             		.loc 1 70 29 is_stmt 0
 288 0159 05 00 00 00             		bsr	__ZN6tflite20CalculateInputRadiusEiii
 289                             	.LVL36:
 290                             	.LBE2263:
 291                             	.LBE2267:
  72:../src/tensorflow/lite/micro/kernels/tanh.cc **** }
 292                             		.loc 1 72 10
 293 015d 66 07                   		mov.L	#0, r7
 294                             	.LBB2268:
 295                             	.LBB2266:
  69:../src/tensorflow/lite/micro/kernels/tanh.cc ****         CalculateInputRadius(kInputIntegerBits, data->input_left_shift, 31);
 296                             		.loc 1 69 30
 297 015f E7 B1 01                		mov.L	r1, 4[r11]
 298 0162 38 F8 FE                		bra	.L5
 299                             	.L25:
 300                             	.LBE2266:
 301                             	.LBE2268:
  56:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 302                             		.loc 1 56 3 is_stmt 1
  56:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 303                             		.loc 1 56 3
 304 0165 A9 6F                   		mov.L	20[r6], r7
 305 0167 F9 02 03 92 00 00 00    		mov.L	#.LC8, 12[r0]
 306 016e 3E 02 38                		mov.L	#56, 8[r0]
 307 0171 38 2B FF                		bra	.L20
 308                             	.LVL37:
 309                             	.L21:
 310                             	.LBE2272:
 311                             	.LBE2278:
  76:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 312                             		.loc 1 76 3 is_stmt 0 discriminator 1
 313 0174 05 00 00 00             		bsr	_abort
 314                             	.LVL38:
 315                             	.LFE2235:
 317                             		.section	.text._ZN6tflite3ops5micro13Register_TANHEv,"ax",@progbits
 318                             		.global	__ZN6tflite3ops5micro13Register_TANHEv
 320                             	__ZN6tflite3ops5micro13Register_TANHEv:
 321                             	.LFB2237:
  85:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  86:../src/tensorflow/lite/micro/kernels/tanh.cc **** }  // namespace
  87:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  88:../src/tensorflow/lite/micro/kernels/tanh.cc **** TfLiteStatus TanhEval(TfLiteContext* context, TfLiteNode* node) {
  89:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteEvalTensor* input =
  90:../src/tensorflow/lite/micro/kernels/tanh.cc ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
  91:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TfLiteEvalTensor* output =
  92:../src/tensorflow/lite/micro/kernels/tanh.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
  93:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  94:../src/tensorflow/lite/micro/kernels/tanh.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
  95:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const OpData& data = *(static_cast<const OpData*>(node->user_data));
  96:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
  97:../src/tensorflow/lite/micro/kernels/tanh.cc ****   switch (input->type) {
  98:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteFloat32: {
  99:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_ops::Tanh(tflite::micro::GetTensorShape(input),
 100:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<float>(input),
 101:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorShape(output),
 102:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<float>(output));
 103:../src/tensorflow/lite/micro/kernels/tanh.cc ****       return kTfLiteOk;
 104:../src/tensorflow/lite/micro/kernels/tanh.cc ****     } break;
 105:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteInt16: {
 106:../src/tensorflow/lite/micro/kernels/tanh.cc ****       TanhParams params;
 107:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_left_shift = data.input_left_shift;
 108:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_ops::Tanh(params, tflite::micro::GetTensorShape(input),
 109:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<int16_t>(input),
 110:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorShape(output),
 111:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<int16_t>(output));
 112:../src/tensorflow/lite/micro/kernels/tanh.cc ****       return kTfLiteOk;
 113:../src/tensorflow/lite/micro/kernels/tanh.cc ****     } break;
 114:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteUInt8: {
 115:../src/tensorflow/lite/micro/kernels/tanh.cc ****       TanhParams params;
 116:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_zero_point = data.input_zero_point;
 117:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_range_radius = data.input_range_radius;
 118:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_multiplier = data.input_multiplier;
 119:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_left_shift = data.input_left_shift;
 120:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_ops::Tanh(params, tflite::micro::GetTensorShape(input),
 121:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<uint8_t>(input),
 122:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorShape(output),
 123:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<uint8_t>(output));
 124:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 125:../src/tensorflow/lite/micro/kernels/tanh.cc ****       return kTfLiteOk;
 126:../src/tensorflow/lite/micro/kernels/tanh.cc ****     } break;
 127:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteInt8: {
 128:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_integer_ops::Tanh(
 129:../src/tensorflow/lite/micro/kernels/tanh.cc ****           data.input_zero_point, data.input_range_radius, data.input_multiplier,
 130:../src/tensorflow/lite/micro/kernels/tanh.cc ****           data.input_left_shift, tflite::micro::GetTensorShape(input),
 131:../src/tensorflow/lite/micro/kernels/tanh.cc ****           tflite::micro::GetTensorData<int8_t>(input),
 132:../src/tensorflow/lite/micro/kernels/tanh.cc ****           tflite::micro::GetTensorShape(output),
 133:../src/tensorflow/lite/micro/kernels/tanh.cc ****           tflite::micro::GetTensorData<int8_t>(output));
 134:../src/tensorflow/lite/micro/kernels/tanh.cc ****       return kTfLiteOk;
 135:../src/tensorflow/lite/micro/kernels/tanh.cc ****     } break;
 136:../src/tensorflow/lite/micro/kernels/tanh.cc ****     default:
 137:../src/tensorflow/lite/micro/kernels/tanh.cc ****       TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 138:../src/tensorflow/lite/micro/kernels/tanh.cc ****                          TfLiteTypeGetName(input->type),
 139:../src/tensorflow/lite/micro/kernels/tanh.cc ****                          TfLiteTypeGetName(output->type));
 140:../src/tensorflow/lite/micro/kernels/tanh.cc ****       return kTfLiteError;
 141:../src/tensorflow/lite/micro/kernels/tanh.cc ****   }
 142:../src/tensorflow/lite/micro/kernels/tanh.cc **** }
 143:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 144:../src/tensorflow/lite/micro/kernels/tanh.cc **** }  // namespace activations
 145:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 146:../src/tensorflow/lite/micro/kernels/tanh.cc **** TfLiteRegistration Register_TANH() {
 322                             		.loc 1 146 36 is_stmt 1
 147:../src/tensorflow/lite/micro/kernels/tanh.cc ****   return {/*init=*/activations::TanhInit,
 323                             		.loc 1 147 3
 148:../src/tensorflow/lite/micro/kernels/tanh.cc ****           /*free=*/nullptr,
 149:../src/tensorflow/lite/micro/kernels/tanh.cc ****           /*prepare=*/activations::TanhPrepare,
 150:../src/tensorflow/lite/micro/kernels/tanh.cc ****           /*invoke=*/activations::TanhEval,
 151:../src/tensorflow/lite/micro/kernels/tanh.cc ****           /*profiling_string=*/nullptr,
 152:../src/tensorflow/lite/micro/kernels/tanh.cc ****           /*builtin_code=*/0,
 153:../src/tensorflow/lite/micro/kernels/tanh.cc ****           /*custom_name=*/nullptr,
 154:../src/tensorflow/lite/micro/kernels/tanh.cc ****           /*version=*/0};
 324                             		.loc 1 154 24 is_stmt 0
 325 0000 FB 22 00 00 00 00       		mov.L	#.LANCHOR0, r2
 326 0006 EF F1                   		mov.L	r15, r1
 327 0008 75 43 20                		mov.L	#32, r3
 328 000b 7F 8F                   		smovf
 155:../src/tensorflow/lite/micro/kernels/tanh.cc **** }
 329                             		.loc 1 155 1
 330 000d EF F1                   		mov.L	r15, r1
 331 000f 02                      		rts
 332                             	.LFE2237:
 334                             		.section	.text._ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES
 335                             		.weak	__ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_
 337                             	__ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_:
 338                             	.LFB2710:
 339                             		.file 4 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\thi
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Copyright 2015 The Gemmlowp Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // fixedpoint.h: fixed-point arithmetic, with basic operations and
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // a few math functions such as tanh.
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #ifndef GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <algorithm>
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cassert>
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cmath>
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cstdint>
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <limits>
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include "../internal/detect_platform.h"
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** namespace gemmlowp {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Part 1: Low-level integer-arithmetic primitives.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The implementations here are generic implementations valid for
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // scalar types (e.g. std::int32_t). Architecture-specific SIMD types
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // (e.g. NEON int32x4_t) may be supported by providing
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // specializations for them in separate files.
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The purpose of these primitives is two-fold:
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be used to implement higher-level fixed-point
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    abstractions, namely the FixedPoint class and its arithmetic
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    operators.
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be directly used to implement some more involved
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    fixed-point computations, e.g. the fixed-point implementation
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    of math functions such as tanh.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Some compile-time traits around raw types to handle SIMD aspects:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // number of lanes, underlying scalar type.
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits {};
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int32_t> {
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int32_t ScalarRawType;
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int16_t> {
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int16_t ScalarRawType;
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns a SIMD value duplicating a scalar value across all lanes.
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tRawType Dup(typename FixedPointRawTypeTraits<tRawType>::ScalarRawType x) {
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return x;
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise AND
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitAnd(tIntegerType a, tIntegerType b) {
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a & b;
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise OR
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitOr(tIntegerType a, tIntegerType b) {
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a | b;
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise XOR
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitXor(tIntegerType a, tIntegerType b) {
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a ^ b;
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise NOT
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitNot(tIntegerType a) {
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return ~a;
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer addition. Not saturating. Overflow is undefined behavior.
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Add(tIntegerType a, tIntegerType b) {
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a + b;
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer multiplication. Not saturating. Overflow is undefined behavior.
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Mul(tIntegerType a, tIntegerType b) {
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a * b;
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer subtraction. Not saturating. Overflow is undefined behavior.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Sub(tIntegerType a, tIntegerType b) {
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a - b;
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer unary negative. Not saturating. Overflow is undefined behavior.
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Neg(tIntegerType a) {
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return -a;
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic left-shift, equivalent to multiplying with a power of two.
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Negative values are OK. In case of overflow, no Undefined
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Behavior, but the results are implementation-defined (in practice,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // they currently are saturated, but we make no commitment to that). The idea
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // is that the caller will want to implement the overflowing cases with
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // saturation with compare-and-mask, so we don't care about the results
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // in the overflow case, we just want to avoid undefined behavior.
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerType may be int32 or any narrower signed type.
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType, typename OffsetType>
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftLeft(tIntegerType a, OffsetType offset) {
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_a = static_cast<std::int64_t>(a);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_shifted = wide_a * (1 << offset);
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const auto max = std::numeric_limits<tIntegerType>::max();
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return wide_shifted < min
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              ? min
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic right-shift. Not rounding.
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Relying on implementation-defined, but in-practice-consistent,
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // C++ compiler behavior.
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftRight(tIntegerType a, int offset) {
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a >> offset;
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Each bit of the result is set to the corresponding bit of either then_val or
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // else_val depending on whether the corresponding bit of if_mask is set.
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to the VBSL instruction in ARM NEON.
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType SelectUsingMask(tIntegerType if_mask, tIntegerType then_val,
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                              tIntegerType else_val) {
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return BitXor(BitAnd(if_mask, then_val), BitAnd(BitNot(if_mask), else_val));
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is non-zero.
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNonZero(tIntegerType a) {
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr tIntegerType zero = 0;
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a ? BitNot(zero) : zero;
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is zero.
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfZero(tIntegerType a) {
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(!a);
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are equal.
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfEqual(tIntegerType a, tIntegerType b) {
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a == b);
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are not equal.
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNotEqual(tIntegerType a, tIntegerType b) {
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a != b);
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a > b.
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThan(tIntegerType a, tIntegerType b) {
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a > b);
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a >= b.
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThanOrEqual(tIntegerType a, tIntegerType b) {
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a >= b);
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a < b.
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThan(tIntegerType a, tIntegerType b) {
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a < b);
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a <= b.
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThanOrEqual(tIntegerType a, tIntegerType b) {
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a <= b);
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if all of the input scalars are nonzero.
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool All(tIntegerType a) {
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if any of the input scalars are nonzero.
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool Any(tIntegerType a) {
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns (a+b)/2, rounded to the nearest integer.
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to VRHADD in the ARM NEON instruction set.
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType RoundingHalfSum(IntegerType a, IntegerType b) {
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t RoundingHalfSum(std::int32_t a, std::int32_t b) {
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a64 = a;
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sum = a64 + b64;
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sign = sum >= 0 ? 1 : -1;
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t RoundingHalfSum(std::int16_t a, std::int16_t b) {
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sign = sum >= 0 ? 1 : -1;
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingAdd(IntegerType a, IntegerType b) {
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // So far this is only needed for int16.
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingAdd(std::int16_t a, std::int16_t b) {
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                std::max(static_cast<std::int32_t>(-32768), sum)));
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int8_t SaturatingAdd(std::int8_t a, std::int8_t b) {
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t a16 = a;
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t b16 = b;
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t sum = a16 + b16;
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int8_t>(std::min(
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<int16_t>(std::numeric_limits<int8_t>::max()),
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::max(static_cast<int16_t>(std::numeric_limits<int8_t>::min()), sum)));
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns a+b, saturating if the integers are 16bit or narrower,
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // otherwise just a plain addition.
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, bool Is16Bit>
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl {
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) { return Add(a, b); }
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 288:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 289:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl<IntegerType, true> {
 290:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) {
 291:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return SaturatingAdd(a, b);
 292:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 293:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 294:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 295:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType AddSaturatingIf16Bit(IntegerType a, IntegerType b) {
 296:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   using ScalarType =
 297:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 298:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16BitImpl<IntegerType, sizeof(ScalarType) == 2>::Run(a,
 299:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                                              b);
 300:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 301:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 302:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns the integer that represents the product of two fixed-point
 303:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // numbers, interpreting all integers as fixed-point values in the
 304:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1), rounding to the nearest value, and saturating
 305:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // -1 * -1 to the maximum value (since 1 is not in the half-open
 306:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1)).
 307:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 308:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // [The explanation below specializes to std::int32_t for example purpose.]
 309:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 310:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The mapping between IntegerType and the interval [-1, 1) is unique and
 311:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // implied by IntegerType, which is assumed to be signed. For example,
 312:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // for IntegerType==std::int32_t, the mapping is
 313:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   real_value = integer_value / 2^31.
 314:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // So in this case, and leaving aside rounding and saturating, this
 315:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // function computes ((a / 2^31) * (b / 2^31)) * 2^31, which simplifies to
 316:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^31.
 317:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 318:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The 'doubling' part in the name of this function comes from the fact that
 319:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // this operation is very close to a "multiply-high" operation, keeping only
 320:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // the top half bits, except that that would be effectively computing
 321:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^32,
 322:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // so here we are computing 2x that, since
 323:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   1/2^31 = 2 * 1/2^32.
 324:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The idea is to use all of the available 32 bits in the destination int32
 325:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // value.
 326:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 327:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // [End of the explanation specializing to int32.]
 328:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 329:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This is equivalent to the VQRDMULH instruction in ARM NEON.
 330:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 331:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingDoublingHighMul(IntegerType a, IntegerType b) {
 332:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 333:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 334:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 335:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 336:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 337:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function implements the same computation as the ARMv7 NEON VQRDMULH
 338:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // instruction.
 339:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 340:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t SaturatingRoundingDoublingHighMul(std::int32_t a,
 341:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int32_t b) {
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int32_t>::min();
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 350:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 351:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 352:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 353:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingRoundingDoublingHighMul(std::int16_t a,
 354:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int16_t b) {
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int16_t>::min();
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 363:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 364:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 365:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Correctly-rounded-to-nearest division by a power-of-two.
 366:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Also known as a rounding arithmetic right shift.
 367:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, typename ExponentType>
 368:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline IntegerType RoundingDivideByPOT(IntegerType x, ExponentType exponent) {
 369:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent >= 0);
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 372:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType zero = Dup<IntegerType>(0);
 373:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType one = Dup<IntegerType>(1);
 374:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType remainder = BitAnd(x, mask);
 375:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType threshold =
 376:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       Add(ShiftRight(mask, 1), BitAnd(MaskIfLessThan(x, zero), one));
 377:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return Add(ShiftRight(x, exponent),
 378:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              BitAnd(MaskIfGreaterThan(remainder, threshold), one));
 379:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 380:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 381:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns the product of a run-time integer value by a compile-time power
 382:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // of two, with either a positive exponent (equivalent to an arithmetic
 383:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // left shift, saturating) or a negative exponent (equivalent to an arithmetic
 384:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // right shift, rounding to nearest).
 385:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType,
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****           int ExponentSign = (Exponent > 0 ? 1 : Exponent < 0 ? -1 : 0)>
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct ImplSaturatingRoundingMultiplyByPOT {};
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType>
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, 0> {
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType eval(IntegerType x) { return x; }
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 393:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 394:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType>
 395:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, 1> {
 396:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType eval(IntegerType x) {
 397:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     using ScalarIntegerType =
 398:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 399:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const IntegerType min =
 400:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         Dup<IntegerType>(std::numeric_limits<ScalarIntegerType>::min());
 401:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const IntegerType max =
 402:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         Dup<IntegerType>(std::numeric_limits<ScalarIntegerType>::max());
 403:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const int ScalarIntegerTypeBits = 8 * sizeof(ScalarIntegerType);
 404:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 405:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const std::int32_t threshold =
 406:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         ((1 << (ScalarIntegerTypeBits - 1 - Exponent)) - 1);
 407:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const IntegerType positive_mask =
 408:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         MaskIfGreaterThan(x, Dup<IntegerType>(threshold));
 409:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const IntegerType negative_mask =
 410:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         MaskIfLessThan(x, Dup<IntegerType>(-threshold));
 411:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 412:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     IntegerType result = ShiftLeft(x, Exponent);
 413:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     result = SelectUsingMask(positive_mask, max, result);
 414:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     result = SelectUsingMask(negative_mask, min, result);
 415:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return result;
 416:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 417:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 418:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 419:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType>
 420:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, -1> {
 421:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType eval(IntegerType x) {
 422:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return RoundingDivideByPOT<IntegerType>(x, -Exponent);
 423:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 424:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 425:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 426:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType>
 427:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingMultiplyByPOT(IntegerType x) {
 428:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType>::eval(x);
 429:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 430:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 431:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Part 2: the FixedPoint class.
 432:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 433:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // A FixedPoint object represents a fixed-point value stored in the underlying
 434:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // integer type tRawType, if tRawType is a plain scalar integer type.
 435:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Alternatively, tRawType may be a SIMD type (e.g. NEON int32x4_t) in which
 436:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // case a FixedPoint object represents a corresponding SIMD vector of fixed
 437:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // point values.
 438:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 439:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerBits describes the range of the fixed-point format: if
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerBits == m then the range of representable values is the half-open
 441:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // interval [-2^m; 2^m) where the open boundary on the right side means that
 442:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // 2^m is not representable (how close the maximum representable value is to
 443:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // it, depends on bit-depth of tRawType).
 444:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 445:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // In "Q format notation",
 446:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   https://en.wikipedia.org/wiki/Q_(number_format)
 447:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // we are describing the format
 448:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   Qm.n
 449:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // where
 450:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   m = tIntegerBits
 451:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // and
 452:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   n = NumberOfBits(tRawType) - (m + 1)
 453:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Note that the (m + 1) in the above line is because we adopt the convention
 454:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // that we count the integer bits exclusively of the sign bit; so (m + 1) is
 455:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // the total number of integer bits inclusive of the sign bit.
 456:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 457:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Accordingly, the number of integral representable values in our range
 458:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   [-2^m ; 2^m)
 459:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // is equal to 2^(m+1).
 460:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 461:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** class FixedPoint {
 462:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****  public:
 463:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef tRawType RawType;
 464:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 465:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPointRawTypeTraits<RawType> RawTypeTraits;
 466:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef typename RawTypeTraits::ScalarRawType ScalarRawType;
 467:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 468:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kTotalBits = 8 * sizeof(ScalarRawType);
 469:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kIntegerBits = tIntegerBits;
 470:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kFractionalBits = kTotalBits - 1 - kIntegerBits;
 471:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(kIntegerBits >= 0 && kIntegerBits < kTotalBits,
 472:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                 "bad IntegerBits");
 473:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 474:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<ScalarRawType, kIntegerBits> ScalarFixedPointType;
 475:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 476:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static const ScalarRawType ScalarRawMin() {
 477:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return std::numeric_limits<ScalarRawType>::min();
 478:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 479:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 480:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static const ScalarRawType ScalarRawMax() {
 481:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return std::numeric_limits<ScalarRawType>::max();
 482:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 483:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 484:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static const ScalarRawType RawMin() {
 485:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return VectorFromScalar(ScalarRawMin());
 486:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 487:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 488:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static const ScalarRawType RawMax() {
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return VectorFromScalar(ScalarRawMax());
 490:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 492:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint FromRaw(RawType x) {
 493:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint retval;
 494:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     retval.raw() = x;
 495:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return retval;
 496:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 497:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 498:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint FromScalarRaw(ScalarRawType x) {
 499:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint retval;
 500:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     retval.raw() = Dup<RawType>(x);
 501:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return retval;
 502:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 503:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 504:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint FromScalarFixedPoint(ScalarFixedPointType x) {
 505:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return FromScalarRaw(x.raw());
 506:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 507:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 508:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   template <int Exponent>
 509:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint ConstantPOT() {
 510:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     static constexpr int kOffset = kFractionalBits + Exponent;
 511:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     static_assert(
 512:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         kOffset < 31,
 513:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         "Constant not exactly representable in this fixed-point format");
 514:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return FromScalarRaw(ScalarRawType(1) << kOffset);
 515:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 516:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 517:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint Zero() { return FromScalarRaw(0); }
 518:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 519:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint One() {
 520:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return FromScalarRaw(
 521:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         kIntegerBits == 0
 522:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****             ? ScalarRawMax()
 523:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****             : (ScalarRawType(1) << (kIntegerBits == 0 ? 0 : kFractionalBits)));
 524:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 525:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 526:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint FromDouble(double x) {
 527:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const double min_bound = static_cast<double>(ScalarRawMin());
 528:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const double max_bound = static_cast<double>(ScalarRawMax());
 529:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return FromScalarRaw(static_cast<ScalarRawType>(std::min(
 530:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         std::max(round(x * static_cast<double>(1ll << kFractionalBits)),
 531:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                  min_bound),
 532:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         max_bound)));
 533:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 534:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 535:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   RawType raw() const { return i_; }
 536:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   RawType& raw() { return i_; }
 537:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 538:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****  private:
 539:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   RawType i_;
 540:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 541:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 542:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Part 3: implementation of arithmetic operators for the
 543:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // FixedPoint class, and a few related functions.
 544:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 545:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // A FixedPoint multiplication is just a
 546:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // SaturatingRoundingDoublingHighMul operation on the underlying
 547:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // raw integer values. The IntegerBits simply add up, as is obvious
 548:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // from the fact that the range is [-2^IntegerBits, 2^IntegerBits).
 549:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits_a, int tIntegerBits_b>
 550:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits_a + tIntegerBits_b> operator*(
 551:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits_a> a,
 552:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits_b> b) {
 553:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tIntegerBits_a + tIntegerBits_b> c;
 554:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   c.raw() = SaturatingRoundingDoublingHighMul(a.raw(), b.raw());
 555:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return c;
 556:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 557:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 558:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Tweaking IntegerBits gives exact multiplication by a power of two.
 559:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <int tExponent, typename tRawType, int tIntegerBits>
 560:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tExponent + tIntegerBits> ExactMulByPot(
 561:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 562:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tExponent + tIntegerBits> c;
 563:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   c.raw() = a.raw();
 564:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return c;
 565:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 566:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 567:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // If we want to leave IntegerBits fixed, then multiplication
 568:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // by a power of two has to be saturating/rounding, not exact anymore.
 569:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <int tExponent, typename tRawType, int tIntegerBits>
 570:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits> SaturatingRoundingMultiplyByPOT(
 571:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 572:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return FixedPoint<tRawType, tIntegerBits>::FromRaw(
 573:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       SaturatingRoundingMultiplyByPOT<tExponent>(a.raw()));
 574:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 575:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 576:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Generic arithmetic operators.
 577:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 578:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define MAKE_FIXEDPOINT_UNARY_FUNC(FuncName, ImplFuncName)                     \
 579:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   template <typename tRawType, int tIntegerBits>                               \
 580:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tIntegerBits> FuncName(                                 \
 581:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       FixedPoint<tRawType, tIntegerBits> a) {                                  \
 582:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return FixedPoint<tRawType, tIntegerBits>::FromRaw(ImplFuncName(a.raw())); \
 583:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 584:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 585:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define MAKE_FIXEDPOINT_BINARY_FUNC(FuncName, ImplFuncName) \
 586:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   template <typename tRawType, int tIntegerBits>            \
 587:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tIntegerBits> FuncName(              \
 588:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       FixedPoint<tRawType, tIntegerBits> a,                 \
 589:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       FixedPoint<tRawType, tIntegerBits> b) {               \
 590:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return FixedPoint<tRawType, tIntegerBits>::FromRaw(     \
 591:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         ImplFuncName(a.raw(), b.raw()));                    \
 592:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 593:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 594:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_UNARY_FUNC(operator-, Neg)
 595:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_UNARY_FUNC(operator~, BitNot)
 596:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator+, Add)
 597:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator-, Sub)
 598:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator&, BitAnd)
 599:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator^, BitXor)
 600:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator|, BitOr)
 601:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(RoundingHalfSum, RoundingHalfSum)
 602:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 603:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #undef MAKE_FIXEDPOINT_UNARY_FUNC
 604:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #undef MAKE_FIXEDPOINT_BINARY_FUNC
 605:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 606:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define MAKE_FIXEDPOINT_UNARY_FUNC_RETURNING_RAW(FuncName)  \
 607:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   template <typename tRawType, int tIntegerBits>            \
 608:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   tRawType FuncName(FixedPoint<tRawType, tIntegerBits> a) { \
 609:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return FuncName(a.raw());                               \
 610:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 611:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 612:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(FuncName) \
 613:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   template <typename tRawType, int tIntegerBits>            \
 614:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   tRawType FuncName(FixedPoint<tRawType, tIntegerBits> a,   \
 615:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                     FixedPoint<tRawType, tIntegerBits> b) { \
 616:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return FuncName(a.raw(), b.raw());                      \
 617:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 618:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 619:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_UNARY_FUNC_RETURNING_RAW(MaskIfZero)
 620:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_UNARY_FUNC_RETURNING_RAW(MaskIfNonZero)
 621:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfEqual)
 622:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfNotEqual)
 623:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfGreaterThan)
 624:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfGreaterThanOrEqual)
 625:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfLessThan)
 626:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfLessThanOrEqual)
 627:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 628:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #undef MAKE_FIXEDPOINT_UNARY_FUNC_RETURNING_RAW
 629:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #undef MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW
 630:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 631:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 632:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits> SelectUsingMask(
 633:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     tRawType if_mask, FixedPoint<tRawType, tIntegerBits> then_val,
 634:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> else_val) {
 635:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return FixedPoint<tRawType, tIntegerBits>::FromRaw(
 636:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       SelectUsingMask(if_mask, then_val.raw(), else_val.raw()));
 637:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 638:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 639:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 640:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool operator==(FixedPoint<tRawType, tIntegerBits> a,
 641:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                 FixedPoint<tRawType, tIntegerBits> b) {
 642:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return All(MaskIfEqual(a.raw(), b.raw()));
 643:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 644:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 645:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 646:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool operator!=(FixedPoint<tRawType, tIntegerBits> a,
 647:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                 FixedPoint<tRawType, tIntegerBits> b) {
 648:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return !(a == b);
 649:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 650:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 651:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 652:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits> SaturatingAdd(
 653:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a,
 654:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> b) {
 655:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return FixedPoint<tRawType, tIntegerBits>::FromRaw(
 656:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       SaturatingAdd(a.raw(), b.raw()));
 657:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 658:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 659:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 660:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits> AddSaturatingIf16Bit(
 661:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a,
 662:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> b) {
 663:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return FixedPoint<tRawType, tIntegerBits>::FromRaw(
 664:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       AddSaturatingIf16Bit(a.raw(), b.raw()));
 665:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 666:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 667:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Conversion to floating-point.
 668:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 669:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** double ToDouble(FixedPoint<tRawType, tIntegerBits> x) {
 670:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(FixedPointRawTypeTraits<tRawType>::kLanes == 1,
 671:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                 "not applicable to SIMD types");
 672:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, tIntegerBits> F;
 673:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return x.raw() / static_cast<double>(1ll << F::kFractionalBits);
 674:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 675:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 676:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Rescale changes the number of IntegerBits and updates the underlying
 677:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // raw integer value accordingly.
 678:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <int tIntegerBitsDst, typename tRawType, int tIntegerBitsSrc>
 679:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBitsDst> Rescale(
 680:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBitsSrc> x) {
 681:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kExponent = tIntegerBitsSrc - tIntegerBitsDst;
 682:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tIntegerBitsDst> result;
 683:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   result.raw() = SaturatingRoundingMultiplyByPOT<kExponent>(x.raw());
 684:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 685:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 686:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 687:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // CheckedFixedPointConstant allows to specify fixed-point constants
 688:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // initialized as real numbers, in a way that does not compile floating-point
 689:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // arithmetic in production code, yet still checks agreement with the
 690:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // floating-point expressions when asserts are enabled.
 691:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 692:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The raw integer value provided is always a int32, encoding a 32-bit
 693:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // fixed-point value, regardless of the actual Scalar type. This allows
 694:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // writing generic code that applies just as well to the 32-bit and 16-bit
 695:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // cases. In the 16-bit case, the raw integer value is internally
 696:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // rounding-shifted by 16 bits to the right.
 697:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename FixedPointType>
 698:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline typename FixedPointType::ScalarRawType RescaleConstantInitializer(
 699:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     std::int32_t int32_value) {
 700:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef typename FixedPointType::ScalarRawType ScalarRawType;
 701:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int ScalarTypeBits = 8 * sizeof(ScalarRawType);
 702:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<ScalarRawType>(
 703:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       RoundingDivideByPOT<std::int32_t>(int32_value, 32 - ScalarTypeBits));
 704:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 705:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #ifdef GEMMLOWP_ENABLE_FIXEDPOINT_CONSTANTS_CHECKS
 706:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename FixedPointType>
 707:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPointType CheckedFixedPointConstant(std::int32_t raw_value,
 708:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                          double double_value) {
 709:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const FixedPointType result = FixedPointType::FromScalarRaw(raw_value);
 710:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   assert(result == FixedPointType::FromDouble(double_value));
 711:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 712:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 713:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(FixedPointType,                   \
 714:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                              ScalarRawInt32Value, DoubleValue) \
 715:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (gemmlowp::CheckedFixedPointConstant<FixedPointType>(                        \
 716:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       gemmlowp::RescaleConstantInitializer<FixedPointType>(                    \
 717:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****           ScalarRawInt32Value),                                                \
 718:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       DoubleValue))
 719:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 720:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #else
 721:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(FixedPointType,                   \
 722:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                              ScalarRawInt32Value, DoubleValue) \
 723:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (FixedPointType::FromScalarRaw(                                              \
 724:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       gemmlowp::RescaleConstantInitializer<FixedPointType>(                    \
 725:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****           ScalarRawInt32Value)))
 726:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #endif
 727:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 728:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Implementation of exponential function.
 729:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 730:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns exp(x) for x in [-1/4, 0).
 731:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
 732:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> exp_on_interval_between_negative_one_quarter_and_0_excl(
 733:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 734:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 0> F;
 735:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const F constant_term =
 736:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F, 1895147668, std::exp(-1.0 / 8.0));
 737:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const F constant_1_over_3 =
 738:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F, 715827883, 1.0 / 3.0);
 739:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   // We're evaluating a Taylor expansion around -1/8, so we do the change of
 740:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   // variable: x = a + 1/8.
 741:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   // In fixed-point with 0 integer bits, 1/8 is represented by 1 << 28.
 742:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   F x = a + F::template ConstantPOT<-3>();
 743:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   F x2 = x * x;
 744:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   F x3 = x2 * x;
 745:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   F x4 = x2 * x2;
 746:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   F x4_over_4 = SaturatingRoundingMultiplyByPOT<-2>(x4);
 747:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   F x4_over_24_plus_x3_over_6_plus_x2_over_2 =
 748:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       SaturatingRoundingMultiplyByPOT<-1>(
 749:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****           ((x4_over_4 + x3) * constant_1_over_3) + x2);
 750:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16Bit(
 751:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       constant_term,
 752:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       constant_term * (x + x4_over_24_plus_x3_over_6_plus_x2_over_2));
 753:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 754:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 755:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns exp(x) for x < 0.
 756:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 757:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> exp_on_negative_values(
 758:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 759:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, tIntegerBits> InputF;
 760:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 0> ResultF;
 761:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kFractionalBits = InputF::kFractionalBits;
 762:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kIntegerBits = InputF::kIntegerBits;
 763:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const InputF kOneQuarter = InputF::template ConstantPOT<-2>();
 764:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   InputF mask = kOneQuarter - InputF::FromScalarRaw(1);
 765:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   InputF a_mod_quarter_minus_one_quarter = (a & mask) - kOneQuarter;
 766:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   ResultF result = exp_on_interval_between_negative_one_quarter_and_0_excl(
 767:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       Rescale<0>(a_mod_quarter_minus_one_quarter));
 768:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   tRawType remainder = (a_mod_quarter_minus_one_quarter - a).raw();
 769:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 770:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_EXP_BARREL_SHIFTER(Exponent, FixedPointMultiplier)         \
 771:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   if (kIntegerBits > Exponent) {                                            \
 772:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const ResultF kMultiplier = GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(       \
 773:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         ResultF, FixedPointMultiplier, std::exp(-std::pow(2.0, Exponent))); \
 774:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     static constexpr int kShiftAmount =                                     \
 775:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         kIntegerBits > Exponent ? kFractionalBits + Exponent : 0;           \
 776:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     result = SelectUsingMask(                                               \
 777:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         MaskIfNonZero(BitAnd(remainder, Dup<tRawType>(1 << kShiftAmount))), \
 778:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         result * kMultiplier, result);                                      \
 779:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 780:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 781:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   // Constants below are Q0 representations of negative exp fractionals:
 782:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(-2, 1672461947);  // exp(-1/4)
 783:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(-1, 1302514674);  // exp(-1/2)
 784:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+0, 790015084);   // exp(-1)
 785:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+1, 290630308);   // exp(-2)
 786:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+2, 39332535);    // exp(-4)
 787:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+3, 720401);      // exp(-8)
 788:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+4, 242);         // exp(-16)
 789:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 790:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #undef GEMMLOWP_EXP_BARREL_SHIFTER
 791:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 792:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int clampB = kIntegerBits > 5 ? 36 - kIntegerBits : 0;
 793:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   if (kIntegerBits > 5) {
 794:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     const InputF clamp =
 795:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(InputF, -(1 << clampB), -32.0);
 796:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     result = SelectUsingMask(MaskIfLessThan(a, clamp), ResultF::Zero(), result);
 797:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 798:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 799:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   result = SelectUsingMask(MaskIfZero(a), ResultF::One(), result);
 800:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 801:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 802:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 803:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Implementation of tanh: (1 - exp(-2x)) / (1 + exp(-2x)).
 804:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 805:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns (1 - x) / (1 + x) for x in (0, 1).
 806:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
 807:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> one_minus_x_over_one_plus_x_for_x_in_0_1(
 340                             		.loc 4 807 25 is_stmt 1
 341                             	.LVL39:
 342 0000 6E 7B                   		pushm	r7-r11
 343                             	.LCFI2:
 344                             	.LVL40:
 345                             	.LBB2418:
 346                             	.LBB2419:
 347                             	.LBB2420:
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 348                             		.loc 4 238 3
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 349                             		.loc 4 238 16 is_stmt 0
 350 0002 FD BF 1F                		shar	#31, r1, r15
 351                             	.LVL41:
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sum = a64 + b64;
 352                             		.loc 4 239 3 is_stmt 1
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sign = sum >= 0 ? 1 : -1;
 353                             		.loc 4 240 3
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 354                             		.loc 4 241 3
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 355                             		.loc 4 241 32 is_stmt 0
 356 0005 74 01 00 00 00 80       		cmp	#-2147483648, r1
 357 000b 3A FE 03                		beq	.L101
 358                             		.balign 8,3,1
 359                             	.L86:
 360                             	.LVL42:
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 361                             		.loc 4 242 3 is_stmt 1
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 362                             		.loc 4 242 41 is_stmt 0
 363 000e EF FE                   		mov.L	r15, r14
 364 0010 70 15 00 00 00 80       		add	#-2147483648, r1, r5
 365 0016 FD 74 2E 00             		adc	#0, r14
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 366                             		.loc 4 242 49
 367 001a FD DF EA                		shll	#31, r14, r10
 368 001d FD 81 5F                		shlr	#1, r5, r15
 369                             	.LVL43:
 370 0020 6A 1E                   		shar	#1, r14
 371 0022 57 AF                   		or	r10, r15
 372                             	.LVL44:
 373                             	.LBE2420:
 374                             	.LBE2419:
 375                             	.LBE2418:
 376                             	.LBB2425:
 377                             	.LBB2426:
 378                             	.LBB2427:
 379                             	.LBB2428:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 380                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 381                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 382                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 383                             		.loc 4 345 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 384                             		.loc 4 345 16 is_stmt 0
 385 0024 FB A2 C4 C3 C3 C3       		mov.L	#-1010580540, r10
 386 002a 4F EA                   		mul	r14, r10
 387 002c FB 42 C4 C3 C3 C3       		mov.L	#-1010580540, r4
 388 0032 FC 1F F4                		emulu	r15, r4
 389 0035 43 FA                   		sub	r15, r10
 390 0037 4B A5                   		add	r10, r5
 391                             	.LVL45:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 392                             		.loc 4 346 3 is_stmt 1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 393                             		.loc 4 346 35 is_stmt 0
 394 0039 FF 5A 54                		or	r5, r4, r10
 395 003c 61 0A                   		cmp	#0, r10
 396 003e FB 32 01 00 00 C0       		mov.L	#-1073741823, r3
 397 0044 FD 70 E3 00 00 00 40    		stz	#0x40000000, r3
 398 004b FB A6 FF                		mov.L	#-1, r10
 399 004e FD 74 EA 00             		stz	#0, r10
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 400                             		.loc 4 347 3 is_stmt 1
 401                             	.LVL46:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 402                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 403                             		.loc 4 348 49 is_stmt 0
 404 0052 FF 22 43                		add	r4, r3, r2
 405 0055 FC 0B 5A                		adc	r5, r10
 406                             	.LVL47:
 407 0058 26 05 38 F7 02          		bn	.L102
 408                             	.LVL48:
 409                             		.balign 8,3,1
 410                             	.L71:
 411 005d 6C 1A                   		shll	#1, r10
 412 005f 69 F2                   		shlr	#31, r2
 413 0061 57 A2                   		or	r10, r2
 414                             	.LBE2428:
 415                             	.LBE2427:
 416                             	.LBE2426:
 417                             	.LBE2425:
 418                             	.LBB2432:
 419                             	.LBB2433:
 420                             	.LBB2434:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 421                             		.loc 4 95 14
 422 0063 70 25 5A 5A 5A 5A       		add	#0x5a5a5a5a, r2, r5
 423                             	.LVL49:
 424                             	.LBE2434:
 425                             	.LBE2433:
 426                             	.LBE2432:
 427                             	.LBB2437:
 428                             	.LBB2438:
 429                             	.LBB2439:
 430                             	.LBB2440:
 431                             	.LBB2441:
 432                             	.LBB2442:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 433                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 434                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 435                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 436                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 437                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 438                             		.loc 4 347 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 439                             		.loc 4 349 3
 440                             	.LBE2442:
 441                             	.LBE2441:
 442                             	.LBE2440:
 443                             	.LBE2439:
 444                             	.LBB2458:
 445                             	.LBB2459:
 446                             	.LBB2460:
 447                             	.LBB2461:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 448                             		.loc 4 342 3
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 449                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 450                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 451                             		.loc 4 345 3
 452                             	.LBE2461:
 453                             	.LBE2460:
 454                             	.LBE2459:
 455                             	.LBE2458:
 456                             	.LBB2492:
 457                             	.LBB2453:
 458                             	.LBB2448:
 459                             	.LBB2443:
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 460                             		.loc 4 344 16 is_stmt 0
 461 0069 FD BF 5A                		shar	#31, r5, r10
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 462                             		.loc 4 345 16
 463 006c FF 34 5E                		mul	r5, r14, r4
 464 006f EF 57                   		mov.L	r5, r7
 465 0071 FC 1F F7                		emulu	r15, r7
 466 0074 EF 83                   		mov.L	r8, r3
 467 0076 4F FA                   		mul	r15, r10
 468 0078 4B 4A                   		add	r4, r10
 469 007a 4B A3                   		add	r10, r3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 470                             		.loc 4 348 40
 471 007c 70 7A 00 00 00 40       		add	#0x40000000, r7, r10
 472 0082 FD 74 23 00             		adc	#0, r3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 473                             		.loc 4 348 49
 474 0086 6C 13                   		shll	#1, r3
 475 0088 FD 9F A4                		shlr	#31, r10, r4
 476 008b 57 34                   		or	r3, r4
 477                             	.LBE2443:
 478                             	.LBE2448:
 479                             	.LBE2453:
 480                             	.LBE2492:
 481                             	.LBB2493:
 482                             	.LBB2494:
 483                             	.LBB2495:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 484                             		.loc 4 107 14
 485 008d FB A2 00 00 00 20       		mov.L	#0x20000000, r10
 486 0093 43 4A                   		sub	r4, r10
 487                             	.LBE2495:
 488                             	.LBE2494:
 489                             	.LBE2493:
 490                             	.LBB2500:
 491                             	.LBB2482:
 492                             	.LBB2472:
 493                             	.LBB2462:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 494                             		.loc 4 345 16
 495 0095 FC 1B 5A                		emul	r5, r10
 496                             	.LVL50:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 497                             		.loc 4 346 3 is_stmt 1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 498                             		.loc 4 346 35 is_stmt 0
 499 0098 71 B1 00                		add	#0, r11, r1
 500                             	.LVL51:
 501 009b 28 05 38 51 02          		blt	.L97
 502                             	.LVL52:
 503                             		.balign 8,3,1
 504                             	.L29:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 505                             		.loc 4 347 3 is_stmt 1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 506                             		.loc 4 348 40 is_stmt 0
 507 00a0 EF B7                   		mov.L	r11, r7
 508 00a2 70 A4 00 00 00 40       		add	#0x40000000, r10, r4
 509 00a8 FD 74 27 00             		adc	#0, r7
 510 00ac EF 7A                   		mov.L	r7, r10
 511                             	.LVL53:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 512                             		.loc 4 348 49
 513 00ae 6C 1A                   		shll	#1, r10
 514 00b0 69 F4                   		shlr	#31, r4
 515 00b2 57 A4                   		or	r10, r4
 516                             	.LVL54:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 517                             		.loc 4 349 3 is_stmt 1
 518                             	.LBE2462:
 519                             	.LBE2472:
 520                             	.LBE2482:
 521                             	.LBE2500:
 522                             	.LBB2501:
 523                             	.LBB2502:
 524                             	.LBB2503:
 525                             	.LBB2504:
 526                             	.LBB2505:
 527                             	.LBB2506:
 528                             	.LBB2507:
 529                             	.LBB2508:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 530                             		.loc 4 159 12 is_stmt 0
 531 00b4 74 04 01 00 00 E0       		cmp	#-536870911, r4
 532 00ba FC DB A9                		sclt.L	r10
 533 00bd FC 07 A2                		neg	r10, r2
 534 00c0 FD C2 43                		shll	#2, r4, r3
 535                             	.LVL55:
 536 00c3 74 22 00 00 00 80       		and #-2147483648, r2
 537 00c9 60 1A                   		sub	#1, r10
 538                             	.LVL56:
 539                             		.balign 8,3,1
 540                             	.L37:
 541                             	.LBE2508:
 542                             	.LBE2507:
 543                             	.LBE2506:
 544                             	.LBB2519:
 545                             	.LBB2520:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 546                             		.loc 4 133 35
 547 00cb EF 34                   		mov.L	r3, r4
 548 00cd FC 13 00                		.balign 8,3,4
 549                             	.L35:
 550                             	.LVL57:
 551                             	.LBE2520:
 552                             	.LBE2519:
 553                             	.LBB2528:
 554                             	.LBB2529:
 555                             	.LBB2530:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 556                             		.loc 4 71 14
 557 00d0 FF 43 4A                		and	r4, r10, r3
 558                             	.LBE2530:
 559                             	.LBE2529:
 560                             	.LBB2533:
 561                             	.LBB2534:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 562                             		.loc 4 83 14
 563 00d3 FC 37 23                		xor	r2, r3
 564                             	.LVL58:
 565                             	.LBE2534:
 566                             	.LBE2533:
 567                             	.LBE2528:
 568                             	.LBE2505:
 569                             	.LBE2504:
 570                             	.LBE2503:
 571                             	.LBE2502:
 572                             	.LBE2501:
 573                             	.LBB2596:
 574                             	.LBB2597:
 575                             	.LBB2598:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 576                             		.loc 4 95 14
 577 00d6 FF 22 53                		add	r5, r3, r2
 578                             	.LVL59:
 579                             	.LBE2598:
 580                             	.LBE2597:
 581                             	.LBE2596:
 582                             	.LBB2603:
 583                             	.LBB2454:
 584                             	.LBB2449:
 585                             	.LBB2444:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 586                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 587                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 588                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 589                             		.loc 4 345 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 590                             		.loc 4 344 16 is_stmt 0
 591 00d9 FD BF 2A                		shar	#31, r2, r10
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 592                             		.loc 4 345 16
 593 00dc FF 33 2E                		mul	r2, r14, r3
 594                             	.LVL60:
 595 00df EF 27                   		mov.L	r2, r7
 596 00e1 FC 1F F7                		emulu	r15, r7
 597 00e4 EF 85                   		mov.L	r8, r5
 598 00e6 4F FA                   		mul	r15, r10
 599 00e8 4B 3A                   		add	r3, r10
 600 00ea 4B A5                   		add	r10, r5
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 601                             		.loc 4 346 3 is_stmt 1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 602                             		.loc 4 346 35 is_stmt 0
 603 00ec FB 12 01 00 00 C0       		mov.L	#-1073741823, r1
 604                             	.LVL61:
 605 00f2 27 08                   		bn 1f
 606 00f4 FB 12 00 00 00 40       		mov #0x40000000, r1
 607                             	1:
 608 00fa FB 36 FF                		mov.L	#-1, r3
 609 00fd 27 04                   		bn 1f
 610 00ff 66 03                   		mov #0, r3
 611                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 612                             		.loc 4 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 613                             		.loc 4 349 3
 614                             	.LVL62:
 615                             	.LBE2444:
 616                             	.LBE2449:
 617                             	.LBE2454:
 618                             	.LBE2603:
 619                             	.LBB2604:
 620                             	.LBB2483:
 621                             	.LBB2473:
 622                             	.LBB2463:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 623                             		.loc 4 342 3
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 624                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 625                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 626                             		.loc 4 345 3
 627                             	.LBE2463:
 628                             	.LBE2473:
 629                             	.LBE2483:
 630                             	.LBE2604:
 631                             	.LBB2605:
 632                             	.LBB2455:
 633                             	.LBB2450:
 634                             	.LBB2445:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 635                             		.loc 4 348 49 is_stmt 0
 636 0101 FF 2A 71                		add	r7, r1, r10
 637 0104 FC 0B 35                		adc	r3, r5
 638 0107 26 0E                   		bpz	.L40
 639 0109 70 A1 FF FF FF 7F       		add	#0x7fffffff, r10, r1
 640 010f FD 74 25 00             		adc	#0, r5
 641 0113 EF 1A                   		mov.L	r1, r10
 642                             		.balign 8,3,1
 643                             	.L40:
 644 0115 6C 15                   		shll	#1, r5
 645 0117 FD 9F A4                		shlr	#31, r10, r4
 646 011a 57 54                   		or	r5, r4
 647                             	.LBE2445:
 648                             	.LBE2450:
 649                             	.LBE2455:
 650                             	.LBE2605:
 651                             	.LBB2606:
 652                             	.LBB2498:
 653                             	.LBB2496:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 654                             		.loc 4 107 14
 655 011c FB A2 00 00 00 20       		mov.L	#0x20000000, r10
 656 0122 43 4A                   		sub	r4, r10
 657                             	.LBE2496:
 658                             	.LBE2498:
 659                             	.LBE2606:
 660                             	.LBB2607:
 661                             	.LBB2484:
 662                             	.LBB2474:
 663                             	.LBB2464:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 664                             		.loc 4 345 16
 665 0124 FC 1B 2A                		emul	r2, r10
 666                             	.LVL63:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 667                             		.loc 4 346 3 is_stmt 1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 668                             		.loc 4 348 40 is_stmt 0
 669 0127 EF B1                   		mov.L	r11, r1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 670                             		.loc 4 346 35
 671 0129 61 0B                   		cmp	#0, r11
 672 012b 28 05 38 7B 02          		blt	.L103
 673                             	.LVL64:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 674                             		.loc 4 347 3 is_stmt 1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 675                             		.loc 4 348 40 is_stmt 0
 676 0130 70 A4 00 00 00 40       		add	#0x40000000, r10, r4
 677 0136 FD 74 21 00             		adc	#0, r1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 678                             		.loc 4 348 49
 679 013a FD C1 1A                		shll	#1, r1, r10
 680                             	.LVL65:
 681 013d 69 F4                   		shlr	#31, r4
 682 013f 57 A4                   		or	r10, r4
 683 0141 6B F1                   		shar	#31, r1
 684                             	.LVL66:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 685                             		.loc 4 349 3 is_stmt 1
 686 0143 FF 25 44                		add	r4, r4, r5
 687 0146 FC 0B 11                		adc	r1, r1
 688 0149 FF 2A 55                		add	r5, r5, r10
 689 014c FC 0B 11                		adc	r1, r1
 690                             	.LBE2464:
 691                             	.LBE2474:
 692                             	.LBE2484:
 693                             	.LBE2607:
 694                             	.LBB2608:
 695                             	.LBB2588:
 696                             	.LBB2580:
 697                             	.LBB2572:
 698                             	.LBB2564:
 699                             	.LBB2541:
 700                             	.LBB2542:
 701                             	.LBB2543:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 702                             		.loc 4 159 12 is_stmt 0
 703 014f 74 04 FF FF FF 1F       		cmp	#0x1fffffff, r4
 704 0155 2B 05 38 F2 02          		bgt	.L104
 705                             	.LVL67:
 706                             	.LBE2543:
 707                             	.LBE2542:
 708                             	.LBE2541:
 709                             	.LBB2548:
 710                             	.LBB2514:
 711                             	.LBB2509:
 712 015a 74 04 01 00 00 E0       		cmp	#-536870911, r4
 713 0160 FC DB 49                		sclt.L	r4
 714                             	.LVL68:
 715 0163 FC 07 45                		neg	r4, r5
 716 0166 60 14                   		sub	#1, r4
 717                             	.LVL69:
 718 0168 FB 32 00 00 00 80       		mov.L	#-2147483648, r3
 719 016e 53 53                   		and	r5, r3
 720                             	.LVL70:
 721                             		.balign 8,3,2
 722                             	.L99:
 723 0170 FB B6 FF                		mov.L	#-1, r11
 724 0173 66 05                   		mov.L	#0, r5
 725                             	.LVL71:
 726                             		.balign 8,3,1
 727                             	.L50:
 728                             	.LBE2509:
 729                             	.LBE2514:
 730                             	.LBE2548:
 731                             	.LBB2549:
 732                             	.LBB2521:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 733                             		.loc 4 133 35
 734 0175 61 01                   		cmp	#0, r1
 735 0177 2B 05 38 F7 01          		bgt	.L48
 736 017c 3A E4 01                		beq	.L105
 737 017f 03                      		.balign 8,3,1
 738                             	.L88:
 739 0180 53 BA                   		and	r11, r10
 740 0182 FC 37 A5                		xor	r10, r5
 741                             		.balign 8,3,1
 742                             	.L46:
 743                             	.LVL72:
 744                             	.LBE2521:
 745                             	.LBE2549:
 746                             	.LBB2550:
 747                             	.LBB2537:
 748                             	.LBB2531:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 749                             		.loc 4 71 14
 750 0185 53 45                   		and	r4, r5
 751                             	.LVL73:
 752                             	.LBE2531:
 753                             	.LBE2537:
 754                             	.LBB2538:
 755                             	.LBB2535:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 756                             		.loc 4 83 14
 757 0187 FC 37 35                		xor	r3, r5
 758                             	.LVL74:
 759                             	.LBE2535:
 760                             	.LBE2538:
 761                             	.LBE2550:
 762                             	.LBE2564:
 763                             	.LBE2572:
 764                             	.LBE2580:
 765                             	.LBE2588:
 766                             	.LBE2608:
 767                             	.LBB2609:
 768                             	.LBB2601:
 769                             	.LBB2599:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 770                             		.loc 4 95 14
 771 018a FF 23 25                		add	r2, r5, r3
 772                             	.LVL75:
 773                             	.LBE2599:
 774                             	.LBE2601:
 775                             	.LBE2609:
 776                             	.LBB2610:
 777                             	.LBB2456:
 778                             	.LBB2451:
 779                             	.LBB2446:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 780                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 781                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 782                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 783                             		.loc 4 345 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 784                             		.loc 4 344 16 is_stmt 0
 785 018d FD BF 35                		shar	#31, r3, r5
 786                             	.LVL76:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 787                             		.loc 4 345 16
 788 0190 4F 3E                   		mul	r3, r14
 789                             	.LVL77:
 790 0192 EF 31                   		mov.L	r3, r1
 791 0194 FC 1F F1                		emulu	r15, r1
 792 0197 EF 2B                   		mov.L	r2, r11
 793 0199 4F 5F                   		mul	r5, r15
 794 019b 4B FE                   		add	r15, r14
 795 019d 4B EB                   		add	r14, r11
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 796                             		.loc 4 346 3 is_stmt 1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 797                             		.loc 4 346 35 is_stmt 0
 798 019f FB 42 01 00 00 C0       		mov.L	#-1073741823, r4
 799 01a5 27 08                   		bn 1f
 800 01a7 FB 42 00 00 00 40       		mov #0x40000000, r4
 801                             	1:
 802 01ad FB 56 FF                		mov.L	#-1, r5
 803 01b0 27 04                   		bn 1f
 804 01b2 66 05                   		mov #0, r5
 805                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 806                             		.loc 4 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 807                             		.loc 4 349 3
 808                             	.LVL78:
 809                             	.LBE2446:
 810                             	.LBE2451:
 811                             	.LBE2456:
 812                             	.LBE2610:
 813                             	.LBB2611:
 814                             	.LBB2485:
 815                             	.LBB2475:
 816                             	.LBB2465:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 817                             		.loc 4 342 3
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 818                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 819                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 820                             		.loc 4 345 3
 821                             	.LBE2465:
 822                             	.LBE2475:
 823                             	.LBE2485:
 824                             	.LBE2611:
 825                             	.LBB2612:
 826                             	.LBB2457:
 827                             	.LBB2452:
 828                             	.LBB2447:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 829                             		.loc 4 348 49 is_stmt 0
 830 01b4 EF B7                   		mov.L	r11, r7
 831 01b6 FF 2E 14                		add	r1, r4, r14
 832 01b9 FC 0B 57                		adc	r5, r7
 833 01bc EF 7A                   		mov.L	r7, r10
 834 01be 26 0E                   		bpz	.L54
 835 01c0 70 E2 FF FF FF 7F       		add	#0x7fffffff, r14, r2
 836 01c6 FD 74 2A 00             		adc	#0, r10
 837 01ca EF 2E                   		mov.L	r2, r14
 838                             		.balign 8,3,1
 839                             	.L54:
 840 01cc 6C 1A                   		shll	#1, r10
 841 01ce FD 9F E5                		shlr	#31, r14, r5
 842 01d1 57 A5                   		or	r10, r5
 843                             	.LBE2447:
 844                             	.LBE2452:
 845                             	.LBE2457:
 846                             	.LBE2612:
 847                             	.LBB2613:
 848                             	.LBB2499:
 849                             	.LBB2497:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 850                             		.loc 4 107 14
 851 01d3 FB E2 00 00 00 20       		mov.L	#0x20000000, r14
 852 01d9 43 5E                   		sub	r5, r14
 853                             	.LBE2497:
 854                             	.LBE2499:
 855                             	.LBE2613:
 856                             	.LBB2614:
 857                             	.LBB2486:
 858                             	.LBB2476:
 859                             	.LBB2466:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 860                             		.loc 4 345 16
 861 01db FC 1B 3E                		emul	r3, r14
 862                             	.LVL79:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 863                             		.loc 4 346 3 is_stmt 1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 864                             		.loc 4 346 35 is_stmt 0
 865 01de 71 F2 00                		add	#0, r15, r2
 866 01e1 28 5F                   		bge	.L56
 867                             	.LVL80:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 868                             		.loc 4 347 3 is_stmt 1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 869                             		.loc 4 348 49 is_stmt 0
 870 01e3 70 EA 01 00 00 C0       		add	#-1073741823, r14, r10
 871 01e9 FD 74 22 FF             		adc	#-1, r2
 872 01ed 26 0E                   		bpz	.L58
 873 01ef 70 A7 FF FF FF 7F       		add	#0x7fffffff, r10, r7
 874 01f5 FD 74 22 00             		adc	#0, r2
 875 01f9 EF 7A                   		mov.L	r7, r10
 876                             		.balign 8,3,2
 877                             	.L58:
 878 01fb FD C1 25                		shll	#1, r2, r5
 879 01fe 69 FA                   		shlr	#31, r10
 880 0200 57 5A                   		or	r5, r10
 881 0202 6B F2                   		shar	#31, r2
 882                             	.LVL81:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 883                             		.loc 4 349 3 is_stmt 1
 884                             	.LBE2466:
 885                             	.LBE2476:
 886                             	.LBE2486:
 887                             	.LBE2614:
 888                             	.LBB2615:
 889                             	.LBB2589:
 890                             	.LBB2581:
 891                             	.LBB2573:
 892                             	.LBB2565:
 893                             	.LBB2551:
 894                             	.LBB2515:
 895                             	.LBB2510:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 896                             		.loc 4 159 12 is_stmt 0
 897 0204 74 0A 01 00 00 E0       		cmp	#-536870911, r10
 898 020a FC DB 49                		sclt.L	r4
 899 020d FF 25 AA                		add	r10, r10, r5
 900 0210 FC 0B 22                		adc	r2, r2
 901 0213 FF 2B 55                		add	r5, r5, r11
 902 0216 FC 0B 22                		adc	r2, r2
 903                             	.LVL82:
 904 0219 FC 07 45                		neg	r4, r5
 905 021c 60 14                   		sub	#1, r4
 906                             	.LVL83:
 907 021e FB A2 00 00 00 80       		mov.L	#-2147483648, r10
 908                             	.LVL84:
 909 0224 53 5A                   		and	r5, r10
 910                             	.LBE2510:
 911                             	.LBE2515:
 912                             	.LBE2551:
 913                             	.LBB2552:
 914                             	.LBB2522:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 915                             		.loc 4 132 14
 916 0226 75 02 FF                		cmp	#-1, r2
 917 0229 29 0F                   		blt	.L82
 918 022b 21 55                   		bne	.L100
 919 022d 74 0B 00 00 00 80       		cmp	#-2147483648, r11
 920 0233 22 4D                   		bgeu	.L100
 921 0235 FC 13 00                		.balign 8,3,5
 922                             	.L82:
 923 0238 FB 52 00 00 00 80       		mov.L	#-2147483648, r5
 924 023e 2E 57                   		bra	.L60
 925                             	.LVL85:
 926                             	.L56:
 927                             	.LBE2522:
 928                             	.LBE2552:
 929                             	.LBE2565:
 930                             	.LBE2573:
 931                             	.LBE2581:
 932                             	.LBE2589:
 933                             	.LBE2615:
 934                             	.LBB2616:
 935                             	.LBB2487:
 936                             	.LBB2477:
 937                             	.LBB2467:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 938                             		.loc 4 347 3 is_stmt 1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 939                             		.loc 4 348 40 is_stmt 0
 940 0240 70 E4 00 00 00 40       		add	#0x40000000, r14, r4
 941 0246 FD 74 22 00             		adc	#0, r2
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 942                             		.loc 4 348 49
 943 024a FD C1 2A                		shll	#1, r2, r10
 944 024d 69 F4                   		shlr	#31, r4
 945 024f 57 A4                   		or	r10, r4
 946 0251 6B F2                   		shar	#31, r2
 947                             	.LVL86:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 948                             		.loc 4 349 3 is_stmt 1
 949 0253 FF 2A 44                		add	r4, r4, r10
 950 0256 FC 0B 22                		adc	r2, r2
 951 0259 FF 2B AA                		add	r10, r10, r11
 952 025c FC 0B 22                		adc	r2, r2
 953                             	.LBE2467:
 954                             	.LBE2477:
 955                             	.LBE2487:
 956                             	.LBE2616:
 957                             	.LBB2617:
 958                             	.LBB2590:
 959                             	.LBB2582:
 960                             	.LBB2574:
 961                             	.LBB2566:
 962                             	.LBB2553:
 963                             	.LBB2546:
 964                             	.LBB2544:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 965                             		.loc 4 159 12 is_stmt 0
 966 025f 74 04 FF FF FF 1F       		cmp	#0x1fffffff, r4
 967 0265 2B 05 38 F2 01          		bgt	.L106
 968                             	.LVL87:
 969                             	.LBE2544:
 970                             	.LBE2546:
 971                             	.LBE2553:
 972                             	.LBB2554:
 973                             	.LBB2516:
 974                             	.LBB2511:
 975 026a 74 04 01 00 00 E0       		cmp	#-536870911, r4
 976 0270 FC DB 49                		sclt.L	r4
 977                             	.LVL88:
 978 0273 FC 07 45                		neg	r4, r5
 979 0276 60 14                   		sub	#1, r4
 980                             	.LVL89:
 981 0278 FB A2 00 00 00 80       		mov.L	#-2147483648, r10
 982 027e 53 5A                   		and	r5, r10
 983                             	.LVL90:
 984                             		.balign 8,3,2
 985                             	.L100:
 986 0280 FB 16 FF                		mov.L	#-1, r1
 987 0283 66 05                   		mov.L	#0, r5
 988                             	.LVL91:
 989                             		.balign 8,3,1
 990                             	.L64:
 991                             	.LBE2511:
 992                             	.LBE2516:
 993                             	.LBE2554:
 994                             	.LBB2555:
 995                             	.LBB2523:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 996                             		.loc 4 133 35
 997 0285 61 02                   		cmp	#0, r2
 998 0287 2B 05 38 17 01          		bgt	.L62
 999 028c 3A 05 01                		beq	.L107
 1000 028f 03                      		.balign 8,3,1
 1001                             	.L90:
 1002 0290 53 B1                   		and	r11, r1
 1003 0292 FC 37 15                		xor	r1, r5
 1004                             		.balign 8,3,1
 1005                             	.L60:
 1006                             	.LVL92:
 1007                             	.LBE2523:
 1008                             	.LBE2555:
 1009                             	.LBB2556:
 1010                             	.LBB2539:
 1011                             	.LBB2532:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1012                             		.loc 4 71 14
 1013 0295 53 45                   		and	r4, r5
 1014                             	.LVL93:
 1015                             	.LBE2532:
 1016                             	.LBE2539:
 1017                             	.LBB2540:
 1018                             	.LBB2536:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1019                             		.loc 4 83 14
 1020 0297 FC 37 A5                		xor	r10, r5
 1021                             	.LVL94:
 1022                             	.LBE2536:
 1023                             	.LBE2540:
 1024                             	.LBE2556:
 1025                             	.LBE2566:
 1026                             	.LBE2574:
 1027                             	.LBE2582:
 1028                             	.LBE2590:
 1029                             	.LBE2617:
 1030                             	.LBB2618:
 1031                             	.LBB2602:
 1032                             	.LBB2600:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1033                             		.loc 4 95 14
 1034 029a 4B 35                   		add	r3, r5
 1035                             	.LVL95:
 1036                             	.LBE2600:
 1037                             	.LBE2602:
 1038                             	.LBE2618:
 1039                             	.LBE2438:
 1040                             	.LBE2437:
 1041                             	.LBB2634:
 1042                             	.LBB2635:
 1043                             	.LBB2636:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1044                             		.loc 4 107 14
 1045 029c 70 55 00 00 00 E0       		add	#-536870912, r5
 1046                             	.LVL96:
 1047 02a2 FD BF 5A                		shar	#31, r5, r10
 1048 02a5 FF 24 55                		add	r5, r5, r4
 1049 02a8 FC 0B AA                		adc	r10, r10
 1050 02ab FF 22 44                		add	r4, r4, r2
 1051 02ae FC 0B AA                		adc	r10, r10
 1052                             	.LBE2636:
 1053                             	.LBE2635:
 1054                             	.LBE2634:
 1055                             	.LBB2637:
 1056                             	.LBB2638:
 1057                             	.LBB2639:
 1058                             	.LBB2640:
 1059                             	.LBB2641:
 1060                             	.LBB2642:
 1061                             	.LBB2643:
 1062                             	.LBB2644:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1063                             		.loc 4 159 12
 1064 02b1 74 05 FF FF FF 1F       		cmp	#0x1fffffff, r5
 1065 02b7 2B 05 38 71 01          		bgt	.L66
 1066                             	.LVL97:
 1067                             	.LBE2644:
 1068                             	.LBE2643:
 1069                             	.LBE2642:
 1070                             	.LBB2645:
 1071                             	.LBB2646:
 1072                             	.LBB2647:
 1073 02bc 74 05 01 00 00 E0       		cmp	#-536870911, r5
 1074 02c2 FC DB 59                		sclt.L	r5
 1075                             	.LVL98:
 1076 02c5 FC 07 53                		neg	r5, r3
 1077                             	.LVL99:
 1078 02c8 60 15                   		sub	#1, r5
 1079 02ca 74 23 00 00 00 80       		and #-2147483648, r3
 1080                             	.LVL100:
 1081                             	.LBE2647:
 1082                             	.LBE2646:
 1083                             	.LBE2645:
 1084                             	.LBB2648:
 1085                             	.LBB2649:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1086                             		.loc 4 132 14
 1087 02d0 75 0A FF                		cmp	#-1, r10
 1088 02d3 28 05 38 B3 00          		blt	.L91
 1089 02d8 3A A0 00                		beq	.L108
 1090                             		.balign 8,3,2
 1091                             	.L84:
 1092 02db FB 46 FF                		mov.L	#-1, r4
 1093 02de 66 0A                   		mov.L	#0, r10
 1094                             	.LVL101:
 1095                             		.balign 8,3,4
 1096                             	.L67:
 1097 02e0 FF 41 24                		and	r2, r4, r1
 1098 02e3 FC 37 A1                		xor	r10, r1
 1099 02e6 53 51                   		and	r5, r1
 1100 02e8 FC 37 31                		xor	r3, r1
 1101                             		.balign 8,3,2
 1102                             	.L92:
 1103                             	.LBE2649:
 1104                             	.LBE2648:
 1105                             	.LBE2641:
 1106                             	.LBE2640:
 1107                             	.LBE2639:
 1108                             	.LBE2638:
 1109                             	.LBE2637:
 808:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 809:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 0> F0;
 810:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 2> F2;
 811:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   F0 half_denominator = RoundingHalfSum(a, F0::One());
 812:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   // Newton-Raphson division
 813:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   // https://en.wikipedia.org/wiki/Division_algorithm#Newton.E2.80.93Raphson_division
 814:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   // Refer to that page for the logic behind the 48/17 and 32/17 constants.
 815:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const F2 constant_48_over_17 =
 816:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F2, 1515870810, 48.0 / 17.0);
 817:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const F2 constant_neg_32_over_17 =
 818:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F2, -1010580540, -32.0 / 17.0);
 819:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   F2 x = constant_48_over_17 + half_denominator * constant_neg_32_over_17;
 820:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   for (int i = 0; i < 3; i++) {
 821:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     F2 half_denominator_times_x = half_denominator * x;
 822:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     F2 one_minus_half_denominator_times_x =
 823:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****         F2::One() - half_denominator_times_x;
 824:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     x = x + Rescale<2>(x * one_minus_half_denominator_times_x);
 825:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 826:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return Rescale<0>(x - F2::One());
 827:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1110                             		.loc 4 827 1
 1111 02eb 3F 7B 05                		rtsd	#20, r7-r11
 1112                             	.LVL102:
 1113                             	.L97:
 1114                             	.LBB2662:
 1115                             	.LBB2628:
 1116                             	.LBB2619:
 1117                             	.LBB2488:
 1118                             	.LBB2478:
 1119                             	.LBB2468:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 1120                             		.loc 4 347 3 is_stmt 1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1121                             		.loc 4 348 49 is_stmt 0
 1122 02ee EF B8                   		mov.L	r11, r8
 1123 02f0 70 A3 01 00 00 C0       		add	#-1073741823, r10, r3
 1124 02f6 FD 74 28 FF             		adc	#-1, r8
 1125 02fa EF 8A                   		mov.L	r8, r10
 1126                             	.LVL103:
 1127 02fc 26 0E                   		bpz	.L33
 1128 02fe 70 34 FF FF FF 7F       		add	#0x7fffffff, r3, r4
 1129                             	.LVL104:
 1130 0304 FD 74 2A 00             		adc	#0, r10
 1131 0308 EF 43                   		mov.L	r4, r3
 1132                             		.balign 8,3,2
 1133                             	.L33:
 1134 030a FD C1 A4                		shll	#1, r10, r4
 1135 030d 69 F3                   		shlr	#31, r3
 1136 030f 57 43                   		or	r4, r3
 1137 0311 FD BF A4                		shar	#31, r10, r4
 1138                             	.LVL105:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1139                             		.loc 4 349 3 is_stmt 1
 1140                             	.LBE2468:
 1141                             	.LBE2478:
 1142                             	.LBE2488:
 1143                             	.LBE2619:
 1144                             	.LBB2620:
 1145                             	.LBB2591:
 1146                             	.LBB2583:
 1147                             	.LBB2575:
 1148                             	.LBB2567:
 1149                             	.LBB2557:
 1150                             	.LBB2517:
 1151                             	.LBB2512:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1152                             		.loc 4 159 12 is_stmt 0
 1153 0314 74 03 01 00 00 E0       		cmp	#-536870911, r3
 1154 031a FC DB A9                		sclt.L	r10
 1155 031d FF 22 33                		add	r3, r3, r2
 1156 0320 FC 0B 44                		adc	r4, r4
 1157 0323 FF 23 22                		add	r2, r2, r3
 1158                             	.LVL106:
 1159 0326 FC 0B 44                		adc	r4, r4
 1160                             	.LVL107:
 1161 0329 FC 07 A2                		neg	r10, r2
 1162 032c 60 1A                   		sub	#1, r10
 1163                             	.LVL108:
 1164 032e 74 22 00 00 00 80       		and #-2147483648, r2
 1165                             	.LBE2512:
 1166                             	.LBE2517:
 1167                             	.LBE2557:
 1168                             	.LBB2558:
 1169                             	.LBB2524:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1170                             		.loc 4 132 14
 1171 0334 75 04 FF                		cmp	#-1, r4
 1172 0337 29 11                   		blt	.L77
 1173 0339 3B 92 FD                		bne	.L37
 1174 033c 74 03 00 00 00 80       		cmp	#-2147483648, r3
 1175 0342 23 05 38 87 FD          		bgeu	.L37
 1176 0347 03                      		.balign 8,3,5
 1177                             	.L77:
 1178 0348 FB 42 00 00 00 80       		mov.L	#-2147483648, r4
 1179 034e 38 82 FD                		bra	.L35
 1180                             	.LVL109:
 1181                             	.L102:
 1182                             	.LBE2524:
 1183                             	.LBE2558:
 1184                             	.LBE2567:
 1185                             	.LBE2575:
 1186                             	.LBE2583:
 1187                             	.LBE2591:
 1188                             	.LBE2620:
 1189                             	.LBE2628:
 1190                             	.LBE2662:
 1191                             	.LBB2663:
 1192                             	.LBB2431:
 1193                             	.LBB2430:
 1194                             	.LBB2429:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1195                             		.loc 4 348 49
 1196 0351 70 23 FF FF FF 7F       		add	#0x7fffffff, r2, r3
 1197                             	.LVL110:
 1198 0357 FD 74 2A 00             		adc	#0, r10
 1199 035b EF 32                   		mov.L	r3, r2
 1200 035d 38 00 FD                		bra	.L71
 1201                             	.LVL111:
 1202                             	.L105:
 1203                             	.LBE2429:
 1204                             	.LBE2430:
 1205                             	.LBE2431:
 1206                             	.LBE2663:
 1207                             	.LBB2664:
 1208                             	.LBB2629:
 1209                             	.LBB2621:
 1210                             	.LBB2592:
 1211                             	.LBB2584:
 1212                             	.LBB2576:
 1213                             	.LBB2568:
 1214                             	.LBB2559:
 1215                             	.LBB2525:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 1216                             		.loc 4 133 35
 1217 0360 74 0A FF FF FF 7F       		cmp	#0x7fffffff, r10
 1218 0366 24 05 38 18 FE          		bleu	.L88
 1219 036b 77 10 01 00 00          		.balign 8,3,5
 1220                             	.L48:
 1221 0370 7B FB                   		bclr #31, r11
 1222 0372 FC 37 B5                		xor	r11, r5
 1223 0375 38 10 FE                		bra	.L46
 1224                             	.LVL112:
 1225                             	.L108:
 1226                             	.LBE2525:
 1227                             	.LBE2559:
 1228                             	.LBE2568:
 1229                             	.LBE2576:
 1230                             	.LBE2584:
 1231                             	.LBE2592:
 1232                             	.LBE2621:
 1233                             	.LBE2629:
 1234                             	.LBE2664:
 1235                             	.LBB2665:
 1236                             	.LBB2660:
 1237                             	.LBB2658:
 1238                             	.LBB2656:
 1239                             	.LBB2654:
 1240                             	.LBB2652:
 1241                             	.LBB2650:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1242                             		.loc 4 132 14
 1243 0378 74 02 00 00 00 80       		cmp	#-2147483648, r2
 1244 037e 23 05 38 5B FF          		bgeu	.L84
 1245 0383 77 10 01 00 00          		.balign 8,3,5
 1246                             	.L91:
 1247 0388 FB 12 00 00 00 80       		mov.L	#-2147483648, r1
 1248                             	.LBE2650:
 1249                             	.LBE2652:
 1250                             	.LBE2654:
 1251                             	.LBE2656:
 1252                             	.LBE2658:
 1253                             	.LBE2660:
 1254                             	.LBE2665:
 1255                             		.loc 4 827 1
 1256 038e 3F 7B 05                		rtsd	#20, r7-r11
 1257                             	.LVL113:
 1258                             	.L107:
 1259                             	.LBB2666:
 1260                             	.LBB2630:
 1261                             	.LBB2622:
 1262                             	.LBB2593:
 1263                             	.LBB2585:
 1264                             	.LBB2577:
 1265                             	.LBB2569:
 1266                             	.LBB2560:
 1267                             	.LBB2526:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 1268                             		.loc 4 133 35
 1269 0391 74 0B FF FF FF 7F       		cmp	#0x7fffffff, r11
 1270 0397 24 05 38 F7 FE          		bleu	.L90
 1271 039c 76 10 01 00             		.balign 8,3,5
 1272                             	.L62:
 1273 03a0 7B F1                   		bclr #31, r1
 1274 03a2 FC 37 15                		xor	r1, r5
 1275 03a5 38 F0 FE                		bra	.L60
 1276                             	.LVL114:
 1277                             	.L103:
 1278                             	.LBE2526:
 1279                             	.LBE2560:
 1280                             	.LBE2569:
 1281                             	.LBE2577:
 1282                             	.LBE2585:
 1283                             	.LBE2593:
 1284                             	.LBE2622:
 1285                             	.LBB2623:
 1286                             	.LBB2489:
 1287                             	.LBB2479:
 1288                             	.LBB2469:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 1289                             		.loc 4 347 3 is_stmt 1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1290                             		.loc 4 348 49 is_stmt 0
 1291 03a8 70 A5 01 00 00 C0       		add	#-1073741823, r10, r5
 1292 03ae FD 74 21 FF             		adc	#-1, r1
 1293 03b2 26 0E                   		bpz	.L44
 1294 03b4 70 5A FF FF FF 7F       		add	#0x7fffffff, r5, r10
 1295                             	.LVL115:
 1296 03ba FD 74 21 00             		adc	#0, r1
 1297 03be EF A5                   		mov.L	r10, r5
 1298                             		.balign 8,3,2
 1299                             	.L44:
 1300 03c0 FD C1 14                		shll	#1, r1, r4
 1301                             	.LVL116:
 1302 03c3 FD 9F 5A                		shlr	#31, r5, r10
 1303 03c6 57 4A                   		or	r4, r10
 1304 03c8 6B F1                   		shar	#31, r1
 1305                             	.LVL117:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1306                             		.loc 4 349 3 is_stmt 1
 1307                             	.LBE2469:
 1308                             	.LBE2479:
 1309                             	.LBE2489:
 1310                             	.LBE2623:
 1311                             	.LBB2624:
 1312                             	.LBB2594:
 1313                             	.LBB2586:
 1314                             	.LBB2578:
 1315                             	.LBB2570:
 1316                             	.LBB2561:
 1317                             	.LBB2518:
 1318                             	.LBB2513:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1319                             		.loc 4 159 12 is_stmt 0
 1320 03ca 74 0A 01 00 00 E0       		cmp	#-536870911, r10
 1321 03d0 FC DB 49                		sclt.L	r4
 1322 03d3 FF 25 AA                		add	r10, r10, r5
 1323 03d6 FC 0B 11                		adc	r1, r1
 1324 03d9 FF 2A 55                		add	r5, r5, r10
 1325                             	.LVL118:
 1326 03dc FC 0B 11                		adc	r1, r1
 1327                             	.LVL119:
 1328 03df FC 07 45                		neg	r4, r5
 1329 03e2 60 14                   		sub	#1, r4
 1330                             	.LVL120:
 1331 03e4 FB 32 00 00 00 80       		mov.L	#-2147483648, r3
 1332 03ea 53 53                   		and	r5, r3
 1333                             	.LBE2513:
 1334                             	.LBE2518:
 1335                             	.LBE2561:
 1336                             	.LBB2562:
 1337                             	.LBB2527:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1338                             		.loc 4 132 14
 1339 03ec 75 01 FF                		cmp	#-1, r1
 1340 03ef 29 11                   		blt	.L79
 1341 03f1 3B 7F FD                		bne	.L99
 1342 03f4 74 0A 00 00 00 80       		cmp	#-2147483648, r10
 1343 03fa 23 05 38 74 FD          		bgeu	.L99
 1344 03ff 03                      		.balign 8,3,5
 1345                             	.L79:
 1346 0400 FB 52 00 00 00 80       		mov.L	#-2147483648, r5
 1347 0406 38 7F FD                		bra	.L46
 1348                             	.LVL121:
 1349                             	.L101:
 1350                             	.LBE2527:
 1351                             	.LBE2562:
 1352                             	.LBE2570:
 1353                             	.LBE2578:
 1354                             	.LBE2586:
 1355                             	.LBE2594:
 1356                             	.LBE2624:
 1357                             	.LBE2630:
 1358                             	.LBE2666:
 1359                             	.LBB2667:
 1360                             	.LBB2423:
 1361                             	.LBB2421:
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 1362                             		.loc 4 241 32
 1363 0409 75 0F FF                		cmp	#-1, r15
 1364 040c 3B 02 FC                		bne	.L86
 1365                             	.LBE2421:
 1366                             	.LBE2423:
 1367                             	.LBE2667:
 1368                             	.LBB2668:
 1369                             	.LBB2631:
 1370                             	.LBB2625:
 1371                             	.LBB2490:
 1372                             	.LBB2480:
 1373                             	.LBB2470:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1374                             		.loc 4 345 16
 1375 040f FB 22 5A 5A 5A 9A       		mov.L	#-1705354662, r2
 1376 0415 EF 2A                   		mov.L	r2, r10
 1377                             	.LBE2470:
 1378                             	.LBE2480:
 1379                             	.LBE2490:
 1380                             	.LBE2625:
 1381                             	.LBE2631:
 1382                             	.LBE2668:
 1383                             	.LBB2669:
 1384                             	.LBB2424:
 1385                             	.LBB2422:
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1386                             		.loc 4 242 49
 1387 0417 EF FE                   		mov.L	r15, r14
 1388                             	.LBE2422:
 1389                             	.LBE2424:
 1390                             	.LBE2669:
 1391                             	.LBB2670:
 1392                             	.LBB2632:
 1393                             	.LBB2626:
 1394                             	.LBB2491:
 1395                             	.LBB2481:
 1396                             	.LBB2471:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1397                             		.loc 4 345 16
 1398 0419 FB 32 4B 4B 4B 0B       		mov.L	#0xb4b4b4b, r3
 1399 041f EF 3B                   		mov.L	r3, r11
 1400                             	.LBE2471:
 1401                             	.LBE2481:
 1402                             	.LBE2491:
 1403                             	.LBE2626:
 1404                             	.LBE2632:
 1405                             	.LBE2670:
 1406                             	.LBB2671:
 1407                             	.LBB2436:
 1408                             	.LBB2435:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1409                             		.loc 4 95 14
 1410 0421 FB 52 5A 5A 5A 5A       		mov.L	#0x5a5a5a5a, r5
 1411 0427 38 79 FC                		bra	.L29
 1412                             	.LVL122:
 1413                             	.L66:
 1414                             	.LBE2435:
 1415                             	.LBE2436:
 1416                             	.LBE2671:
 1417                             	.LBB2672:
 1418                             	.LBB2661:
 1419                             	.LBB2659:
 1420                             	.LBB2657:
 1421                             	.LBB2655:
 1422                             	.LBB2653:
 1423                             	.LBB2651:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 1424                             		.loc 4 133 35
 1425 042a 70 25 00 00 00 80       		add	#-2147483648, r2, r5
 1426                             	.LVL123:
 1427 0430 FD 74 2A 00             		adc	#0, r10
 1428 0434 FB 12 FF FF FF 7F       		mov.L	#0x7fffffff, r1
 1429 043a 3B B1 FE                		bne	.L92
 1430 043d FB 56 FF                		mov.L	#-1, r5
 1431 0440 66 03                   		mov.L	#0, r3
 1432 0442 66 04                   		mov.L	#0, r4
 1433 0444 EF 1A                   		mov.L	r1, r10
 1434 0446 38 9A FE                		bra	.L67
 1435                             	.LVL124:
 1436                             	.L104:
 1437                             	.LBE2651:
 1438                             	.LBE2653:
 1439                             	.LBE2655:
 1440                             	.LBE2657:
 1441                             	.LBE2659:
 1442                             	.LBE2661:
 1443                             	.LBE2672:
 1444                             	.LBB2673:
 1445                             	.LBB2633:
 1446                             	.LBB2627:
 1447                             	.LBB2595:
 1448                             	.LBB2587:
 1449                             	.LBB2579:
 1450                             	.LBB2571:
 1451                             	.LBB2563:
 1452                             	.LBB2547:
 1453                             	.LBB2545:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1454                             		.loc 4 159 12
 1455 0449 FB 46 FF                		mov.L	#-1, r4
 1456                             	.LVL125:
 1457 044c 66 0B                   		mov.L	#0, r11
 1458 044e FB 52 FF FF FF 7F       		mov.L	#0x7fffffff, r5
 1459 0454 66 03                   		mov.L	#0, r3
 1460 0456 38 1F FD                		bra	.L50
 1461                             	.LVL126:
 1462                             	.L106:
 1463 0459 FB 46 FF                		mov.L	#-1, r4
 1464                             	.LVL127:
 1465 045c 66 01                   		mov.L	#0, r1
 1466 045e FB 52 FF FF FF 7F       		mov.L	#0x7fffffff, r5
 1467 0464 66 0A                   		mov.L	#0, r10
 1468 0466 38 1F FE                		bra	.L64
 1469                             	.LBE2545:
 1470                             	.LBE2547:
 1471                             	.LBE2563:
 1472                             	.LBE2571:
 1473                             	.LBE2579:
 1474                             	.LBE2587:
 1475                             	.LBE2595:
 1476                             	.LBE2627:
 1477                             	.LBE2633:
 1478                             	.LBE2673:
 1479                             	.LFE2710:
 1481 0469 FD 70 40 00 00 00 80    		.section	.text._ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IsEENS_10FixedPointIT_Li0EEES
 1482                             		.weak	__ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IsEENS_10FixedPointIT_Li0EEES3_
 1484                             	__ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IsEENS_10FixedPointIT_Li0EEES3_:
 1485                             	.LFB2718:
 807:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 1486                             		.loc 4 807 25 is_stmt 1
 1487                             	.LVL128:
 1488 0000 6E 7A                   		pushm	r7-r10
 1489                             	.LCFI3:
 1490 0002 60 40                   		sub	#4, r0
 1491                             	.LCFI4:
 1492                             	.LVL129:
 1493                             	.LBB2836:
 1494                             	.LBB2837:
 1495                             	.LBB2838:
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 1496                             		.loc 4 247 3
 1497                             	.LBE2838:
 1498                             	.LBE2837:
 1499                             	.LBE2836:
 807:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 1500                             		.loc 4 807 25 is_stmt 0
 1501 0004 EF F1                   		mov.L	r15, r1
 1502                             	.LBB2843:
 1503                             	.LBB2841:
 1504                             	.LBB2839:
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 1505                             		.loc 4 247 16
 1506 0006 9B 04                   		mov.W	24[r0], r4
 1507                             	.LVL130:
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 1508                             		.loc 4 248 3 is_stmt 1
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sign = sum >= 0 ? 1 : -1;
 1509                             		.loc 4 249 3
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 1510                             		.loc 4 250 3
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 1511                             		.loc 4 250 32 is_stmt 0
 1512 0008 76 04 00 80             		cmp	#-32768, r4
 1513 000c 3A EC 01                		beq	.L153
 1514                             	.LVL131:
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1515                             		.loc 4 251 3 is_stmt 1
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1516                             		.loc 4 251 41 is_stmt 0
 1517 000f 73 44 00 80 00          		add	#0x8000, r4
 1518                             	.LVL132:
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1519                             		.loc 4 251 49
 1520 0014 6A 14                   		shar	#1, r4
 1521                             	.LVL133:
 1522                             	.LBE2839:
 1523                             	.LBE2841:
 1524                             	.LBE2843:
 1525                             	.LBB2844:
 1526                             	.LBB2845:
 1527                             	.LBB2846:
 1528                             	.LBB2847:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1529                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 1530                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1531                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1532                             		.loc 4 358 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1533                             		.loc 4 358 16 is_stmt 0
 1534 0016 FB 7A C4 C3             		mov.L	#-15420, r7
 1535 001a 4F 47                   		mul	r4, r7
 1536                             	.LVL134:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1537                             		.loc 4 359 3 is_stmt 1
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1538                             		.loc 4 359 16 is_stmt 0
 1539 001c 61 07                   		cmp	#0, r7
 1540 001e FB 3A 01 C0             		mov.L	#-16383, r3
 1541 0022 FD 78 E3 00 40          		stz	#0x4000, r3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 1542                             		.loc 4 360 3 is_stmt 1
 1543                             	.LVL135:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1544                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1545                             		.loc 4 361 49 is_stmt 0
 1546 0027 4B 73                   		add	r7, r3
 1547                             	.LVL136:
 1548 0029 26 05 38 AC 01          		bn	.L185
 1549                             		.balign 8,3,1
 1550                             	.L150:
 1551 002e 6A F3                   		shar	#15, r3
 1552                             	.LBE2847:
 1553                             	.LBE2846:
 1554                             	.LBE2845:
 1555                             	.LBE2844:
 1556                             	.LBB2851:
 1557                             	.LBB2852:
 1558                             	.LBB2853:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1559                             		.loc 4 95 12
 1560 0030 72 33 5A 5A             		add	#0x5a5a, r3
 1561                             	.LBE2853:
 1562                             	.LBE2852:
 1563                             	.LBE2851:
 1564                             	.LBB2854:
 1565                             	.LBB2855:
 1566                             	.LBB2856:
 1567                             	.LBB2857:
 1568                             	.LBB2858:
 1569                             	.LBB2859:
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1570                             		.loc 4 357 16
 1571 0034 5F 32                   		movu.W	r3, r2
 1572                             	.LBE2859:
 1573                             	.LBE2858:
 1574                             	.LBE2857:
 1575                             	.LBE2856:
 1576                             	.LBB2869:
 1577                             	.LBB2870:
 1578                             	.LBB2871:
 1579                             	.LBB2872:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1580                             		.loc 4 355 26
 1581 0036 DF 3A                   		mov.W	r3, r10
 1582                             	.LBE2872:
 1583                             	.LBE2871:
 1584                             	.LBE2870:
 1585                             	.LBE2869:
 1586                             	.LBB2894:
 1587                             	.LBB2866:
 1588                             	.LBB2863:
 1589                             	.LBB2860:
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1590                             		.loc 4 358 16
 1591 0038 FF 35 24                		mul	r2, r4, r5
 1592                             	.LVL137:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1593                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 1594                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1595                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1596                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1597                             		.loc 4 359 3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 1598                             		.loc 4 360 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1599                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1600                             		.loc 4 361 40 is_stmt 0
 1601 003b 72 55 00 40             		add	#0x4000, r5
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1602                             		.loc 4 361 49
 1603 003f FD AF 57                		shar	#15, r5, r7
 1604                             	.LBE2860:
 1605                             	.LBE2863:
 1606                             	.LBE2866:
 1607                             	.LBE2894:
 1608                             	.LBB2895:
 1609                             	.LBB2896:
 1610                             	.LBB2897:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1611                             		.loc 4 107 12
 1612 0042 FB 5A 00 20             		mov.L	#0x2000, r5
 1613 0046 43 75                   		sub	r7, r5
 1614                             	.LVL138:
 1615                             	.LBE2897:
 1616                             	.LBE2896:
 1617                             	.LBE2895:
 1618                             	.LBB2902:
 1619                             	.LBB2887:
 1620                             	.LBB2880:
 1621                             	.LBB2873:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1622                             		.loc 4 355 3 is_stmt 1
 1623 0048 DF 55                   		mov.W	r5, r5
 1624                             	.LVL139:
 1625 004a 4F 52                   		mul	r5, r2
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1626                             		.loc 4 355 26 is_stmt 0
 1627 004c 47 A5                   		cmp	r10, r5
 1628 004e 3A 90 01                		beq	.L186
 1629                             	.LVL140:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 1630                             		.loc 4 356 3 is_stmt 1
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1631                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1632                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1633                             		.loc 4 359 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1634                             		.loc 4 359 16 is_stmt 0
 1635 0051 61 02                   		cmp	#0, r2
 1636 0053 29 05 38 B3 01          		bge	.L110
 1637 0058 FB 7A 01 C0             		mov.L	#-16383, r7
 1638                             	.LVL141:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1639                             		.loc 4 361 49
 1640 005c 4B 72                   		add	r7, r2
 1641 005e 26 05 38 91 01          		bn	.L187
 1642                             	.LVL142:
 1643                             		.balign 8,3,1
 1644                             	.L183:
 1645 0063 6A F2                   		shar	#15, r2
 1646                             	.LVL143:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1647                             		.loc 4 362 3 is_stmt 1
 1648 0065 DF 22                   		mov.W	r2, r2
 1649                             	.LVL144:
 1650                             	.LBE2873:
 1651                             	.LBE2880:
 1652                             	.LBE2887:
 1653                             	.LBE2902:
 1654                             	.LBB2903:
 1655                             	.LBB2904:
 1656                             	.LBB2905:
 1657                             	.LBB2906:
 1658                             	.LBB2907:
 1659                             	.LBB2908:
 1660                             	.LBB2909:
 1661                             	.LBB2910:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1662                             		.loc 4 159 12 is_stmt 0
 1663 0067 76 02 01 E0             		cmp	#-8191, r2
 1664 006b FC DB E9                		sclt.L	r14
 1665 006e FD BF 25                		shar	#31, r2, r5
 1666 0071 FC 07 EF                		neg	r14, r15
 1667 0074 FF 27 22                		add	r2, r2, r7
 1668 0077 FC 0B 55                		adc	r5, r5
 1669 007a FF 2A 77                		add	r7, r7, r10
 1670 007d FC 0B 55                		adc	r5, r5
 1671                             	.LVL145:
 1672 0080 FB 2A 00 80             		mov.L	#-32768, r2
 1673 0084 53 F2                   		and	r15, r2
 1674 0086 60 1E                   		sub	#1, r14
 1675                             	.LVL146:
 1676                             	.LBE2910:
 1677                             	.LBE2909:
 1678                             	.LBE2908:
 1679                             	.LBB2915:
 1680                             	.LBB2916:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1681                             		.loc 4 132 14
 1682 0088 75 05 FF                		cmp	#-1, r5
 1683 008b 28 05 38 23 02          		blt	.L156
 1684 0090 3A 14 02                		beq	.L188
 1685                             		.balign 8,3,1
 1686                             	.L170:
 1687 0093 53 AE                   		and	r10, r14
 1688                             	.LVL147:
 1689 0095 FC 37 2E                		xor	r2, r14
 1690                             		.balign 8,3,2
 1691                             	.L113:
 1692                             	.LVL148:
 1693                             	.LBE2916:
 1694                             	.LBE2915:
 1695                             	.LBE2907:
 1696                             	.LBE2906:
 1697                             	.LBE2905:
 1698                             	.LBE2904:
 1699                             	.LBE2903:
 1700                             	.LBB2943:
 1701                             	.LBB2944:
 1702                             	.LBB2945:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1703                             		.loc 4 95 12
 1704 0098 FF 22 E3                		add	r14, r3, r2
 1705                             	.LVL149:
 1706                             	.LBE2945:
 1707                             	.LBE2944:
 1708                             	.LBE2943:
 1709                             	.LBB2950:
 1710                             	.LBB2867:
 1711                             	.LBB2864:
 1712                             	.LBB2861:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1713                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 1714                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1715                             		.loc 4 357 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1716                             		.loc 4 357 16 is_stmt 0
 1717 009b DF 2E                   		mov.W	r2, r14
 1718                             	.LVL150:
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1719                             		.loc 4 358 3 is_stmt 1
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1720                             		.loc 4 358 16 is_stmt 0
 1721 009d FF 37 E4                		mul	r14, r4, r7
 1722                             	.LVL151:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1723                             		.loc 4 359 3 is_stmt 1
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1724                             		.loc 4 359 16 is_stmt 0
 1725 00a0 61 07                   		cmp	#0, r7
 1726 00a2 FB 5A 01 C0             		mov.L	#-16383, r5
 1727 00a6 29 06                   		blt 1f
 1728 00a8 FB 5A 00 40             		mov #0x4000, r5
 1729                             	1:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 1730                             		.loc 4 360 3 is_stmt 1
 1731                             	.LVL152:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1732                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1733                             		.loc 4 361 49 is_stmt 0
 1734 00ac 4B 75                   		add	r7, r5
 1735                             	.LVL153:
 1736 00ae 26 06                   		bpz	.L118
 1737 00b0 72 55 FF 7F             		add	#0x7fff, r5
 1738                             		.balign 8,3,1
 1739                             	.L118:
 1740 00b4 6A F5                   		shar	#15, r5
 1741                             	.LBE2861:
 1742                             	.LBE2864:
 1743                             	.LBE2867:
 1744                             	.LBE2950:
 1745                             	.LBB2951:
 1746                             	.LBB2900:
 1747                             	.LBB2898:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1748                             		.loc 4 107 12
 1749 00b6 FB 3A 00 20             		mov.L	#0x2000, r3
 1750 00ba FF 05 53                		sub	r5, r3, r5
 1751                             	.LVL154:
 1752                             	.LBE2898:
 1753                             	.LBE2900:
 1754                             	.LBE2951:
 1755                             	.LBB2952:
 1756                             	.LBB2888:
 1757                             	.LBB2881:
 1758                             	.LBB2874:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1759                             		.loc 4 355 3 is_stmt 1
 1760 00bd DF 53                   		mov.W	r5, r3
 1761 00bf FF 35 E3                		mul	r14, r3, r5
 1762                             	.LVL155:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1763                             		.loc 4 355 26 is_stmt 0
 1764 00c2 47 E3                   		cmp	r14, r3
 1765 00c4 3A 75 01                		beq	.L119
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 1766                             		.loc 4 356 3 is_stmt 1
 1767                             	.LVL156:
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1768                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1769                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1770                             		.loc 4 359 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1771                             		.loc 4 359 16 is_stmt 0
 1772 00c7 61 05                   		cmp	#0, r5
 1773 00c9 28 05 38 B1 01          		blt	.L159
 1774                             	.LVL157:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 1775                             		.loc 4 360 3 is_stmt 1
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1776                             		.loc 4 361 40 is_stmt 0
 1777 00ce 72 55 00 40             		add	#0x4000, r5
 1778                             	.LVL158:
 1779                             		.balign 8,3,1
 1780                             	.L184:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1781                             		.loc 4 361 49
 1782 00d2 6A F5                   		shar	#15, r5
 1783                             	.LVL159:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1784                             		.loc 4 362 3 is_stmt 1
 1785 00d4 DF 55                   		mov.W	r5, r5
 1786                             	.LVL160:
 1787 00d6 FD BF 53                		shar	#31, r5, r3
 1788 00d9 FF 2E 55                		add	r5, r5, r14
 1789                             	.LVL161:
 1790 00dc FC 0B 33                		adc	r3, r3
 1791 00df FF 27 EE                		add	r14, r14, r7
 1792 00e2 FC 0B 33                		adc	r3, r3
 1793                             	.LBE2874:
 1794                             	.LBE2881:
 1795                             	.LBE2888:
 1796                             	.LBE2952:
 1797                             	.LBB2953:
 1798                             	.LBB2940:
 1799                             	.LBB2937:
 1800                             	.LBB2934:
 1801                             	.LBB2931:
 1802                             	.LBB2920:
 1803                             	.LBB2921:
 1804                             	.LBB2922:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1805                             		.loc 4 159 12 is_stmt 0
 1806 00e5 76 05 FF 1F             		cmp	#0x1fff, r5
 1807 00e9 2B 05 38 EC 01          		bgt	.L189
 1808                             	.LVL162:
 1809                             	.LBE2922:
 1810                             	.LBE2921:
 1811                             	.LBE2920:
 1812                             	.LBB2925:
 1813                             	.LBB2913:
 1814                             	.LBB2911:
 1815 00ee 76 05 01 E0             		cmp	#-8191, r5
 1816 00f2 FC DB 59                		sclt.L	r5
 1817                             	.LVL163:
 1818 00f5 FC 07 5E                		neg	r5, r14
 1819 00f8 60 15                   		sub	#1, r5
 1820                             	.LVL164:
 1821 00fa 76 2E 00 80             		and #-32768, r14
 1822                             	.LBE2911:
 1823                             	.LBE2913:
 1824                             	.LBE2925:
 1825                             	.LBB2926:
 1826                             	.LBB2917:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1827                             		.loc 4 132 14
 1828 00fe 75 03 FF                		cmp	#-1, r3
 1829 0101 28 05 38 BD 01          		blt	.L161
 1830 0106 3A B1 01                		beq	.L190
 1831                             		.balign 8,3,1
 1832                             	.L172:
 1833 0109 53 75                   		and	r7, r5
 1834                             	.LVL165:
 1835 010b FC 37 E5                		xor	r14, r5
 1836                             	.LVL166:
 1837 010e EF 00                   		.balign 8,3,2
 1838                             	.L123:
 1839                             	.LBE2917:
 1840                             	.LBE2926:
 1841                             	.LBE2931:
 1842                             	.LBE2934:
 1843                             	.LBE2937:
 1844                             	.LBE2940:
 1845                             	.LBE2953:
 1846                             	.LBB2954:
 1847                             	.LBB2948:
 1848                             	.LBB2946:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1849                             		.loc 4 95 12
 1850 0110 FF 23 52                		add	r5, r2, r3
 1851                             	.LVL167:
 1852                             	.LBE2946:
 1853                             	.LBE2948:
 1854                             	.LBE2954:
 1855                             	.LBB2955:
 1856                             	.LBB2868:
 1857                             	.LBB2865:
 1858                             	.LBB2862:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1859                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 1860                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1861                             		.loc 4 357 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1862                             		.loc 4 357 16 is_stmt 0
 1863 0113 DF 32                   		mov.W	r3, r2
 1864                             	.LVL168:
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1865                             		.loc 4 358 3 is_stmt 1
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1866                             		.loc 4 358 16 is_stmt 0
 1867 0115 4F 24                   		mul	r2, r4
 1868                             	.LVL169:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1869                             		.loc 4 359 3 is_stmt 1
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1870                             		.loc 4 359 16 is_stmt 0
 1871 0117 61 04                   		cmp	#0, r4
 1872 0119 FB 7A 01 C0             		mov.L	#-16383, r7
 1873 011d 29 06                   		blt 1f
 1874 011f FB 7A 00 40             		mov #0x4000, r7
 1875                             	1:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 1876                             		.loc 4 360 3 is_stmt 1
 1877                             	.LVL170:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1878                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1879                             		.loc 4 361 49 is_stmt 0
 1880 0123 4B 74                   		add	r7, r4
 1881                             	.LVL171:
 1882 0125 26 06                   		bpz	.L131
 1883 0127 72 44 FF 7F             		add	#0x7fff, r4
 1884                             		.balign 8,3,1
 1885                             	.L131:
 1886 012b 6A F4                   		shar	#15, r4
 1887                             	.LBE2862:
 1888                             	.LBE2865:
 1889                             	.LBE2868:
 1890                             	.LBE2955:
 1891                             	.LBB2956:
 1892                             	.LBB2901:
 1893                             	.LBB2899:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1894                             		.loc 4 107 12
 1895 012d FB 5A 00 20             		mov.L	#0x2000, r5
 1896 0131 FF 04 45                		sub	r4, r5, r4
 1897                             	.LVL172:
 1898                             	.LBE2899:
 1899                             	.LBE2901:
 1900                             	.LBE2956:
 1901                             	.LBB2957:
 1902                             	.LBB2889:
 1903                             	.LBB2882:
 1904                             	.LBB2875:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1905                             		.loc 4 355 3 is_stmt 1
 1906 0134 DF 44                   		mov.W	r4, r4
 1907                             	.LVL173:
 1908 0136 FF 35 24                		mul	r2, r4, r5
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 1909                             		.loc 4 355 26 is_stmt 0
 1910 0139 47 24                   		cmp	r2, r4
 1911 013b 3A 17 01                		beq	.L191
 1912                             	.LVL174:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 1913                             		.loc 4 356 3 is_stmt 1
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 1914                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 1915                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1916                             		.loc 4 359 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 1917                             		.loc 4 359 16 is_stmt 0
 1918 013e 61 05                   		cmp	#0, r5
 1919 0140 28 05 38 4C 01          		blt	.L192
 1920                             	.LVL175:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 1921                             		.loc 4 360 3 is_stmt 1
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1922                             		.loc 4 361 40 is_stmt 0
 1923 0145 72 55 00 40             		add	#0x4000, r5
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 1924                             		.loc 4 361 49
 1925 0149 6A F5                   		shar	#15, r5
 1926                             	.LVL176:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1927                             		.loc 4 362 3 is_stmt 1
 1928                             		.balign 8,3,1
 1929                             	.L146:
 1930 014b DF 55                   		mov.W	r5, r5
 1931 014d FD BF 54                		shar	#31, r5, r4
 1932 0150 FF 22 55                		add	r5, r5, r2
 1933 0153 FC 0B 44                		adc	r4, r4
 1934 0156 FF 27 22                		add	r2, r2, r7
 1935 0159 FC 0B 44                		adc	r4, r4
 1936 015c EF 42                   		mov.L	r4, r2
 1937                             	.LBE2875:
 1938                             	.LBE2882:
 1939                             	.LBE2889:
 1940                             	.LBE2957:
 1941                             	.LBB2958:
 1942                             	.LBB2941:
 1943                             	.LBB2938:
 1944                             	.LBB2935:
 1945                             	.LBB2932:
 1946                             	.LBB2927:
 1947                             	.LBB2924:
 1948                             	.LBB2923:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1949                             		.loc 4 159 12 is_stmt 0
 1950 015e 76 05 FF 1F             		cmp	#0x1fff, r5
 1951 0162 2B 05 38 83 01          		bgt	.L136
 1952                             	.LVL177:
 1953                             	.LBE2923:
 1954                             	.LBE2924:
 1955                             	.LBE2927:
 1956                             	.LBB2928:
 1957                             	.LBB2914:
 1958                             	.LBB2912:
 1959 0167 76 05 01 E0             		cmp	#-8191, r5
 1960 016b FC DB 59                		sclt.L	r5
 1961                             	.LVL178:
 1962 016e FC 07 54                		neg	r5, r4
 1963 0171 60 15                   		sub	#1, r5
 1964                             	.LVL179:
 1965 0173 76 24 00 80             		and #-32768, r4
 1966                             	.LBE2912:
 1967                             	.LBE2914:
 1968                             	.LBE2928:
 1969                             	.LBB2929:
 1970                             	.LBB2918:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1971                             		.loc 4 132 14
 1972 0177 75 02 FF                		cmp	#-1, r2
 1973 017a 28 05 38 54 01          		blt	.L166
 1974 017f 3A 48 01                		beq	.L193
 1975                             		.balign 8,3,1
 1976                             	.L173:
 1977 0182 53 75                   		and	r7, r5
 1978                             	.LVL180:
 1979 0184 FC 37 45                		xor	r4, r5
 1980 0187 03                      		.balign 8,3,1
 1981                             	.L137:
 1982                             	.LVL181:
 1983                             	.LBE2918:
 1984                             	.LBE2929:
 1985                             	.LBE2932:
 1986                             	.LBE2935:
 1987                             	.LBE2938:
 1988                             	.LBE2941:
 1989                             	.LBE2958:
 1990                             	.LBB2959:
 1991                             	.LBB2949:
 1992                             	.LBB2947:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1993                             		.loc 4 95 12
 1994 0188 4B 35                   		add	r3, r5
 1995                             	.LVL182:
 1996                             	.LBE2947:
 1997                             	.LBE2949:
 1998                             	.LBE2959:
 1999                             	.LBE2855:
 2000                             	.LBE2854:
 2001                             	.LBB2969:
 2002                             	.LBB2970:
 2003                             	.LBB2971:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2004                             		.loc 4 107 12
 2005 018a 72 55 00 E0             		add	#-8192, r5
 2006 018e DF 52                   		mov.W	r5, r2
 2007                             	.LVL183:
 2008 0190 FD BF 23                		shar	#31, r2, r3
 2009 0193 FF 2E 22                		add	r2, r2, r14
 2010 0196 FC 0B 33                		adc	r3, r3
 2011 0199 FF 2F EE                		add	r14, r14, r15
 2012 019c FC 0B 33                		adc	r3, r3
 2013 019f EF 3E                   		mov.L	r3, r14
 2014                             	.LBE2971:
 2015                             	.LBE2970:
 2016                             	.LBE2969:
 2017                             	.LBB2974:
 2018                             	.LBB2975:
 2019                             	.LBB2976:
 2020                             	.LBB2977:
 2021                             	.LBB2978:
 2022                             	.LBB2979:
 2023                             	.LBB2980:
 2024                             	.LBB2981:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2025                             		.loc 4 159 12
 2026 01a1 76 02 FF 1F             		cmp	#0x1fff, r2
 2027 01a5 2A 7C                   		bgt	.L141
 2028                             	.LVL184:
 2029 01a7 03                      		.balign 8,3,1
 2030                             	.L149:
 2031                             	.LBE2981:
 2032                             	.LBE2980:
 2033                             	.LBE2979:
 2034                             	.LBB2982:
 2035                             	.LBB2983:
 2036                             	.LBB2984:
 2037 01a8 DF 55                   		mov.W	r5, r5
 2038 01aa 76 05 01 E0             		cmp	#-8191, r5
 2039 01ae FC DB 59                		sclt.L	r5
 2040                             	.LVL185:
 2041 01b1 FC 07 57                		neg	r5, r7
 2042 01b4 60 15                   		sub	#1, r5
 2043                             	.LVL186:
 2044 01b6 FB 3A 00 80             		mov.L	#-32768, r3
 2045 01ba 53 73                   		and	r7, r3
 2046                             	.LBE2984:
 2047                             	.LBE2983:
 2048                             	.LBE2982:
 2049                             	.LBB2985:
 2050                             	.LBB2986:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 2051                             		.loc 4 132 14
 2052 01bc 75 0E FF                		cmp	#-1, r14
 2053 01bf 29 59                   		blt	.L175
 2054 01c1 20 4E                   		beq	.L194
 2055                             		.balign 8,3,2
 2056                             	.L168:
 2057 01c3 FB 46 FF                		mov	#-1, r4
 2058 01c6 66 02                   		mov	#0, r2
 2059                             	.LVL187:
 2060                             		.balign 8,3,1
 2061                             	.L142:
 2062 01c8 53 F4                   		and	r15, r4
 2063 01ca FC 37 24                		xor	r2, r4
 2064 01cd 53 45                   		and	r4, r5
 2065 01cf FC 37 35                		xor	r3, r5
 2066                             	.LVL188:
 2067                             	.LBE2986:
 2068                             	.LBE2985:
 2069                             	.LBE2978:
 2070                             	.LBE2977:
 2071                             	.LBE2976:
 683:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 2072                             		.loc 4 683 3
 2073 01d2 D3 15                   		mov.W	r5, [r1]
 2074                             	.LBE2975:
 2075                             	.LBE2974:
 2076                             		.loc 4 827 1
 2077 01d4 3F 7A 05                		rtsd	#20, r7-r10
 2078                             	.LVL189:
 2079                             	.L185:
 2080                             	.LBB3005:
 2081                             	.LBB2850:
 2082                             	.LBB2849:
 2083                             	.LBB2848:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 2084                             		.loc 4 361 49
 2085 01d7 72 33 FF 7F             		add	#0x7fff, r3
 2086 01db 38 53 FE                		bra	.L150
 2087                             	.LVL190:
 2088                             	.L186:
 2089                             	.LBE2848:
 2090                             	.LBE2849:
 2091                             	.LBE2850:
 2092                             	.LBE3005:
 2093                             	.LBB3006:
 2094                             	.LBB2965:
 2095                             	.LBB2960:
 2096                             	.LBB2890:
 2097                             	.LBB2883:
 2098                             	.LBB2876:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 2099                             		.loc 4 356 3 is_stmt 1
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 2100                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 2101                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 2102                             		.loc 4 359 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 2103                             		.loc 4 359 16 is_stmt 0
 2104 01de 61 02                   		cmp	#0, r2
 2105 01e0 FB 7A 01 C0             		mov.L	#-16383, r7
 2106                             	.LVL191:
 2107 01e4 29 06                   		blt 1f
 2108 01e6 FB 7A 00 40             		mov #0x4000, r7
 2109                             	1:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 2110                             		.loc 4 361 49
 2111 01ea 4B 72                   		add	r7, r2
 2112 01ec 27 05 38 75 FE          		bpz	.L183
 2113                             	.LVL192:
 2114                             		.balign 8,3,3
 2115                             	.L187:
 2116 01f1 72 22 FF 7F             		add	#0x7fff, r2
 2117 01f5 38 6E FE                		bra	.L183
 2118                             	.LVL193:
 2119                             	.L153:
 2120                             	.LBE2876:
 2121                             	.LBE2883:
 2122                             	.LBE2890:
 2123                             	.LBE2960:
 2124                             	.LBE2965:
 2125                             	.LBE3006:
 2126                             	.LBB3007:
 2127                             	.LBB2842:
 2128                             	.LBB2840:
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 2129                             		.loc 4 250 32
 2130 01f8 FB 3A 5A 5A             		mov	#0x5a5a, r3
 2131 01fc FB 22 5A 9A 4B 0B       		mov.L	#0xb4b9a5a, r2
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2132                             		.loc 4 251 49
 2133 0202 FB 46 FF                		mov.L	#-1, r4
 2134                             	.LVL194:
 2135 0205 FC 13 00                		.balign 8,3,3
 2136                             	.L110:
 2137                             	.LBE2840:
 2138                             	.LBE2842:
 2139                             	.LBE3007:
 2140                             	.LBB3008:
 2141                             	.LBB2966:
 2142                             	.LBB2961:
 2143                             	.LBB2891:
 2144                             	.LBB2884:
 2145                             	.LBB2877:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 2146                             		.loc 4 360 3 is_stmt 1
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 2147                             		.loc 4 361 40 is_stmt 0
 2148 0208 72 22 00 40             		add	#0x4000, r2
 2149 020c 38 57 FE                		bra	.L183
 2150                             	.LVL195:
 2151                             	.L194:
 2152                             	.LBE2877:
 2153                             	.LBE2884:
 2154                             	.LBE2891:
 2155                             	.LBE2961:
 2156                             	.LBE2966:
 2157                             	.LBE3008:
 2158                             	.LBB3009:
 2159                             	.LBB3002:
 2160                             	.LBB2999:
 2161                             	.LBB2996:
 2162                             	.LBB2993:
 2163                             	.LBB2990:
 2164                             	.LBB2987:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 2165                             		.loc 4 132 14
 2166 020f 76 0F 00 80             		cmp	#-32768, r15
 2167 0213 22 B0                   		bgeu	.L168
 2168 0215 FC 13 00                		.balign 8,3,3
 2169                             	.L175:
 2170 0218 FB 5A 00 80             		mov	#-32768, r5
 2171                             	.LVL196:
 2172                             	.LBE2987:
 2173                             	.LBE2990:
 2174                             	.LBE2993:
 2175                             	.LBE2996:
 2176                             	.LBE2999:
 683:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 2177                             		.loc 4 683 3
 2178 021c D3 15                   		mov.W	r5, [r1]
 2179                             	.LBE3002:
 2180                             	.LBE3009:
 2181                             		.loc 4 827 1
 2182 021e 3F 7A 05                		rtsd	#20, r7-r10
 2183                             	.LVL197:
 2184                             	.L141:
 2185                             	.LBB3010:
 2186                             	.LBB3003:
 2187                             	.LBB3000:
 2188                             	.LBB2997:
 2189                             	.LBB2994:
 2190                             	.LBB2991:
 2191                             	.LBB2988:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 2192                             		.loc 4 133 35
 2193 0221 73 F7 00 80 00          		add	#0x8000, r15, r7
 2194 0226 FD 74 23 00             		adc	#0, r3
 2195 022a 3A CD 00                		beq	.L195
 2196 022d FC 13 00                		.balign 8,3,3
 2197                             	.L169:
 2198 0230 FB 5A FF 7F             		mov	#0x7fff, r5
 2199                             	.LVL198:
 2200                             	.LBE2988:
 2201                             	.LBE2991:
 2202                             	.LBE2994:
 2203                             	.LBE2997:
 2204                             	.LBE3000:
 683:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 2205                             		.loc 4 683 3
 2206 0234 D3 15                   		mov.W	r5, [r1]
 2207                             	.LBE3003:
 2208                             	.LBE3010:
 2209                             		.loc 4 827 1
 2210 0236 3F 7A 05                		rtsd	#20, r7-r10
 2211                             	.LVL199:
 2212                             	.L119:
 2213                             	.LBB3011:
 2214                             	.LBB2967:
 2215                             	.LBB2962:
 2216                             	.LBB2892:
 2217                             	.LBB2885:
 2218                             	.LBB2878:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 2219                             		.loc 4 356 3 is_stmt 1
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 2220                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 2221                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 2222                             		.loc 4 359 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 2223                             		.loc 4 359 16 is_stmt 0
 2224 0239 61 05                   		cmp	#0, r5
 2225 023b FB 7A 01 C0             		mov.L	#-16383, r7
 2226                             	.LVL200:
 2227 023f 29 06                   		blt 1f
 2228 0241 FB 7A 00 40             		mov #0x4000, r7
 2229                             	1:
 2230                             	.LVL201:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 2231                             		.loc 4 360 3 is_stmt 1
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2232                             		.loc 4 362 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2233                             		.loc 4 362 19 is_stmt 0
 2234 0245 76 0E 00 80             		cmp	#-32768, r14
 2235 0249 21 37                   		bne	.L120
 2236 024b FB 5A FF 7F             		mov	#0x7fff, r5
 2237                             	.LVL202:
 2238 024f 38 C1 FE                		bra	.L123
 2239                             	.LVL203:
 2240                             	.L191:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 2241                             		.loc 4 356 3 is_stmt 1
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 2242                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 2243                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 2244                             		.loc 4 359 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 2245                             		.loc 4 359 16 is_stmt 0
 2246 0252 61 05                   		cmp	#0, r5
 2247 0254 FB 7A 01 C0             		mov.L	#-16383, r7
 2248 0258 29 06                   		blt 1f
 2249 025a FB 7A 00 40             		mov #0x4000, r7
 2250                             	1:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 2251                             		.loc 4 360 3 is_stmt 1
 2252                             	.LVL204:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2253                             		.loc 4 362 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2254                             		.loc 4 362 19 is_stmt 0
 2255 025e 76 02 00 80             		cmp	#-32768, r2
 2256 0262 21 30                   		bne	.L148
 2257                             	.LVL205:
 2258                             	.LBE2878:
 2259                             	.LBE2885:
 2260                             	.LBE2892:
 2261                             	.LBE2962:
 2262                             	.LBE2967:
 2263                             	.LBE3011:
 2264                             	.LBB3012:
 2265                             	.LBB2973:
 2266                             	.LBB2972:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2267                             		.loc 4 107 12
 2268 0264 72 35 FF 5F             		add	#0x5fff, r3, r5
 2269                             	.LVL206:
 2270 0268 DF 57                   		mov.W	r5, r7
 2271                             	.LVL207:
 2272 026a FD BF 7E                		shar	#31, r7, r14
 2273 026d FF 24 77                		add	r7, r7, r4
 2274                             	.LVL208:
 2275 0270 FC 0B EE                		adc	r14, r14
 2276 0273 FF 2F 44                		add	r4, r4, r15
 2277 0276 FC 0B EE                		adc	r14, r14
 2278 0279 38 2F FF                		bra	.L149
 2279                             	.LVL209:
 2280                             	.L159:
 2281                             	.LBE2972:
 2282                             	.LBE2973:
 2283                             	.LBE3012:
 2284                             	.LBB3013:
 2285                             	.LBB2968:
 2286                             	.LBB2963:
 2287                             	.LBB2893:
 2288                             	.LBB2886:
 2289                             	.LBB2879:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 2290                             		.loc 4 359 16
 2291 027c FB 7A 01 C0             		mov.L	#-16383, r7
 2292                             	.LVL210:
 2293                             		.balign 8,3,1
 2294                             	.L120:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 2295                             		.loc 4 361 49
 2296 0280 4B 75                   		add	r7, r5
 2297 0282 27 05 38 4E FE          		bpz	.L184
 2298 0287 72 55 FF 7F             		add	#0x7fff, r5
 2299 028b 38 47 FE                		bra	.L184
 2300                             	.LVL211:
 2301                             	.L192:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 2302                             		.loc 4 359 16
 2303 028e FB 7A 01 C0             		mov.L	#-16383, r7
 2304                             	.LVL212:
 2305                             		.balign 8,3,1
 2306                             	.L148:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 2307                             		.loc 4 361 49
 2308 0292 4B 75                   		add	r7, r5
 2309 0294 27 07                   		bn	.L196
 2310 0296 6A F5                   		shar	#15, r5
 2311 0298 38 B3 FE                		bra	.L146
 2312                             	.L196:
 2313 029b 72 55 FF 7F             		add	#0x7fff, r5
 2314 029f 6A F5                   		shar	#15, r5
 2315 02a1 38 AA FE                		bra	.L146
 2316                             	.LVL213:
 2317                             	.L188:
 2318                             	.LBE2879:
 2319                             	.LBE2886:
 2320                             	.LBE2893:
 2321                             	.LBE2963:
 2322                             	.LBB2964:
 2323                             	.LBB2942:
 2324                             	.LBB2939:
 2325                             	.LBB2936:
 2326                             	.LBB2933:
 2327                             	.LBB2930:
 2328                             	.LBB2919:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 2329                             		.loc 4 132 14
 2330 02a4 76 0A 00 80             		cmp	#-32768, r10
 2331 02a8 23 05 38 E9 FD          		bgeu	.L170
 2332 02ad FC 13 00                		.balign 8,3,3
 2333                             	.L156:
 2334 02b0 FB EA 00 80             		mov	#-32768, r14
 2335 02b4 38 E4 FD                		bra	.L113
 2336                             	.LVL214:
 2337                             	.L190:
 2338 02b7 76 07 00 80             		cmp	#-32768, r7
 2339 02bb 23 05 38 4C FE          		bgeu	.L172
 2340                             		.balign 8,3,3
 2341                             	.L161:
 2342 02c0 FB 5A 00 80             		mov	#-32768, r5
 2343                             	.LVL215:
 2344 02c4 38 4C FE                		bra	.L123
 2345                             	.LVL216:
 2346                             	.L193:
 2347 02c7 76 07 00 80             		cmp	#-32768, r7
 2348 02cb 23 05 38 B5 FE          		bgeu	.L173
 2349                             		.balign 8,3,3
 2350                             	.L166:
 2351 02d0 FB 5A 00 80             		mov	#-32768, r5
 2352                             	.LVL217:
 2353 02d4 38 B4 FE                		bra	.L137
 2354                             	.LVL218:
 2355                             	.L189:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 2356                             		.loc 4 133 35
 2357 02d7 73 7A 00 80 00          		add	#0x8000, r7, r10
 2358 02dc FB 5A FF 7F             		mov	#0x7fff, r5
 2359 02e0 FD 74 23 00             		adc	#0, r3
 2360 02e4 38 2C FE                		bra	.L123
 2361                             	.LVL219:
 2362                             	.L136:
 2363 02e7 73 7A 00 80 00          		add	#0x8000, r7, r10
 2364 02ec FB 5A FF 7F             		mov	#0x7fff, r5
 2365 02f0 FD 74 24 00             		adc	#0, r4
 2366 02f4 38 94 FE                		bra	.L137
 2367                             	.LVL220:
 2368                             	.L195:
 2369                             	.LBE2919:
 2370                             	.LBE2930:
 2371                             	.LBE2933:
 2372                             	.LBE2936:
 2373                             	.LBE2939:
 2374                             	.LBE2942:
 2375                             	.LBE2964:
 2376                             	.LBE2968:
 2377                             	.LBE3013:
 2378                             	.LBB3014:
 2379                             	.LBB3004:
 2380                             	.LBB3001:
 2381                             	.LBB2998:
 2382                             	.LBB2995:
 2383                             	.LBB2992:
 2384                             	.LBB2989:
 2385 02f7 77 07 FF FF 00          		cmp	#0xffff, r7
 2386 02fc 25 05 38 32 FF          		bgtu	.L169
 2387 0301 FB 56 FF                		mov	#-1, r5
 2388                             	.LVL221:
 2389 0304 66 04                   		mov	#0, r4
 2390 0306 FB 2A FF 7F             		mov	#0x7fff, r2
 2391 030a 38 BE FE                		bra	.L142
 2392                             	.LBE2989:
 2393                             	.LBE2992:
 2394                             	.LBE2995:
 2395                             	.LBE2998:
 2396                             	.LBE3001:
 2397                             	.LBE3004:
 2398                             	.LBE3014:
 2399                             	.LFE2718:
 2401 030d FC 13 00                		.section	.text._ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10Fixed
 2402                             		.weak	__ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_
 2404                             	__ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_Li0EEES
 2405                             	.LFB2769:
 732:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 2406                             		.loc 4 732 25 is_stmt 1
 2407                             	.LVL222:
 2408 0000 6E 6B                   		pushm	r6-r11
 2409                             	.LCFI5:
 2410                             	.LVL223:
 2411                             	.LBB3153:
 2412                             	.LBB3154:
 2413                             	.LBB3155:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2414                             		.loc 4 95 14 is_stmt 0
 2415 0002 70 11 00 00 00 10       		add	#0x10000000, r1
 2416                             	.LVL224:
 2417                             	.LBE3155:
 2418                             	.LBE3154:
 2419                             	.LBE3153:
 2420                             	.LBB3156:
 2421                             	.LBB3157:
 2422                             	.LBB3158:
 2423                             	.LBB3159:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2424                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2425                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2426                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2427                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2428                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2429                             		.loc 4 347 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2430                             		.loc 4 345 16 is_stmt 0
 2431 0008 EF 12                   		mov.L	r1, r2
 2432 000a FC 1B 12                		emul	r1, r2
 2433                             	.LVL225:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2434                             		.loc 4 348 49
 2435 000d 70 27 00 00 00 40       		add	#0x40000000, r2, r7
 2436 0013 FD 74 23 00             		adc	#0, r3
 2437 0017 26 0E                   		bpz	.L198
 2438 0019 70 7A FF FF FF 7F       		add	#0x7fffffff, r7, r10
 2439 001f FD 74 23 00             		adc	#0, r3
 2440 0023 EF A7                   		mov.L	r10, r7
 2441                             		.balign 8,3,2
 2442                             	.L198:
 2443 0025 FD C1 34                		shll	#1, r3, r4
 2444 0028 FD 9F 75                		shlr	#31, r7, r5
 2445 002b 57 45                   		or	r4, r5
 2446 002d 6B F3                   		shar	#31, r3
 2447                             	.LVL226:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2448                             		.loc 4 349 3 is_stmt 1
 2449                             	.LBE3159:
 2450                             	.LBE3158:
 2451                             	.LBE3157:
 2452                             	.LBE3156:
 2453                             	.LBB3163:
 2454                             	.LBB3164:
 2455                             	.LBB3165:
 2456                             	.LBB3166:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2457                             		.loc 4 342 3
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2458                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2459                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2460                             		.loc 4 345 3
 2461                             	.LBE3166:
 2462                             	.LBE3165:
 2463                             	.LBE3164:
 2464                             	.LBE3163:
 2465                             	.LBB3185:
 2466                             	.LBB3162:
 2467                             	.LBB3161:
 2468                             	.LBB3160:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2469                             		.loc 4 343 16 is_stmt 0
 2470 002f FD BF 14                		shar	#31, r1, r4
 2471                             	.LBE3160:
 2472                             	.LBE3161:
 2473                             	.LBE3162:
 2474                             	.LBE3185:
 2475                             	.LBB3186:
 2476                             	.LBB3187:
 2477                             	.LBB3188:
 2478                             	.LBB3189:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2479                             		.loc 4 345 16
 2480 0032 FF 37 53                		mul	r5, r3, r7
 2481                             	.LBE3189:
 2482                             	.LBE3188:
 2483                             	.LBE3187:
 2484                             	.LBE3186:
 2485                             	.LBB3205:
 2486                             	.LBB3179:
 2487                             	.LBB3173:
 2488                             	.LBB3167:
 2489 0035 4F 54                   		mul	r5, r4
 2490 0037 4F 13                   		mul	r1, r3
 2491                             	.LVL227:
 2492                             	.LBE3167:
 2493                             	.LBE3173:
 2494                             	.LBE3179:
 2495                             	.LBE3205:
 2496                             	.LBB3206:
 2497                             	.LBB3200:
 2498                             	.LBB3195:
 2499                             	.LBB3190:
 2500 0039 FF 22 77                		add	r7, r7, r2
 2501 003c EF 5A                   		mov.L	r5, r10
 2502 003e FC 1F 5A                		emulu	r5, r10
 2503 0041 EF A6                   		mov.L	r10, r6
 2504 0043 EF B7                   		mov.L	r11, r7
 2505                             	.LBE3190:
 2506                             	.LBE3195:
 2507                             	.LBE3200:
 2508                             	.LBE3206:
 2509                             	.LBB3207:
 2510                             	.LBB3180:
 2511                             	.LBB3174:
 2512                             	.LBB3168:
 2513 0045 EF 1A                   		mov.L	r1, r10
 2514 0047 FC 1F 5A                		emulu	r5, r10
 2515 004a EF AE                   		mov.L	r10, r14
 2516 004c EF BF                   		mov.L	r11, r15
 2517 004e 4B 43                   		add	r4, r3
 2518                             	.LBE3168:
 2519                             	.LBE3174:
 2520                             	.LBE3180:
 2521                             	.LBE3207:
 2522                             	.LBB3208:
 2523                             	.LBB3201:
 2524                             	.LBB3196:
 2525                             	.LBB3191:
 2526 0050 4B 27                   		add	r2, r7
 2527                             	.LBE3191:
 2528                             	.LBE3196:
 2529                             	.LBE3201:
 2530                             	.LBE3208:
 2531                             	.LBB3209:
 2532                             	.LBB3181:
 2533                             	.LBB3175:
 2534                             	.LBB3169:
 2535 0052 4B 3F                   		add	r3, r15
 2536                             	.LVL228:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2537                             		.loc 4 346 3 is_stmt 1
 2538                             	.LBE3169:
 2539                             	.LBE3175:
 2540                             	.LBE3181:
 2541                             	.LBE3209:
 2542                             	.LBB3210:
 2543                             	.LBB3202:
 2544                             	.LBB3197:
 2545                             	.LBB3192:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2546                             		.loc 4 348 49 is_stmt 0
 2547 0054 70 63 00 00 00 40       		add	#0x40000000, r6, r3
 2548 005a FD 74 27 00             		adc	#0, r7
 2549                             	.LBE3192:
 2550                             	.LBE3197:
 2551                             	.LBE3202:
 2552                             	.LBE3210:
 2553                             	.LBB3211:
 2554                             	.LBB3182:
 2555                             	.LBB3176:
 2556                             	.LBB3170:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2557                             		.loc 4 346 35
 2558 005e 61 0F                   		cmp	#0, r15
 2559 0060 FB 62 01 00 00 C0       		mov.L	#-1073741823, r6
 2560 0066 29 08                   		blt 1f
 2561 0068 FB 62 00 00 00 40       		mov #0x40000000, r6
 2562                             	1:
 2563 006e FB 46 FF                		mov.L	#-1, r4
 2564 0071 29 04                   		blt 1f
 2565 0073 66 04                   		mov #0, r4
 2566                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2567                             		.loc 4 347 3 is_stmt 1
 2568                             	.LVL229:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2569                             		.loc 4 349 3
 2570                             	.LBE3170:
 2571                             	.LBE3176:
 2572                             	.LBE3182:
 2573                             	.LBE3211:
 2574                             	.LBB3212:
 2575                             	.LBB3203:
 2576                             	.LBB3198:
 2577                             	.LBB3193:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2578                             		.loc 4 342 3
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2579                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2580                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2581                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2582                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2583                             		.loc 4 347 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2584                             		.loc 4 348 49 is_stmt 0
 2585 0075 61 07                   		cmp	#0, r7
 2586 0077 28 0E                   		bge	.L202
 2587 0079 70 32 FF FF FF 7F       		add	#0x7fffffff, r3, r2
 2588 007f FD 74 27 00             		adc	#0, r7
 2589 0083 EF 23                   		mov.L	r2, r3
 2590                             		.balign 8,3,2
 2591                             	.L202:
 2592 0085 FD C1 72                		shll	#1, r7, r2
 2593 0088 69 F3                   		shlr	#31, r3
 2594                             	.LBE3193:
 2595                             	.LBE3198:
 2596                             	.LBE3203:
 2597                             	.LBE3212:
 2598                             	.LBB3213:
 2599                             	.LBB3183:
 2600                             	.LBB3177:
 2601                             	.LBB3171:
 2602 008a FF 27 6E                		add	r6, r14, r7
 2603 008d FC 0B F4                		adc	r15, r4
 2604                             	.LVL230:
 2605                             	.LBE3171:
 2606                             	.LBE3177:
 2607                             	.LBE3183:
 2608                             	.LBE3213:
 2609                             	.LBB3214:
 2610                             	.LBB3204:
 2611                             	.LBB3199:
 2612                             	.LBB3194:
 2613 0090 57 23                   		or	r2, r3
 2614                             	.LVL231:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2615                             		.loc 4 349 3 is_stmt 1
 2616                             	.LBE3194:
 2617                             	.LBE3199:
 2618                             	.LBE3204:
 2619                             	.LBE3214:
 2620                             	.LBB3215:
 2621                             	.LBB3216:
 2622                             	.LBB3217:
 2623                             	.LBB3218:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2624                             		.loc 4 342 3
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2625                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2626                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2627                             		.loc 4 345 3
 2628                             	.LBE3218:
 2629                             	.LBE3217:
 2630                             	.LBE3216:
 2631                             	.LBE3215:
 2632                             	.LBB3222:
 2633                             	.LBB3223:
 2634                             	.LBB3224:
 2635                             	.LBB3225:
 2636                             	.LBB3226:
 2637                             	.LBB3227:
 2638                             	.LBB3228:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2639                             		.loc 4 95 14 is_stmt 0
 2640 0092 61 03                   		cmp	#0, r3
 2641 0094 66 26                   		mov.L	#2, r6
 2642                             	.LVL232:
 2643 0096 29 04                   		blt 1f
 2644 0098 66 16                   		mov #1, r6
 2645                             	1:
 2646                             	.LBE3228:
 2647                             	.LBE3227:
 2648                             	.LBB3229:
 2649                             	.LBB3230:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2650                             		.loc 4 71 14
 2651 009a 66 32                   		mov.L	#3, r2
 2652 009c 53 32                   		and	r3, r2
 2653                             	.LVL233:
 2654                             	.LBE3230:
 2655                             	.LBE3229:
 2656                             	.LBB3231:
 2657                             	.LBB3232:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2658                             		.loc 4 142 15
 2659 009e 6A 23                   		shar	#2, r3
 2660                             	.LVL234:
 2661                             	.LBE3232:
 2662                             	.LBE3231:
 2663                             	.LBB3233:
 2664                             	.LBB3234:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2665                             		.loc 4 71 14
 2666 00a0 47 62                   		cmp	r6, r2
 2667 00a2 FC DB 2A                		scgt.L	r2
 2668                             	.LVL235:
 2669                             	.LBE3234:
 2670                             	.LBE3233:
 2671                             	.LBB3235:
 2672                             	.LBB3236:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2673                             		.loc 4 95 14
 2674 00a5 4B 32                   		add	r3, r2
 2675                             	.LBE3236:
 2676                             	.LBE3235:
 2677                             	.LBE3226:
 2678                             	.LBE3225:
 2679                             	.LBE3224:
 2680                             	.LBE3223:
 2681                             	.LBE3222:
 2682                             	.LBB3237:
 2683                             	.LBB3184:
 2684                             	.LBB3178:
 2685                             	.LBB3172:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2686                             		.loc 4 348 49
 2687 00a7 61 04                   		cmp	#0, r4
 2688 00a9 28 0F                   		bge	.L204
 2689 00ab 70 7B FF FF FF 7F       		add	#0x7fffffff, r7, r11
 2690 00b1 FD 74 24 00             		adc	#0, r4
 2691 00b5 EF B7                   		mov.L	r11, r7
 2692 00b7 03                      		.balign 8,3,1
 2693                             	.L204:
 2694 00b8 6C 14                   		shll	#1, r4
 2695 00ba FD 9F 73                		shlr	#31, r7, r3
 2696 00bd 57 43                   		or	r4, r3
 2697                             	.LBE3172:
 2698                             	.LBE3178:
 2699                             	.LBE3184:
 2700                             	.LBE3237:
 2701                             	.LBB3238:
 2702                             	.LBB3239:
 2703                             	.LBB3240:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2704                             		.loc 4 95 14
 2705 00bf 4B 32                   		add	r3, r2
 2706                             	.LBE3240:
 2707                             	.LBE3239:
 2708                             	.LBE3238:
 2709                             	.LBB3241:
 2710                             	.LBB3221:
 2711                             	.LBB3220:
 2712                             	.LBB3219:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2713                             		.loc 4 345 16
 2714 00c1 FD 70 62 AB AA AA 2A    		emul	#0x2aaaaaab, r2
 2715                             	.LVL236:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2716                             		.loc 4 346 3 is_stmt 1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2717                             		.loc 4 346 35 is_stmt 0
 2718 00c8 61 03                   		cmp	#0, r3
 2719 00ca FB 72 01 00 00 C0       		mov.L	#-1073741823, r7
 2720                             	.LVL237:
 2721 00d0 29 08                   		blt 1f
 2722 00d2 FB 72 00 00 00 40       		mov #0x40000000, r7
 2723                             	1:
 2724                             	.LVL238:
 2725 00d8 FB 46 FF                		mov.L	#-1, r4
 2726                             	.LVL239:
 2727 00db 29 04                   		blt 1f
 2728 00dd 66 04                   		mov #0, r4
 2729                             	1:
 2730                             	.LVL240:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2731                             		.loc 4 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2732                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2733                             		.loc 4 348 49 is_stmt 0
 2734 00df FF 2E 72                		add	r7, r2, r14
 2735                             	.LVL241:
 2736 00e2 FC 0B 34                		adc	r3, r4
 2737                             	.LVL242:
 2738 00e5 26 0E                   		bpz	.L213
 2739 00e7 70 E3 FF FF FF 7F       		add	#0x7fffffff, r14, r3
 2740                             	.LVL243:
 2741 00ed FD 74 24 00             		adc	#0, r4
 2742 00f1 EF 3E                   		mov.L	r3, r14
 2743                             		.balign 8,3,1
 2744                             	.L213:
 2745 00f3 6C 14                   		shll	#1, r4
 2746 00f5 FD 9F E3                		shlr	#31, r14, r3
 2747 00f8 57 43                   		or	r4, r3
 2748                             	.LBE3219:
 2749                             	.LBE3220:
 2750                             	.LBE3221:
 2751                             	.LBE3241:
 2752                             	.LBB3242:
 2753                             	.LBB3243:
 2754                             	.LBB3244:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2755                             		.loc 4 95 14
 2756 00fa 4B 35                   		add	r3, r5
 2757                             	.LVL244:
 2758                             	.LBE3244:
 2759                             	.LBE3243:
 2760                             	.LBE3242:
 2761                             	.LBB3245:
 2762                             	.LBB3246:
 2763                             	.LBB3247:
 2764                             	.LBB3248:
 2765                             	.LBB3249:
 2766                             	.LBB3250:
 2767                             	.LBB3251:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2768                             		.loc 4 71 14
 2769 00fc 66 17                   		mov.L	#1, r7
 2770 00fe 53 57                   		and	r5, r7
 2771                             	.LVL245:
 2772 0100 FD A1 54                		shar	#1, r5, r4
 2773                             	.LBE3251:
 2774                             	.LBE3250:
 2775                             	.LBB3252:
 2776                             	.LBB3253:
 2777                             	.LBB3254:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2778                             		.loc 4 159 12
 2779 0103 61 05                   		cmp	#0, r5
 2780 0105 29 04                   		blt	.L215
 2781                             	.LVL246:
 2782 0107 4B 74                   		add	r7, r4
 2783                             	.LVL247:
 2784                             		.balign 8,3,1
 2785                             	.L215:
 2786                             	.LBE3254:
 2787                             	.LBE3253:
 2788                             	.LBE3252:
 2789                             	.LBE3249:
 2790                             	.LBE3248:
 2791                             	.LBE3247:
 2792                             	.LBE3246:
 2793                             	.LBE3245:
 2794                             	.LBB3255:
 2795                             	.LBB3256:
 2796                             	.LBB3257:
 2797                             	.LBB3258:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2798                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2799                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2800                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2801                             		.loc 4 345 3
 2802                             	.LBE3258:
 2803                             	.LBE3257:
 2804                             	.LBE3256:
 2805                             	.LBE3255:
 2806                             	.LBB3262:
 2807                             	.LBB3263:
 2808                             	.LBB3264:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2809                             		.loc 4 95 14 is_stmt 0
 2810 0109 4B 14                   		add	r1, r4
 2811                             	.LVL248:
 2812                             	.LBE3264:
 2813                             	.LBE3263:
 2814                             	.LBE3262:
 2815                             	.LBB3265:
 2816                             	.LBB3261:
 2817                             	.LBB3260:
 2818                             	.LBB3259:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2819                             		.loc 4 345 16
 2820 010b FD 70 64 94 A8 F5 70    		emul	#0x70f5a894, r4
 2821                             	.LVL249:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2822                             		.loc 4 346 3 is_stmt 1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2823                             		.loc 4 346 35 is_stmt 0
 2824 0112 61 05                   		cmp	#0, r5
 2825 0114 FB 72 01 00 00 C0       		mov.L	#-1073741823, r7
 2826                             	.LVL250:
 2827 011a 29 08                   		blt 1f
 2828 011c FB 72 00 00 00 40       		mov #0x40000000, r7
 2829                             	1:
 2830 0122 FB 36 FF                		mov.L	#-1, r3
 2831 0125 29 04                   		blt 1f
 2832 0127 66 03                   		mov #0, r3
 2833                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2834                             		.loc 4 347 3 is_stmt 1
 2835                             	.LVL251:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2836                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2837                             		.loc 4 348 49 is_stmt 0
 2838 0129 FF 21 74                		add	r7, r4, r1
 2839                             	.LVL252:
 2840 012c FC 0B 35                		adc	r3, r5
 2841                             	.LVL253:
 2842 012f 26 0E                   		bpz	.L211
 2843 0131 70 1B FF FF FF 7F       		add	#0x7fffffff, r1, r11
 2844 0137 FD 74 25 00             		adc	#0, r5
 2845 013b EF B1                   		mov.L	r11, r1
 2846                             		.balign 8,3,1
 2847                             	.L211:
 2848 013d 6C 15                   		shll	#1, r5
 2849 013f 69 F1                   		shlr	#31, r1
 2850 0141 57 51                   		or	r5, r1
 2851                             	.LBE3259:
 2852                             	.LBE3260:
 2853                             	.LBE3261:
 2854                             	.LBE3265:
 2855                             	.LBB3266:
 2856                             	.LBB3267:
 2857                             	.LBB3268:
 2858                             	.LBB3269:
 2859                             	.LBB3270:
 2860                             	.LBB3271:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2861                             		.loc 4 95 14
 2862 0143 70 11 94 A8 F5 70       		add	#0x70f5a894, r1
 2863                             	.LVL254:
 2864                             	.LBE3271:
 2865                             	.LBE3270:
 2866                             	.LBE3269:
 2867                             	.LBE3268:
 2868                             	.LBE3267:
 2869                             	.LBE3266:
 753:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 2870                             		.loc 4 753 1
 2871 0149 3F 6B 06                		rtsd	#24, r6-r11
 2872                             	.LFE2769:
 2874 014c 76 10 01 00             		.section	.text._ZN8gemmlowp22exp_on_negative_valuesIlLi5EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 2875                             		.weak	__ZN8gemmlowp22exp_on_negative_valuesIlLi5EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 2877                             	__ZN8gemmlowp22exp_on_negative_valuesIlLi5EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE:
 2878                             	.LFB2709:
 757:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 2879                             		.loc 4 757 25 is_stmt 1
 2880                             	.LVL255:
 2881 0000 6E 6C                   		pushm	r6-r12
 2882                             	.LCFI6:
 2883                             	.LVL256:
 757:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 2884                             		.loc 4 757 25 is_stmt 0
 2885 0002 EF 17                   		mov.L	r1, r7
 2886                             	.LVL257:
 2887                             	.LBB3627:
 2888                             	.LBB3628:
 2889                             	.LBB3629:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2890                             		.loc 4 107 14
 2891 0004 FB 62 00 00 00 FF       		mov.L	#-16777216, r6
 2892 000a 57 16                   		or	r1, r6
 2893                             	.LVL258:
 2894                             	.LBE3629:
 2895                             	.LBE3628:
 2896                             	.LBE3627:
 766:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       Rescale<0>(a_mod_quarter_minus_one_quarter));
 2897                             		.loc 4 766 75
 2898 000c FD C5 61                		shll	#5, r6, r1
 2899                             	.LVL259:
 2900 000f 05 00 00 00             		bsr	__ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_Li
 2901                             	.LVL260:
 2902                             	.LBB3630:
 2903                             	.LBB3631:
 2904                             	.LBB3632:
 2905                             	.LBB3633:
 2906                             	.LBB3634:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2907                             		.loc 4 345 16
 2908 0013 FB 22 7B BE AF 63       		mov.L	#0x63afbe7b, r2
 2909 0019 FC 1B 12                		emul	r1, r2
 2910 001c EF 2A                   		mov.L	r2, r10
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2911                             		.loc 4 346 35
 2912 001e 71 3B 00                		add	#0, r3, r11
 2913 0021 FB 42 01 00 00 C0       		mov.L	#-1073741823, r4
 2914 0027 29 08                   		blt 1f
 2915 0029 FB 42 00 00 00 40       		mov #0x40000000, r4
 2916                             	1:
 2917 002f FB 26 FF                		mov.L	#-1, r2
 2918 0032 29 04                   		blt 1f
 2919 0034 66 02                   		mov #0, r2
 2920                             	1:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2921                             		.loc 4 348 49
 2922 0036 FF 23 A4                		add	r10, r4, r3
 2923 0039 FC 0B B2                		adc	r11, r2
 2924                             	.LBE3634:
 2925                             	.LBE3633:
 2926                             	.LBE3632:
 2927                             	.LBE3631:
 2928                             	.LBE3630:
 2929                             	.LBB3651:
 2930                             	.LBB3652:
 2931                             	.LBB3653:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2932                             		.loc 4 107 14
 2933 003c FF 05 76                		sub	r7, r6, r5
 2934                             	.LVL261:
 2935                             	.LBE3653:
 2936                             	.LBE3652:
 2937                             	.LBE3651:
 2938                             	.LBB3654:
 2939                             	.LBB3638:
 2940                             	.LBB3639:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2941                             		.loc 4 159 12
 2942 003f FD 98 54                		shlr	#24, r5, r4
 2943 0042 64 14                   		and #1, r4
 2944 0044 FC 07 4A                		neg	r4, r10
 2945                             	.LVL262:
 2946                             	.LBE3639:
 2947                             	.LBE3638:
 2948                             	.LBB3640:
 2949                             	.LBB3637:
 2950                             	.LBB3636:
 2951                             	.LBB3635:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 2952                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 2953                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 2954                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2955                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2956                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 2957                             		.loc 4 347 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2958                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2959                             		.loc 4 348 49 is_stmt 0
 2960 0047 61 02                   		cmp	#0, r2
 2961 0049 28 0F                   		bge	.L254
 2962 004b 70 39 FF FF FF 7F       		add	#0x7fffffff, r3, r9
 2963 0051 FD 74 22 00             		adc	#0, r2
 2964 0055 EF 93                   		mov.L	r9, r3
 2965 0057 03                      		.balign 8,3,1
 2966                             	.L254:
 2967 0058 6C 12                   		shll	#1, r2
 2968 005a 69 F3                   		shlr	#31, r3
 2969 005c 57 23                   		or	r2, r3
 2970                             	.LBE3635:
 2971                             	.LBE3636:
 2972                             	.LBE3637:
 2973                             	.LBE3640:
 2974                             	.LBB3641:
 2975                             	.LBB3642:
 2976                             	.LBB3643:
 2977                             	.LBB3644:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2978                             		.loc 4 71 14
 2979 005e 60 14                   		sub	#1, r4
 2980                             	.LVL263:
 2981                             	.LBE3644:
 2982                             	.LBE3643:
 2983                             	.LBB3646:
 2984                             	.LBB3647:
 2985 0060 53 A3                   		and	r10, r3
 2986                             	.LBE3647:
 2987                             	.LBE3646:
 2988                             	.LBB3648:
 2989                             	.LBB3645:
 2990 0062 53 14                   		and	r1, r4
 2991                             	.LVL264:
 2992                             	.LBE3645:
 2993                             	.LBE3648:
 2994                             	.LBB3649:
 2995                             	.LBB3650:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 2996                             		.loc 4 83 14
 2997 0064 FC 37 34                		xor	r3, r4
 2998                             	.LVL265:
 2999                             	.LBE3650:
 3000                             	.LBE3649:
 3001                             	.LBE3642:
 3002                             	.LBE3641:
 3003                             	.LBE3654:
 3004                             	.LBB3655:
 3005                             	.LBB3656:
 3006                             	.LBB3657:
 3007                             	.LBB3658:
 3008                             	.LBB3659:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3009                             		.loc 4 345 16
 3010 0067 FB 12 F2 CB A2 4D       		mov.L	#0x4da2cbf2, r1
 3011 006d FC 1B 41                		emul	r4, r1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3012                             		.loc 4 346 35
 3013 0070 71 2B 00                		add	#0, r2, r11
 3014 0073 FB 32 01 00 00 C0       		mov.L	#-1073741823, r3
 3015 0079 29 08                   		blt 1f
 3016 007b FB 32 00 00 00 40       		mov #0x40000000, r3
 3017                             	1:
 3018 0081 FB E6 FF                		mov.L	#-1, r14
 3019 0084 29 04                   		blt 1f
 3020 0086 66 0E                   		mov #0, r14
 3021                             	1:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3022                             		.loc 4 348 49
 3023 0088 FF 22 31                		add	r3, r1, r2
 3024 008b FC 0B BE                		adc	r11, r14
 3025                             	.LBE3659:
 3026                             	.LBE3658:
 3027                             	.LBE3657:
 3028                             	.LBE3656:
 3029                             	.LBB3663:
 3030                             	.LBB3664:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3031                             		.loc 4 159 12
 3032 008e FD 99 53                		shlr	#25, r5, r3
 3033 0091 64 13                   		and #1, r3
 3034 0093 FC 07 3A                		neg	r3, r10
 3035                             	.LVL266:
 3036                             	.LBE3664:
 3037                             	.LBE3663:
 3038                             	.LBB3665:
 3039                             	.LBB3662:
 3040                             	.LBB3661:
 3041                             	.LBB3660:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3042                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3043                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3044                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3045                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3046                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3047                             		.loc 4 347 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3048                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3049                             		.loc 4 348 49 is_stmt 0
 3050 0096 61 0E                   		cmp	#0, r14
 3051 0098 28 0E                   		bge	.L249
 3052 009a 70 21 FF FF FF 7F       		add	#0x7fffffff, r2, r1
 3053 00a0 FD 74 2E 00             		adc	#0, r14
 3054 00a4 EF 12                   		mov.L	r1, r2
 3055                             		.balign 8,3,1
 3056                             	.L249:
 3057 00a6 6C 1E                   		shll	#1, r14
 3058 00a8 69 F2                   		shlr	#31, r2
 3059 00aa 57 E2                   		or	r14, r2
 3060                             	.LBE3660:
 3061                             	.LBE3661:
 3062                             	.LBE3662:
 3063                             	.LBE3665:
 3064                             	.LBB3666:
 3065                             	.LBB3667:
 3066                             	.LBB3668:
 3067                             	.LBB3669:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3068                             		.loc 4 71 14
 3069 00ac 60 13                   		sub	#1, r3
 3070                             	.LVL267:
 3071                             	.LBE3669:
 3072                             	.LBE3668:
 3073                             	.LBB3671:
 3074                             	.LBB3672:
 3075 00ae 53 A2                   		and	r10, r2
 3076                             	.LBE3672:
 3077                             	.LBE3671:
 3078                             	.LBB3673:
 3079                             	.LBB3670:
 3080 00b0 53 34                   		and	r3, r4
 3081                             	.LVL268:
 3082                             	.LBE3670:
 3083                             	.LBE3673:
 3084                             	.LBB3674:
 3085                             	.LBB3675:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3086                             		.loc 4 83 14
 3087 00b2 FC 37 24                		xor	r2, r4
 3088                             	.LVL269:
 3089                             	.LBE3675:
 3090                             	.LBE3674:
 3091                             	.LBE3667:
 3092                             	.LBE3666:
 3093                             	.LBE3655:
 3094                             	.LBB3676:
 3095                             	.LBB3677:
 3096                             	.LBB3678:
 3097                             	.LBB3679:
 3098                             	.LBB3680:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3099                             		.loc 4 345 16
 3100 00b5 FB 12 6C AC 16 2F       		mov.L	#0x2f16ac6c, r1
 3101 00bb FC 1B 41                		emul	r4, r1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3102                             		.loc 4 346 35
 3103 00be 71 2B 00                		add	#0, r2, r11
 3104 00c1 FB 32 01 00 00 C0       		mov.L	#-1073741823, r3
 3105 00c7 29 08                   		blt 1f
 3106 00c9 FB 32 00 00 00 40       		mov #0x40000000, r3
 3107                             	1:
 3108 00cf FB E6 FF                		mov.L	#-1, r14
 3109 00d2 29 04                   		blt 1f
 3110 00d4 66 0E                   		mov #0, r14
 3111                             	1:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3112                             		.loc 4 348 49
 3113 00d6 FF 2F 31                		add	r3, r1, r15
 3114 00d9 FC 0B 2E                		adc	r2, r14
 3115                             	.LBE3680:
 3116                             	.LBE3679:
 3117                             	.LBE3678:
 3118                             	.LBE3677:
 3119                             	.LBB3684:
 3120                             	.LBB3685:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3121                             		.loc 4 159 12
 3122 00dc FD 9A 52                		shlr	#26, r5, r2
 3123 00df 64 12                   		and #1, r2
 3124 00e1 FC 07 21                		neg	r2, r1
 3125                             	.LVL270:
 3126                             	.LBE3685:
 3127                             	.LBE3684:
 3128                             	.LBB3686:
 3129                             	.LBB3683:
 3130                             	.LBB3682:
 3131                             	.LBB3681:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3132                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3133                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3134                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3135                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3136                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3137                             		.loc 4 347 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3138                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3139                             		.loc 4 348 49 is_stmt 0
 3140 00e4 61 0E                   		cmp	#0, r14
 3141 00e6 28 0E                   		bge	.L244
 3142 00e8 70 F9 FF FF FF 7F       		add	#0x7fffffff, r15, r9
 3143 00ee FD 74 2E 00             		adc	#0, r14
 3144 00f2 EF 9F                   		mov.L	r9, r15
 3145                             		.balign 8,3,1
 3146                             	.L244:
 3147 00f4 6C 1E                   		shll	#1, r14
 3148 00f6 69 FF                   		shlr	#31, r15
 3149 00f8 57 EF                   		or	r14, r15
 3150                             	.LBE3681:
 3151                             	.LBE3682:
 3152                             	.LBE3683:
 3153                             	.LBE3686:
 3154                             	.LBB3687:
 3155                             	.LBB3688:
 3156                             	.LBB3689:
 3157                             	.LBB3690:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3158                             		.loc 4 71 14
 3159 00fa 60 12                   		sub	#1, r2
 3160                             	.LVL271:
 3161                             	.LBE3690:
 3162                             	.LBE3689:
 3163                             	.LBB3692:
 3164                             	.LBB3693:
 3165 00fc 53 1F                   		and	r1, r15
 3166                             	.LBE3693:
 3167                             	.LBE3692:
 3168                             	.LBB3694:
 3169                             	.LBB3691:
 3170 00fe 53 24                   		and	r2, r4
 3171                             	.LVL272:
 3172                             	.LBE3691:
 3173                             	.LBE3694:
 3174                             	.LBB3695:
 3175                             	.LBB3696:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3176                             		.loc 4 83 14
 3177 0100 FC 37 F4                		xor	r15, r4
 3178                             	.LVL273:
 3179                             	.LBE3696:
 3180                             	.LBE3695:
 3181                             	.LBE3688:
 3182                             	.LBE3687:
 3183                             	.LBE3676:
 3184                             	.LBB3697:
 3185                             	.LBB3698:
 3186                             	.LBB3699:
 3187                             	.LBB3700:
 3188                             	.LBB3701:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3189                             		.loc 4 345 16
 3190 0103 FB B2 A4 AA 52 11       		mov.L	#0x1152aaa4, r11
 3191 0109 FC 1B 4B                		emul	r4, r11
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3192                             		.loc 4 346 35
 3193 010c 71 C3 00                		add	#0, r12, r3
 3194 010f FB 12 01 00 00 C0       		mov.L	#-1073741823, r1
 3195 0115 29 08                   		blt 1f
 3196 0117 FB 12 00 00 00 40       		mov #0x40000000, r1
 3197                             	1:
 3198 011d FB E6 FF                		mov.L	#-1, r14
 3199 0120 29 04                   		blt 1f
 3200 0122 66 0E                   		mov #0, r14
 3201                             	1:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3202                             		.loc 4 348 49
 3203 0124 FF 2A 1B                		add	r1, r11, r10
 3204 0127 FC 0B 3E                		adc	r3, r14
 3205                             	.LBE3701:
 3206                             	.LBE3700:
 3207                             	.LBE3699:
 3208                             	.LBE3698:
 3209                             	.LBB3705:
 3210                             	.LBB3706:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3211                             		.loc 4 159 12
 3212 012a FD 9B 51                		shlr	#27, r5, r1
 3213 012d 64 11                   		and #1, r1
 3214 012f FC 07 13                		neg	r1, r3
 3215                             	.LVL274:
 3216                             	.LBE3706:
 3217                             	.LBE3705:
 3218                             	.LBB3707:
 3219                             	.LBB3704:
 3220                             	.LBB3703:
 3221                             	.LBB3702:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3222                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3223                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3224                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3225                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3226                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3227                             		.loc 4 347 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3228                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3229                             		.loc 4 348 49 is_stmt 0
 3230 0132 61 0E                   		cmp	#0, r14
 3231 0134 28 0E                   		bge	.L239
 3232 0136 70 AC FF FF FF 7F       		add	#0x7fffffff, r10, r12
 3233 013c FD 74 2E 00             		adc	#0, r14
 3234 0140 EF CA                   		mov.L	r12, r10
 3235                             		.balign 8,3,1
 3236                             	.L239:
 3237 0142 6C 1E                   		shll	#1, r14
 3238 0144 69 FA                   		shlr	#31, r10
 3239 0146 57 EA                   		or	r14, r10
 3240                             	.LBE3702:
 3241                             	.LBE3703:
 3242                             	.LBE3704:
 3243                             	.LBE3707:
 3244                             	.LBB3708:
 3245                             	.LBB3709:
 3246                             	.LBB3710:
 3247                             	.LBB3711:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3248                             		.loc 4 71 14
 3249 0148 60 11                   		sub	#1, r1
 3250                             	.LVL275:
 3251                             	.LBE3711:
 3252                             	.LBE3710:
 3253                             	.LBB3713:
 3254                             	.LBB3714:
 3255 014a 53 3A                   		and	r3, r10
 3256                             	.LBE3714:
 3257                             	.LBE3713:
 3258                             	.LBB3715:
 3259                             	.LBB3712:
 3260 014c 53 14                   		and	r1, r4
 3261                             	.LVL276:
 3262                             	.LBE3712:
 3263                             	.LBE3715:
 3264                             	.LBB3716:
 3265                             	.LBB3717:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3266                             		.loc 4 83 14
 3267 014e FC 37 A4                		xor	r10, r4
 3268                             	.LVL277:
 3269                             	.LBE3717:
 3270                             	.LBE3716:
 3271                             	.LBE3709:
 3272                             	.LBE3708:
 3273                             	.LBE3697:
 3274                             	.LBB3718:
 3275                             	.LBB3719:
 3276                             	.LBB3720:
 3277                             	.LBB3721:
 3278                             	.LBB3722:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3279                             		.loc 4 345 16
 3280 0151 FB 12 B7 2A 58 02       		mov.L	#0x2582ab7, r1
 3281 0157 FC 1B 41                		emul	r4, r1
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3282                             		.loc 4 346 35
 3283 015a 71 2B 00                		add	#0, r2, r11
 3284 015d FB 32 01 00 00 C0       		mov.L	#-1073741823, r3
 3285 0163 29 08                   		blt 1f
 3286 0165 FB 32 00 00 00 40       		mov #0x40000000, r3
 3287                             	1:
 3288 016b FB E6 FF                		mov.L	#-1, r14
 3289 016e 29 04                   		blt 1f
 3290 0170 66 0E                   		mov #0, r14
 3291                             	1:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3292                             		.loc 4 348 49
 3293 0172 FF 2F 31                		add	r3, r1, r15
 3294 0175 FC 0B 2E                		adc	r2, r14
 3295                             	.LBE3722:
 3296                             	.LBE3721:
 3297                             	.LBE3720:
 3298                             	.LBE3719:
 3299                             	.LBB3726:
 3300                             	.LBB3727:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3301                             		.loc 4 159 12
 3302 0178 FD 9C 53                		shlr	#28, r5, r3
 3303 017b 64 13                   		and #1, r3
 3304 017d FC 07 32                		neg	r3, r2
 3305                             	.LVL278:
 3306                             	.LBE3727:
 3307                             	.LBE3726:
 3308                             	.LBB3728:
 3309                             	.LBB3725:
 3310                             	.LBB3724:
 3311                             	.LBB3723:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3312                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3313                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3314                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3315                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3316                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3317                             		.loc 4 347 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3318                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3319                             		.loc 4 348 49 is_stmt 0
 3320 0180 61 0E                   		cmp	#0, r14
 3321 0182 28 0E                   		bge	.L234
 3322 0184 70 FA FF FF FF 7F       		add	#0x7fffffff, r15, r10
 3323 018a FD 74 2E 00             		adc	#0, r14
 3324 018e EF AF                   		mov.L	r10, r15
 3325                             		.balign 8,3,1
 3326                             	.L234:
 3327 0190 6C 1E                   		shll	#1, r14
 3328 0192 69 FF                   		shlr	#31, r15
 3329 0194 57 EF                   		or	r14, r15
 3330                             	.LBE3723:
 3331                             	.LBE3724:
 3332                             	.LBE3725:
 3333                             	.LBE3728:
 3334                             	.LBB3729:
 3335                             	.LBB3730:
 3336                             	.LBB3731:
 3337                             	.LBB3732:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3338                             		.loc 4 71 14
 3339 0196 60 13                   		sub	#1, r3
 3340                             	.LVL279:
 3341                             	.LBE3732:
 3342                             	.LBE3731:
 3343                             	.LBB3734:
 3344                             	.LBB3735:
 3345 0198 53 2F                   		and	r2, r15
 3346                             	.LBE3735:
 3347                             	.LBE3734:
 3348                             	.LBB3736:
 3349                             	.LBB3733:
 3350 019a 53 34                   		and	r3, r4
 3351                             	.LVL280:
 3352                             	.LBE3733:
 3353                             	.LBE3736:
 3354                             	.LBB3737:
 3355                             	.LBB3738:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3356                             		.loc 4 83 14
 3357 019c FC 37 F4                		xor	r15, r4
 3358                             	.LVL281:
 3359                             	.LBE3738:
 3360                             	.LBE3737:
 3361                             	.LBE3730:
 3362                             	.LBE3729:
 3363                             	.LBE3718:
 3364                             	.LBB3739:
 3365                             	.LBB3740:
 3366                             	.LBB3741:
 3367                             	.LBB3742:
 3368                             	.LBB3743:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3369                             		.loc 4 345 16
 3370 019f FB 9E 11 FE 0A          		mov.L	#0xafe11, r9
 3371 01a4 FC 1B 49                		emul	r4, r9
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3372                             		.loc 4 346 35
 3373 01a7 71 A3 00                		add	#0, r10, r3
 3374 01aa FB 12 01 00 00 C0       		mov.L	#-1073741823, r1
 3375 01b0 29 08                   		blt 1f
 3376 01b2 FB 12 00 00 00 40       		mov #0x40000000, r1
 3377                             	1:
 3378 01b8 FB E6 FF                		mov.L	#-1, r14
 3379 01bb 29 04                   		blt 1f
 3380 01bd 66 0E                   		mov #0, r14
 3381                             	1:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3382                             		.loc 4 348 49
 3383 01bf FF 2A 19                		add	r1, r9, r10
 3384 01c2 FC 0B 3E                		adc	r3, r14
 3385                             	.LBE3743:
 3386                             	.LBE3742:
 3387                             	.LBE3741:
 3388                             	.LBE3740:
 3389                             	.LBB3747:
 3390                             	.LBB3748:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3391                             		.loc 4 159 12
 3392 01c5 FD 9D 52                		shlr	#29, r5, r2
 3393 01c8 64 12                   		and #1, r2
 3394 01ca FC 07 21                		neg	r2, r1
 3395                             	.LVL282:
 3396                             	.LBE3748:
 3397                             	.LBE3747:
 3398                             	.LBB3749:
 3399                             	.LBB3746:
 3400                             	.LBB3745:
 3401                             	.LBB3744:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3402                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3403                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3404                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3405                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3406                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3407                             		.loc 4 347 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3408                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3409                             		.loc 4 348 49 is_stmt 0
 3410 01cd 61 0E                   		cmp	#0, r14
 3411 01cf 28 0E                   		bge	.L230
 3412 01d1 70 A9 FF FF FF 7F       		add	#0x7fffffff, r10, r9
 3413 01d7 FD 74 2E 00             		adc	#0, r14
 3414 01db EF 9A                   		mov.L	r9, r10
 3415                             		.balign 8,3,1
 3416                             	.L230:
 3417 01dd 6C 1E                   		shll	#1, r14
 3418 01df 69 FA                   		shlr	#31, r10
 3419 01e1 57 EA                   		or	r14, r10
 3420                             	.LBE3744:
 3421                             	.LBE3745:
 3422                             	.LBE3746:
 3423                             	.LBE3749:
 3424                             	.LBB3750:
 3425                             	.LBB3751:
 3426                             	.LBB3752:
 3427                             	.LBB3753:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3428                             		.loc 4 71 14
 3429 01e3 60 12                   		sub	#1, r2
 3430                             	.LVL283:
 3431                             	.LBE3753:
 3432                             	.LBE3752:
 3433                             	.LBB3755:
 3434                             	.LBB3756:
 3435 01e5 53 1A                   		and	r1, r10
 3436                             	.LBE3756:
 3437                             	.LBE3755:
 3438                             	.LBB3757:
 3439                             	.LBB3754:
 3440 01e7 53 24                   		and	r2, r4
 3441                             	.LVL284:
 3442                             	.LBE3754:
 3443                             	.LBE3757:
 3444                             	.LBB3758:
 3445                             	.LBB3759:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3446                             		.loc 4 83 14
 3447 01e9 EF A2                   		mov.L	r10, r2
 3448 01eb FC 37 42                		xor	r4, r2
 3449                             	.LVL285:
 3450                             	.LBE3759:
 3451                             	.LBE3758:
 3452                             	.LBE3751:
 3453                             	.LBE3750:
 3454                             	.LBE3739:
 3455                             	.LBB3760:
 3456                             	.LBB3761:
 3457                             	.LBB3762:
 3458                             	.LBB3763:
 3459                             	.LBB3764:
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3460                             		.loc 4 345 16
 3461 01ee 75 43 F2                		mov.L	#0xf2, r3
 3462 01f1 FC 1B 23                		emul	r2, r3
 3463 01f4 EF 4B                   		mov.L	r4, r11
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3464                             		.loc 4 346 35
 3465 01f6 62 04                   		add	#0, r4
 3466 01f8 FB 42 01 00 00 C0       		mov.L	#-1073741823, r4
 3467 01fe 29 08                   		blt 1f
 3468 0200 FB 42 00 00 00 40       		mov #0x40000000, r4
 3469                             	1:
 3470 0206 71 B6 00                		add	#0, r11, r6
 3471                             	.LVL286:
 3472 0209 FB E6 FF                		mov.L	#-1, r14
 3473 020c 29 04                   		blt 1f
 3474 020e 66 0E                   		mov #0, r14
 3475                             	1:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3476                             		.loc 4 348 49
 3477 0210 FF 21 43                		add	r4, r3, r1
 3478 0213 FC 0B 6E                		adc	r6, r14
 3479                             	.LBE3764:
 3480                             	.LBE3763:
 3481                             	.LBE3762:
 3482                             	.LBE3761:
 3483                             	.LBE3760:
 3484                             	.LBB3781:
 3485                             	.LBB3782:
 3486                             	.LBB3783:
 3487                             	.LBB3784:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3488                             		.loc 4 159 12
 3489 0216 61 07                   		cmp	#0, r7
 3490 0218 FC DB 70                		sceq.L	r7
 3491                             	.LVL287:
 3492                             	.LBE3784:
 3493                             	.LBE3783:
 3494                             	.LBE3782:
 3495                             	.LBE3781:
 3496                             	.LBB3788:
 3497                             	.LBB3768:
 3498                             	.LBB3769:
 3499 021b 69 E5                   		shlr	#30, r5
 3500                             	.LVL288:
 3501 021d 64 15                   		and #1, r5
 3502 021f FC 07 54                		neg	r5, r4
 3503                             	.LVL289:
 3504                             	.LBE3769:
 3505                             	.LBE3768:
 3506                             	.LBB3770:
 3507                             	.LBB3767:
 3508                             	.LBB3766:
 3509                             	.LBB3765:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3510                             		.loc 4 342 3 is_stmt 1
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 3511                             		.loc 4 343 3
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 3512                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3513                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3514                             		.loc 4 346 3
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 3515                             		.loc 4 347 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3516                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3517                             		.loc 4 348 49 is_stmt 0
 3518 0222 61 0E                   		cmp	#0, r14
 3519 0224 28 0E                   		bge	.L228
 3520 0226 70 13 FF FF FF 7F       		add	#0x7fffffff, r1, r3
 3521 022c FD 74 2E 00             		adc	#0, r14
 3522 0230 EF 31                   		mov.L	r3, r1
 3523                             		.balign 8,3,1
 3524                             	.L228:
 3525 0232 6C 1E                   		shll	#1, r14
 3526 0234 69 F1                   		shlr	#31, r1
 3527 0236 57 E1                   		or	r14, r1
 3528                             	.LBE3765:
 3529                             	.LBE3766:
 3530                             	.LBE3767:
 3531                             	.LBE3770:
 3532                             	.LBB3771:
 3533                             	.LBB3772:
 3534                             	.LBB3773:
 3535                             	.LBB3774:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3536                             		.loc 4 71 14
 3537 0238 60 15                   		sub	#1, r5
 3538                             	.LBE3774:
 3539                             	.LBE3773:
 3540                             	.LBB3776:
 3541                             	.LBB3777:
 3542 023a 53 41                   		and	r4, r1
 3543                             	.LBE3777:
 3544                             	.LBE3776:
 3545                             	.LBB3778:
 3546                             	.LBB3775:
 3547 023c FF 44 25                		and	r2, r5, r4
 3548                             	.LBE3775:
 3549                             	.LBE3778:
 3550                             	.LBB3779:
 3551                             	.LBB3780:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3552                             		.loc 4 83 14
 3553 023f FC 37 14                		xor	r1, r4
 3554                             	.LBE3780:
 3555                             	.LBE3779:
 3556                             	.LBE3772:
 3557                             	.LBE3771:
 3558                             	.LBE3788:
 3559                             	.LBB3789:
 3560                             	.LBB3790:
 3561                             	.LBB3791:
 3562                             	.LBB3792:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3563                             		.loc 4 71 14
 3564 0242 71 71 FF                		add	#-1, r7, r1
 3565                             	.LBE3792:
 3566                             	.LBE3791:
 3567                             	.LBE3790:
 3568                             	.LBE3789:
 3569                             	.LBB3800:
 3570                             	.LBB3787:
 3571                             	.LBB3786:
 3572                             	.LBB3785:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3573                             		.loc 4 159 12
 3574 0245 7E 17                   		neg	r7
 3575                             	.LBE3785:
 3576                             	.LBE3786:
 3577                             	.LBE3787:
 3578                             	.LBE3800:
 3579                             	.LBB3801:
 3580                             	.LBB3799:
 3581                             	.LBB3794:
 3582                             	.LBB3793:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3583                             		.loc 4 71 14
 3584 0247 53 41                   		and	r4, r1
 3585                             	.LBE3793:
 3586                             	.LBE3794:
 3587                             	.LBB3795:
 3588                             	.LBB3796:
 3589 0249 7B F7                   		bclr #31, r7
 3590                             	.LBE3796:
 3591                             	.LBE3795:
 3592                             	.LBB3797:
 3593                             	.LBB3798:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3594                             		.loc 4 83 14
 3595 024b FC 37 71                		xor	r7, r1
 3596                             	.LVL290:
 3597                             	.LBE3798:
 3598                             	.LBE3797:
 3599                             	.LBE3799:
 3600                             	.LBE3801:
 801:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 3601                             		.loc 4 801 1
 3602 024e 3F 6C 07                		rtsd	#28, r6-r12
 3603                             	.LFE2709:
 3605 0251 FD 70 40 00 00 00 80    		.section	.text._ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIsEENS_10Fixed
 3606                             		.weak	__ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIsEENS_10FixedPointIT_
 3608                             	__ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIsEENS_10FixedPointIT_Li0EEES
 3609                             	.LFB2785:
 732:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 3610                             		.loc 4 732 25 is_stmt 1
 3611                             	.LVL291:
 3612 0000 60 40                   		sub	#4, r0
 3613                             	.LCFI7:
 3614                             	.LVL292:
 732:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 3615                             		.loc 4 732 25 is_stmt 0
 3616 0002 99 03                   		mov.W	8[r0], r3
 3617                             	.LVL293:
 3618 0004 EF F1                   		mov.L	r15, r1
 3619                             	.LBB3966:
 3620                             	.LBB3967:
 3621                             	.LBB3968:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3622                             		.loc 4 95 12
 3623 0006 72 33 00 10             		add	#0x1000, r3
 3624                             	.LVL294:
 3625                             	.LBE3968:
 3626                             	.LBE3967:
 3627                             	.LBE3966:
 3628                             	.LBB3969:
 3629                             	.LBB3970:
 3630                             	.LBB3971:
 3631                             	.LBB3972:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 3632                             		.loc 4 355 3 is_stmt 1
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 3633                             		.loc 4 355 26 is_stmt 0
 3634 000a DF 32                   		mov.W	r3, r2
 3635 000c 76 02 00 80             		cmp	#-32768, r2
 3636 0010 3A B6 00                		beq	.L290
 3637                             	.LVL295:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 3638                             		.loc 4 356 3 is_stmt 1
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 3639                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3640                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 3641                             		.loc 4 359 3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 3642                             		.loc 4 360 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3643                             		.loc 4 358 16 is_stmt 0
 3644 0013 FF 34 22                		mul	r2, r2, r4
 3645                             	.LVL296:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 3646                             		.loc 4 361 49
 3647 0016 72 45 00 40             		add	#0x4000, r4, r5
 3648 001a 26 05 38 92 00          		bn	.L297
 3649 001f FD AF 5E                		shar	#15, r5, r14
 3650                             	.LVL297:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3651                             		.loc 4 362 3 is_stmt 1
 3652                             	.LBE3972:
 3653                             	.LBE3971:
 3654                             	.LBE3970:
 3655                             	.LBE3969:
 3656                             	.LBB3979:
 3657                             	.LBB3980:
 3658                             	.LBB3981:
 3659                             	.LBB3982:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 3660                             		.loc 4 355 3
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 3661                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 3662                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3663                             		.loc 4 358 3
 3664 0022 FF 34 EE                		mul	r14, r14, r4
 3665 0025 72 45 00 40             		add	#0x4000, r4, r5
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3666                             		.loc 4 358 16 is_stmt 0
 3667 0029 4F E2                   		mul	r14, r2
 3668                             	.LVL298:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 3669                             		.loc 4 359 3 is_stmt 1
 3670 002b 27 7C                   		bn	.L298
 3671                             	.LVL299:
 3672                             		.balign 8,3,2
 3673                             	.L278:
 3674 002d FD AF 54                		shar	#15, r5, r4
 3675 0030 6B 15                   		shar	#17, r5
 3676 0032 FD D0 4F                		shll	#16, r4, r15
 3677 0035 64 34                   		and #3, r4
 3678 0037 69 FF                   		shlr	#31, r15
 3679 0039 62 1F                   		add	#1, r15
 3680 003b DF FF                   		mov.W	r15, r15
 3681 003d 47 F4                   		cmp	r15, r4
 3682 003f FC DB 4A                		scgt.L	r4
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 3683                             		.loc 4 359 16 is_stmt 0
 3684 0042 61 02                   		cmp	#0, r2
 3685 0044 28 05 38 A9 00          		blt	.L299
 3686 0049 72 22 00 40             		add	#0x4000, r2
 3687                             	.LVL300:
 3688 004d 6A F2                   		shar	#15, r2
 3689                             	.LVL301:
 3690 004f 4B 25                   		add	r2, r5
 3691 0051 4B 45                   		add	r4, r5
 3692 0053 DF 55                   		mov.W	r5, r5
 3693 0055 76 15 AB 2A             		mul	#0x2aab, r5
 3694                             		.balign 8,3,1
 3695                             	.L281:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 3696                             		.loc 4 360 3 is_stmt 1
 3697                             	.LVL302:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3698                             		.loc 4 362 3
 3699                             	.LBE3982:
 3700                             	.LBE3981:
 3701                             	.LBE3980:
 3702                             	.LBE3979:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 3703                             		.loc 4 355 3
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 3704                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 3705                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3706                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 3707                             		.loc 4 359 3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 3708                             		.loc 4 360 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3709                             		.loc 4 362 3
 3710                             	.LBB3986:
 3711                             	.LBB3987:
 3712                             	.LBB3988:
 3713                             	.LBB3989:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 3714                             		.loc 4 355 3
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 3715                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 3716                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3717                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 3718                             		.loc 4 359 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 3719                             		.loc 4 359 16 is_stmt 0
 3720 0059 61 05                   		cmp	#0, r5
 3721 005b FB 4A 00 40             		mov.L	#0x4000, r4
 3722 005f 28 06                   		bge 1f
 3723 0061 FB 4A 01 C0             		mov #-16383, r4
 3724                             	1:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 3725                             		.loc 4 360 3 is_stmt 1
 3726                             	.LVL303:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3727                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 3728                             		.loc 4 361 49 is_stmt 0
 3729 0065 4B 45                   		add	r4, r5
 3730                             	.LVL304:
 3731 0067 27 3A                   		bn	.L300
 3732                             		.balign 8,3,1
 3733                             	.L286:
 3734 0069 6A F5                   		shar	#15, r5
 3735                             	.LBE3989:
 3736                             	.LBE3988:
 3737                             	.LBE3987:
 3738                             	.LBE3986:
 3739                             	.LBB3993:
 3740                             	.LBB3994:
 3741                             	.LBB3995:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3742                             		.loc 4 95 12
 3743 006b 4B E5                   		add	r14, r5
 3744                             	.LVL305:
 3745 006d DF 52                   		mov.W	r5, r2
 3746                             	.LBE3995:
 3747                             	.LBE3994:
 3748                             	.LBE3993:
 3749                             	.LBB3996:
 3750                             	.LBB3997:
 3751                             	.LBB3998:
 3752                             	.LBB3999:
 3753                             	.LBB4000:
 3754                             	.LBB4001:
 3755                             	.LBB4002:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3756                             		.loc 4 71 14
 3757 006f 64 15                   		and #1, r5
 3758                             	.LVL306:
 3759 0071 FD A1 24                		shar	#1, r2, r4
 3760                             	.LBE4002:
 3761                             	.LBE4001:
 3762                             	.LBB4004:
 3763                             	.LBB4005:
 3764                             	.LBB4006:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3765                             		.loc 4 159 12
 3766 0074 61 02                   		cmp	#0, r2
 3767 0076 28 05 38 94 00          		blt	.L301
 3768                             	.LVL307:
 3769                             		.balign 8,3,1
 3770                             	.L287:
 3771                             	.LBE4006:
 3772                             	.LBE4005:
 3773                             	.LBE4004:
 3774                             	.LBE4000:
 3775                             	.LBE3999:
 3776                             	.LBE3998:
 3777                             	.LBE3997:
 3778                             	.LBE3996:
 3779                             	.LBB4019:
 3780                             	.LBB4020:
 3781                             	.LBB4021:
 3782                             	.LBB4022:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 3783                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 3784                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 3785                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3786                             		.loc 4 358 3
 3787                             	.LBE4022:
 3788                             	.LBE4021:
 3789                             	.LBE4020:
 3790                             	.LBE4019:
 3791                             	.LBB4038:
 3792                             	.LBB4039:
 3793                             	.LBB4040:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3794                             		.loc 4 95 12 is_stmt 0
 3795 007b 4B 43                   		add	r4, r3
 3796                             	.LVL308:
 3797 007d 4B 35                   		add	r3, r5
 3798                             	.LVL309:
 3799                             	.LBE4040:
 3800                             	.LBE4039:
 3801                             	.LBE4038:
 3802                             	.LBB4043:
 3803                             	.LBB4033:
 3804                             	.LBB4028:
 3805                             	.LBB4023:
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 3806                             		.loc 4 357 16
 3807 007f DF 55                   		mov.W	r5, r5
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3808                             		.loc 4 358 16
 3809 0081 76 15 F6 70             		mul	#0x70f6, r5
 3810                             	.LVL310:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 3811                             		.loc 4 359 3 is_stmt 1
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 3812                             		.loc 4 359 16 is_stmt 0
 3813 0085 61 05                   		cmp	#0, r5
 3814 0087 29 53                   		blt	.L302
 3815                             	.LVL311:
 3816                             		.balign 8,3,3
 3817                             	.L282:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 3818                             		.loc 4 360 3 is_stmt 1
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3819                             		.loc 4 362 3
 3820                             	.LBE4023:
 3821                             	.LBE4028:
 3822                             	.LBE4033:
 3823                             	.LBE4043:
 3824                             	.LBB4044:
 3825                             	.LBB4045:
 3826                             	.LBB4046:
 3827                             	.LBB4047:
 3828                             	.LBB4048:
 3829                             	.LBB4049:
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 3830                             		.loc 4 264 3
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 3831                             		.loc 4 265 3
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 3832                             		.loc 4 266 3
 3833                             	.LBE4049:
 3834                             	.LBE4048:
 3835                             	.LBE4047:
 3836                             	.LBE4046:
 3837                             	.LBE4045:
 3838                             	.LBE4044:
 3839                             	.LBB4071:
 3840                             	.LBB4034:
 3841                             	.LBB4029:
 3842                             	.LBB4024:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 3843                             		.loc 4 361 40 is_stmt 0
 3844 0089 72 55 00 40             		add	#0x4000, r5
 3845                             	.LVL312:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 3846                             		.loc 4 361 49
 3847 008d 6A F5                   		shar	#15, r5
 3848                             	.LVL313:
 3849                             	.LBE4024:
 3850                             	.LBE4029:
 3851                             	.LBE4034:
 3852                             	.LBE4071:
 3853                             	.LBB4072:
 3854                             	.LBB4064:
 3855                             	.LBB4061:
 3856                             	.LBB4058:
 3857                             	.LBB4055:
 3858                             	.LBB4052:
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 3859                             		.loc 4 266 26
 3860 008f 72 55 F6 70             		add	#0x70f6, r5
 3861                             	.LVL314:
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 3862                             		.loc 4 267 3 is_stmt 1
 3863                             	.LBB4050:
 3864                             	.LBB4051:
 3865                             		.file 5 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3.
   1:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
   3:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Copyright (C) 2001-2018 Free Software Foundation, Inc.
   4:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** //
   5:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // any later version.
  10:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  11:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  16:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  20:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  25:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** /*
  26:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  27:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  30:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  38:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  39:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *
  42:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  */
  50:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  51:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****  */
  55:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  56:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  59:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  73:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** {
  75:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  77:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #if __cplusplus < 201103L
  78:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<bool _BoolType>
  82:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     struct __iter_swap
  83:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
  84:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	static void
  86:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	{
  88:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	    _ValueType1;
  90:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
  91:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  *__a = *__b;
  92:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  *__b = __tmp;
  93:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	}
  94:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     };
  95:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
  96:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<>
  97:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     struct __iter_swap<true>
  98:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
  99:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	static void
 101:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	{
 103:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 104:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	}
 105:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     };
 106:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #endif
 107:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 108:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 109:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 112:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 113:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   Nothing.
 114:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 115:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  iterators themselves.
 117:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 118:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     inline void
 120:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 122:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 123:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 125:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 127:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 128:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #if __cplusplus < 201103L
 129:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ValueType1;
 131:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ValueType2;
 133:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 134:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ValueType2>)
 136:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ValueType1>)
 138:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 139:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ReferenceType1;
 141:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	_ReferenceType2;
 143:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 147:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #else
 148:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       swap(*__a, *__b);
 149:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** #endif
 150:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     }
 151:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 152:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 153:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 160:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  The ranges must not overlap.
 163:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 164:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     _ForwardIterator2
 166:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 169:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 170:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 172:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 174:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 176:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       return __first2;
 179:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     }
 180:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h **** 
 181:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   /**
 182:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 183:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *
 188:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****    *  preprocessor macro.
 191:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   */
 192:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****   template<typename _Tp>
 193:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     inline const _Tp&
 195:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****     {
 197:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       // concept requirements
 198:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\bits\stl_algobase.h ****       if (__b < __a)
 3866                             		.loc 5 200 7 is_stmt 0
 3867 0093 76 05 FE 7F             		cmp	#0x7ffe, r5
 3868 0097 2B 06                   		ble	.L285
 3869 0099 FB 5A FF 7F             		mov	#0x7fff, r5
 3870                             	.LVL315:
 3871                             		.balign 8,3,1
 3872                             	.L285:
 3873                             	.LBE4051:
 3874                             	.LBE4050:
 3875                             	.LBE4052:
 3876                             	.LBE4055:
 3877                             	.LBE4058:
 3878                             	.LBE4061:
 3879                             	.LBE4064:
 3880                             	.LBB4065:
 3881                             	.LBB4066:
 494:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return retval;
 3882                             		.loc 4 494 5
 3883 009d D3 15                   		mov.W	r5, [r1]
 3884                             	.LVL316:
 3885                             	.LBE4066:
 3886                             	.LBE4065:
 3887                             	.LBE4072:
 753:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 3888                             		.loc 4 753 1
 3889 009f 67 01                   		rtsd	#4
 3890                             	.LVL317:
 3891                             	.L300:
 3892                             	.LBB4073:
 3893                             	.LBB3992:
 3894                             	.LBB3991:
 3895                             	.LBB3990:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 3896                             		.loc 4 361 49
 3897 00a1 72 55 FF 7F             		add	#0x7fff, r5
 3898 00a5 2E C4                   		bra	.L286
 3899                             	.LVL318:
 3900                             	.L298:
 3901 00a7 73 45 FF BF 00          		add	#0xbfff, r4, r5
 3902 00ac 2E 81                   		bra	.L278
 3903                             	.LVL319:
 3904                             	.L297:
 3905                             	.LBE3990:
 3906                             	.LBE3991:
 3907                             	.LBE3992:
 3908                             	.LBE4073:
 3909                             	.LBB4074:
 3910                             	.LBB3977:
 3911                             	.LBB3975:
 3912                             	.LBB3973:
 3913 00ae 73 45 FF BF 00          		add	#0xbfff, r4, r5
 3914 00b3 FD AF 5E                		shar	#15, r5, r14
 3915                             	.LVL320:
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3916                             		.loc 4 362 3 is_stmt 1
 3917                             	.LBE3973:
 3918                             	.LBE3975:
 3919                             	.LBE3977:
 3920                             	.LBE4074:
 3921                             	.LBB4075:
 3922                             	.LBB3985:
 3923                             	.LBB3984:
 3924                             	.LBB3983:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 3925                             		.loc 4 355 3
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 3926                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 3927                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3928                             		.loc 4 358 3
 3929 00b6 FF 34 EE                		mul	r14, r14, r4
 3930 00b9 72 45 00 40             		add	#0x4000, r4, r5
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3931                             		.loc 4 358 16 is_stmt 0
 3932 00bd 4F E2                   		mul	r14, r2
 3933                             	.LVL321:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 3934                             		.loc 4 359 3 is_stmt 1
 3935 00bf 27 05 38 6C FF          		bpz	.L278
 3936 00c4 2E E3                   		bra	.L298
 3937                             	.LVL322:
 3938                             	.L290:
 3939                             	.LBE3983:
 3940                             	.LBE3984:
 3941                             	.LBE3985:
 3942                             	.LBE4075:
 3943                             	.LBB4076:
 3944                             	.LBB3978:
 3945                             	.LBB3976:
 3946                             	.LBB3974:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 3947                             		.loc 4 355 26 is_stmt 0
 3948 00c6 FB 4A FF 2F             		mov.L	#0x2fff, r4
 3949                             	.LBE3974:
 3950                             	.LBE3976:
 3951                             	.LBE3978:
 3952                             	.LBE4076:
 3953                             	.LBB4077:
 3954                             	.LBB4017:
 3955                             	.LBB4015:
 3956                             	.LBB4013:
 3957                             	.LBB4011:
 3958                             	.LBB4009:
 3959                             	.LBB4003:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3960                             		.loc 4 71 14
 3961 00ca 66 15                   		mov	#1, r5
 3962                             	.LVL323:
 3963                             	.LBE4003:
 3964                             	.LBE4009:
 3965                             	.LBE4011:
 3966                             	.LBE4013:
 3967                             	.LBE4015:
 3968                             	.LBE4017:
 3969                             	.LBE4077:
 3970                             	.LBB4078:
 3971                             	.LBB4035:
 3972                             	.LBB4030:
 3973                             	.LBB4025:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 3974                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 3975                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 3976                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3977                             		.loc 4 358 3
 3978                             	.LBE4025:
 3979                             	.LBE4030:
 3980                             	.LBE4035:
 3981                             	.LBE4078:
 3982                             	.LBB4079:
 3983                             	.LBB4042:
 3984                             	.LBB4041:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 3985                             		.loc 4 95 12 is_stmt 0
 3986 00cc 4B 43                   		add	r4, r3
 3987                             	.LVL324:
 3988 00ce 4B 35                   		add	r3, r5
 3989                             	.LVL325:
 3990                             	.LBE4041:
 3991                             	.LBE4042:
 3992                             	.LBE4079:
 3993                             	.LBB4080:
 3994                             	.LBB4036:
 3995                             	.LBB4031:
 3996                             	.LBB4026:
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 3997                             		.loc 4 357 16
 3998 00d0 DF 55                   		mov.W	r5, r5
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 3999                             		.loc 4 358 16
 4000 00d2 76 15 F6 70             		mul	#0x70f6, r5
 4001                             	.LVL326:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4002                             		.loc 4 359 3 is_stmt 1
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4003                             		.loc 4 359 16 is_stmt 0
 4004 00d6 61 05                   		cmp	#0, r5
 4005 00d8 28 B1                   		bge	.L282
 4006                             	.LVL327:
 4007                             		.balign 8,3,3
 4008                             	.L302:
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 4009                             		.loc 4 360 3 is_stmt 1
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4010                             		.loc 4 362 3
 4011                             	.LBE4026:
 4012                             	.LBE4031:
 4013                             	.LBE4036:
 4014                             	.LBE4080:
 4015                             	.LBB4081:
 4016                             	.LBB4068:
 4017                             	.LBB4062:
 4018                             	.LBB4059:
 4019                             	.LBB4056:
 4020                             	.LBB4053:
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 4021                             		.loc 4 264 3
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 4022                             		.loc 4 265 3
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 4023                             		.loc 4 266 3
 4024                             	.LBE4053:
 4025                             	.LBE4056:
 4026                             	.LBE4059:
 4027                             	.LBE4062:
 4028                             	.LBE4068:
 4029                             	.LBE4081:
 4030                             	.LBB4082:
 4031                             	.LBB4037:
 4032                             	.LBB4032:
 4033                             	.LBB4027:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4034                             		.loc 4 361 49 is_stmt 0
 4035 00da 72 54 01 C0             		add	#-16383, r5, r4
 4036 00de 26 06                   		bpz	.L289
 4037 00e0 72 54 00 40             		add	#0x4000, r5, r4
 4038                             		.balign 8,3,2
 4039                             	.L289:
 4040 00e4 FD AF 45                		shar	#15, r4, r5
 4041                             	.LVL328:
 4042                             	.LBE4027:
 4043                             	.LBE4032:
 4044                             	.LBE4037:
 4045                             	.LBE4082:
 4046                             	.LBB4083:
 4047                             	.LBB4069:
 4048                             	.LBB4063:
 4049                             	.LBB4060:
 4050                             	.LBB4057:
 4051                             	.LBB4054:
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 4052                             		.loc 4 266 26
 4053 00e7 72 55 F6 70             		add	#0x70f6, r5
 4054                             	.LVL329:
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 4055                             		.loc 4 267 3 is_stmt 1
 4056                             	.LBE4054:
 4057                             	.LBE4057:
 4058                             	.LBE4060:
 4059                             	.LBE4063:
 4060                             	.LBE4069:
 4061                             	.LBB4070:
 4062                             	.LBB4067:
 494:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return retval;
 4063                             		.loc 4 494 5 is_stmt 0
 4064 00eb D3 15                   		mov.W	r5, [r1]
 4065                             	.LVL330:
 4066                             	.LBE4067:
 4067                             	.LBE4070:
 4068                             	.LBE4083:
 753:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 4069                             		.loc 4 753 1
 4070 00ed 67 01                   		rtsd	#4
 4071                             	.LVL331:
 4072                             	.L299:
 4073 00ef 72 2F 01 C0             		add	#-16383, r2, r15
 4074 00f3 27 13                   		bn	.L303
 4075                             		.balign 8,3,1
 4076                             	.L280:
 4077 00f5 6A FF                   		shar	#15, r15
 4078 00f7 4B F5                   		add	r15, r5
 4079 00f9 4B 54                   		add	r5, r4
 4080 00fb DF 44                   		mov.W	r4, r4
 4081 00fd FB 5A AB 2A             		mov.L	#0x2aab, r5
 4082 0101 4F 45                   		mul	r4, r5
 4083 0103 38 56 FF                		bra	.L281
 4084                             	.L303:
 4085 0106 72 2F 00 40             		add	#0x4000, r2, r15
 4086 010a 2E EB                   		bra	.L280
 4087                             	.LVL332:
 4088                             	.L301:
 4089                             	.LBB4084:
 4090                             	.LBB4018:
 4091                             	.LBB4016:
 4092                             	.LBB4014:
 4093                             	.LBB4012:
 4094                             	.LBB4010:
 4095                             	.LBB4008:
 4096                             	.LBB4007:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4097                             		.loc 4 159 12
 4098 010c 66 05                   		mov	#0, r5
 4099                             	.LVL333:
 4100 010e 38 6D FF                		bra	.L287
 4101                             	.LBE4007:
 4102                             	.LBE4008:
 4103                             	.LBE4010:
 4104                             	.LBE4012:
 4105                             	.LBE4014:
 4106                             	.LBE4016:
 4107                             	.LBE4018:
 4108                             	.LBE4084:
 4109                             	.LFE2785:
 4111 0111 FD 70 40 00 00 00 80    		.section	.text._ZN8gemmlowp22exp_on_negative_valuesIsLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 4112                             		.weak	__ZN8gemmlowp22exp_on_negative_valuesIsLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 4114                             	__ZN8gemmlowp22exp_on_negative_valuesIsLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE:
 4115                             	.LFB2717:
 757:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 4116                             		.loc 4 757 25 is_stmt 1
 4117                             	.LVL334:
 4118 0000 6E 6A                   		pushm	r6-r10
 4119                             	.LCFI8:
 4120 0002 60 80                   		sub	#8, r0
 4121                             	.LCFI9:
 4122                             	.LVL335:
 757:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 4123                             		.loc 4 757 25 is_stmt 0
 4124 0004 9C 07                   		mov.W	32[r0], r7
 4125                             	.LVL336:
 4126 0006 EF FA                   		mov.L	r15, r10
 4127                             	.LBB4441:
 4128                             	.LBB4442:
 4129                             	.LBB4443:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4130                             		.loc 4 107 12
 4131 0008 EF 76                   		mov.L	r7, r6
 4132 000a 76 36 00 FE             		or	#-512, r6
 4133                             	.LVL337:
 4134                             	.LBE4443:
 4135                             	.LBE4442:
 4136                             	.LBE4441:
 4137                             	.LBB4444:
 4138                             	.LBB4445:
 4139                             	.LBB4446:
 4140                             	.LBB4447:
 4141                             	.LBB4448:
 4142                             	.LBB4449:
 4143                             	.LBB4450:
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 4144                             		.loc 4 128 22
 4145 000e FD C4 65                		shll	#4, r6, r5
 4146                             	.LBE4450:
 4147                             	.LBE4449:
 4148                             	.LBE4448:
 4149                             	.LBE4447:
 4150                             	.LBE4446:
 4151                             	.LBE4445:
 4152                             	.LBE4444:
 766:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       Rescale<0>(a_mod_quarter_minus_one_quarter));
 4153                             		.loc 4 766 75
 4154 0011 D3 05                   		mov.W	r5, [r0]
 4155 0013 05 00 00 00             		bsr	__ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIsEENS_10FixedPointIT_Li
 4156                             	.LVL338:
 4157 0017 DC A1                   		mov.W	[r10], r1
 4158                             	.LBB4451:
 4159                             	.LBB4452:
 4160                             	.LBB4453:
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4161                             		.loc 4 107 12
 4162 0019 FF 05 76                		sub	r7, r6, r5
 4163                             	.LVL339:
 4164                             	.LBE4453:
 4165                             	.LBE4452:
 4166                             	.LBE4451:
 4167                             	.LBB4454:
 4168                             	.LBB4455:
 4169                             	.LBB4456:
 4170                             	.LBB4457:
 4171                             	.LBB4458:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4172                             		.loc 4 356 16
 4173 001c DF 14                   		mov.W	r1, r4
 4174                             	.LBE4458:
 4175                             	.LBE4457:
 4176                             	.LBE4456:
 4177                             	.LBE4455:
 4178                             	.LBB4471:
 4179                             	.LBB4472:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4180                             		.loc 4 159 12
 4181 001e DF 55                   		mov.W	r5, r5
 4182                             	.LBE4472:
 4183                             	.LBE4471:
 4184                             	.LBB4476:
 4185                             	.LBB4467:
 4186                             	.LBB4463:
 4187                             	.LBB4459:
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4188                             		.loc 4 358 16
 4189 0020 76 14 B0 63             		mul	#0x63b0, r4
 4190                             	.LBE4459:
 4191                             	.LBE4463:
 4192                             	.LBE4467:
 4193                             	.LBE4476:
 4194                             	.LBB4477:
 4195                             	.LBB4473:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4196                             		.loc 4 159 12
 4197 0024 FD A9 53                		shar	#9, r5, r3
 4198                             	.LBE4473:
 4199                             	.LBE4477:
 4200                             	.LBB4478:
 4201                             	.LBB4468:
 4202                             	.LBB4464:
 4203                             	.LBB4460:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4204                             		.loc 4 359 16
 4205 0027 61 04                   		cmp	#0, r4
 4206 0029 FB 2A 01 C0             		mov.L	#-16383, r2
 4207 002d 29 06                   		blt 1f
 4208 002f FB 2A 00 40             		mov #0x4000, r2
 4209                             	1:
 4210                             	.LBE4460:
 4211                             	.LBE4464:
 4212                             	.LBE4468:
 4213                             	.LBE4478:
 4214                             	.LBB4479:
 4215                             	.LBB4474:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4216                             		.loc 4 159 12
 4217 0033 64 13                   		and #1, r3
 4218                             	.LBE4474:
 4219                             	.LBE4479:
 4220                             	.LBB4480:
 4221                             	.LBB4469:
 4222                             	.LBB4465:
 4223                             	.LBB4461:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4224                             		.loc 4 361 49
 4225 0035 4B 24                   		add	r2, r4
 4226                             	.LBE4461:
 4227                             	.LBE4465:
 4228                             	.LBE4469:
 4229                             	.LBE4480:
 4230                             	.LBB4481:
 4231                             	.LBB4475:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4232                             		.loc 4 159 12
 4233 0037 FC 07 32                		neg	r3, r2
 4234                             	.LVL340:
 4235                             	.LBE4475:
 4236                             	.LBE4481:
 4237                             	.LBB4482:
 4238                             	.LBB4470:
 4239                             	.LBB4466:
 4240                             	.LBB4462:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 4241                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4242                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 4243                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4244                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4245                             		.loc 4 359 3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 4246                             		.loc 4 360 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4247                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4248                             		.loc 4 361 49 is_stmt 0
 4249 003a 61 04                   		cmp	#0, r4
 4250 003c 28 06                   		bge	.L319
 4251 003e 72 44 FF 7F             		add	#0x7fff, r4
 4252                             		.balign 8,3,1
 4253                             	.L319:
 4254 0042 6A F4                   		shar	#15, r4
 4255                             	.LBE4462:
 4256                             	.LBE4466:
 4257                             	.LBE4470:
 4258                             	.LBE4482:
 4259                             	.LBB4483:
 4260                             	.LBB4484:
 4261                             	.LBB4485:
 4262                             	.LBB4486:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4263                             		.loc 4 71 14
 4264 0044 60 13                   		sub	#1, r3
 4265                             	.LVL341:
 4266                             	.LBE4486:
 4267                             	.LBE4485:
 4268                             	.LBB4488:
 4269                             	.LBB4489:
 4270 0046 53 42                   		and	r4, r2
 4271                             	.LVL342:
 4272                             	.LBE4489:
 4273                             	.LBE4488:
 4274                             	.LBB4490:
 4275                             	.LBB4487:
 4276 0048 FF 44 13                		and	r1, r3, r4
 4277                             	.LBE4487:
 4278                             	.LBE4490:
 4279                             	.LBB4491:
 4280                             	.LBB4492:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4281                             		.loc 4 83 14
 4282 004b FC 37 42                		xor	r4, r2
 4283                             	.LVL343:
 4284                             	.LBE4492:
 4285                             	.LBE4491:
 4286                             	.LBE4484:
 4287                             	.LBE4483:
 4288                             	.LBE4454:
 4289                             	.LBB4493:
 4290                             	.LBB4494:
 4291                             	.LBB4495:
 4292                             	.LBB4496:
 4293                             	.LBB4497:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4294                             		.loc 4 356 16
 4295 004e DF 24                   		mov.W	r2, r4
 4296                             	.LBE4497:
 4297                             	.LBE4496:
 4298                             	.LBE4495:
 4299                             	.LBE4494:
 4300                             	.LBB4507:
 4301                             	.LBB4508:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4302                             		.loc 4 159 12
 4303 0050 FD AA 51                		shar	#10, r5, r1
 4304                             	.LBE4508:
 4305                             	.LBE4507:
 4306                             	.LBB4511:
 4307                             	.LBB4504:
 4308                             	.LBB4501:
 4309                             	.LBB4498:
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4310                             		.loc 4 358 16
 4311 0053 76 14 A3 4D             		mul	#0x4da3, r4
 4312                             	.LBE4498:
 4313                             	.LBE4501:
 4314                             	.LBE4504:
 4315                             	.LBE4511:
 4316                             	.LBB4512:
 4317                             	.LBB4509:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4318                             		.loc 4 159 12
 4319 0057 64 11                   		and #1, r1
 4320                             	.LBE4509:
 4321                             	.LBE4512:
 4322                             	.LBB4513:
 4323                             	.LBB4505:
 4324                             	.LBB4502:
 4325                             	.LBB4499:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4326                             		.loc 4 359 16
 4327 0059 61 04                   		cmp	#0, r4
 4328 005b FB 3A 01 C0             		mov.L	#-16383, r3
 4329 005f 29 06                   		blt 1f
 4330 0061 FB 3A 00 40             		mov #0x4000, r3
 4331                             	1:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4332                             		.loc 4 361 49
 4333 0065 4B 34                   		add	r3, r4
 4334                             	.LBE4499:
 4335                             	.LBE4502:
 4336                             	.LBE4505:
 4337                             	.LBE4513:
 4338                             	.LBB4514:
 4339                             	.LBB4510:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4340                             		.loc 4 159 12
 4341 0067 FC 07 13                		neg	r1, r3
 4342                             	.LVL344:
 4343                             	.LBE4510:
 4344                             	.LBE4514:
 4345                             	.LBB4515:
 4346                             	.LBB4506:
 4347                             	.LBB4503:
 4348                             	.LBB4500:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 4349                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4350                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 4351                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4352                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4353                             		.loc 4 359 3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 4354                             		.loc 4 360 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4355                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4356                             		.loc 4 361 49 is_stmt 0
 4357 006a 61 04                   		cmp	#0, r4
 4358 006c 28 06                   		bge	.L316
 4359 006e 72 44 FF 7F             		add	#0x7fff, r4
 4360                             		.balign 8,3,1
 4361                             	.L316:
 4362 0072 6A F4                   		shar	#15, r4
 4363                             	.LBE4500:
 4364                             	.LBE4503:
 4365                             	.LBE4506:
 4366                             	.LBE4515:
 4367                             	.LBB4516:
 4368                             	.LBB4517:
 4369                             	.LBB4518:
 4370                             	.LBB4519:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4371                             		.loc 4 71 14
 4372 0074 60 11                   		sub	#1, r1
 4373                             	.LVL345:
 4374                             	.LBE4519:
 4375                             	.LBE4518:
 4376                             	.LBB4521:
 4377                             	.LBB4522:
 4378 0076 53 43                   		and	r4, r3
 4379                             	.LVL346:
 4380                             	.LBE4522:
 4381                             	.LBE4521:
 4382                             	.LBB4523:
 4383                             	.LBB4520:
 4384 0078 FF 44 12                		and	r1, r2, r4
 4385                             	.LBE4520:
 4386                             	.LBE4523:
 4387                             	.LBB4524:
 4388                             	.LBB4525:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4389                             		.loc 4 83 14
 4390 007b FC 37 34                		xor	r3, r4
 4391                             	.LVL347:
 4392                             	.LBE4525:
 4393                             	.LBE4524:
 4394                             	.LBE4517:
 4395                             	.LBE4516:
 4396                             	.LBE4493:
 4397                             	.LBB4526:
 4398                             	.LBB4527:
 4399                             	.LBB4528:
 4400                             	.LBB4529:
 4401                             	.LBB4530:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4402                             		.loc 4 356 16
 4403 007e DF 43                   		mov.W	r4, r3
 4404                             	.LBE4530:
 4405                             	.LBE4529:
 4406                             	.LBE4528:
 4407                             	.LBE4527:
 4408                             	.LBB4540:
 4409                             	.LBB4541:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4410                             		.loc 4 159 12
 4411 0080 FD AB 52                		shar	#11, r5, r2
 4412                             	.LBE4541:
 4413                             	.LBE4540:
 4414                             	.LBB4544:
 4415                             	.LBB4537:
 4416                             	.LBB4534:
 4417                             	.LBB4531:
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4418                             		.loc 4 358 16
 4419 0083 76 13 17 2F             		mul	#0x2f17, r3
 4420                             	.LBE4531:
 4421                             	.LBE4534:
 4422                             	.LBE4537:
 4423                             	.LBE4544:
 4424                             	.LBB4545:
 4425                             	.LBB4542:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4426                             		.loc 4 159 12
 4427 0087 64 12                   		and #1, r2
 4428                             	.LBE4542:
 4429                             	.LBE4545:
 4430                             	.LBB4546:
 4431                             	.LBB4538:
 4432                             	.LBB4535:
 4433                             	.LBB4532:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4434                             		.loc 4 359 16
 4435 0089 61 03                   		cmp	#0, r3
 4436 008b FB 1A 01 C0             		mov.L	#-16383, r1
 4437 008f 29 06                   		blt 1f
 4438 0091 FB 1A 00 40             		mov #0x4000, r1
 4439                             	1:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4440                             		.loc 4 361 49
 4441 0095 4B 13                   		add	r1, r3
 4442                             	.LBE4532:
 4443                             	.LBE4535:
 4444                             	.LBE4538:
 4445                             	.LBE4546:
 4446                             	.LBB4547:
 4447                             	.LBB4543:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4448                             		.loc 4 159 12
 4449 0097 FC 07 21                		neg	r2, r1
 4450                             	.LVL348:
 4451                             	.LBE4543:
 4452                             	.LBE4547:
 4453                             	.LBB4548:
 4454                             	.LBB4539:
 4455                             	.LBB4536:
 4456                             	.LBB4533:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 4457                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4458                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 4459                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4460                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4461                             		.loc 4 359 3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 4462                             		.loc 4 360 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4463                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4464                             		.loc 4 361 49 is_stmt 0
 4465 009a 61 03                   		cmp	#0, r3
 4466 009c 28 06                   		bge	.L313
 4467 009e 72 33 FF 7F             		add	#0x7fff, r3
 4468                             		.balign 8,3,1
 4469                             	.L313:
 4470 00a2 6A F3                   		shar	#15, r3
 4471                             	.LBE4533:
 4472                             	.LBE4536:
 4473                             	.LBE4539:
 4474                             	.LBE4548:
 4475                             	.LBB4549:
 4476                             	.LBB4550:
 4477                             	.LBB4551:
 4478                             	.LBB4552:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4479                             		.loc 4 71 14
 4480 00a4 60 12                   		sub	#1, r2
 4481                             	.LVL349:
 4482                             	.LBE4552:
 4483                             	.LBE4551:
 4484                             	.LBB4554:
 4485                             	.LBB4555:
 4486 00a6 53 13                   		and	r1, r3
 4487                             	.LBE4555:
 4488                             	.LBE4554:
 4489                             	.LBB4556:
 4490                             	.LBB4553:
 4491 00a8 53 24                   		and	r2, r4
 4492                             	.LVL350:
 4493                             	.LBE4553:
 4494                             	.LBE4556:
 4495                             	.LBB4557:
 4496                             	.LBB4558:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4497                             		.loc 4 83 14
 4498 00aa FC 37 34                		xor	r3, r4
 4499                             	.LVL351:
 4500                             	.LBE4558:
 4501                             	.LBE4557:
 4502                             	.LBE4550:
 4503                             	.LBE4549:
 4504                             	.LBE4526:
 4505                             	.LBB4559:
 4506                             	.LBB4560:
 4507                             	.LBB4561:
 4508                             	.LBB4562:
 4509                             	.LBB4563:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4510                             		.loc 4 356 16
 4511 00ad DF 42                   		mov.W	r4, r2
 4512                             	.LBE4563:
 4513                             	.LBE4562:
 4514                             	.LBE4561:
 4515                             	.LBE4560:
 4516                             	.LBB4573:
 4517                             	.LBB4574:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4518                             		.loc 4 159 12
 4519 00af FD AC 53                		shar	#12, r5, r3
 4520                             	.LBE4574:
 4521                             	.LBE4573:
 4522                             	.LBB4577:
 4523                             	.LBB4570:
 4524                             	.LBB4567:
 4525                             	.LBB4564:
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4526                             		.loc 4 358 16
 4527 00b2 76 12 53 11             		mul	#0x1153, r2
 4528                             	.LBE4564:
 4529                             	.LBE4567:
 4530                             	.LBE4570:
 4531                             	.LBE4577:
 4532                             	.LBB4578:
 4533                             	.LBB4575:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4534                             		.loc 4 159 12
 4535 00b6 64 13                   		and #1, r3
 4536                             	.LBE4575:
 4537                             	.LBE4578:
 4538                             	.LBB4579:
 4539                             	.LBB4571:
 4540                             	.LBB4568:
 4541                             	.LBB4565:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4542                             		.loc 4 359 16
 4543 00b8 61 02                   		cmp	#0, r2
 4544 00ba FB 1A 01 C0             		mov.L	#-16383, r1
 4545 00be 29 06                   		blt 1f
 4546 00c0 FB 1A 00 40             		mov #0x4000, r1
 4547                             	1:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4548                             		.loc 4 361 49
 4549 00c4 4B 12                   		add	r1, r2
 4550                             	.LBE4565:
 4551                             	.LBE4568:
 4552                             	.LBE4571:
 4553                             	.LBE4579:
 4554                             	.LBB4580:
 4555                             	.LBB4576:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4556                             		.loc 4 159 12
 4557 00c6 FC 07 31                		neg	r3, r1
 4558                             	.LVL352:
 4559                             	.LBE4576:
 4560                             	.LBE4580:
 4561                             	.LBB4581:
 4562                             	.LBB4572:
 4563                             	.LBB4569:
 4564                             	.LBB4566:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 4565                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4566                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 4567                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4568                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4569                             		.loc 4 359 3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 4570                             		.loc 4 360 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4571                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4572                             		.loc 4 361 49 is_stmt 0
 4573 00c9 61 02                   		cmp	#0, r2
 4574 00cb 28 06                   		bge	.L310
 4575 00cd 72 22 FF 7F             		add	#0x7fff, r2
 4576                             		.balign 8,3,1
 4577                             	.L310:
 4578 00d1 6A F2                   		shar	#15, r2
 4579                             	.LBE4566:
 4580                             	.LBE4569:
 4581                             	.LBE4572:
 4582                             	.LBE4581:
 4583                             	.LBB4582:
 4584                             	.LBB4583:
 4585                             	.LBB4584:
 4586                             	.LBB4585:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4587                             		.loc 4 71 14
 4588 00d3 60 13                   		sub	#1, r3
 4589                             	.LVL353:
 4590                             	.LBE4585:
 4591                             	.LBE4584:
 4592                             	.LBB4587:
 4593                             	.LBB4588:
 4594 00d5 53 12                   		and	r1, r2
 4595                             	.LBE4588:
 4596                             	.LBE4587:
 4597                             	.LBB4589:
 4598                             	.LBB4586:
 4599 00d7 53 34                   		and	r3, r4
 4600                             	.LVL354:
 4601                             	.LBE4586:
 4602                             	.LBE4589:
 4603                             	.LBB4590:
 4604                             	.LBB4591:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4605                             		.loc 4 83 14
 4606 00d9 FC 37 42                		xor	r4, r2
 4607                             	.LVL355:
 4608                             	.LBE4591:
 4609                             	.LBE4590:
 4610                             	.LBE4583:
 4611                             	.LBE4582:
 4612                             	.LBE4559:
 4613                             	.LBB4592:
 4614                             	.LBB4593:
 4615                             	.LBB4594:
 4616                             	.LBB4595:
 4617                             	.LBB4596:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4618                             		.loc 4 356 16
 4619 00dc DF 24                   		mov.W	r2, r4
 4620                             	.LBE4596:
 4621                             	.LBE4595:
 4622                             	.LBE4594:
 4623                             	.LBE4593:
 4624                             	.LBB4606:
 4625                             	.LBB4607:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4626                             		.loc 4 159 12
 4627 00de FD AD 5E                		shar	#13, r5, r14
 4628                             	.LBE4607:
 4629                             	.LBE4606:
 4630                             	.LBB4610:
 4631                             	.LBB4603:
 4632                             	.LBB4600:
 4633                             	.LBB4597:
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4634                             		.loc 4 358 16
 4635 00e1 76 14 58 02             		mul	#0x258, r4
 4636                             	.LBE4597:
 4637                             	.LBE4600:
 4638                             	.LBE4603:
 4639                             	.LBE4610:
 4640                             	.LBB4611:
 4641                             	.LBB4608:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4642                             		.loc 4 159 12
 4643 00e5 64 1E                   		and #1, r14
 4644                             	.LBE4608:
 4645                             	.LBE4611:
 4646                             	.LBB4612:
 4647                             	.LBB4604:
 4648                             	.LBB4601:
 4649                             	.LBB4598:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4650                             		.loc 4 359 16
 4651 00e7 61 04                   		cmp	#0, r4
 4652 00e9 FB 3A 01 C0             		mov.L	#-16383, r3
 4653 00ed 29 06                   		blt 1f
 4654 00ef FB 3A 00 40             		mov #0x4000, r3
 4655                             	1:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4656                             		.loc 4 361 49
 4657 00f3 4B 34                   		add	r3, r4
 4658                             	.LBE4598:
 4659                             	.LBE4601:
 4660                             	.LBE4604:
 4661                             	.LBE4612:
 4662                             	.LBB4613:
 4663                             	.LBB4609:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4664                             		.loc 4 159 12
 4665 00f5 FC 07 E1                		neg	r14, r1
 4666                             	.LVL356:
 4667                             	.LBE4609:
 4668                             	.LBE4613:
 4669                             	.LBB4614:
 4670                             	.LBB4605:
 4671                             	.LBB4602:
 4672                             	.LBB4599:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 4673                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4674                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 4675                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4676                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4677                             		.loc 4 359 3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 4678                             		.loc 4 360 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4679                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4680                             		.loc 4 361 49 is_stmt 0
 4681 00f8 61 04                   		cmp	#0, r4
 4682 00fa 28 06                   		bge	.L308
 4683 00fc 72 44 FF 7F             		add	#0x7fff, r4
 4684                             		.balign 8,3,1
 4685                             	.L308:
 4686 0100 6A F4                   		shar	#15, r4
 4687                             	.LBE4599:
 4688                             	.LBE4602:
 4689                             	.LBE4605:
 4690                             	.LBE4614:
 4691                             	.LBB4615:
 4692                             	.LBB4616:
 4693                             	.LBB4617:
 4694                             	.LBB4618:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4695                             		.loc 4 71 14
 4696 0102 60 1E                   		sub	#1, r14
 4697                             	.LVL357:
 4698                             	.LBE4618:
 4699                             	.LBE4617:
 4700                             	.LBB4620:
 4701                             	.LBB4621:
 4702 0104 53 41                   		and	r4, r1
 4703                             	.LVL358:
 4704                             	.LBE4621:
 4705                             	.LBE4620:
 4706                             	.LBB4622:
 4707                             	.LBB4619:
 4708 0106 FF 44 E2                		and	r14, r2, r4
 4709                             	.LBE4619:
 4710                             	.LBE4622:
 4711                             	.LBB4623:
 4712                             	.LBB4624:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4713                             		.loc 4 83 14
 4714 0109 FC 37 14                		xor	r1, r4
 4715                             	.LVL359:
 4716                             	.LBE4624:
 4717                             	.LBE4623:
 4718                             	.LBE4616:
 4719                             	.LBE4615:
 4720                             	.LBE4592:
 4721                             	.LBB4625:
 4722                             	.LBB4626:
 4723                             	.LBB4627:
 4724                             	.LBB4628:
 4725                             	.LBB4629:
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4726                             		.loc 4 356 16
 4727 010c DF 43                   		mov.W	r4, r3
 4728                             	.LBE4629:
 4729                             	.LBE4628:
 4730                             	.LBE4627:
 4731                             	.LBE4626:
 4732                             	.LBB4642:
 4733                             	.LBB4643:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4734                             		.loc 4 159 12
 4735 010e 6A E5                   		shar	#14, r5
 4736                             	.LBE4643:
 4737                             	.LBE4642:
 4738                             	.LBB4646:
 4739                             	.LBB4638:
 4740                             	.LBB4634:
 4741                             	.LBB4630:
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4742                             		.loc 4 358 16
 4743 0110 63 B3                   		mul	#11, r3
 4744                             	.LBE4630:
 4745                             	.LBE4634:
 4746                             	.LBE4638:
 4747                             	.LBE4646:
 4748                             	.LBB4647:
 4749                             	.LBB4644:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4750                             		.loc 4 159 12
 4751 0112 64 15                   		and #1, r5
 4752                             	.LBE4644:
 4753                             	.LBE4647:
 4754                             	.LBB4648:
 4755                             	.LBB4639:
 4756                             	.LBB4635:
 4757                             	.LBB4631:
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4758                             		.loc 4 359 16
 4759 0114 61 03                   		cmp	#0, r3
 4760 0116 FB 2A 01 C0             		mov.L	#-16383, r2
 4761 011a 29 06                   		blt 1f
 4762 011c FB 2A 00 40             		mov #0x4000, r2
 4763                             	1:
 4764                             	.LBE4631:
 4765                             	.LBE4635:
 4766                             	.LBE4639:
 4767                             	.LBE4648:
 4768                             	.LBE4625:
 4769                             	.LBB4662:
 4770                             	.LBB4663:
 4771                             	.LBB4664:
 4772                             	.LBB4665:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4773                             		.loc 4 159 12
 4774 0120 DF 77                   		mov.W	r7, r7
 4775                             	.LVL360:
 4776                             	.LBE4665:
 4777                             	.LBE4664:
 4778                             	.LBE4663:
 4779                             	.LBE4662:
 4780                             	.LBB4672:
 4781                             	.LBB4649:
 4782                             	.LBB4640:
 4783                             	.LBB4636:
 4784                             	.LBB4632:
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4785                             		.loc 4 361 49
 4786 0122 4B 23                   		add	r2, r3
 4787                             	.LBE4632:
 4788                             	.LBE4636:
 4789                             	.LBE4640:
 4790                             	.LBE4649:
 4791                             	.LBE4672:
 4792                             	.LBB4673:
 4793                             	.LBB4670:
 4794                             	.LBB4668:
 4795                             	.LBB4666:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4796                             		.loc 4 159 12
 4797 0124 61 07                   		cmp	#0, r7
 4798 0126 FC DB 70                		sceq.L	r7
 4799                             	.LVL361:
 4800                             	.LBE4666:
 4801                             	.LBE4668:
 4802                             	.LBE4670:
 4803                             	.LBE4673:
 4804                             	.LBB4674:
 4805                             	.LBB4650:
 4806                             	.LBB4645:
 4807 0129 FC 07 51                		neg	r5, r1
 4808                             	.LVL362:
 4809                             	.LBE4645:
 4810                             	.LBE4650:
 4811                             	.LBB4651:
 4812                             	.LBB4641:
 4813                             	.LBB4637:
 4814                             	.LBB4633:
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 4815                             		.loc 4 355 3 is_stmt 1
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 4816                             		.loc 4 356 3
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 4817                             		.loc 4 357 3
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 4818                             		.loc 4 358 3
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 4819                             		.loc 4 359 3
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 4820                             		.loc 4 360 3
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4821                             		.loc 4 362 3
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 4822                             		.loc 4 361 49 is_stmt 0
 4823 012c 61 03                   		cmp	#0, r3
 4824 012e 28 06                   		bge	.L307
 4825 0130 72 33 FF 7F             		add	#0x7fff, r3
 4826                             		.balign 8,3,1
 4827                             	.L307:
 4828 0134 6A F3                   		shar	#15, r3
 4829                             	.LBE4633:
 4830                             	.LBE4637:
 4831                             	.LBE4641:
 4832                             	.LBE4651:
 4833                             	.LBB4652:
 4834                             	.LBB4653:
 4835                             	.LBB4654:
 4836                             	.LBB4655:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4837                             		.loc 4 71 14
 4838 0136 60 15                   		sub	#1, r5
 4839                             	.LBE4655:
 4840                             	.LBE4654:
 4841                             	.LBB4657:
 4842                             	.LBB4658:
 4843 0138 53 13                   		and	r1, r3
 4844                             	.LBE4658:
 4845                             	.LBE4657:
 4846                             	.LBB4659:
 4847                             	.LBB4656:
 4848 013a FF 41 54                		and	r5, r4, r1
 4849                             	.LBE4656:
 4850                             	.LBE4659:
 4851                             	.LBB4660:
 4852                             	.LBB4661:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4853                             		.loc 4 83 14
 4854 013d FC 37 13                		xor	r1, r3
 4855                             	.LBE4661:
 4856                             	.LBE4660:
 4857                             	.LBE4653:
 4858                             	.LBE4652:
 4859                             	.LBE4674:
 4860                             	.LBB4675:
 4861                             	.LBB4676:
 4862                             	.LBB4677:
 4863                             	.LBB4678:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4864                             		.loc 4 71 14
 4865 0140 71 71 FF                		add	#-1, r7, r1
 4866                             	.LBE4678:
 4867                             	.LBE4677:
 4868                             	.LBE4676:
 4869                             	.LBE4675:
 4870                             	.LBB4686:
 4871                             	.LBB4671:
 4872                             	.LBB4669:
 4873                             	.LBB4667:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4874                             		.loc 4 159 12
 4875 0143 7E 17                   		neg	r7
 4876                             	.LBE4667:
 4877                             	.LBE4669:
 4878                             	.LBE4671:
 4879                             	.LBE4686:
 4880                             	.LBB4687:
 4881                             	.LBB4685:
 4882                             	.LBB4680:
 4883                             	.LBB4679:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4884                             		.loc 4 71 14
 4885 0145 53 13                   		and	r1, r3
 4886                             	.LBE4679:
 4887                             	.LBE4680:
 4888                             	.LBB4681:
 4889                             	.LBB4682:
 4890 0147 76 27 FF 7F             		and #0x7fff, r7
 4891                             	.LBE4682:
 4892                             	.LBE4681:
 4893                             	.LBB4683:
 4894                             	.LBB4684:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 4895                             		.loc 4 83 14
 4896 014b FC 37 73                		xor	r7, r3
 4897                             	.LBE4684:
 4898                             	.LBE4683:
 4899                             	.LBE4685:
 4900                             	.LBE4687:
 799:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 4901                             		.loc 4 799 27
 4902 014e D3 A3                   		mov.W	r3, [r10]
 4903                             	.LVL363:
 801:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 4904                             		.loc 4 801 1
 4905 0150 EF A1                   		mov.L	r10, r1
 4906 0152 3F 6A 07                		rtsd	#28, r6-r10
 4907                             	.LFE2717:
 4909 0155 FC 13 00                		.section	.text._ZN6tflite3ops5micro11activations8TanhEvalEP13TfLiteContextP10TfLiteNode,"ax",@prog
 4910                             		.global	__ZN6tflite3ops5micro11activations8TanhEvalEP13TfLiteContextP10TfLiteNode
 4912                             	__ZN6tflite3ops5micro11activations8TanhEvalEP13TfLiteContextP10TfLiteNode:
 4913                             	.LFB2236:
  88:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const TfLiteEvalTensor* input =
 4914                             		.loc 1 88 65 is_stmt 1
 4915                             	.LVL364:
 4916 0000 6E 6D                   		pushm	r6-r13
 4917                             	.LCFI10:
 4918 0002 72 00 08 FF             		add	#-248, r0
 4919                             	.LCFI11:
  89:../src/tensorflow/lite/micro/kernels/tanh.cc ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
 4920                             		.loc 1 89 3
 4921                             	.LVL365:
 4922                             		.file 6 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
 4923                             		.loc 6 41 3
 4924                             	.LBB5120:
 4925                             	.LBB5121:
 4926                             	.LBB5122:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 4927                             		.loc 6 33 3
 4928 0006 61 01                   		cmp	#0, r1
 4929 0008 3A 98 06                		beq	.L338
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 4930                             		.loc 6 34 3 is_stmt 0
 4931 000b 71 26 00                		add	#0, r2, r6
 4932 000e 3A 92 06                		beq	.L338
 4933 0011 EF 1A                   		mov.L	r1, r10
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 4934                             		.loc 6 35 3 is_stmt 1
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 4935                             		.loc 6 35 32 is_stmt 0
 4936 0013 EC 65                   		mov.L	[r6], r5
 4937 0015 AD 1F                   		mov.L	84[r1], r7
 4938 0017 A8 5A                   		mov.L	4[r5], r2
 4939                             	.LVL366:
 4940 0019 7F 17                   		jsr	r7
 4941                             	.LVL367:
 4942 001b EF 18                   		mov.L	r1, r8
 4943                             	.LVL368:
 4944                             	.LBE5122:
 4945                             	.LBE5121:
 4946                             	.LBE5120:
  91:../src/tensorflow/lite/micro/kernels/tanh.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
 4947                             		.loc 1 91 3 is_stmt 1
 4948                             	.LBB5125:
 4949                             	.LBB5126:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
 4950                             		.loc 6 47 3
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 4951                             		.loc 6 48 3
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
 4952                             		.loc 6 49 3
 4953                             		.loc 6 49 32 is_stmt 0
 4954 001d A8 6D                   		mov.L	4[r6], r5
 4955 001f ED A7 15                		mov.L	84[r10], r7
 4956 0022 EF A1                   		mov.L	r10, r1
 4957                             	.LVL369:
 4958 0024 A8 5A                   		mov.L	4[r5], r2
 4959 0026 7F 17                   		jsr	r7
 4960                             	.LVL370:
 4961 0028 EF 17                   		mov.L	r1, r7
 4962                             	.LVL371:
 4963                             	.LBE5126:
 4964                             	.LBE5125:
  94:../src/tensorflow/lite/micro/kernels/tanh.cc ****   const OpData& data = *(static_cast<const OpData*>(node->user_data));
 4965                             		.loc 1 94 3 is_stmt 1
 4966 002a A9 65                   		mov.L	16[r6], r5
 4967 002c 61 05                   		cmp	#0, r5
 4968 002e 3A 72 06                		beq	.L338
  95:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 4969                             		.loc 1 95 3
 4970                             	.LVL372:
  97:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteFloat32: {
 4971                             		.loc 1 97 3
 4972                             	.LBB5127:
  97:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteFloat32: {
 4973                             		.loc 1 97 18 is_stmt 0
 4974 0031 ED 81 02                		mov.L	8[r8], r1
 4975                             	.LVL373:
  97:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteFloat32: {
 4976                             		.loc 1 97 3
 4977 0034 61 31                   		cmp	#3, r1
 4978 0036 3A DC 02                		beq	.L339
 4979 0039 24 05 38 34 01          		bleu	.L541
 4980 003e 61 71                   		cmp	#7, r1
 4981 0040 3A B9 04                		beq	.L343
 4982 0043 61 91                   		cmp	#9, r1
 4983 0045 3B C7 05                		bne	.L342
 4984                             	.LBB5128:
 126:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteInt8: {
 4985                             		.loc 1 126 7 is_stmt 1
 127:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_integer_ops::Tanh(
 4986                             		.loc 1 127 5
 127:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_integer_ops::Tanh(
 4987                             		.loc 1 127 23
 128:../src/tensorflow/lite/micro/kernels/tanh.cc ****           data.input_zero_point, data.input_range_radius, data.input_multiplier,
 4988                             		.loc 1 128 7
 130:../src/tensorflow/lite/micro/kernels/tanh.cc ****           tflite::micro::GetTensorData<int8_t>(input),
 4989                             		.loc 1 130 63 is_stmt 0
 4990 0048 71 0F 24                		add	#36, r0, r15
 4991 004b EF 81                   		mov.L	r8, r1
 129:../src/tensorflow/lite/micro/kernels/tanh.cc ****           data.input_left_shift, tflite::micro::GetTensorShape(input),
 4992                             		.loc 1 129 16
 4993 004d EC 59                   		mov.L	[r5], r9
 129:../src/tensorflow/lite/micro/kernels/tanh.cc ****           data.input_left_shift, tflite::micro::GetTensorShape(input),
 4994                             		.loc 1 129 39
 4995 004f A8 5B                   		mov.L	4[r5], r3
 129:../src/tensorflow/lite/micro/kernels/tanh.cc ****           data.input_left_shift, tflite::micro::GetTensorShape(input),
 4996                             		.loc 1 129 64
 4997 0051 E5 50 02 34             		mov.L	8[r5], 208[r0]
 130:../src/tensorflow/lite/micro/kernels/tanh.cc ****           tflite::micro::GetTensorData<int8_t>(input),
 4998                             		.loc 1 130 16
 4999 0055 ED 5D 03                		mov.L	12[r5], r13
 130:../src/tensorflow/lite/micro/kernels/tanh.cc ****           tflite::micro::GetTensorData<int8_t>(input),
 5000                             		.loc 1 130 63
 5001 0058 E7 03 39                		mov.L	r3, 228[r0]
 5002 005b 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 5003                             	.LVL374:
 132:../src/tensorflow/lite/micro/kernels/tanh.cc ****           tflite::micro::GetTensorData<int8_t>(output));
 5004                             		.loc 1 132 40
 5005 005f 66 CF                   		mov.L	#12, r15
 5006 0061 4B 0F                   		add	r0, r15
 5007 0063 EF 71                   		mov.L	r7, r1
 5008                             	.LBB5129:
 5009                             	.LBB5130:
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns const data for a TfLiteEvalTensor struct.
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** const T* GetTensorData(const TfLiteEvalTensor* tensor) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(tensor != nullptr);
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 5010                             		.loc 6 62 53
 5011 0065 EC 8B                   		mov.L	[r8], r11
 5012                             	.LVL375:
 5013                             	.LBE5130:
 5014                             	.LBE5129:
 132:../src/tensorflow/lite/micro/kernels/tanh.cc ****           tflite::micro::GetTensorData<int8_t>(output));
 5015                             		.loc 1 132 40
 5016 0067 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 5017                             	.LVL376:
 5018                             	.LBB5131:
 5019                             	.LBB5132:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 5020                             		.loc 6 55 28
 5021 006b ED 03 39                		mov.L	228[r0], r3
 5022 006e 61 07                   		cmp	#0, r7
 5023 0070 13                      		beq	.L400
 5024 0071 EC 77                   		mov.L	[r7], r7
 5025                             	.LVL377:
 5026                             		.balign 8,3,1
 5027                             	.L400:
 5028                             	.LBE5132:
 5029                             	.LBE5131:
 5030                             	.LBB5133:
 5031                             	.LBB5134:
 5032                             		.file 7 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_INTEGER_OPS_TANH_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_INTEGER_OPS_TANH_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** #include <limits>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** #include "fixedpoint/fixedpoint.h"
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** #include "tensorflow/lite/kernels/internal/common.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** namespace tflite {
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** namespace reference_integer_ops {
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** inline void Tanh(int32_t input_zero_point, int32_t input_range_radius,
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****                  int32_t input_multiplier, int32_t input_shift,
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****                  const RuntimeShape& input_shape, const int8_t* input_data,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****                  const RuntimeShape& output_shape, int8_t* output_data) {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****   // Integer bits must be in sync with Prepare() function.
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****   static constexpr int32_t kInputIntegerBits = 4;
 5033                             		.loc 7 31 3 is_stmt 1
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****   static constexpr int32_t kOutputScale = 7;
 5034                             		.loc 7 32 3
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****   static constexpr int32_t kMinInt8 = std::numeric_limits<int8_t>::min();
 5035                             		.loc 7 33 3
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****   static constexpr int32_t kMaxInt8 = std::numeric_limits<int8_t>::max();
 5036                             		.loc 7 34 3
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****   using F4 = gemmlowp::FixedPoint<int32_t, kInputIntegerBits>;
 5037                             		.loc 7 35 3
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
 5038                             		.loc 7 37 3
 5039                             	.LBB5135:
 5040                             	.LBB5136:
 5041                             		.file 8 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <algorithm>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstring>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <initializer_list>
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FusedActivationFunctionType : uint8_t {
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kNone,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu6,
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu1,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class PaddingType : uint8_t { kNone, kSame, kValid };
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct PaddingValues {
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // This enumeration allows for non-default formats for the weights array
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // of a fully-connected operator, allowing the use of special optimized
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // runtime paths.
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FullyConnectedWeightsFormat : uint8_t {
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Default format (flat 2D layout, the inner contiguous dimension
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is input_depth, the outer non-contiguous dimension is output_depth)
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kDefault,
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Summary: optimized layout for fast CPU runtime implementation,
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // aimed specifically at ARM CPUs at the moment, and specialized for
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 8-bit quantized layers.
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The use case we're concerned with here is: 8-bit quantization,
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // large weights matrix that doesn't fit in cache (e.g. 4096x2048 in
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // a key application that drove this), very small batch size (e.g. 1 -- 4).
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Even with 8-bit quantization of weights, the performance of memory
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses to the weights can become the dominant issue when
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the batch size is small, so each weight value is used in only a few
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // arithmetic ops, i.e. the fully-connected node has a low arithmetic
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // intensity. The specific issues that arise are of three kinds:
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (1) One may, ideally, max out DRAM bandwidth, i.e. be truly memory
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     bound. That's the "good" issue to run into.
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (2) One may run into sub-optimal pre-fetching: the data hasn't been
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     prefetched into the cache by the time we need it.
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (3) One may run into cache aliasing: multiple values that are
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     pre-fetched, alias each other in the L1 cache (which typically
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     has only 4-way set associativity in ARM CPUs) and thus evict
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     each other before we get to using them.
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The point of this shuffling is to avoid issues (2) and (3) so that
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // we get as fast as possible given only the hard constraint (1).
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This is achieved by turning the difficulty into a solution: the
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // difficulty, that each value loaded from memory is used only in
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // one kernel iteration, making this operation memory-intensive, hints at
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the solution, of shuffling the weights so that they are stored in the
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // exact order as the kernel needs to load them, so that the memory
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses made by the kernel are trivial. This solves (2) because the
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // trivial memory access pattern allows the CPU's automatic prefetching
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to perform very well (no need even for preload instructions), and this
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // solves (3) because the values being loaded concurrently are now
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // contiguous in the address space, thus don't alias each other in the cache.
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // On ARM, we typically want our kernel to process a 4x16 block of weights
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // at a time, because:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 16 is the number of bytes in a NEON register.
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 4 is how many rows we need to handle concurrently in the kernel in
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     order to have sufficient mutual independence of instructions to
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     maximize arithmetic throughput.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Finally, the 'Int8' part in the name refers to the fact that this
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // weights format has each weights value encoded as a signed int8_t value,
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // even if the data type of the weights buffer is uint8_t.  This is intended
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to save runtime kernels the effort to have to XOR the top bit of these
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // bytes before using them in signed arithmetic, see this file for more
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // explanations on the 'signed int8_t trick' in matrix multiplication kernels:
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   tensorflow/lite/toco/graph_transformations/ensure_uint8_weights_safe_for_fast_int8_kernels.c
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kShuffled4x16Int8,
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Quantization parameters, determining the mapping of quantized values
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // to real values (i.e. determining how quantized values are mathematically
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // interpreted).
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // The correspondence is as follows:
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //   real_value = scale * (quantized_value - zero_point);
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // In other words, zero_point designates which quantized value corresponds to
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // the real 0 value, and scale designates the difference between the real values
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // corresponding to consecutive quantized values differing by 1.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct QuantizationParams {
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t zero_point = 0;
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   double scale = 0.0;
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool operator==(const QuantizationParams& qp1,
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const QuantizationParams& qp2) {
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return qp1.zero_point == qp2.zero_point && qp1.scale == qp2.scale;
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct Dims {
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int sizes[N];
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int strides[N];
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** class RuntimeShape {
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  public:
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Shapes with dimensions up to 5 are stored directly in the structure, while
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // larger shapes are separately allocated.
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   static constexpr int kMaxSmallSize = 5;
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape& operator=(RuntimeShape const&) = delete;
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape() : size_(0) {}
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   explicit RuntimeShape(int dimensions_count) : size_(dimensions_count) {
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int shape_size, int32_t value) : size_(0) {
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(shape_size);
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < shape_size; ++i) {
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, value);
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int dimensions_count, const int32_t* dims_data) : size_(0) {
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     ReplaceWith(dimensions_count, dims_data);
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(const std::initializer_list<int> init_list) : size_(0) {
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom(init_list);
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Avoid using this constructor.  We should be able to delete it when C++17
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // rolls out.
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(RuntimeShape const& other) : size_(other.DimensionsCount()) {
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[size_];
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData(), other.DimsData(), sizeof(int32_t) * size_);
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator==(const RuntimeShape& comp) const {
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return this->size_ == comp.size_ &&
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****            std::memcmp(DimsData(), comp.DimsData(), size_ * sizeof(int32_t)) ==
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                0;
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   ~RuntimeShape() {
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t DimensionsCount() const { return size_; }
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void SetDim(int i, int32_t val) {
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_[i] = val;
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_[i] = val;
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t* DimsData() {
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsData() const {
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The caller must ensure that the shape is no bigger than 5-D.
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsDataUpTo5D() const { return dims_; }
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void Resize(int dimensions_count) {
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     size_ = dimensions_count;
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void ReplaceWith(int dimensions_count, const int32_t* dims_data) {
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   template <typename T>
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const T& src_iterable) {
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int dimensions_count =
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         std::distance(src_iterable.begin(), src_iterable.end());
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* data = DimsData();
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (auto it : src_iterable) {
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       *data = it;
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       ++data;
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This will probably be factored out. Old code made substantial use of 4-D
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // shapes, and so this function is used to extend smaller shapes. Note that
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (a) as Dims<4>-dependent code is eliminated, the reliance on this should be
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // reduced, and (b) some kernels are stricly 4-D, but then the shapes of their
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // inputs should already be 4-D, so this function should not be needed.
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline static RuntimeShape ExtendedShape(int new_shape_size,
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                            const RuntimeShape& shape) {
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return RuntimeShape(new_shape_size, shape, 1);
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const std::initializer_list<int> init_list) {
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom<const std::initializer_list<int>>(init_list);
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Returns the total count of elements, that is the size when flattened into a
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // vector.
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int FlatSize() const {
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int buffer_size = 1;
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return buffer_size;
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator!=(const RuntimeShape& comp) const { return !((*this) == comp); }
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  private:
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // For use only by ExtendedShape(), written to guarantee (return-value) copy
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // elision in C++17.
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This creates a shape padded to the desired size with the specified value.
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int new_shape_size, const RuntimeShape& shape, int pad_value)
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       : size_(0) {
 288:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // If the following check fails, it is likely because a 4D-only kernel is
 289:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // being used with an array of larger dimension count.
 290:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_CHECK_GE(new_shape_size, shape.DimensionsCount());
 291:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(new_shape_size);
 292:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int size_increase = new_shape_size - shape.DimensionsCount();
 293:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_increase; ++i) {
 294:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, pad_value);
 295:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 296:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData() + size_increase, shape.DimsData(),
 297:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                 sizeof(int32_t) * shape.DimensionsCount());
 298:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 299:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 300:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t size_;
 301:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   union {
 302:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t dims_[kMaxSmallSize];
 303:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dims_pointer_;
 304:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   };
 305:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 306:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 307:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Converts inference-style shape to legacy tflite::Dims<4>.
 308:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline tflite::Dims<4> ToRuntimeDims(const tflite::RuntimeShape& array_shape) {
 309:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   tflite::Dims<4> result;
 310:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dimensions_count = array_shape.DimensionsCount();
 311:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_LE(dimensions_count, 4);
 312:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int cum_prod = 1;
 313:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < 4; i++) {
 314:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int new_dim =
 315:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         (i < dimensions_count) ? array_shape.Dims(dimensions_count - 1 - i) : 1;
 316:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.sizes[i] = new_dim;
 317:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.strides[i] = cum_prod;
 318:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     cum_prod *= new_dim;
 319:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 320:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return result;
 321:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 322:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 323:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(b/80418076): Move to legacy ops file, update invocations.
 324:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline RuntimeShape DimsToShape(const tflite::Dims<4>& dims) {
 325:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return RuntimeShape(
 326:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       {dims.sizes[3], dims.sizes[2], dims.sizes[1], dims.sizes[0]});
 327:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 328:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 329:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets next index to iterate through a multidimensional array.
 330:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool NextIndex(const int num_dims, const int* dims, int* current) {
 331:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 332:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return false;
 333:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 334:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 335:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(current != nullptr);
 336:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int carry = 1;
 337:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = num_dims - 1; idx >= 0; --idx) {
 338:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int current_val = current[idx] + carry;
 339:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(dims[idx], current_val);
 340:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dims[idx] == current_val) {
 341:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = 0;
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = current_val;
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       carry = 0;
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       break;
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return (carry == 0);
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 350:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 351:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets offset of index if reducing on axis. When reducing, the flattened offset
 352:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // will not change, if the input index changes on the given axis. For example,
 353:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // if you have a 3D tensor and you are reducing to 2D by eliminating axis 0,
 354:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // then index (0, 1, 2) and index (1, 1, 2) will map to the same flattened
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // offset.
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(kanlig): uses Dims to represent dimensions.
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline size_t ReducedOutputOffset(const int num_dims, const int* dims,
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* index, const int num_axis,
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* axis) {
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return 0;
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 363:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 364:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index != nullptr);
 365:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   size_t offset = 0;
 366:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = 0; idx < num_dims; ++idx) {
 367:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // if we need to skip this axis
 368:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     bool is_axis = false;
 369:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (axis != nullptr) {
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       for (int axis_idx = 0; axis_idx < num_axis; ++axis_idx) {
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         if (idx == axis[axis_idx]) {
 372:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           is_axis = true;
 373:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           break;
 374:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         }
 375:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       }
 376:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 377:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (!is_axis) {
 378:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       offset = offset * static_cast<size_t>(dims[idx]) +
 379:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                static_cast<size_t>(index[idx]);
 380:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 381:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 382:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return offset;
 383:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 384:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 385:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int i0, int i1, int i2, int i3) {
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), 4);
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 393:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 394:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 395:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int i0, int i1, int i2, int i3) {
 396:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims.sizes[0]);
 397:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims.sizes[1]);
 398:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims.sizes[2]);
 399:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims.sizes[3]);
 400:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return i0 * dims.strides[0] + i1 * dims.strides[1] + i2 * dims.strides[2] +
 401:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****          i3 * dims.strides[3];
 402:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 403:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 404:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int* index) {
 405:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(dims, index[0], index[1], index[2], index[3]);
 406:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 407:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 408:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int* index) {
 409:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(shape, index[0], index[1], index[2], index[3]);
 410:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 411:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 412:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get array size, DCHECKing that the dim index is in range.
 413:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 414:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Note that this will be phased out with Dims<4>, since RuntimeShape::Dims()
 415:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // already performs this check.
 416:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 417:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int ArraySize(const Dims<N>& array, int index) {
 418:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index >= 0 && index < N);
 419:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return array.sizes[index];
 420:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 421:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 422:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common array size, DCHECKing that they all agree.
 423:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2>
 424:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 425:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2) {
 426:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 427:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ArraySize(array1, index1);
 428:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 429:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 430:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2, typename... Args>
 431:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 432:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2, Args... args) {
 433:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 434:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingArraySize(array1, index1, args...);
 435:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 436:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 437:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common shape dim, DCHECKing that they all agree.
 438:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingDim(const RuntimeShape& shape1, int index1,
 439:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const RuntimeShape& shape2, int index2) {
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 441:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 442:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 443:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 444:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename... Args>
 445:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingDim(const RuntimeShape& shape1, int index1,
 446:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                 const RuntimeShape& shape2, int index2, Args... args) {
 447:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 448:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingDim(shape1, index1, args...);
 449:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 450:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 451:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Will be phased out with Dims<4>, replaced by RuntimeShape::FlatSize().
 452:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 453:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int FlatSize(const Dims<N>& dims) {
 454:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 455:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 456:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= dims.sizes[i];
 457:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 458:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return flat_size;
 459:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 460:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 461:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** TFLITE_DEPRECATED("Prefer FlatSize.")
 462:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int RequiredBufferSizeForDims(const Dims<4>& dims) {
 463:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return FlatSize(dims);
 464:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 465:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 466:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 467:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0) {
 468:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 469:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 470:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 471:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 472:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 473:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 474:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 475:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0,
 476:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_1) {
 477:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 478:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 479:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_3 = check_shape_1.FlatSize();
 480:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 481:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_2, size_3);
 482:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 483:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 484:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 485:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Flat size calculation, checking that dimensions match with one or more other
 486:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // arrays.
 487:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const RuntimeShape& shape,
 488:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_0) {
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), check_shape_0.DimensionsCount());
 5042                             		.loc 8 489 3
 5043 0073 AA 0C                   		mov.L	36[r0], r4
 5044                             	.LVL378:
 5045                             	.LBE5136:
 5046                             	.LBE5135:
 5047                             	.LBE5134:
 5048                             	.LBE5133:
 5049                             	.LBE5128:
 5050                             	.LBE5127:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 5051                             		.loc 8 194 44
 5052                             	.LBB6002:
 5053                             	.LBB5989:
 5054                             	.LBB5367:
 5055                             	.LBB5357:
 5056                             	.LBB5216:
 5057                             	.LBB5211:
 5058                             		.loc 8 489 3 is_stmt 0
 5059 0075 ED 08 03                		mov.L	12[r0], r8
 5060                             	.LVL379:
 5061                             	.LBE5211:
 5062                             	.LBE5216:
 5063                             	.LBE5357:
 5064                             	.LBE5367:
 5065                             	.LBE5989:
 5066                             	.LBE6002:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 5067                             		.loc 8 194 44 is_stmt 1
 5068                             	.LBB6003:
 5069                             	.LBB5990:
 5070                             	.LBB5368:
 5071                             	.LBB5358:
 5072                             	.LBB5217:
 5073                             	.LBB5212:
 5074                             		.loc 8 489 3 is_stmt 0
 5075 0078 47 84                   		cmp	r8, r4
 5076 007a 3B 26 06                		bne	.L338
 5077                             	.LVL380:
 5078                             	.LBB5137:
 490:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 5079                             		.loc 8 491 21
 5080 007d 61 04                   		cmp	#0, r4
 5081 007f 2A 05 38 6F 08          		ble	.L463
 5082                             	.LBB5138:
 5083                             	.LBB5139:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5084                             		.loc 8 198 36
 5085 0084 AA 81                   		mov.L	40[r0], r1
 5086                             	.LBE5139:
 5087                             	.LBE5138:
 5088                             	.LBB5153:
 5089                             	.LBB5154:
 5090 0086 ED 0A 04                		mov.L	16[r0], r10
 5091                             	.LVL381:
 5092 0089 61 54                   		cmp	#5, r4
 5093 008b 2B 05 38 B8 05          		bgt	.L402
 5094                             	.LBE5154:
 5095                             	.LBE5153:
 492:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5096                             		.loc 8 492 5 is_stmt 1
 5097                             	.LVL382:
 5098                             	.LBB5168:
 5099                             	.LBB5140:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5100                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5101                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5102                             		.loc 8 198 5
 5103                             	.LBE5140:
 5104                             	.LBE5168:
 5105                             	.LBB5169:
 5106                             	.LBB5155:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5107                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5108                             		.loc 8 197 5
 5109                             	.LBE5155:
 5110                             	.LBE5169:
 5111                             		.loc 8 492 5 is_stmt 0
 5112 0090 47 1A                   		cmp	r1, r10
 5113 0092 3B 0E 06                		bne	.L338
 5114                             	.LVL383:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5115                             		.loc 8 491 21
 5116 0095 61 14                   		cmp	#1, r4
 5117 0097 3A 1C 08                		beq	.L467
 5118                             		.loc 8 492 5 is_stmt 1
 5119                             	.LVL384:
 5120                             	.LBB5170:
 5121                             	.LBB5141:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5122                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5123                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5124                             		.loc 8 198 5
 5125                             	.LBE5141:
 5126                             	.LBE5170:
 5127                             	.LBB5171:
 5128                             	.LBB5156:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5129                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5130                             		.loc 8 197 5
 5131                             	.LBE5156:
 5132                             	.LBE5171:
 5133                             		.loc 8 492 5 is_stmt 0
 5134 009a ED 0A 0B                		mov.L	44[r0], r10
 5135 009d 06 85 0A 05             		cmp	20[r0].L, r10
 5136 00a1 3B FF 05                		bne	.L338
 5137                             	.LVL385:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5138                             		.loc 8 491 21
 5139 00a4 61 24                   		cmp	#2, r4
 5140 00a6 3A 0D 08                		beq	.L467
 5141                             		.loc 8 492 5 is_stmt 1
 5142                             	.LVL386:
 5143                             	.LBB5172:
 5144                             	.LBB5142:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5145                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5146                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5147                             		.loc 8 198 5
 5148                             	.LBE5142:
 5149                             	.LBE5172:
 5150                             	.LBB5173:
 5151                             	.LBB5157:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5152                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5153                             		.loc 8 197 5
 5154                             	.LBE5157:
 5155                             	.LBE5173:
 5156                             		.loc 8 492 5 is_stmt 0
 5157 00a9 ED 0A 06                		mov.L	24[r0], r10
 5158 00ac 06 85 0A 0C             		cmp	48[r0].L, r10
 5159 00b0 3B F0 05                		bne	.L338
 5160                             	.LVL387:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5161                             		.loc 8 491 21
 5162 00b3 61 34                   		cmp	#3, r4
 5163 00b5 3A FE 07                		beq	.L467
 5164                             		.loc 8 492 5 is_stmt 1
 5165                             	.LVL388:
 5166                             	.LBB5174:
 5167                             	.LBB5143:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5168                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5169                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5170                             		.loc 8 198 5
 5171                             	.LBE5143:
 5172                             	.LBE5174:
 5173                             	.LBB5175:
 5174                             	.LBB5158:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5175                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5176                             		.loc 8 197 5
 5177                             	.LBE5158:
 5178                             	.LBE5175:
 5179                             		.loc 8 492 5 is_stmt 0
 5180 00b8 ED 0A 07                		mov.L	28[r0], r10
 5181 00bb 06 85 0A 0D             		cmp	52[r0].L, r10
 5182 00bf 3B E1 05                		bne	.L338
 5183                             	.LVL389:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5184                             		.loc 8 491 21
 5185 00c2 61 44                   		cmp	#4, r4
 5186 00c4 3A EF 07                		beq	.L467
 5187                             		.loc 8 492 5 is_stmt 1
 5188                             	.LVL390:
 5189                             	.LBB5176:
 5190                             	.LBB5144:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5191                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5192                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5193                             		.loc 8 198 5
 5194                             	.LBE5144:
 5195                             	.LBE5176:
 5196                             	.LBB5177:
 5197                             	.LBB5159:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5198                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5199                             		.loc 8 197 5
 5200                             	.LBE5159:
 5201                             	.LBE5177:
 5202                             		.loc 8 492 5 is_stmt 0
 5203 00c7 ED 0A 08                		mov.L	32[r0], r10
 5204                             	.LBE5137:
 5205                             	.LBB5194:
 5206                             	.LBB5195:
 5207                             	.LBB5196:
 5208                             	.LBB5197:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5209                             		.loc 8 214 34
 5210 00ca 71 01 28                		add	#40, r0, r1
 5211                             	.LBE5197:
 5212                             	.LBE5196:
 5213                             	.LBE5195:
 5214                             	.LBE5194:
 5215                             	.LBB5206:
 5216                             		.loc 8 492 5
 5217 00cd 06 85 0A 0E             		cmp	56[r0].L, r10
 5218 00d1 3B CF 05                		bne	.L338
 5219                             	.LVL391:
 5220                             		.balign 8,3,1
 5221                             	.L403:
 5222                             	.LBE5206:
 5223                             	.LBB5207:
 5224                             	.LBB5203:
 5225                             	.LBB5200:
 5226                             	.LBB5198:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5227                             		.loc 8 214 34
 5228 00d4 66 1A                   		mov.L	#1, r10
 5229 00d6 66 05                   		mov.L	#0, r5
 5230                             		.balign 8,3,3
 5231                             	.L407:
 5232                             	.LVL392:
 5233                             	.LBE5198:
 5234                             	.LBE5200:
 5235                             	.LBB5201:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 5236                             		.loc 8 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 5237                             		.loc 8 275 19 is_stmt 0
 5238 00d8 FE 65 12                		mov.L	[r5,r1], r2
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 5239                             		.loc 8 274 5
 5240 00db 62 15                   		add	#1, r5
 5241                             	.LVL393:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 5242                             		.loc 8 275 19
 5243 00dd 4F 2A                   		mul	r2, r10
 5244                             	.LVL394:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 5245                             		.loc 8 274 23
 5246 00df 47 54                   		cmp	r5, r4
 5247 00e1 2A F7                   		bgt	.L407
 5248                             	.LVL395:
 5249                             	.LBE5201:
 5250                             	.LBE5203:
 5251                             	.LBE5207:
 5252                             	.LBE5212:
 5253                             	.LBE5217:
 5254                             	.LBB5218:
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****   for (int i = 0; i < flat_size; ++i) {
 5255                             		.loc 7 39 21
 5256 00e3 61 0A                   		cmp	#0, r10
 5257 00e5 2B 69                   		ble	.L405
 5258                             	.LVL396:
 5259 00e7 03                      		.balign 8,3,2
 5260                             	.L401:
 5261                             	.LBB5219:
 5262                             	.LBB5220:
 5263                             	.LBB5221:
 5264                             	.LBB5222:
 5265                             	.LBB5223:
 5266                             	.LBB5224:
 5267                             		.file 9 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifndef ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifdef GEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #define ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include <functional>
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "fixedpoint/fixedpoint.h"
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/types.h"
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** namespace tflite {
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** constexpr int kReverseShift = -1;
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline void GetActivationMinMax(FusedActivationFunctionType ac,
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_min,
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_max) {
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   switch (ac) {
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kNone:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = std::numeric_limits<float>::lowest();
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu:
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu1:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = -1.f;
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 1.f;
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu6:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 6.f;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** template <typename T>
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline T ActivationFunctionWithMinMax(T x, T output_activation_min,
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                       T output_activation_max) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using std::max;
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using std::min;
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return min(max(x, output_activation_min), output_activation_max);
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** // Legacy function, left for compatibility only.
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** template <FusedActivationFunctionType Ac>
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** float ActivationFunction(float x) {
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float output_activation_min, output_activation_max;
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   GetActivationMinMax(Ac, &output_activation_min, &output_activation_max);
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return ActivationFunctionWithMinMax(x, output_activation_min,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                       output_activation_max);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                          const float* bias_data, int array_size,
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                          float* array_data) {
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // Note: see b/132215220: in May 2019 we thought it would be OK to replace
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // this with the Eigen one-liner:
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   //   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // This turned out to severely regress performance: +4ms (i.e. 8%) on
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // MobileNet v2 / 1.0 / 224. So we keep custom NEON code for now.
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   TFLITE_DCHECK_EQ((array_size % bias_size), 0);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifdef USE_NEON
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float* array_ptr = array_data;
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float* array_end_ptr = array_ptr + array_size;
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_min_vec = vdupq_n_f32(clamp_min);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_max_vec = vdupq_n_f32(clamp_max);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   for (; array_ptr != array_end_ptr; array_ptr += bias_size) {
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int i = 0;
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 16; i += 16) {
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b0 = vld1q_f32(bias_data + i);
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b1 = vld1q_f32(bias_data + i + 4);
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b2 = vld1q_f32(bias_data + i + 8);
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b3 = vld1q_f32(bias_data + i + 12);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a0 = vld1q_f32(array_ptr + i);
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a1 = vld1q_f32(array_ptr + i + 4);
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a2 = vld1q_f32(array_ptr + i + 8);
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a3 = vld1q_f32(array_ptr + i + 12);
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x0 = vaddq_f32(a0, b0);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x1 = vaddq_f32(a1, b1);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x2 = vaddq_f32(a2, b2);
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x3 = vaddq_f32(a3, b3);
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x0 = vmaxq_f32(clamp_min_vec, x0);
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x1 = vmaxq_f32(clamp_min_vec, x1);
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x2 = vmaxq_f32(clamp_min_vec, x2);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x3 = vmaxq_f32(clamp_min_vec, x3);
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x0 = vminq_f32(clamp_max_vec, x0);
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x1 = vminq_f32(clamp_max_vec, x1);
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x2 = vminq_f32(clamp_max_vec, x2);
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x3 = vminq_f32(clamp_max_vec, x3);
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x0);
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 4, x1);
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 8, x2);
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 12, x3);
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 4; i += 4) {
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b = vld1q_f32(bias_data + i);
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a = vld1q_f32(array_ptr + i);
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x = vaddq_f32(a, b);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x = vmaxq_f32(clamp_min_vec, x);
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x = vminq_f32(clamp_max_vec, x);
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x);
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i < bias_size; i++) {
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       array_ptr[i] = ActivationFunctionWithMinMax(array_ptr[i] + bias_data[i],
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                                   clamp_min, clamp_max);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #else  // not NEON
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   for (int array_offset = 0; array_offset < array_size;
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****        array_offset += bias_size) {
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (int i = 0; i < bias_size; i++) {
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       array_data[array_offset + i] = ActivationFunctionWithMinMax(
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****           array_data[array_offset + i] + bias_data[i], clamp_min, clamp_max);
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierSmallerThanOneExp(
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       SaturatingRoundingDoublingHighMul(x, quantized_multiplier), -left_shift);
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierGreaterThanOne(
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return SaturatingRoundingDoublingHighMul(x * (1 << left_shift),
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                            quantized_multiplier);
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplier(int32_t x,
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                              int32_t quantized_multiplier,
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                              int shift) {
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 5268                             		.loc 9 162 31
 5269 00e8 FC 07 DC                		neg	r13, r12
 5270 00eb 61 0D                   		cmp	#0, r13
 5271 00ed 2B 04                   		ble 1f
 5272 00ef 66 0C                   		mov #0, r12
 5273                             	1:
 5274                             	.LBB5225:
 5275                             	.LBB5226:
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType zero = Dup<IntegerType>(0);
 5276                             		.loc 4 371 50
 5277 00f1 71 C5 E0                		add	#-32, r12, r5
 5278 00f4 26 05 38 7F 07          		bn	.L408
 5279 00f9 66 05                   		mov.L	#0, r5
 5280                             		.balign 8,3,2
 5281                             	.L409:
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType zero = Dup<IntegerType>(0);
 5282                             		.loc 4 371 63
 5283 00fb 71 52 FF                		add	#-1, r5, r2
 5284 00fe FC 07 3E                		neg	r3, r14
 5285                             	.LBB5227:
 5286                             	.LBB5228:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5287                             		.loc 4 142 15
 5288 0101 FD A1 24                		shar	#1, r2, r4
 5289 0104 E7 04 35                		mov.L	r4, 212[r0]
 5290 0107 66 0F                   		mov.L	#0, r15
 5291                             	.LBE5228:
 5292                             	.LBE5227:
 5293                             	.LBE5226:
 5294                             	.LBE5225:
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 5295                             		.loc 9 161 7
 5296 0109 FD 74 4D 00             		max	#0, r13
 5297                             	.LVL397:
 5298                             	.LBB5244:
 5299                             	.LBB5245:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 5300                             		.loc 4 346 35
 5301 010d EF F8                   		mov.L	r15, r8
 5302 010f E7 02 36                		mov.L	r2, 216[r0]
 5303 0112 EF A2                   		mov.L	r10, r2
 5304 0114 EF CF                   		mov.L	r12, r15
 5305 0116 EF 3C                   		mov.L	r3, r12
 5306 0118 E7 0D 37                		mov.L	r13, 220[r0]
 5307 011b ED 0D 34                		mov.L	208[r0], r13
 5308 011e 2E 12                   		bra	.L421
 5309                             	.LVL398:
 5310                             	.L543:
 5311                             	.LBE5245:
 5312                             	.LBE5244:
 5313                             	.LBE5224:
 5314                             	.LBE5223:
 5315                             	.LBE5222:
 5316                             	.LBE5221:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     const int32_t input =
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****         static_cast<int32_t>(input_data[i]) - input_zero_point;
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     if (input <= -input_range_radius) {
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       output_data[i] = kMinInt8;
 5317                             		.loc 7 43 7 is_stmt 1
 5318                             		.loc 7 43 22 is_stmt 0
 5319 0120 F8 74 80                		mov.B	#-128, [r7]
 5320                             	.LVL399:
 5321                             		.balign 8,3,1
 5322                             	.L411:
 5323                             	.LBE5220:
 5324                             	.LBE5219:
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     const int32_t input =
 5325                             		.loc 7 39 3
 5326 0123 62 18                   		add	#1, r8
 5327                             	.LVL400:
 5328 0125 62 17                   		add	#1, r7
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     const int32_t input =
 5329                             		.loc 7 39 21
 5330 0127 47 82                   		cmp	r8, r2
 5331 0129 2B 22                   		ble	.L542
 5332                             	.LVL401:
 5333 012b 77 10 01 00 00          		.balign 8,3,5
 5334                             	.L421:
 5335                             	.LBB5339:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     const int32_t input =
 5336                             		.loc 7 40 5 is_stmt 1
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     if (input <= -input_range_radius) {
 5337                             		.loc 7 41 9 is_stmt 0
 5338 0130 FD 28 BA                		mov.B	[r11+], r10
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     const int32_t input =
 5339                             		.loc 7 40 19
 5340 0133 43 9A                   		sub	r9, r10
 5341                             	.LVL402:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       output_data[i] = kMinInt8;
 5342                             		.loc 7 42 5 is_stmt 1
 5343                             	.LBB5331:
 5344 0135 47 AE                   		cmp	r10, r14
 5345 0137 28 E9                   		bge	.L543
 5346                             	.LBE5331:
 5347                             	.LBE5339:
 5348                             	.LBE5218:
 5349                             	.LBE5358:
 5350                             	.LBE5368:
 5351                             	.LBE5990:
 5352                             	.LBE6003:
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     } else if (input >= input_range_radius) {
 5353                             		.loc 7 44 12
 5354                             	.LBB6004:
 5355                             	.LBB5991:
 5356                             	.LBB5369:
 5357                             	.LBB5359:
 5358                             	.LBB5347:
 5359                             	.LBB5340:
 5360                             	.LBB5332:
 5361                             	.LBB5324:
 5362 0139 47 AC                   		cmp	r10, r12
 5363 013b 2B 05 38 0D 01          		bgt	.L412
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       output_data[i] = kMaxInt8;
 5364                             		.loc 7 45 7
 5365                             		.loc 7 45 22 is_stmt 0
 5366 0140 F8 74 7F                		mov.B	#0x7f, [r7]
 5367                             	.LBE5324:
 5368                             	.LBE5332:
 5369                             	.LBE5340:
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     const int32_t input =
 5370                             		.loc 7 39 3
 5371 0143 62 18                   		add	#1, r8
 5372                             	.LVL403:
 5373 0145 62 17                   		add	#1, r7
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     const int32_t input =
 5374                             		.loc 7 39 21
 5375 0147 47 82                   		cmp	r8, r2
 5376 0149 2A E7                   		bgt	.L421
 5377                             	.LVL404:
 5378                             		.balign 8,3,1
 5379                             	.L542:
 5380 014b ED 08 03                		mov.L	12[r0], r8
 5381                             	.LVL405:
 5382                             		.balign 8,3,1
 5383                             	.L405:
 5384                             	.LBE5347:
 5385                             	.LBE5359:
 5386                             	.LBE5369:
 5387                             	.LBB5370:
 5388                             	.LBB5371:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 5389                             		.loc 8 185 5 is_stmt 1
 5390 014e 61 58                   		cmp	#5, r8
 5391 0150 2B 0B                   		ble	.L422
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5392                             		.loc 8 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5393                             		.loc 8 189 16 is_stmt 0
 5394 0152 A9 01                   		mov.L	16[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5395                             		.loc 8 189 29
 5396 0154 61 01                   		cmp	#0, r1
 5397 0156 15                      		beq	.L422
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5398                             		.loc 8 189 16
 5399 0157 05 00 00 00             		bsr	__ZdaPv
 5400                             	.LVL406:
 5401                             		.balign 8,3,1
 5402                             	.L422:
 5403                             	.LBE5371:
 5404                             	.LBE5370:
 5405                             	.LBB5372:
 5406                             	.LBB5373:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 5407                             		.loc 8 185 5 is_stmt 1
 5408 015b AA 0F                   		mov.L	36[r0], r7
 5409 015d 61 57                   		cmp	#5, r7
 5410 015f 2B 0B                   		ble	.L423
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5411                             		.loc 8 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5412                             		.loc 8 189 16 is_stmt 0
 5413 0161 AA 81                   		mov.L	40[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5414                             		.loc 8 189 29
 5415 0163 61 01                   		cmp	#0, r1
 5416 0165 15                      		beq	.L423
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5417                             		.loc 8 189 16
 5418 0166 05 00 00 00             		bsr	__ZdaPv
 5419                             	.LVL407:
 5420                             		.balign 8,3,1
 5421                             	.L423:
 5422                             	.LBE5373:
 5423                             	.LBE5372:
 134:../src/tensorflow/lite/micro/kernels/tanh.cc ****     } break;
 5424                             		.loc 1 134 7 is_stmt 1
 134:../src/tensorflow/lite/micro/kernels/tanh.cc ****     } break;
 5425                             		.loc 1 134 14 is_stmt 0
 5426 016a 66 01                   		mov.L	#0, r1
 5427                             		.balign 8,3,2
 5428                             	.L336:
 5429                             	.LBE5991:
 5430                             	.LBE6004:
 142:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 5431                             		.loc 1 142 1
 5432 016c 3F 6D 46                		rtsd	#280, r6-r13
 5433                             	.LVL408:
 5434                             	.L541:
 5435                             	.LBB6005:
  97:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteFloat32: {
 5436                             		.loc 1 97 3
 5437 016f 61 11                   		cmp	#1, r1
 5438 0171 3B 9B 04                		bne	.L342
 5439                             	.LBB5992:
  98:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_ops::Tanh(tflite::micro::GetTensorShape(input),
 5440                             		.loc 1 98 5 is_stmt 1
  98:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_ops::Tanh(tflite::micro::GetTensorShape(input),
 5441                             		.loc 1 98 26
  99:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<float>(input),
 5442                             		.loc 1 99 7
  99:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<float>(input),
 5443                             		.loc 1 99 56 is_stmt 0
 5444 0174 72 0F B4 00             		add	#0xb4, r0, r15
 5445 0178 EF 81                   		mov.L	r8, r1
 5446 017a 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 5447                             	.LVL409:
 101:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<float>(output));
 5448                             		.loc 1 101 56
 5449 017e 72 0F 9C 00             		add	#0x9c, r0, r15
 5450 0182 EF 71                   		mov.L	r7, r1
 5451                             	.LBB5376:
 5452                             	.LBB5377:
 5453                             		.loc 6 62 53
 5454 0184 EC 86                   		mov.L	[r8], r6
 5455                             	.LVL410:
 5456                             	.LBE5377:
 5457                             	.LBE5376:
 101:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<float>(output));
 5458                             		.loc 1 101 56
 5459 0186 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 5460                             	.LVL411:
 5461                             	.LBB5378:
 5462                             	.LBB5379:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 5463                             		.loc 6 55 28
 5464 018a 61 07                   		cmp	#0, r7
 5465 018c 14                      		beq	.L345
 5466 018d EC 77                   		mov.L	[r7], r7
 5467                             	.LVL412:
 5468 018f 03                      		.balign 8,3,2
 5469                             	.L345:
 5470                             	.LBE5379:
 5471                             	.LBE5378:
 5472                             	.LBB5380:
 5473                             	.LBB5381:
 5474                             		.file 10 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_TANH_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_TANH_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** #include <cmath>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** #include "fixedpoint/fixedpoint.h"
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** #include "tensorflow/lite/kernels/internal/common.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** #include "tensorflow/lite/kernels/internal/types.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** #include "tensorflow/lite/kernels/op_macros.h"
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** namespace tflite {
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** namespace reference_ops {
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** inline void Tanh(const RuntimeShape& input_shape, const float* input_data,
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****                  const RuntimeShape& output_shape, float* output_data) {
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
 5475                             		.loc 10 31 3 is_stmt 1
 5476                             	.LBB5382:
 5477                             	.LBB5383:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 5478                             		.loc 8 489 3
 5479 0190 ED 09 2D                		mov.L	180[r0], r9
 5480                             	.LVL413:
 5481                             	.LBE5383:
 5482                             	.LBE5382:
 5483                             	.LBE5381:
 5484                             	.LBE5380:
 5485                             	.LBE5992:
 5486                             	.LBE6005:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 5487                             		.loc 8 194 44
 5488                             	.LBB6006:
 5489                             	.LBB5993:
 5490                             	.LBB5481:
 5491                             	.LBB5476:
 5492                             	.LBB5463:
 5493                             	.LBB5458:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 5494                             		.loc 8 489 3 is_stmt 0
 5495 0193 ED 0C 27                		mov.L	156[r0], r12
 5496                             	.LVL414:
 5497                             	.LBE5458:
 5498                             	.LBE5463:
 5499                             	.LBE5476:
 5500                             	.LBE5481:
 5501                             	.LBE5993:
 5502                             	.LBE6006:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 5503                             		.loc 8 194 44 is_stmt 1
 5504                             	.LBB6007:
 5505                             	.LBB5994:
 5506                             	.LBB5482:
 5507                             	.LBB5477:
 5508                             	.LBB5464:
 5509                             	.LBB5459:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 5510                             		.loc 8 489 3 is_stmt 0
 5511 0196 47 C9                   		cmp	r12, r9
 5512 0198 3B 08 05                		bne	.L338
 5513                             	.LVL415:
 5514                             	.LBB5384:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5515                             		.loc 8 491 21
 5516 019b 61 09                   		cmp	#0, r9
 5517 019d 2A 05 38 F8 06          		ble	.L346
 5518                             	.LBB5385:
 5519                             	.LBB5386:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5520                             		.loc 8 198 36
 5521 01a2 ED 0B 2E                		mov.L	184[r0], r11
 5522                             	.LBE5386:
 5523                             	.LBE5385:
 5524                             	.LBB5400:
 5525                             	.LBB5401:
 5526 01a5 ED 08 28                		mov.L	160[r0], r8
 5527                             	.LVL416:
 5528                             	.LBE5401:
 5529                             	.LBE5400:
 5530                             	.LBB5414:
 5531                             	.LBB5387:
 5532 01a8 EF B3                   		mov.L	r11, r3
 5533 01aa 61 59                   		cmp	#5, r9
 5534 01ac 2B 05 38 43 05          		bgt	.L347
 5535                             	.LBE5387:
 5536                             	.LBE5414:
 5537                             		.loc 8 492 5 is_stmt 1
 5538                             	.LVL417:
 5539                             	.LBB5415:
 5540                             	.LBB5388:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5541                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5542                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5543                             		.loc 8 198 5
 5544                             	.LBE5388:
 5545                             	.LBE5415:
 5546                             	.LBB5416:
 5547                             	.LBB5402:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5548                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5549                             		.loc 8 197 5
 5550                             	.LBE5402:
 5551                             	.LBE5416:
 5552                             		.loc 8 492 5 is_stmt 0
 5553 01b1 47 8B                   		cmp	r8, r11
 5554 01b3 3B ED 04                		bne	.L338
 5555                             	.LVL418:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5556                             		.loc 8 491 21
 5557 01b6 61 19                   		cmp	#1, r9
 5558 01b8 3A F4 06                		beq	.L441
 5559                             		.loc 8 492 5 is_stmt 1
 5560                             	.LVL419:
 5561                             	.LBB5417:
 5562                             	.LBB5389:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5563                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5564                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5565                             		.loc 8 198 5
 5566                             	.LBE5389:
 5567                             	.LBE5417:
 5568                             	.LBB5418:
 5569                             	.LBB5403:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5570                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5571                             		.loc 8 197 5
 5572                             	.LBE5403:
 5573                             	.LBE5418:
 5574                             		.loc 8 492 5 is_stmt 0
 5575 01bb ED 0A 29                		mov.L	164[r0], r10
 5576                             	.LVL420:
 5577 01be 06 85 0A 2F             		cmp	188[r0].L, r10
 5578 01c2 3B DE 04                		bne	.L338
 5579                             	.LVL421:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5580                             		.loc 8 491 21
 5581 01c5 61 29                   		cmp	#2, r9
 5582 01c7 3A E5 06                		beq	.L441
 5583                             		.loc 8 492 5 is_stmt 1
 5584                             	.LVL422:
 5585                             	.LBB5419:
 5586                             	.LBB5390:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5587                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5588                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5589                             		.loc 8 198 5
 5590                             	.LBE5390:
 5591                             	.LBE5419:
 5592                             	.LBB5420:
 5593                             	.LBB5404:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5594                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5595                             		.loc 8 197 5
 5596                             	.LBE5404:
 5597                             	.LBE5420:
 5598                             		.loc 8 492 5 is_stmt 0
 5599 01ca ED 0A 30                		mov.L	192[r0], r10
 5600 01cd 06 85 0A 2A             		cmp	168[r0].L, r10
 5601 01d1 3B CF 04                		bne	.L338
 5602                             	.LVL423:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5603                             		.loc 8 491 21
 5604 01d4 61 39                   		cmp	#3, r9
 5605 01d6 3A D6 06                		beq	.L441
 5606                             		.loc 8 492 5 is_stmt 1
 5607                             	.LVL424:
 5608                             	.LBB5421:
 5609                             	.LBB5391:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5610                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5611                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5612                             		.loc 8 198 5
 5613                             	.LBE5391:
 5614                             	.LBE5421:
 5615                             	.LBB5422:
 5616                             	.LBB5405:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5617                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5618                             		.loc 8 197 5
 5619                             	.LBE5405:
 5620                             	.LBE5422:
 5621                             		.loc 8 492 5 is_stmt 0
 5622 01d9 ED 0A 31                		mov.L	196[r0], r10
 5623 01dc 06 85 0A 2B             		cmp	172[r0].L, r10
 5624 01e0 3B C0 04                		bne	.L338
 5625                             	.LVL425:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 5626                             		.loc 8 491 21
 5627 01e3 61 49                   		cmp	#4, r9
 5628 01e5 3A C7 06                		beq	.L441
 5629                             		.loc 8 492 5 is_stmt 1
 5630                             	.LVL426:
 5631                             	.LBB5423:
 5632                             	.LBB5392:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5633                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5634                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5635                             		.loc 8 198 5
 5636                             	.LBE5392:
 5637                             	.LBE5423:
 5638                             	.LBB5424:
 5639                             	.LBB5406:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 5640                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 5641                             		.loc 8 197 5
 5642                             	.LBE5406:
 5643                             	.LBE5424:
 5644                             		.loc 8 492 5 is_stmt 0
 5645 01e8 ED 0A 2C                		mov.L	176[r0], r10
 5646                             	.LBE5384:
 5647                             	.LBB5439:
 5648                             	.LBB5440:
 5649                             	.LBB5441:
 5650                             	.LBB5442:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5651                             		.loc 8 214 34
 5652 01eb 72 03 B8 00             		add	#0xb8, r0, r3
 5653                             	.LBE5442:
 5654                             	.LBE5441:
 5655                             	.LBE5440:
 5656                             	.LBE5439:
 5657                             	.LBB5453:
 5658                             		.loc 8 492 5
 5659 01ef 06 85 0A 32             		cmp	200[r0].L, r10
 5660 01f3 3B AD 04                		bne	.L338
 5661                             	.LVL427:
 5662                             		.balign 8,3,1
 5663                             	.L348:
 5664                             	.LBE5453:
 5665                             	.LBB5454:
 5666                             	.LBB5450:
 5667                             	.LBB5446:
 5668                             	.LBB5443:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 5669                             		.loc 8 214 34
 5670 01f6 66 15                   		mov.L	#1, r5
 5671 01f8 66 0A                   		mov.L	#0, r10
 5672                             		.balign 8,3,3
 5673                             	.L355:
 5674                             	.LVL428:
 5675                             	.LBE5443:
 5676                             	.LBE5446:
 5677                             	.LBB5447:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 5678                             		.loc 8 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 5679                             		.loc 8 275 19 is_stmt 0
 5680 01fa FE 6A 34                		mov.L	[r10,r3], r4
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 5681                             		.loc 8 274 5
 5682 01fd 62 1A                   		add	#1, r10
 5683                             	.LVL429:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 5684                             		.loc 8 275 19
 5685 01ff 4F 45                   		mul	r4, r5
 5686                             	.LVL430:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 5687                             		.loc 8 274 23
 5688 0201 47 A9                   		cmp	r10, r9
 5689 0203 2A F7                   		bgt	.L355
 5690                             	.LVL431:
 5691                             	.LBE5447:
 5692                             	.LBE5450:
 5693                             	.LBE5454:
 5694                             	.LBE5459:
 5695                             	.LBE5464:
 5696                             	.LBB5465:
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   for (int i = 0; i < flat_size; i++) {
 5697                             		.loc 10 33 21
 5698 0205 61 05                   		cmp	#0, r5
 5699 0207 2B 17                   		ble	.L356
 5700 0209 6C 25                   		shll	#2, r5
 5701                             	.LVL432:
 5702 020b FF 2A 56                		add	r5, r6, r10
 5703                             	.LVL433:
 5704 020e EF 00                   		.balign 8,3,3
 5705                             	.L357:
 5706                             	.LBB5466:
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     float val = input_data[i];
 5707                             		.loc 10 34 5 is_stmt 1
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     float result = std::tanh(val);
 5708                             		.loc 10 35 5
 5709                             	.LBB5467:
 5710                             	.LBB5468:
 5711                             		.file 11 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
   1:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
   3:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // Copyright (C) 1997-2018 Free Software Foundation, Inc.
   4:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** //
   5:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // terms of the GNU General Public License as published by the
   8:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // any later version.
  10:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  11:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // GNU General Public License for more details.
  15:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  16:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  20:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  25:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** /** @file include/cmath
  26:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *
  29:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  *  as macros in C).
  33:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****  */
  34:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  35:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** //
  36:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** //
  38:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  39:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #pragma GCC system_header
  40:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  41:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include <bits/c++config.h>
  42:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include <ext/type_traits.h>
  44:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include_next <math.h>
  46:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #include <bits/std_abs.h>
  48:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  49:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  52:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef div
  54:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef acos
  55:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef asin
  56:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef atan
  57:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef atan2
  58:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef ceil
  59:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef cos
  60:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef cosh
  61:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef exp
  62:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fabs
  63:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef floor
  64:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef fmod
  65:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef frexp
  66:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef ldexp
  67:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log
  68:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef log10
  69:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef modf
  70:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef pow
  71:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef sin
  72:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef sinh
  73:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef sqrt
  74:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef tan
  75:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #undef tanh
  76:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  77:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** extern "C++"
  78:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** {
  79:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** {
  81:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  83:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::acos;
  84:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  85:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   acos(float __x)
  88:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_acosf(__x); }
  89:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  90:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   acos(long double __x)
  92:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_acosl(__x); }
  93:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
  94:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
  95:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
  96:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
  99:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     acos(_Tp __x)
 100:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_acos(__x); }
 101:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 102:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::asin;
 103:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 104:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   asin(float __x)
 107:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_asinf(__x); }
 108:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 109:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   asin(long double __x)
 111:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_asinl(__x); }
 112:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 113:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 114:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 115:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 118:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     asin(_Tp __x)
 119:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_asin(__x); }
 120:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 121:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::atan;
 122:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 123:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atan(float __x)
 126:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atanf(__x); }
 127:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 128:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atan(long double __x)
 130:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atanl(__x); }
 131:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 132:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 133:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 134:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 137:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     atan(_Tp __x)
 138:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_atan(__x); }
 139:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 140:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::atan2;
 141:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 142:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atan2(float __y, float __x)
 145:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 147:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   atan2(long double __y, long double __x)
 149:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 151:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 152:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 153:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 157:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 160:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 161:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::ceil;
 162:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 163:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ceil(float __x)
 166:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 168:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ceil(long double __x)
 170:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ceill(__x); }
 171:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 172:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 173:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 174:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 177:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     ceil(_Tp __x)
 178:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_ceil(__x); }
 179:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 180:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::cos;
 181:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 182:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cos(float __x)
 185:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_cosf(__x); }
 186:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 187:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cos(long double __x)
 189:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_cosl(__x); }
 190:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 191:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 192:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 193:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 196:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     cos(_Tp __x)
 197:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_cos(__x); }
 198:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 199:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::cosh;
 200:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 201:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cosh(float __x)
 204:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_coshf(__x); }
 205:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 206:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   cosh(long double __x)
 208:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_coshl(__x); }
 209:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 210:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 211:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 212:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 215:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     cosh(_Tp __x)
 216:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_cosh(__x); }
 217:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 218:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::exp;
 219:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 220:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   exp(float __x)
 223:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_expf(__x); }
 224:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 225:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   exp(long double __x)
 227:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_expl(__x); }
 228:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 229:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 230:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 231:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 234:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     exp(_Tp __x)
 235:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_exp(__x); }
 236:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 237:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fabs;
 238:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 239:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fabs(float __x)
 242:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 244:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fabs(long double __x)
 246:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 248:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 249:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 250:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 253:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fabs(_Tp __x)
 254:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_fabs(__x); }
 255:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 256:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::floor;
 257:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 258:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   floor(float __x)
 261:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_floorf(__x); }
 262:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 263:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   floor(long double __x)
 265:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_floorl(__x); }
 266:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 267:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 268:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 269:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 272:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     floor(_Tp __x)
 273:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_floor(__x); }
 274:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 275:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::fmod;
 276:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 277:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fmod(float __x, float __y)
 280:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 282:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   fmod(long double __x, long double __y)
 284:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 286:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 287:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 288:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 292:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 295:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 296:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::frexp;
 297:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 298:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline float
 300:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   frexp(float __x, int* __exp)
 301:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 303:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline long double
 304:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   frexp(long double __x, int* __exp)
 305:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 307:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 308:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 309:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 312:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 315:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::ldexp;
 316:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 317:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ldexp(float __x, int __exp)
 320:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 322:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   ldexp(long double __x, int __exp)
 324:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 326:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 327:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 328:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 331:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 334:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log;
 335:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 336:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log(float __x)
 339:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_logf(__x); }
 340:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 341:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log(long double __x)
 343:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_logl(__x); }
 344:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 345:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 346:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 347:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 350:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     log(_Tp __x)
 351:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_log(__x); }
 352:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 353:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::log10;
 354:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 355:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log10(float __x)
 358:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_log10f(__x); }
 359:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 360:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   log10(long double __x)
 362:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_log10l(__x); }
 363:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 364:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 365:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 366:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 369:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     log10(_Tp __x)
 370:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_log10(__x); }
 371:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 372:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::modf;
 373:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 374:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline float
 376:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   modf(float __x, float* __iptr)
 377:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 379:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline long double
 380:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 383:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 384:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::pow;
 385:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 386:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(float __x, float __y)
 389:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 391:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(long double __x, long double __y)
 393:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 395:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #if __cplusplus < 201103L
 396:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline double
 399:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(double __x, int __i)
 400:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 402:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline float
 403:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(float __x, int __n)
 404:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 406:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline long double
 407:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   pow(long double __x, int __n)
 408:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 410:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 411:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 412:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp, typename _Up>
 413:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     {
 417:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     }
 420:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 421:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::sin;
 422:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 423:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sin(float __x)
 426:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sinf(__x); }
 427:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 428:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sin(long double __x)
 430:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sinl(__x); }
 431:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 432:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 433:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 434:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 435:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 437:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     sin(_Tp __x)
 438:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_sin(__x); }
 439:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 440:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::sinh;
 441:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 442:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sinh(float __x)
 445:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sinhf(__x); }
 446:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 447:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sinh(long double __x)
 449:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sinhl(__x); }
 450:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 451:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 452:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 453:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 454:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 456:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     sinh(_Tp __x)
 457:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_sinh(__x); }
 458:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 459:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::sqrt;
 460:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 461:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sqrt(float __x)
 464:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sqrtf(__x); }
 465:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 466:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   sqrt(long double __x)
 468:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_sqrtl(__x); }
 469:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 470:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 471:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 472:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 473:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 475:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     sqrt(_Tp __x)
 476:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_sqrt(__x); }
 477:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 478:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::tan;
 479:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 480:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   tan(float __x)
 483:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_tanf(__x); }
 484:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 485:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   tan(long double __x)
 487:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_tanl(__x); }
 488:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #endif
 489:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 490:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   template<typename _Tp>
 491:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     inline _GLIBCXX_CONSTEXPR
 492:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****                                     double>::__type
 494:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     tan(_Tp __x)
 495:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****     { return __builtin_tan(__x); }
 496:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 497:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   using ::tanh;
 498:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** 
 499:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   tanh(float __x)
 502:c:\gcc for renesas rx 8.3.0.202004-gnurx-elf\rx-elf\rx-elf\rx-elf\include\c++\8.3.0.202004-gnurx\cmath ****   { return __builtin_tanhf(__x); }
 5712                             		.loc 11 502 5
 5713                             		.loc 11 502 27 is_stmt 0
 5714 0210 FD 2A 61                		mov.L	[r6+], r1
 5715                             	.LVL434:
 5716 0213 05 00 00 00             		bsr	_tanhf
 5717                             	.LVL435:
 5718                             	.LBE5468:
 5719                             	.LBE5467:
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     output_data[i] = result;
 5720                             		.loc 10 36 5 is_stmt 1
 5721                             		.loc 10 36 20 is_stmt 0
 5722 0217 FD 22 71                		mov.L	r1, [r7+]
 5723                             	.LBE5466:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     float val = input_data[i];
 5724                             		.loc 10 33 21
 5725 021a 47 6A                   		cmp	r6, r10
 5726 021c 21 F4                   		bne	.L357
 5727                             	.LVL436:
 5728                             		.balign 8,3,1
 5729                             	.L356:
 5730                             	.LBE5465:
 5731                             	.LBE5477:
 5732                             	.LBE5482:
 5733                             	.LBB5483:
 5734                             	.LBB5484:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 5735                             		.loc 8 185 5 is_stmt 1
 5736 021e 61 5C                   		cmp	#5, r12
 5737 0220 2B 10                   		ble	.L353
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5738                             		.loc 8 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5739                             		.loc 8 189 29 is_stmt 0
 5740 0222 61 08                   		cmp	#0, r8
 5741 0224 20 16                   		beq	.L437
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5742                             		.loc 8 189 16
 5743 0226 EF 81                   		mov.L	r8, r1
 5744 0228 05 00 00 00             		bsr	__ZdaPv
 5745                             	.LVL437:
 5746 022c ED 09 2D                		mov.L	180[r0], r9
 5747                             	.LVL438:
 5748 022f 03                      		.balign 8,3,1
 5749                             	.L353:
 5750                             	.LBE5484:
 5751                             	.LBE5483:
 5752                             	.LBB5486:
 5753                             	.LBB5487:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 5754                             		.loc 8 185 5 is_stmt 1
 5755 0230 61 59                   		cmp	#5, r9
 5756 0232 2A 05 38 36 FF          		ble	.L423
 5757 0237 ED 0B 2E                		mov.L	184[r0], r11
 5758                             	.LVL439:
 5759                             		.balign 8,3,1
 5760                             	.L437:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5761                             		.loc 8 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5762                             		.loc 8 189 29 is_stmt 0
 5763 023a 61 0B                   		cmp	#0, r11
 5764 023c 3A 2E FF                		beq	.L423
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 5765                             		.loc 8 189 16
 5766 023f EF B1                   		mov.L	r11, r1
 5767 0241 05 00 00 00             		bsr	__ZdaPv
 5768                             	.LVL440:
 5769                             	.LBE5487:
 5770                             	.LBE5486:
 103:../src/tensorflow/lite/micro/kernels/tanh.cc ****     } break;
 5771                             		.loc 1 103 7 is_stmt 1
 134:../src/tensorflow/lite/micro/kernels/tanh.cc ****     } break;
 5772                             		.loc 1 134 7
 134:../src/tensorflow/lite/micro/kernels/tanh.cc ****     } break;
 5773                             		.loc 1 134 14 is_stmt 0
 5774 0245 66 01                   		mov.L	#0, r1
 5775 0247 38 25 FF                		bra	.L336
 5776                             	.LVL441:
 5777                             	.L412:
 5778                             	.LBB5488:
 5779                             	.LBB5360:
 5780                             	.LBB5348:
 5781                             	.LBB5341:
 5782                             	.LBB5333:
 5783                             	.LBB5325:
 5784                             	.LBB5318:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****     } else {
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       const int32_t input_in_q4 =
 5785                             		.loc 7 47 7 is_stmt 1
 5786                             	.LBB5262:
 5787                             	.LBB5257:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 5788                             		.loc 9 159 3
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 5789                             		.loc 9 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 5790                             		.loc 9 161 3
 5791                             		.loc 9 162 3
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 5792                             		.loc 9 163 3
 5793                             		.loc 9 163 29 is_stmt 0
 5794 024a ED 05 37                		mov.L	220[r0], r5
 5795 024d FD 62 5A                		shll	r5, r10
 5796                             	.LVL442:
 5797                             	.LBB5250:
 5798                             	.LBB5246:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 5799                             		.loc 4 342 3 is_stmt 1
 5800 0250 EF D3                   		mov.L	r13, r3
 5801 0252 FC 1B A3                		emul	r10, r3
 5802 0255 E7 03 3C                		mov.L	r3, 240[r0]
 5803 0258 E7 04 3D                		mov.L	r4, 244[r0]
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 5804                             		.loc 4 342 26 is_stmt 0
 5805 025b 47 AD                   		cmp	r10, r13
 5806 025d 3A 45 05                		beq	.L544
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 5807                             		.loc 4 346 35
 5808 0260 71 45 00                		add	#0, r4, r5
 5809                             	.LVL443:
 5810 0263 29 05 38 CA 03          		bge	.L434
 5811 0268 FB 62 01 00 00 C0       		mov.L	#-1073741823, r6
 5812 026e FB A6 FF                		mov.L	#-1, r10
 5813                             		.balign 8,3,2
 5814                             	.L436:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 5815                             		.loc 4 348 49
 5816 0271 ED 05 3C                		mov.L	240[r0], r5
 5817 0274 FF 21 56                		add	r5, r6, r1
 5818 0277 06 A1 02 0A 3D          		adc 244[r0],r10
 5819 027c 61 0A                   		cmp	#0, r10
 5820 027e 28 05 38 FD 05          		blt	.L545
 5821                             		.balign 8,3,1
 5822                             	.L417:
 5823 0283 6C 1A                   		shll	#1, r10
 5824 0285 69 F1                   		shlr	#31, r1
 5825 0287 FF 56 1A                		or	r1, r10, r6
 5826                             		.balign 8,3,2
 5827                             	.L416:
 5828                             	.LVL444:
 5829                             	.LBE5246:
 5830                             	.LBE5250:
 5831                             	.LBB5251:
 5832                             	.LBB5241:
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 5833                             		.loc 4 370 3
 5834 028a 75 5F 1F                		cmp	#31, r15
 5835 028d 2B 05 38 87 06          		bgt	.L546
 5836                             	.LVL445:
 5837                             	.LBB5229:
 5838                             	.LBB5230:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5839                             		.loc 4 71 14
 5840 0292 FD 9F 64                		shlr	#31, r6, r4
 5841                             	.LBE5230:
 5842                             	.LBE5229:
 5843                             	.LBB5231:
 5844                             	.LBB5232:
 5845 0295 ED 05 36                		mov.L	216[r0], r5
 5846 0298 53 65                   		and	r6, r5
 5847                             	.LVL446:
 5848                             	.LBE5232:
 5849                             	.LBE5231:
 5850                             	.LBB5233:
 5851                             	.LBB5234:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5852                             		.loc 4 95 14
 5853 029a 06 89 04 35             		add	212[r0], r4
 5854                             	.LBE5234:
 5855                             	.LBE5233:
 5856                             	.LBB5235:
 5857                             	.LBB5236:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5858                             		.loc 4 142 15
 5859 029e EF 61                   		mov.L	r6, r1
 5860 02a0 FD 61 F1                		shar	r15, r1
 5861                             	.LVL447:
 5862                             	.LBE5236:
 5863                             	.LBE5235:
 5864                             	.LBB5237:
 5865                             	.LBB5238:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5866                             		.loc 4 71 14
 5867 02a3 47 45                   		cmp	r4, r5
 5868 02a5 FC DB 6A                		scgt.L	r6
 5869                             	.LVL448:
 5870                             	.LBE5238:
 5871                             	.LBE5237:
 5872                             	.LBB5239:
 5873                             	.LBB5240:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5874                             		.loc 4 95 14
 5875 02a8 4B 16                   		add	r1, r6
 5876                             	.LVL449:
 5877                             	.LBE5240:
 5878                             	.LBE5239:
 5879                             	.LBE5241:
 5880                             	.LBE5251:
 5881                             	.LBE5257:
 5882                             	.LBE5262:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****           MultiplyByQuantizedMultiplier(input, input_multiplier, input_shift);
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       const int32_t output_in_q0 =
 5883                             		.loc 7 49 7 is_stmt 1
 5884 02aa FC 07 61                		neg	r6, r1
 5885                             	.LBB5263:
 5886                             	.LBB5264:
 5887                             	.LBB5265:
 5888                             	.LBB5266:
 5889                             	.LBB5267:
 5890                             	.LBB5268:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5891                             		.loc 4 159 12 is_stmt 0
 5892 02ad 61 06                   		cmp	#0, r6
 5893 02af 28 05 38 44 06          		blt	.L471
 5894                             	.LVL450:
 5895                             	.LBE5268:
 5896                             	.LBE5267:
 5897                             	.LBE5266:
 5898                             	.LBE5265:
 5899                             	.LBB5275:
 5900                             	.LBB5276:
 5901                             	.LBB5277:
 5902                             	.LBB5278:
 5903 02b4 FC DB 60                		sceq.L	r6
 5904                             	.LVL451:
 5905 02b7 60 16                   		sub	#1, r6
 5906 02b9 F9 06 34 FF             		mov.L	#-1, 208[r0]
 5907                             	.LBE5278:
 5908                             	.LBE5277:
 5909                             	.LBE5276:
 5910                             	.LBE5275:
 5911                             	.LBB5279:
 5912                             	.LBB5273:
 5913                             	.LBB5271:
 5914                             	.LBB5269:
 5915 02bd 66 0A                   		mov.L	#0, r10
 5916                             	.LVL452:
 5917 02bf 03                      		.balign 8,3,5
 5918                             	.L419:
 5919                             	.LBE5269:
 5920                             	.LBE5271:
 5921                             	.LBE5273:
 5922                             	.LBE5279:
 5923                             	.LBB5280:
 5924                             	.LBB5281:
 828:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 829:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns -tanh(x) for x < 0.
 830:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 831:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> neg_tanh_on_negative_values(
 832:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 833:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return one_minus_x_over_one_plus_x_for_x_in_0_1(
 5925                             		.loc 4 833 50
 5926 02c0 E7 02 39                		mov.L	r2, 228[r0]
 5927                             	.LVL453:
 5928 02c3 E7 0E 3A                		mov.L	r14, 232[r0]
 5929 02c6 E7 0F 3B                		mov.L	r15, 236[r0]
 5930 02c9 05 00 00 00             		bsr	__ZN8gemmlowp22exp_on_negative_valuesIlLi5EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 5931                             	.LVL454:
 5932 02cd 05 00 00 00             		bsr	__ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_
 5933                             	.LVL455:
 5934                             	.LBE5281:
 5935                             	.LBE5280:
 5936                             	.LBB5282:
 5937                             	.LBB5283:
 5938                             	.LBB5284:
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5939                             		.loc 4 113 11
 5940 02d1 FC 07 15                		neg	r1, r5
 5941                             	.LBE5284:
 5942                             	.LBE5283:
 5943                             	.LBE5282:
 5944                             	.LBB5285:
 5945                             	.LBB5286:
 5946                             	.LBB5287:
 5947                             	.LBB5288:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5948                             		.loc 4 71 14
 5949 02d4 06 91 01 34             		and	208[r0], r1
 5950                             	.LVL456:
 5951                             	.LBE5288:
 5952                             	.LBE5287:
 5953                             	.LBB5289:
 5954                             	.LBB5290:
 5955 02d8 53 5A                   		and	r5, r10
 5956                             	.LVL457:
 5957                             	.LBE5290:
 5958                             	.LBE5289:
 5959                             	.LBB5291:
 5960                             	.LBB5292:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5961                             		.loc 4 83 14
 5962 02da FC 37 A1                		xor	r10, r1
 5963                             	.LVL458:
 5964                             	.LBE5292:
 5965                             	.LBE5291:
 5966                             	.LBE5286:
 5967                             	.LBE5285:
 5968                             	.LBB5293:
 5969                             	.LBB5294:
 5970                             	.LBB5295:
 5971                             	.LBB5296:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5972                             		.loc 4 71 14
 5973 02dd 53 16                   		and	r1, r6
 5974                             	.LVL459:
 5975                             	.LBE5296:
 5976                             	.LBE5295:
 5977                             	.LBE5294:
 5978                             	.LBE5293:
 5979                             	.LBE5264:
 5980                             	.LBE5263:
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****           gemmlowp::tanh(F4::FromRaw(input_in_q4)).raw();
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h **** 
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       // Rescale and downcast.
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       using gemmlowp::RoundingDivideByPOT;
 5981                             		.loc 7 53 7 is_stmt 1
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       int32_t output_in_q24 =
 5982                             		.loc 7 54 7
 5983                             	.LBB5299:
 5984                             	.LBB5300:
 5985                             	.LBB5301:
 5986                             	.LBB5302:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5987                             		.loc 4 95 14 is_stmt 0
 5988 02df FB A2 00 00 80 00       		mov.L	#0x800000, r10
 5989 02e5 27 07                   		bn 1f
 5990 02e7 FB AE FF FF 7F          		mov #0x7fffff, r10
 5991                             	1:
 5992                             	.LBE5302:
 5993                             	.LBE5301:
 5994                             	.LBB5303:
 5995                             	.LBB5304:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 5996                             		.loc 4 71 14
 5997 02ec FB 42 FF FF FF 00       		mov.L	#0xffffff, r4
 5998 02f2 53 64                   		and	r6, r4
 5999                             	.LVL460:
 6000                             	.LBE5304:
 6001                             	.LBE5303:
 6002                             	.LBB5305:
 6003                             	.LBB5306:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6004                             		.loc 4 142 15
 6005 02f4 6B 86                   		shar	#24, r6
 6006                             	.LVL461:
 6007                             	.LBE5306:
 6008                             	.LBE5305:
 6009                             	.LBB5307:
 6010                             	.LBB5308:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6011                             		.loc 4 71 14
 6012 02f6 47 A4                   		cmp	r10, r4
 6013 02f8 FC DB 4A                		scgt.L	r4
 6014                             	.LVL462:
 6015                             	.LBE5308:
 6016                             	.LBE5307:
 6017                             	.LBB5309:
 6018                             	.LBB5310:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6019                             		.loc 4 95 14
 6020 02fb 4B 46                   		add	r4, r6
 6021                             	.LVL463:
 6022                             	.LBE5310:
 6023                             	.LBE5309:
 6024                             	.LBE5300:
 6025                             	.LBE5299:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****           RoundingDivideByPOT(output_in_q0, 31 - kOutputScale);
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       output_in_q24 = std::min(std::max(output_in_q24, kMinInt8), kMaxInt8);
 6026                             		.loc 7 56 7 is_stmt 1
 6027                             	.LBB5311:
 6028                             	.LBB5312:
 6029                             		.loc 5 200 7 is_stmt 0
 6030 02fd ED 02 39                		mov.L	228[r0], r2
 6031 0300 ED 0E 3A                		mov.L	232[r0], r14
 6032 0303 ED 0F 3B                		mov.L	236[r0], r15
 6033 0306 75 56 80                		cmp	#0x80, r6
 6034 0309 1C                      		bne	.L420
 6035 030a 75 46 7F                		mov.L	#0x7f, r6
 6036                             	.LVL464:
 6037                             		.balign 8,3,1
 6038                             	.L420:
 6039                             	.LBE5312:
 6040                             	.LBE5311:
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference/integer_ops\tanh.h ****       output_data[i] = static_cast<int8_t>(output_in_q24);
 6041                             		.loc 7 57 7 is_stmt 1
 6042                             		.loc 7 57 22 is_stmt 0
 6043 030d C3 76                   		mov.B	r6, [r7]
 6044 030f 38 14 FE                		bra	.L411
 6045                             	.LVL465:
 6046                             	.L339:
 6047                             	.LBE5318:
 6048                             	.LBE5325:
 6049                             	.LBE5333:
 6050                             	.LBE5341:
 6051                             	.LBE5348:
 6052                             	.LBE5360:
 6053                             	.LBE5488:
 113:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteUInt8: {
 6054                             		.loc 1 113 7 is_stmt 1
 114:../src/tensorflow/lite/micro/kernels/tanh.cc ****       TanhParams params;
 6055                             		.loc 1 114 5
 114:../src/tensorflow/lite/micro/kernels/tanh.cc ****       TanhParams params;
 6056                             		.loc 1 114 24
 6057                             	.LBB5489:
 115:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_zero_point = data.input_zero_point;
 6058                             		.loc 1 115 7
 116:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_range_radius = data.input_range_radius;
 6059                             		.loc 1 116 7
 120:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<uint8_t>(input),
 6060                             		.loc 1 120 64 is_stmt 0
 6061 0312 71 0F 54                		add	#0x54, r0, r15
 6062 0315 EF 81                   		mov.L	r8, r1
 116:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_range_radius = data.input_range_radius;
 6063                             		.loc 1 116 38
 6064 0317 E4 50 35                		mov.L	[r5], 212[r0]
 117:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_multiplier = data.input_multiplier;
 6065                             		.loc 1 117 7 is_stmt 1
 117:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_multiplier = data.input_multiplier;
 6066                             		.loc 1 117 40 is_stmt 0
 6067 031a E5 50 01 34             		mov.L	4[r5], 208[r0]
 118:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_left_shift = data.input_left_shift;
 6068                             		.loc 1 118 7 is_stmt 1
 118:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_left_shift = data.input_left_shift;
 6069                             		.loc 1 118 38 is_stmt 0
 6070 031e ED 5D 02                		mov.L	8[r5], r13
 119:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_ops::Tanh(params, tflite::micro::GetTensorShape(input),
 6071                             		.loc 1 119 7 is_stmt 1
 119:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_ops::Tanh(params, tflite::micro::GetTensorShape(input),
 6072                             		.loc 1 119 38 is_stmt 0
 6073 0321 E5 50 03 36             		mov.L	12[r5], 216[r0]
 120:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<uint8_t>(input),
 6074                             		.loc 1 120 7 is_stmt 1
 120:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<uint8_t>(input),
 6075                             		.loc 1 120 64 is_stmt 0
 6076 0325 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 6077                             	.LVL466:
 122:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<uint8_t>(output));
 6078                             		.loc 1 122 56
 6079 0329 71 0F 3C                		add	#60, r0, r15
 6080 032c EF 71                   		mov.L	r7, r1
 6081                             	.LBB5490:
 6082                             	.LBB5491:
 6083                             		.loc 6 62 53
 6084 032e EC 8B                   		mov.L	[r8], r11
 6085                             	.LVL467:
 6086                             	.LBE5491:
 6087                             	.LBE5490:
 122:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<uint8_t>(output));
 6088                             		.loc 1 122 56
 6089 0330 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 6090                             	.LVL468:
 6091                             	.LBB5492:
 6092                             	.LBB5493:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 6093                             		.loc 6 55 28
 6094 0334 61 07                   		cmp	#0, r7
 6095 0336 13                      		beq	.L381
 6096 0337 EC 77                   		mov.L	[r7], r7
 6097                             	.LVL469:
 6098                             		.balign 8,3,1
 6099                             	.L381:
 6100                             	.LBE5493:
 6101                             	.LBE5492:
 6102                             	.LBB5494:
 6103                             	.LBB5495:
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   }
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** }
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** // Convenience version that allows, for example, generated-code calls to be
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** // uniform between data types.
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** inline void Tanh(const TanhParams&, const RuntimeShape& input_shape,
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****                  const float* input_data, const RuntimeShape& output_shape,
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****                  float* output_data) {
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // Drop params: not needed.
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   Tanh(input_shape, input_data, output_shape, output_data);
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** }
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** inline void Tanh(const TanhParams& params, const RuntimeShape& input_shape,
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****                  const int16_t* input_data, const RuntimeShape& output_shape,
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****                  int16_t* output_data) {
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   const int input_left_shift = params.input_left_shift;
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // Support for shifts is limited until we have a parameterized version of
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // SaturatingRoundingMultiplyByPOT().
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   TFLITE_DCHECK_GE(input_left_shift, 0);
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   TFLITE_DCHECK_LE(input_left_shift, 1);
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // F0 uses 0 integer bits, range [-1, 1].
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // This is the return type of math functions such as tanh, logistic,
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // whose range is in [-1, 1].
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   using F0 = gemmlowp::FixedPoint<std::int16_t, 0>;
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // F3 uses 3 integer bits, range [-8, 8], the input range expected here.
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   using F3 = gemmlowp::FixedPoint<std::int16_t, 3>;
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   if (input_left_shift == 0) {
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     for (int i = 0; i < flat_size; i++) {
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F3 input = F3::FromRaw(input_data[i]);
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F0 output = gemmlowp::tanh(input);
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       output_data[i] = output.raw();
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     }
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   } else {
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     for (int i = 0; i < flat_size; i++) {
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F3 input = F3::FromRaw(
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****           gemmlowp::SaturatingRoundingMultiplyByPOT<1>(input_data[i]));
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F0 output = gemmlowp::tanh(input);
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       output_data[i] = output.raw();
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     }
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   }
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** }
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** inline void Tanh(const TanhParams& params, const RuntimeShape& input_shape,
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****                  const uint8_t* input_data, const RuntimeShape& output_shape,
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****                  uint8_t* output_data) {
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   const int32_t input_zero_point = params.input_zero_point;
 6104                             		.loc 10 86 3 is_stmt 1
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   const int32_t input_range_radius = params.input_range_radius;
 6105                             		.loc 10 87 3
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   const int32_t input_multiplier = params.input_multiplier;
 6106                             		.loc 10 88 3
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   const int input_left_shift = params.input_left_shift;
 6107                             		.loc 10 89 3
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   const int32_t output_zero_point = 128;
 6108                             		.loc 10 90 3
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
 6109                             		.loc 10 91 3
 6110                             	.LBB5496:
 6111                             	.LBB5497:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 6112                             		.loc 8 489 3
 6113 0339 AD 0C                   		mov.L	84[r0], r4
 6114                             	.LVL470:
 6115                             	.LBE5497:
 6116                             	.LBE5496:
 6117                             	.LBE5495:
 6118                             	.LBE5494:
 6119                             	.LBE5489:
 6120                             	.LBE5994:
 6121                             	.LBE6007:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 6122                             		.loc 8 194 44
 6123                             	.LBB6008:
 6124                             	.LBB5995:
 6125                             	.LBB5698:
 6126                             	.LBB5686:
 6127                             	.LBB5678:
 6128                             	.LBB5576:
 6129                             	.LBB5570:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 6130                             		.loc 8 489 3 is_stmt 0
 6131 033b ED 08 0F                		mov.L	60[r0], r8
 6132                             	.LVL471:
 6133                             	.LBE5570:
 6134                             	.LBE5576:
 6135                             	.LBE5678:
 6136                             	.LBE5686:
 6137                             	.LBE5698:
 6138                             	.LBE5995:
 6139                             	.LBE6008:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 6140                             		.loc 8 194 44 is_stmt 1
 6141                             	.LBB6009:
 6142                             	.LBB5996:
 6143                             	.LBB5699:
 6144                             	.LBB5687:
 6145                             	.LBB5679:
 6146                             	.LBB5577:
 6147                             	.LBB5571:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 6148                             		.loc 8 489 3 is_stmt 0
 6149 033e 47 84                   		cmp	r8, r4
 6150 0340 3B 60 03                		bne	.L338
 6151                             	.LVL472:
 6152                             	.LBB5498:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 6153                             		.loc 8 491 21
 6154 0343 61 04                   		cmp	#0, r4
 6155 0345 2A 05 38 A4 05          		ble	.L452
 6156                             	.LBB5499:
 6157                             	.LBB5500:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6158                             		.loc 8 198 36
 6159 034a AD 83                   		mov.L	88[r0], r3
 6160                             	.LBE5500:
 6161                             	.LBE5499:
 6162                             	.LBB5513:
 6163                             	.LBB5514:
 6164 034c AC 05                   		mov.L	64[r0], r5
 6165 034e 61 54                   		cmp	#5, r4
 6166 0350 2B 05 38 52 03          		bgt	.L383
 6167                             	.LBE5514:
 6168                             	.LBE5513:
 6169                             		.loc 8 492 5 is_stmt 1
 6170                             	.LVL473:
 6171                             	.LBB5527:
 6172                             	.LBB5501:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6173                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6174                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6175                             		.loc 8 198 5
 6176                             	.LBE5501:
 6177                             	.LBE5527:
 6178                             	.LBB5528:
 6179                             	.LBB5515:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6180                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6181                             		.loc 8 197 5
 6182                             	.LBE5515:
 6183                             	.LBE5528:
 6184                             		.loc 8 492 5 is_stmt 0
 6185 0355 47 35                   		cmp	r3, r5
 6186 0357 3B 49 03                		bne	.L338
 6187                             	.LVL474:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 6188                             		.loc 8 491 21
 6189 035a 61 14                   		cmp	#1, r4
 6190 035c 3A 64 05                		beq	.L456
 6191                             		.loc 8 492 5 is_stmt 1
 6192                             	.LVL475:
 6193                             	.LBB5529:
 6194                             	.LBB5502:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6195                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6196                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6197                             		.loc 8 198 5
 6198                             	.LBE5502:
 6199                             	.LBE5529:
 6200                             	.LBB5530:
 6201                             	.LBB5516:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6202                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6203                             		.loc 8 197 5
 6204                             	.LBE5516:
 6205                             	.LBE5530:
 6206                             		.loc 8 492 5 is_stmt 0
 6207 035f AC 0D                   		mov.L	68[r0], r5
 6208 0361 06 85 05 17             		cmp	92[r0].L, r5
 6209 0365 3B 3B 03                		bne	.L338
 6210                             	.LVL476:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 6211                             		.loc 8 491 21
 6212 0368 61 24                   		cmp	#2, r4
 6213 036a 3A 56 05                		beq	.L456
 6214                             		.loc 8 492 5 is_stmt 1
 6215                             	.LVL477:
 6216                             	.LBB5531:
 6217                             	.LBB5503:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6218                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6219                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6220                             		.loc 8 198 5
 6221                             	.LBE5503:
 6222                             	.LBE5531:
 6223                             	.LBB5532:
 6224                             	.LBB5517:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6225                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6226                             		.loc 8 197 5
 6227                             	.LBE5517:
 6228                             	.LBE5532:
 6229                             		.loc 8 492 5 is_stmt 0
 6230 036d AC 85                   		mov.L	72[r0], r5
 6231 036f 06 85 05 18             		cmp	96[r0].L, r5
 6232 0373 3B 2D 03                		bne	.L338
 6233                             	.LVL478:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 6234                             		.loc 8 491 21
 6235 0376 61 34                   		cmp	#3, r4
 6236 0378 3A 48 05                		beq	.L456
 6237                             		.loc 8 492 5 is_stmt 1
 6238                             	.LVL479:
 6239                             	.LBB5533:
 6240                             	.LBB5504:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6241                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6242                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6243                             		.loc 8 198 5
 6244                             	.LBE5504:
 6245                             	.LBE5533:
 6246                             	.LBB5534:
 6247                             	.LBB5518:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6248                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6249                             		.loc 8 197 5
 6250                             	.LBE5518:
 6251                             	.LBE5534:
 6252                             		.loc 8 492 5 is_stmt 0
 6253 037b AC 8D                   		mov.L	76[r0], r5
 6254 037d 06 85 05 19             		cmp	100[r0].L, r5
 6255 0381 3B 1F 03                		bne	.L338
 6256                             	.LVL480:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 6257                             		.loc 8 491 21
 6258 0384 61 44                   		cmp	#4, r4
 6259 0386 3A 3A 05                		beq	.L456
 6260                             		.loc 8 492 5 is_stmt 1
 6261                             	.LVL481:
 6262                             	.LBB5535:
 6263                             	.LBB5505:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6264                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6265                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6266                             		.loc 8 198 5
 6267                             	.LBE5505:
 6268                             	.LBE5535:
 6269                             	.LBB5536:
 6270                             	.LBB5519:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6271                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6272                             		.loc 8 197 5
 6273                             	.LBE5519:
 6274                             	.LBE5536:
 6275                             		.loc 8 492 5 is_stmt 0
 6276 0389 AD 05                   		mov.L	80[r0], r5
 6277                             	.LBE5498:
 6278                             	.LBB5551:
 6279                             	.LBB5552:
 6280                             	.LBB5553:
 6281                             	.LBB5554:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6282                             		.loc 8 214 34
 6283 038b 71 03 58                		add	#0x58, r0, r3
 6284                             	.LBE5554:
 6285                             	.LBE5553:
 6286                             	.LBE5552:
 6287                             	.LBE5551:
 6288                             	.LBB5564:
 6289                             		.loc 8 492 5
 6290 038e 06 85 05 1A             		cmp	104[r0].L, r5
 6291 0392 3B 0E 03                		bne	.L338
 6292                             	.LVL482:
 6293                             		.balign 8,3,1
 6294                             	.L384:
 6295                             	.LBE5564:
 6296                             	.LBB5565:
 6297                             	.LBB5560:
 6298                             	.LBB5557:
 6299                             	.LBB5555:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6300                             		.loc 8 214 34
 6301 0395 66 16                   		mov.L	#1, r6
 6302 0397 66 05                   		mov.L	#0, r5
 6303                             		.balign 8,3,3
 6304                             	.L388:
 6305                             	.LVL483:
 6306                             	.LBE5555:
 6307                             	.LBE5557:
 6308                             	.LBB5558:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 6309                             		.loc 8 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 6310                             		.loc 8 275 19 is_stmt 0
 6311 0399 FE 65 3A                		mov.L	[r5,r3], r10
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 6312                             		.loc 8 274 5
 6313 039c 62 15                   		add	#1, r5
 6314                             	.LVL484:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 6315                             		.loc 8 275 19
 6316 039e 4F A6                   		mul	r10, r6
 6317                             	.LVL485:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 6318                             		.loc 8 274 23
 6319 03a0 47 54                   		cmp	r5, r4
 6320 03a2 2A F7                   		bgt	.L388
 6321                             	.LVL486:
 6322                             	.LBE5558:
 6323                             	.LBE5560:
 6324                             	.LBE5565:
 6325                             	.LBE5571:
 6326                             	.LBE5577:
 6327                             	.LBB5578:
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   for (int i = 0; i < flat_size; i++) {
 6328                             		.loc 10 93 21
 6329 03a4 61 06                   		cmp	#0, r6
 6330 03a6 2A 05 38 D5 00          		ble	.L386
 6331                             	.LVL487:
 6332                             		.balign 8,3,2
 6333                             	.L382:
 6334 03ab ED 03 34                		mov.L	208[r0], r3
 6335 03ae 7E 13                   		neg	r3
 6336 03b0 E7 03 37                		mov.L	r3, 220[r0]
 6337                             	.LBE5578:
 6338                             	.LBB5670:
 6339                             	.LBB5572:
 6340                             	.LBB5566:
 6341                             	.LBB5561:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 6342                             		.loc 8 272 9
 6343 03b3 66 09                   		mov.L	#0, r9
 6344                             	.LBE5561:
 6345                             	.LBE5566:
 6346                             	.LBE5572:
 6347                             	.LBE5670:
 6348                             	.LBB5671:
 6349                             	.LBB5579:
 6350                             	.LBB5580:
 6351                             	.LBB5581:
 6352                             	.LBB5582:
 6353                             	.LBB5583:
 6354                             	.LBB5584:
 6355                             	.LBB5585:
 6356                             	.LBB5586:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 6357                             		.loc 4 346 35
 6358 03b5 FB C6 FF                		mov.L	#-1, r12
 6359 03b8 E7 06 38                		mov.L	r6, 224[r0]
 6360 03bb EF D6                   		mov.L	r13, r6
 6361 03bd EF 7D                   		mov.L	r7, r13
 6362                             	.LVL488:
 6363 03bf FC 43 B9                		xchg	r11, r9
 6364 03c2 38 98 00                		bra	.L397
 6365                             	.LVL489:
 6366                             	.L550:
 6367                             	.LBE5586:
 6368                             	.LBE5585:
 6369                             	.LBE5584:
 6370                             	.LBE5583:
 6371                             	.LBE5582:
 6372                             	.LBE5581:
 6373                             	.LBE5580:
 6374                             	.LBE5579:
 6375                             	.LBE5671:
 6376                             	.LBE5679:
 6377                             	.LBE5687:
 6378                             	.LBE5699:
 6379                             	.LBE5996:
 6380                             	.LBE6009:
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     const uint8_t input_val_u8 = input_data[i];
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     const int32_t input_val_centered =
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****         static_cast<int32_t>(input_val_u8) - input_zero_point;
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     uint8_t output_val;
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     if (input_val_centered <= -input_range_radius) {
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       output_val = 0;
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     } else if (input_val_centered >= input_range_radius) {
 6381                             		.loc 10 100 12 is_stmt 1
 6382                             	.LBB6010:
 6383                             	.LBB5997:
 6384                             	.LBB5700:
 6385                             	.LBB5688:
 6386                             	.LBB5680:
 6387                             	.LBB5672:
 6388                             	.LBB5664:
 6389                             	.LBB5660:
 6390                             	.LBB5657:
 6391 03c5 ED 0A 34                		mov.L	208[r0], r10
 6392 03c8 47 7A                   		cmp	r7, r10
 6393 03ca 2A 05 38 D5 00          		ble	.L459
 6394                             	.LBB5654:
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       output_val = 255;
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     } else {
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       const int32_t input_val_rescaled =
 6395                             		.loc 10 103 7
 6396                             	.LVL490:
 6397                             	.LBB5596:
 6398                             	.LBB5593:
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return SaturatingRoundingDoublingHighMul(x * (1 << left_shift),
 6399                             		.loc 9 151 3
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                            quantized_multiplier);
 6400                             		.loc 9 152 3
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                            quantized_multiplier);
 6401                             		.loc 9 152 43 is_stmt 0
 6402 03cf ED 02 36                		mov.L	216[r0], r2
 6403 03d2 FD 62 27                		shll	r2, r7
 6404                             	.LVL491:
 6405                             	.LBB5590:
 6406                             	.LBB5587:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 6407                             		.loc 4 342 3 is_stmt 1
 6408 03d5 EF 62                   		mov.L	r6, r2
 6409 03d7 FC 1B 72                		emul	r7, r2
 6410 03da EF 24                   		mov.L	r2, r4
 6411                             	.LVL492:
 6412 03dc EF 35                   		mov.L	r3, r5
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 6413                             		.loc 4 342 26 is_stmt 0
 6414 03de 47 76                   		cmp	r7, r6
 6415 03e0 3A C6 00                		beq	.L547
 6416                             	.LVL493:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 6417                             		.loc 4 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 6418                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 6419                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 6420                             		.loc 4 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 6421                             		.loc 4 346 35 is_stmt 0
 6422 03e3 61 03                   		cmp	#0, r3
 6423 03e5 28 05 38 ED 00          		blt	.L548
 6424                             	.LVL494:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 6425                             		.loc 4 347 3 is_stmt 1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 6426                             		.loc 4 348 40 is_stmt 0
 6427 03ea EF 5A                   		mov.L	r5, r10
 6428 03ec 70 47 00 00 00 40       		add	#0x40000000, r4, r7
 6429                             	.LVL495:
 6430 03f2 FD 74 2A 00             		adc	#0, r10
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 6431                             		.loc 4 348 49
 6432 03f6 6C 1A                   		shll	#1, r10
 6433 03f8 69 F7                   		shlr	#31, r7
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 6434                             		.loc 4 347 16
 6435 03fa 57 7A                   		or	r7, r10
 6436                             	.LVL496:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6437                             		.loc 4 349 3 is_stmt 1
 6438                             		.balign 8,3,2
 6439                             	.L426:
 6440                             	.LBE5587:
 6441                             	.LBE5590:
 6442                             	.LBE5593:
 6443                             	.LBE5596:
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****           MultiplyByQuantizedMultiplierGreaterThanOne(
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****               input_val_centered, input_multiplier, input_left_shift);
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       using FixedPoint4 = gemmlowp::FixedPoint<int32_t, 4>;
 6444                             		.loc 10 106 7
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       using FixedPoint0 = gemmlowp::FixedPoint<int32_t, 0>;
 6445                             		.loc 10 107 7
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       const FixedPoint4 input_val_f4 = FixedPoint4::FromRaw(input_val_rescaled);
 6446                             		.loc 10 108 7
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       const FixedPoint0 output_val_f0 = gemmlowp::tanh(input_val_f4);
 6447                             		.loc 10 109 7
 6448 03fc FC 07 A1                		neg	r10, r1
 6449                             	.LBB5597:
 6450                             	.LBB5598:
 6451                             	.LBB5599:
 6452                             	.LBB5600:
 6453                             	.LBB5601:
 6454                             	.LBB5602:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6455                             		.loc 4 159 12 is_stmt 0
 6456 03ff 61 0A                   		cmp	#0, r10
 6457 0401 28 05 38 89 04          		blt	.L462
 6458                             	.LVL497:
 6459                             	.LBE5602:
 6460                             	.LBE5601:
 6461                             	.LBE5600:
 6462                             	.LBE5599:
 6463                             	.LBB5612:
 6464                             	.LBB5613:
 6465                             	.LBB5614:
 6466                             	.LBB5615:
 6467 0406 FC DB A0                		sceq.L	r10
 6468                             	.LVL498:
 6469 0409 60 1A                   		sub	#1, r10
 6470 040b EF C7                   		mov.L	r12, r7
 6471                             	.LBE5615:
 6472                             	.LBE5614:
 6473                             	.LBE5613:
 6474                             	.LBE5612:
 6475                             	.LBB5616:
 6476                             	.LBB5609:
 6477                             	.LBB5606:
 6478                             	.LBB5603:
 6479 040d 66 08                   		mov.L	#0, r8
 6480                             	.LVL499:
 6481 040f 03                      		.balign 8,3,3
 6482                             	.L393:
 6483                             	.LBE5603:
 6484                             	.LBE5606:
 6485                             	.LBE5609:
 6486                             	.LBE5616:
 6487                             	.LBB5617:
 6488                             	.LBB5618:
 6489                             		.loc 4 833 50
 6490 0410 05 00 00 00             		bsr	__ZN8gemmlowp22exp_on_negative_valuesIlLi5EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 6491                             	.LVL500:
 6492 0414 05 00 00 00             		bsr	__ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_
 6493                             	.LVL501:
 6494                             	.LBE5618:
 6495                             	.LBE5617:
 6496                             	.LBB5619:
 6497                             	.LBB5620:
 6498                             	.LBB5621:
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6499                             		.loc 4 113 11
 6500 0418 FC 07 15                		neg	r1, r5
 6501                             	.LBE5621:
 6502                             	.LBE5620:
 6503                             	.LBE5619:
 6504                             	.LBB5622:
 6505                             	.LBB5623:
 6506                             	.LBB5624:
 6507                             	.LBB5625:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6508                             		.loc 4 71 14
 6509 041b 53 17                   		and	r1, r7
 6510                             	.LVL502:
 6511                             	.LBE5625:
 6512                             	.LBE5624:
 6513                             	.LBB5626:
 6514                             	.LBB5627:
 6515 041d 53 58                   		and	r5, r8
 6516                             	.LBE5627:
 6517                             	.LBE5626:
 6518                             	.LBB5628:
 6519                             	.LBB5629:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6520                             		.loc 4 83 14
 6521 041f FC 37 78                		xor	r7, r8
 6522                             	.LVL503:
 6523                             	.LBE5629:
 6524                             	.LBE5628:
 6525                             	.LBE5623:
 6526                             	.LBE5622:
 6527                             	.LBB5630:
 6528                             	.LBB5631:
 6529                             	.LBB5632:
 6530                             	.LBB5633:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6531                             		.loc 4 71 14
 6532 0422 53 A8                   		and	r10, r8
 6533                             	.LVL504:
 6534                             	.LBE5633:
 6535                             	.LBE5632:
 6536                             	.LBE5631:
 6537                             	.LBE5630:
 6538                             	.LBE5598:
 6539                             	.LBE5597:
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       // Convert from Q0.31 to Q24.7.
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       using gemmlowp::RoundingDivideByPOT;
 6540                             		.loc 10 111 7 is_stmt 1
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       int32_t output_val_s32 = RoundingDivideByPOT(output_val_f0.raw(), 24);
 6541                             		.loc 10 112 7
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       output_val_s32 += output_zero_point;
 6542                             		.loc 10 113 7
 6543                             	.LBB5638:
 6544                             	.LBB5639:
 6545                             	.LBB5640:
 6546                             	.LBB5641:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6547                             		.loc 4 95 14 is_stmt 0
 6548 0424 FB 72 00 00 80 00       		mov.L	#0x800000, r7
 6549 042a 27 07                   		bn 1f
 6550 042c FB 7E FF FF 7F          		mov #0x7fffff, r7
 6551                             	1:
 6552                             	.LBE5641:
 6553                             	.LBE5640:
 6554                             	.LBB5642:
 6555                             	.LBB5643:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6556                             		.loc 4 71 14
 6557 0431 FB A2 FF FF FF 00       		mov.L	#0xffffff, r10
 6558 0437 53 8A                   		and	r8, r10
 6559                             	.LVL505:
 6560                             	.LBE5643:
 6561                             	.LBE5642:
 6562                             	.LBB5644:
 6563                             	.LBB5645:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6564                             		.loc 4 142 15
 6565 0439 6B 88                   		shar	#24, r8
 6566                             	.LVL506:
 6567                             	.LBE5645:
 6568                             	.LBE5644:
 6569                             	.LBB5646:
 6570                             	.LBB5647:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6571                             		.loc 4 71 14
 6572 043b 47 7A                   		cmp	r7, r10
 6573 043d FC DB AA                		scgt.L	r10
 6574                             	.LVL507:
 6575                             	.LBE5647:
 6576                             	.LBE5646:
 6577                             	.LBB5648:
 6578                             	.LBB5649:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6579                             		.loc 4 95 14
 6580 0440 4B 8A                   		add	r8, r10
 6581                             	.LBE5649:
 6582                             	.LBE5648:
 6583                             	.LBE5639:
 6584                             	.LBE5638:
 6585                             		.loc 10 113 22
 6586 0442 72 AA 80 00             		add	#0x80, r10
 6587                             	.LVL508:
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       if (output_val_s32 == 256) {
 6588                             		.loc 10 114 7 is_stmt 1
 6589 0446 76 0A 00 01             		cmp	#0x100, r10
 6590 044a 1C                      		bne	.L389
 6591 044b 75 4A FF                		mov.L	#0xff, r10
 6592                             	.LVL509:
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****         output_val_s32 = 255;
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       }
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       // Reinterpret as Q0.7, encoded in uint8_t.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       TFLITE_DCHECK_GE(output_val_s32, 0);
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       TFLITE_DCHECK_LE(output_val_s32, 255);
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       output_val = static_cast<uint8_t>(output_val_s32);
 6593                             		.loc 10 120 7
 6594                             		.balign 8,3,1
 6595                             	.L389:
 6596                             	.LBE5654:
 6597                             	.LBE5657:
 6598                             	.LBE5660:
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     }
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     output_data[i] = output_val;
 6599                             		.loc 10 122 5
 6600                             	.LBE5664:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     const uint8_t input_val_u8 = input_data[i];
 6601                             		.loc 10 93 3 is_stmt 0
 6602 044e 62 1B                   		add	#1, r11
 6603                             	.LVL510:
 6604                             	.LBB5665:
 6605                             		.loc 10 122 20
 6606 0450 FD 20 DA                		mov.B	r10, [r13+]
 6607                             	.LBE5665:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     const uint8_t input_val_u8 = input_data[i];
 6608                             		.loc 10 93 21
 6609 0453 ED 07 38                		mov.L	224[r0], r7
 6610 0456 47 7B                   		cmp	r7, r11
 6611 0458 28 22                   		bge	.L549
 6612                             	.LVL511:
 6613                             		.balign 8,3,3
 6614                             	.L397:
 6615                             	.LBB5666:
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     const int32_t input_val_centered =
 6616                             		.loc 10 94 5 is_stmt 1
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****         static_cast<int32_t>(input_val_u8) - input_zero_point;
 6617                             		.loc 10 95 5
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     uint8_t output_val;
 6618                             		.loc 10 96 9 is_stmt 0
 6619 045a FD 38 97                		movu.B	[r9+], r7
 6620                             	.LVL512:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****         static_cast<int32_t>(input_val_u8) - input_zero_point;
 6621                             		.loc 10 95 19
 6622 045d ED 04 35                		mov.L	212[r0], r4
 6623 0460 43 47                   		sub	r4, r7
 6624                             	.LVL513:
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     if (input_val_centered <= -input_range_radius) {
 6625                             		.loc 10 97 5 is_stmt 1
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       output_val = 0;
 6626                             		.loc 10 98 5
 6627                             	.LBB5661:
 6628 0462 ED 05 37                		mov.L	220[r0], r5
 6629 0465 47 57                   		cmp	r5, r7
 6630 0467 2B 05 38 5C FF          		bgt	.L550
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     } else if (input_val_centered >= input_range_radius) {
 6631                             		.loc 10 99 18 is_stmt 0
 6632 046c 66 0A                   		mov	#0, r10
 6633                             	.LVL514:
 6634                             	.LBE5661:
 6635                             		.loc 10 122 5 is_stmt 1
 6636                             	.LBE5666:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     const uint8_t input_val_u8 = input_data[i];
 6637                             		.loc 10 93 3 is_stmt 0
 6638 046e 62 1B                   		add	#1, r11
 6639                             	.LVL515:
 6640                             	.LBB5667:
 6641                             		.loc 10 122 20
 6642 0470 FD 20 DA                		mov.B	r10, [r13+]
 6643                             	.LVL516:
 6644                             	.LBE5667:
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     const uint8_t input_val_u8 = input_data[i];
 6645                             		.loc 10 93 21
 6646 0473 ED 07 38                		mov.L	224[r0], r7
 6647                             	.LVL517:
 6648 0476 47 7B                   		cmp	r7, r11
 6649 0478 29 E2                   		blt	.L397
 6650                             		.balign 8,3,1
 6651                             	.L549:
 6652 047a ED 08 0F                		mov.L	60[r0], r8
 6653                             	.LVL518:
 6654                             		.balign 8,3,1
 6655                             	.L386:
 6656                             	.LBE5672:
 6657                             	.LBE5680:
 6658                             	.LBE5688:
 6659                             	.LBB5689:
 6660                             	.LBB5690:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 6661                             		.loc 8 185 5 is_stmt 1
 6662 047d 61 58                   		cmp	#5, r8
 6663 047f 2B 0B                   		ble	.L398
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 6664                             		.loc 8 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 6665                             		.loc 8 189 16 is_stmt 0
 6666 0481 AC 01                   		mov.L	64[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 6667                             		.loc 8 189 29
 6668 0483 61 01                   		cmp	#0, r1
 6669 0485 15                      		beq	.L398
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 6670                             		.loc 8 189 16
 6671 0486 05 00 00 00             		bsr	__ZdaPv
 6672                             	.LVL519:
 6673                             		.balign 8,3,1
 6674                             	.L398:
 6675                             	.LBE5690:
 6676                             	.LBE5689:
 6677                             	.LBB5691:
 6678                             	.LBB5692:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 6679                             		.loc 8 185 5 is_stmt 1
 6680 048a AD 0F                   		mov.L	84[r0], r7
 6681 048c 61 57                   		cmp	#5, r7
 6682 048e 2A 05 38 DA FC          		ble	.L423
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 6683                             		.loc 8 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 6684                             		.loc 8 189 16 is_stmt 0
 6685 0493 AD 81                   		mov.L	88[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 6686                             		.loc 8 189 29
 6687 0495 61 01                   		cmp	#0, r1
 6688 0497 3A D3 FC                		beq	.L423
 6689                             	.LBE5692:
 6690                             	.LBE5691:
 6691                             	.LBE5700:
 6692                             	.LBB5701:
 6693                             	.LBB5374:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 6694                             		.loc 8 189 16
 6695 049a 05 00 00 00             		bsr	__ZdaPv
 6696                             	.LVL520:
 6697 049e 38 CC FC                		bra	.L423
 6698                             	.LVL521:
 6699                             	.L459:
 6700                             	.LBE5374:
 6701                             	.LBE5701:
 6702                             	.LBB5702:
 6703                             	.LBB5693:
 6704                             	.LBB5681:
 6705                             	.LBB5673:
 6706                             	.LBB5668:
 6707                             	.LBB5662:
 6708                             	.LBB5658:
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     } else {
 6709                             		.loc 10 101 18
 6710 04a1 FB A6 FF                		mov	#-1, r10
 6711 04a4 2E AA                   		bra	.L389
 6712                             	.LVL522:
 6713                             	.L547:
 6714                             	.LBB5655:
 6715                             	.LBB5650:
 6716                             	.LBB5594:
 6717                             	.LBB5591:
 6718                             	.LBB5588:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 6719                             		.loc 4 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 6720                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 6721                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 6722                             		.loc 4 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 6723                             		.loc 4 346 35 is_stmt 0
 6724 04a6 61 03                   		cmp	#0, r3
 6725 04a8 FB 12 00 00 00 40       		mov.L	#0x40000000, r1
 6726 04ae 28 08                   		bge 1f
 6727 04b0 FB 12 01 00 00 C0       		mov #-1073741823, r1
 6728                             	1:
 6729 04b6 66 0A                   		mov.L	#0, r10
 6730 04b8 28 05                   		bge 1f
 6731 04ba FB A6 FF                		mov #-1, r10
 6732                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 6733                             		.loc 4 347 3 is_stmt 1
 6734                             	.LVL523:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6735                             		.loc 4 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6736                             		.loc 4 349 19 is_stmt 0
 6737 04bd 74 06 00 00 00 80       		cmp	#-2147483648, r6
 6738 04c3 21 19                   		bne	.L429
 6739 04c5 EF CA                   		mov.L	r12, r10
 6740                             	.LVL524:
 6741 04c7 FB 12 01 00 00 80       		mov.L	#-2147483647, r1
 6742                             	.LVL525:
 6743 04cd EF C7                   		mov.L	r12, r7
 6744                             	.LVL526:
 6745                             	.LBE5588:
 6746                             	.LBE5591:
 6747                             	.LBE5594:
 6748                             	.LBE5650:
 6749                             	.LBB5651:
 6750                             	.LBB5636:
 6751                             	.LBB5634:
 6752                             	.LBB5610:
 6753                             	.LBB5607:
 6754                             	.LBB5604:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 6755                             		.loc 4 159 12
 6756 04cf 66 08                   		mov.L	#0, r8
 6757                             	.LVL527:
 6758 04d1 38 3F FF                		bra	.L393
 6759                             	.LVL528:
 6760                             	.L548:
 6761                             	.LBE5604:
 6762                             	.LBE5607:
 6763                             	.LBE5610:
 6764                             	.LBE5634:
 6765                             	.LBE5636:
 6766                             	.LBE5651:
 6767                             	.LBB5652:
 6768                             	.LBB5595:
 6769                             	.LBB5592:
 6770                             	.LBB5589:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 6771                             		.loc 4 346 35
 6772 04d4 FB 12 01 00 00 C0       		mov.L	#-1073741823, r1
 6773 04da EF CA                   		mov.L	r12, r10
 6774                             	.LVL529:
 6775                             		.balign 8,3,2
 6776                             	.L429:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 6777                             		.loc 4 348 49
 6778 04dc FF 27 41                		add	r4, r1, r7
 6779                             	.LVL530:
 6780 04df FC 0B 5A                		adc	r5, r10
 6781 04e2 26 0E                   		bpz	.L394
 6782 04e4 70 74 FF FF FF 7F       		add	#0x7fffffff, r7, r4
 6783 04ea FD 74 2A 00             		adc	#0, r10
 6784 04ee EF 47                   		mov.L	r4, r7
 6785                             		.balign 8,3,1
 6786                             	.L394:
 6787 04f0 6C 1A                   		shll	#1, r10
 6788 04f2 69 F7                   		shlr	#31, r7
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 6789                             		.loc 4 347 16
 6790 04f4 57 7A                   		or	r7, r10
 6791 04f6 38 06 FF                		bra	.L426
 6792                             	.LVL531:
 6793                             	.L343:
 6794                             	.LBE5589:
 6795                             	.LBE5592:
 6796                             	.LBE5595:
 6797                             	.LBE5652:
 6798                             	.LBE5655:
 6799                             	.LBE5658:
 6800                             	.LBE5662:
 6801                             	.LBE5668:
 6802                             	.LBE5673:
 6803                             	.LBE5681:
 6804                             	.LBE5693:
 6805                             	.LBE5702:
 104:../src/tensorflow/lite/micro/kernels/tanh.cc ****     case kTfLiteInt16: {
 6806                             		.loc 1 104 7 is_stmt 1
 105:../src/tensorflow/lite/micro/kernels/tanh.cc ****       TanhParams params;
 6807                             		.loc 1 105 5
 105:../src/tensorflow/lite/micro/kernels/tanh.cc ****       TanhParams params;
 6808                             		.loc 1 105 24
 6809                             	.LBB5703:
 106:../src/tensorflow/lite/micro/kernels/tanh.cc ****       params.input_left_shift = data.input_left_shift;
 6810                             		.loc 1 106 7
 107:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_ops::Tanh(params, tflite::micro::GetTensorShape(input),
 6811                             		.loc 1 107 7
 108:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<int16_t>(input),
 6812                             		.loc 1 108 64 is_stmt 0
 6813 04f9 72 0F 84 00             		add	#0x84, r0, r15
 6814 04fd EF 81                   		mov.L	r8, r1
 107:../src/tensorflow/lite/micro/kernels/tanh.cc ****       reference_ops::Tanh(params, tflite::micro::GetTensorShape(input),
 6815                             		.loc 1 107 38
 6816 04ff A8 DE                   		mov.L	12[r5], r6
 108:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<int16_t>(input),
 6817                             		.loc 1 108 7 is_stmt 1
 108:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<int16_t>(input),
 6818                             		.loc 1 108 64 is_stmt 0
 6819 0501 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 6820                             	.LVL532:
 110:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<int16_t>(output));
 6821                             		.loc 1 110 56
 6822 0505 71 0F 6C                		add	#0x6c, r0, r15
 6823 0508 EF 71                   		mov.L	r7, r1
 6824                             	.LBB5704:
 6825                             	.LBB5705:
 6826                             		.loc 6 62 53
 6827 050a EC 89                   		mov.L	[r8], r9
 6828                             	.LVL533:
 6829                             	.LBE5705:
 6830                             	.LBE5704:
 110:../src/tensorflow/lite/micro/kernels/tanh.cc ****                           tflite::micro::GetTensorData<int16_t>(output));
 6831                             		.loc 1 110 56
 6832 050c 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 6833                             	.LVL534:
 6834                             	.LBB5706:
 6835                             	.LBB5707:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 6836                             		.loc 6 55 28
 6837 0510 61 07                   		cmp	#0, r7
 6838 0512 13                      		beq	.L361
 6839 0513 EC 77                   		mov.L	[r7], r7
 6840                             	.LVL535:
 6841                             		.balign 8,3,1
 6842                             	.L361:
 6843                             	.LBE5707:
 6844                             	.LBE5706:
 6845                             	.LBB5708:
 6846                             	.LBB5709:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // Support for shifts is limited until we have a parameterized version of
 6847                             		.loc 10 52 3 is_stmt 1
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   TFLITE_DCHECK_LE(input_left_shift, 1);
 6848                             		.loc 10 55 3
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
 6849                             		.loc 10 56 3
 6850 0515 61 16                   		cmp	#1, r6
 6851 0517 25 05 38 87 01          		bgtu	.L338
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
 6852                             		.loc 10 58 3
 6853                             	.LVL536:
 6854                             	.LBB5710:
 6855                             	.LBB5711:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 6856                             		.loc 8 489 3
 6857 051c ED 05 21                		mov.L	132[r0], r5
 6858                             	.LVL537:
 6859                             	.LBE5711:
 6860                             	.LBE5710:
 6861                             	.LBE5709:
 6862                             	.LBE5708:
 6863                             	.LBE5703:
 6864                             	.LBE5997:
 6865                             	.LBE6010:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 6866                             		.loc 8 194 44
 6867                             	.LBB6011:
 6868                             	.LBB5998:
 6869                             	.LBB5965:
 6870                             	.LBB5952:
 6871                             	.LBB5943:
 6872                             	.LBB5795:
 6873                             	.LBB5788:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 6874                             		.loc 8 489 3 is_stmt 0
 6875 051f AE 89                   		mov.L	108[r0], r1
 6876                             	.LVL538:
 6877                             	.LBE5788:
 6878                             	.LBE5795:
 6879                             	.LBE5943:
 6880                             	.LBE5952:
 6881                             	.LBE5965:
 6882                             	.LBE5998:
 6883                             	.LBE6011:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 6884                             		.loc 8 194 44 is_stmt 1
 6885                             	.LBB6012:
 6886                             	.LBB5999:
 6887                             	.LBB5966:
 6888                             	.LBB5953:
 6889                             	.LBB5944:
 6890                             	.LBB5796:
 6891                             	.LBB5789:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 6892                             		.loc 8 489 3 is_stmt 0
 6893 0521 47 15                   		cmp	r1, r5
 6894 0523 3B 7D 01                		bne	.L338
 6895                             	.LVL539:
 6896                             	.LBB5712:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 6897                             		.loc 8 491 21
 6898 0526 61 05                   		cmp	#0, r5
 6899 0528 2A 05 38 78 03          		ble	.L362
 6900                             	.LBB5713:
 6901                             	.LBB5714:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6902                             		.loc 8 198 36
 6903 052d ED 03 22                		mov.L	136[r0], r3
 6904                             	.LBE5714:
 6905                             	.LBE5713:
 6906                             	.LBB5727:
 6907                             	.LBB5728:
 6908 0530 ED 0A 1C                		mov.L	112[r0], r10
 6909                             	.LVL540:
 6910 0533 61 55                   		cmp	#5, r5
 6911 0535 2B 05 38 12 02          		bgt	.L363
 6912                             	.LBE5728:
 6913                             	.LBE5727:
 6914                             		.loc 8 492 5 is_stmt 1
 6915                             	.LVL541:
 6916                             	.LBB5741:
 6917                             	.LBB5715:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6918                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6919                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6920                             		.loc 8 198 5
 6921                             	.LBE5715:
 6922                             	.LBE5741:
 6923                             	.LBB5742:
 6924                             	.LBB5729:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6925                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6926                             		.loc 8 197 5
 6927                             	.LBE5729:
 6928                             	.LBE5742:
 6929                             		.loc 8 492 5 is_stmt 0
 6930 053a 47 3A                   		cmp	r3, r10
 6931 053c 3B 64 01                		bne	.L338
 6932                             	.LVL542:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 6933                             		.loc 8 491 21
 6934 053f 61 15                   		cmp	#1, r5
 6935 0541 3A 78 03                		beq	.L446
 6936                             		.loc 8 492 5 is_stmt 1
 6937                             	.LVL543:
 6938                             	.LBB5743:
 6939                             	.LBB5716:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6940                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6941                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6942                             		.loc 8 198 5
 6943                             	.LBE5716:
 6944                             	.LBE5743:
 6945                             	.LBB5744:
 6946                             	.LBB5730:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6947                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6948                             		.loc 8 197 5
 6949                             	.LBE5730:
 6950                             	.LBE5744:
 6951                             		.loc 8 492 5 is_stmt 0
 6952 0544 ED 0A 1D                		mov.L	116[r0], r10
 6953 0547 06 85 0A 23             		cmp	140[r0].L, r10
 6954 054b 3B 55 01                		bne	.L338
 6955                             	.LVL544:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 6956                             		.loc 8 491 21
 6957 054e 61 25                   		cmp	#2, r5
 6958 0550 3A 69 03                		beq	.L446
 6959                             		.loc 8 492 5 is_stmt 1
 6960                             	.LVL545:
 6961                             	.LBB5745:
 6962                             	.LBB5717:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6963                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6964                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6965                             		.loc 8 198 5
 6966                             	.LBE5717:
 6967                             	.LBE5745:
 6968                             	.LBB5746:
 6969                             	.LBB5731:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6970                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6971                             		.loc 8 197 5
 6972                             	.LBE5731:
 6973                             	.LBE5746:
 6974                             		.loc 8 492 5 is_stmt 0
 6975 0553 ED 0A 1E                		mov.L	120[r0], r10
 6976 0556 06 85 0A 24             		cmp	144[r0].L, r10
 6977 055a 3B 46 01                		bne	.L338
 6978                             	.LVL546:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 6979                             		.loc 8 491 21
 6980 055d 61 35                   		cmp	#3, r5
 6981 055f 3A 5A 03                		beq	.L446
 6982                             		.loc 8 492 5 is_stmt 1
 6983                             	.LVL547:
 6984                             	.LBB5747:
 6985                             	.LBB5718:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6986                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6987                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 6988                             		.loc 8 198 5
 6989                             	.LBE5718:
 6990                             	.LBE5747:
 6991                             	.LBB5748:
 6992                             	.LBB5732:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 6993                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 6994                             		.loc 8 197 5
 6995                             	.LBE5732:
 6996                             	.LBE5748:
 6997                             		.loc 8 492 5 is_stmt 0
 6998 0562 ED 0A 1F                		mov.L	124[r0], r10
 6999 0565 06 85 0A 25             		cmp	148[r0].L, r10
 7000 0569 3B 37 01                		bne	.L338
 7001                             	.LVL548:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7002                             		.loc 8 491 21
 7003 056c 61 45                   		cmp	#4, r5
 7004 056e 3A 4B 03                		beq	.L446
 7005                             		.loc 8 492 5 is_stmt 1
 7006                             	.LVL549:
 7007                             	.LBB5749:
 7008                             	.LBB5719:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7009                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7010                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7011                             		.loc 8 198 5
 7012                             	.LBE5719:
 7013                             	.LBE5749:
 7014                             	.LBB5750:
 7015                             	.LBB5733:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7016                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7017                             		.loc 8 197 5
 7018                             	.LBE5733:
 7019                             	.LBE5750:
 7020                             		.loc 8 492 5 is_stmt 0
 7021 0571 ED 0A 20                		mov.L	128[r0], r10
 7022                             	.LBE5712:
 7023                             	.LBB5765:
 7024                             	.LBB5766:
 7025                             	.LBB5767:
 7026                             	.LBB5768:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7027                             		.loc 8 214 34
 7028 0574 72 03 88 00             		add	#0x88, r0, r3
 7029                             	.LBE5768:
 7030                             	.LBE5767:
 7031                             	.LBE5766:
 7032                             	.LBE5765:
 7033                             	.LBB5781:
 7034                             		.loc 8 492 5
 7035 0578 06 85 0A 26             		cmp	152[r0].L, r10
 7036 057c 3B 24 01                		bne	.L338
 7037                             	.LVL550:
 7038 057f 03                      		.balign 8,3,1
 7039                             	.L364:
 7040                             	.LBE5781:
 7041                             	.LBB5782:
 7042                             	.LBB5776:
 7043                             	.LBB5772:
 7044                             	.LBB5769:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7045                             		.loc 8 214 34
 7046 0580 66 18                   		mov.L	#1, r8
 7047                             	.LVL551:
 7048 0582 66 0A                   		mov.L	#0, r10
 7049                             		.balign 8,3,3
 7050                             	.L367:
 7051                             	.LVL552:
 7052                             	.LBE5769:
 7053                             	.LBE5772:
 7054                             	.LBB5773:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 7055                             		.loc 8 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 7056                             		.loc 8 275 19 is_stmt 0
 7057 0584 FE 6A 34                		mov.L	[r10,r3], r4
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 7058                             		.loc 8 274 5
 7059 0587 62 1A                   		add	#1, r10
 7060                             	.LVL553:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 7061                             		.loc 8 275 19
 7062 0589 4F 48                   		mul	r4, r8
 7063                             	.LVL554:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 7064                             		.loc 8 274 23
 7065 058b 47 A5                   		cmp	r10, r5
 7066 058d 2A F7                   		bgt	.L367
 7067                             	.LBE5773:
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7068                             		.loc 8 277 5 is_stmt 1
 7069                             	.LVL555:
 7070                             	.LBE5776:
 7071                             	.LBE5782:
 7072                             	.LBE5789:
 7073                             	.LBE5796:
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // F3 uses 3 integer bits, range [-8, 8], the input range expected here.
 7074                             		.loc 10 63 3
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
 7075                             		.loc 10 65 3
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     for (int i = 0; i < flat_size; i++) {
 7076                             		.loc 10 67 3
 7077                             	.LBB5797:
 7078 058f 61 06                   		cmp	#0, r6
 7079 0591 3B 3A 02                		bne	.L368
 7080                             	.LVL556:
 7081                             	.LBB5798:
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F3 input = F3::FromRaw(input_data[i]);
 7082                             		.loc 10 68 23 is_stmt 0
 7083 0594 61 08                   		cmp	#0, r8
 7084 0596 2B 50                   		ble	.L369
 7085                             	.LVL557:
 7086                             		.balign 8,3,1
 7087                             	.L432:
 7088                             	.LBE5798:
 7089                             	.LBE5797:
 7090                             	.LBB5932:
 7091                             	.LBB5790:
 7092                             	.LBB5783:
 7093                             	.LBB5777:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 7094                             		.loc 8 272 9
 7095 0598 66 06                   		mov.L	#0, r6
 7096                             	.LVL558:
 7097                             		.balign 8,3,5
 7098                             	.L371:
 7099                             	.LBE5777:
 7100                             	.LBE5783:
 7101                             	.LBE5790:
 7102                             	.LBE5932:
 7103                             	.LBB5933:
 7104                             	.LBB5840:
 7105                             	.LBB5799:
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F0 output = gemmlowp::tanh(input);
 7106                             		.loc 10 69 7 is_stmt 1
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F0 output = gemmlowp::tanh(input);
 7107                             		.loc 10 69 43 is_stmt 0
 7108 059a FE 56 95                		mov.W	[r6,r9], r5
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       output_data[i] = output.raw();
 7109                             		.loc 10 70 7 is_stmt 1
 7110                             	.LVL559:
 7111                             	.LBB5800:
 7112                             	.LBB5801:
 7113                             	.LBB5802:
 7114                             	.LBB5803:
 7115                             	.LBB5804:
 7116                             	.LBB5805:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 7117                             		.loc 4 159 12 is_stmt 0
 7118 059d DF 5A                   		mov.W	r5, r10
 7119 059f FC 07 54                		neg	r5, r4
 7120                             	.LVL560:
 7121 05a2 61 0A                   		cmp	#0, r10
 7122 05a4 28 05 38 20 03          		blt	.L448
 7123                             	.LVL561:
 7124                             	.LBE5805:
 7125                             	.LBE5804:
 7126                             	.LBE5803:
 7127                             	.LBE5802:
 7128                             	.LBB5812:
 7129                             	.LBB5813:
 7130                             	.LBB5814:
 7131                             	.LBB5815:
 7132 05a9 FC DB A0                		sceq.L	r10
 7133 05ac 71 AB FF                		add	#-1, r10, r11
 7134 05af FB D6 FF                		mov	#-1, r13
 7135                             	.LBE5815:
 7136                             	.LBE5814:
 7137                             	.LBE5813:
 7138                             	.LBE5812:
 7139                             	.LBB5816:
 7140                             	.LBB5810:
 7141                             	.LBB5808:
 7142                             	.LBB5806:
 7143 05b2 66 0C                   		mov	#0, r12
 7144                             	.LVL562:
 7145                             		.balign 8,3,2
 7146                             	.L370:
 7147                             	.LBE5806:
 7148                             	.LBE5808:
 7149                             	.LBE5810:
 7150                             	.LBE5816:
 7151                             	.LBB5817:
 7152                             	.LBB5818:
 7153                             		.loc 4 833 50
 7154 05b4 75 4F CC                		mov.L	#0xcc, r15
 7155 05b7 4B 0F                   		add	r0, r15
 7156 05b9 D3 04                   		mov.W	r4, [r0]
 7157                             	.LVL563:
 7158 05bb 05 00 00 00             		bsr	__ZN8gemmlowp22exp_on_negative_valuesIsLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 7159                             	.LVL564:
 7160 05bf D1 00 66                		mov.W	204[r0], [r0]
 7161 05c2 75 4F CC                		mov.L	#0xcc, r15
 7162 05c5 4B 0F                   		add	r0, r15
 7163 05c7 05 00 00 00             		bsr	__ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IsEENS_10FixedPointIT_Li0EEES3_
 7164                             	.LVL565:
 7165 05cb DD 04 66                		mov.W	204[r0], r4
 7166                             	.LVL566:
 7167                             	.LBE5818:
 7168                             	.LBE5817:
 7169                             	.LBE5801:
 7170                             	.LBE5800:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     }
 7171                             		.loc 10 71 7 is_stmt 1
 7172                             	.LBB5837:
 7173                             	.LBB5835:
 7174                             	.LBB5819:
 7175                             	.LBB5820:
 7176                             	.LBB5821:
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 7177                             		.loc 4 113 11 is_stmt 0
 7178 05ce FC 07 45                		neg	r4, r5
 7179                             	.LBE5821:
 7180                             	.LBE5820:
 7181                             	.LBE5819:
 7182                             	.LBB5822:
 7183                             	.LBB5823:
 7184                             	.LBB5824:
 7185                             	.LBB5825:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 7186                             		.loc 4 71 14
 7187 05d1 53 4D                   		and	r4, r13
 7188                             	.LBE5825:
 7189                             	.LBE5824:
 7190                             	.LBB5826:
 7191                             	.LBB5827:
 7192 05d3 FF 4A C5                		and	r12, r5, r10
 7193                             	.LBE5827:
 7194                             	.LBE5826:
 7195                             	.LBB5828:
 7196                             	.LBB5829:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 7197                             		.loc 4 83 14
 7198 05d6 FC 37 DA                		xor	r13, r10
 7199                             	.LBE5829:
 7200                             	.LBE5828:
 7201                             	.LBE5823:
 7202                             	.LBE5822:
 7203                             	.LBB5830:
 7204                             	.LBB5831:
 7205                             	.LBB5832:
 7206                             	.LBB5833:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 7207                             		.loc 4 71 14
 7208 05d9 53 BA                   		and	r11, r10
 7209                             	.LBE5833:
 7210                             	.LBE5832:
 7211                             	.LBE5831:
 7212                             	.LBE5830:
 7213                             	.LBE5835:
 7214                             	.LBE5837:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     }
 7215                             		.loc 10 71 22
 7216 05db FE 16 7A                		mov.W	r10, [r6,r7]
 7217                             	.LBE5799:
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F3 input = F3::FromRaw(input_data[i]);
 7218                             		.loc 10 68 5
 7219 05de 62 16                   		add	#1, r6
 7220                             	.LVL567:
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F3 input = F3::FromRaw(input_data[i]);
 7221                             		.loc 10 68 23
 7222 05e0 47 86                   		cmp	r8, r6
 7223 05e2 29 B8                   		blt	.L371
 7224                             	.LVL568:
 7225                             		.balign 8,3,1
 7226                             	.L538:
 7227 05e4 AE 89                   		mov.L	108[r0], r1
 7228                             		.balign 8,3,1
 7229                             	.L369:
 7230                             	.LVL569:
 7231                             	.LBE5840:
 7232                             	.LBE5933:
 7233                             	.LBE5944:
 7234                             	.LBE5953:
 7235                             	.LBB5954:
 7236                             	.LBB5955:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 7237                             		.loc 8 185 5 is_stmt 1
 7238 05e6 61 51                   		cmp	#5, r1
 7239 05e8 2B 0B                   		ble	.L379
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 7240                             		.loc 8 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 7241                             		.loc 8 189 16 is_stmt 0
 7242 05ea AF 01                   		mov.L	112[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 7243                             		.loc 8 189 29
 7244 05ec 61 01                   		cmp	#0, r1
 7245 05ee 15                      		beq	.L379
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 7246                             		.loc 8 189 16
 7247 05ef 05 00 00 00             		bsr	__ZdaPv
 7248                             	.LVL570:
 7249                             		.balign 8,3,2
 7250                             	.L379:
 7251                             	.LBE5955:
 7252                             	.LBE5954:
 7253                             	.LBB5956:
 7254                             	.LBB5957:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 7255                             		.loc 8 185 5 is_stmt 1
 7256 05f3 ED 07 21                		mov.L	132[r0], r7
 7257 05f6 61 57                   		cmp	#5, r7
 7258 05f8 2A 05 38 70 FB          		ble	.L423
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 7259                             		.loc 8 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 7260                             		.loc 8 189 16 is_stmt 0
 7261 05fd ED 01 22                		mov.L	136[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 7262                             		.loc 8 189 29
 7263 0600 61 01                   		cmp	#0, r1
 7264 0602 3A 68 FB                		beq	.L423
 7265                             	.LBE5957:
 7266                             	.LBE5956:
 7267                             	.LBE5966:
 7268                             	.LBB5967:
 7269                             	.LBB5375:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 7270                             		.loc 8 189 16
 7271 0605 05 00 00 00             		bsr	__ZdaPv
 7272                             	.LVL571:
 7273 0609 38 61 FB                		bra	.L423
 7274                             	.LVL572:
 7275                             	.L342:
 7276                             	.LBE5375:
 7277                             	.LBE5967:
 135:../src/tensorflow/lite/micro/kernels/tanh.cc ****     default:
 7278                             		.loc 1 135 7 is_stmt 1
 136:../src/tensorflow/lite/micro/kernels/tanh.cc ****       TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 7279                             		.loc 1 136 5
 137:../src/tensorflow/lite/micro/kernels/tanh.cc ****                          TfLiteTypeGetName(input->type),
 7280                             		.loc 1 137 7
 137:../src/tensorflow/lite/micro/kernels/tanh.cc ****                          TfLiteTypeGetName(input->type),
 7281                             		.loc 1 137 7
 7282 060c ED A6 05                		mov.L	20[r10], r6
 7283 060f 05 00 00 00             		bsr	_TfLiteTypeGetName
 7284                             	.LVL573:
 7285 0613 EF 1B                   		mov.L	r1, r11
 7286 0615 A8 F1                   		mov.L	8[r7], r1
 7287 0617 05 00 00 00             		bsr	_TfLiteTypeGetName
 7288                             	.LVL574:
 7289 061b A0 81                   		mov.L	r1, 8[r0]
 7290 061d E7 0B 01                		mov.L	r11, 4[r0]
 7291 0620 EF A1                   		mov.L	r10, r1
 7292 0622 F8 02 8A 00 00 00       		mov.L	#.LC14, [r0]
 7293 0628 7F 16                   		jsr	r6
 7294                             	.LVL575:
 140:../src/tensorflow/lite/micro/kernels/tanh.cc ****   }
 7295                             		.loc 1 140 7
 140:../src/tensorflow/lite/micro/kernels/tanh.cc ****   }
 7296                             		.loc 1 140 14 is_stmt 0
 7297 062a 66 11                   		mov.L	#1, r1
 7298                             	.LBE5999:
 7299                             	.LBE6012:
 142:../src/tensorflow/lite/micro/kernels/tanh.cc **** 
 7300                             		.loc 1 142 1
 7301 062c 3F 6D 46                		rtsd	#280, r6-r13
 7302                             	.LVL576:
 7303                             	.L434:
 7304 062f EF 51                   		mov.L	r5, r1
 7305                             	.LVL577:
 7306                             	.LBB6013:
 7307                             	.LBB6000:
 7308                             	.LBB5968:
 7309                             	.LBB5361:
 7310                             	.LBB5349:
 7311                             	.LBB5342:
 7312                             	.LBB5334:
 7313                             	.LBB5326:
 7314                             	.LBB5319:
 7315                             	.LBB5313:
 7316                             	.LBB5258:
 7317                             	.LBB5252:
 7318                             	.LBB5247:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 7319                             		.loc 4 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 7320                             		.loc 4 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 7321                             		.loc 4 348 40 is_stmt 0
 7322 0631 70 3A 00 00 00 40       		add	#0x40000000, r3, r10
 7323 0637 FD 74 21 00             		adc	#0, r1
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 7324                             		.loc 4 348 49
 7325 063b 6C 11                   		shll	#1, r1
 7326 063d 69 FA                   		shlr	#31, r10
 7327 063f FF 56 A1                		or	r10, r1, r6
 7328 0642 38 48 FC                		bra	.L416
 7329                             	.LVL578:
 7330                             	.L402:
 7331                             	.LBE5247:
 7332                             	.LBE5252:
 7333                             	.LBE5258:
 7334                             	.LBE5313:
 7335                             	.LBE5319:
 7336                             	.LBE5326:
 7337                             	.LBE5334:
 7338                             	.LBE5342:
 7339                             	.LBE5349:
 7340                             	.LBB5350:
 7341                             	.LBB5213:
 7342                             	.LBB5208:
 7343                             		.loc 8 492 5 is_stmt 1
 7344                             	.LBB5178:
 7345                             	.LBB5145:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7346                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7347                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7348                             		.loc 8 198 5
 7349                             	.LBE5145:
 7350                             	.LBE5178:
 7351                             	.LBB5179:
 7352                             	.LBB5160:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7353                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7354                             		.loc 8 197 5
 7355                             	.LBE5160:
 7356                             	.LBE5179:
 7357                             		.loc 8 492 5 is_stmt 0
 7358 0645 EC A5                   		mov.L	[r10], r5
 7359 0647 06 84 15                		cmp	[r1].L, r5
 7360 064a 21 56                   		bne	.L338
 7361                             	.LVL579:
 7362                             		.loc 8 492 5 is_stmt 1
 7363                             	.LBB5180:
 7364                             	.LBB5146:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7365                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7366                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7367                             		.loc 8 198 5
 7368                             	.LBE5146:
 7369                             	.LBE5180:
 7370                             	.LBB5181:
 7371                             	.LBB5161:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7372                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7373                             		.loc 8 197 5
 7374                             	.LBE5161:
 7375                             	.LBE5181:
 7376                             		.loc 8 492 5 is_stmt 0
 7377 064c ED A5 01                		mov.L	4[r10], r5
 7378 064f 06 85 15 01             		cmp	4[r1].L, r5
 7379 0653 21 4D                   		bne	.L338
 7380                             	.LVL580:
 7381                             		.loc 8 492 5 is_stmt 1
 7382                             	.LBB5182:
 7383                             	.LBB5147:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7384                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7385                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7386                             		.loc 8 198 5
 7387                             	.LBE5147:
 7388                             	.LBE5182:
 7389                             	.LBB5183:
 7390                             	.LBB5162:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7391                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7392                             		.loc 8 197 5
 7393                             	.LBE5162:
 7394                             	.LBE5183:
 7395                             		.loc 8 492 5 is_stmt 0
 7396 0655 ED A5 02                		mov.L	8[r10], r5
 7397 0658 06 85 15 02             		cmp	8[r1].L, r5
 7398 065c 21 44                   		bne	.L338
 7399                             	.LVL581:
 7400                             		.loc 8 492 5 is_stmt 1
 7401                             	.LBB5184:
 7402                             	.LBB5148:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7403                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7404                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7405                             		.loc 8 198 5
 7406                             	.LBE5148:
 7407                             	.LBE5184:
 7408                             	.LBB5185:
 7409                             	.LBB5163:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7410                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7411                             		.loc 8 197 5
 7412                             	.LBE5163:
 7413                             	.LBE5185:
 7414                             		.loc 8 492 5 is_stmt 0
 7415 065e A8 9D                   		mov.L	12[r1], r5
 7416 0660 06 85 A5 03             		cmp	12[r10].L, r5
 7417 0664 21 3C                   		bne	.L338
 7418                             	.LVL582:
 7419                             		.loc 8 492 5 is_stmt 1
 7420                             	.LBB5186:
 7421                             	.LBB5149:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7422                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7423                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7424                             		.loc 8 198 5
 7425                             	.LBE5149:
 7426                             	.LBE5186:
 7427                             	.LBB5187:
 7428                             	.LBB5164:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7429                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7430                             		.loc 8 197 5
 7431                             	.LBE5164:
 7432                             	.LBE5187:
 7433                             		.loc 8 492 5 is_stmt 0
 7434 0666 ED A5 04                		mov.L	16[r10], r5
 7435 0669 06 85 15 04             		cmp	16[r1].L, r5
 7436 066d 21 33                   		bne	.L338
 7437                             	.LVL583:
 7438                             		.loc 8 492 5 is_stmt 1
 7439                             	.LBB5188:
 7440                             	.LBB5150:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7441                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7442                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7443                             		.loc 8 198 5
 7444                             	.LBE5150:
 7445                             	.LBE5188:
 7446                             	.LBB5189:
 7447                             	.LBB5165:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7448                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7449                             		.loc 8 197 5
 7450                             	.LBE5165:
 7451                             	.LBE5189:
 7452                             		.loc 8 492 5 is_stmt 0
 7453 066f ED A5 05                		mov.L	20[r10], r5
 7454 0672 06 85 15 05             		cmp	20[r1].L, r5
 7455 0676 21 2A                   		bne	.L338
 7456                             	.LVL584:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7457                             		.loc 8 491 21
 7458 0678 61 64                   		cmp	#6, r4
 7459 067a 3A 5A FA                		beq	.L403
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7460                             		.loc 8 491 3
 7461 067d 66 65                   		mov.L	#6, r5
 7462                             	.LVL585:
 7463                             		.loc 8 492 5 is_stmt 1
 7464                             	.LBB5190:
 7465                             	.LBB5151:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7466                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7467                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7468                             		.loc 8 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7469                             		.loc 8 198 34 is_stmt 0
 7470 067f FE 65 12                		mov.L	[r5,r1], r2
 7471                             	.LVL586:
 7472                             	.LBE5151:
 7473                             	.LBE5190:
 7474                             	.LBB5191:
 7475                             	.LBB5166:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7476                             		.loc 8 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7477                             		.loc 8 197 5
 7478 0682 47 85                   		cmp	r8, r5
 7479 0684 20 1C                   		beq	.L338
 7480                             	.LVL587:
 7481 0686 EF 00                   		.balign 8,3,3
 7482                             	.L551:
 7483                             	.LBE5166:
 7484                             	.LBE5191:
 7485                             		.loc 8 492 5 is_stmt 0
 7486 0688 FE 65 A6                		mov.L	[r5,r10], r6
 7487 068b 47 26                   		cmp	r2, r6
 7488 068d 21 13                   		bne	.L338
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7489                             		.loc 8 491 3
 7490 068f 62 15                   		add	#1, r5
 7491                             	.LVL588:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7492                             		.loc 8 491 21
 7493 0691 47 54                   		cmp	r5, r4
 7494 0693 3A 41 FA                		beq	.L403
 7495                             		.loc 8 492 5 is_stmt 1
 7496                             	.LVL589:
 7497                             	.LBB5192:
 7498                             	.LBB5152:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7499                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7500                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7501                             		.loc 8 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7502                             		.loc 8 198 34 is_stmt 0
 7503 0696 FE 65 12                		mov.L	[r5,r1], r2
 7504                             	.LVL590:
 7505                             	.LBE5152:
 7506                             	.LBE5192:
 7507                             	.LBB5193:
 7508                             	.LBB5167:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7509                             		.loc 8 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7510                             		.loc 8 197 5
 7511 0699 47 85                   		cmp	r8, r5
 7512 069b 21 ED                   		bne	.L551
 7513                             	.LVL591:
 7514 069d FC 13 00                		.balign 8,3,3
 7515                             	.L338:
 7516                             	.LBE5167:
 7517                             	.LBE5193:
 7518                             	.LBE5208:
 7519                             	.LBE5213:
 7520                             	.LBE5350:
 7521                             	.LBE5361:
 7522                             	.LBE5968:
 7523                             	.LBE6000:
 7524                             	.LBE6013:
 7525                             	.LBB6014:
 7526                             	.LBB5124:
 7527                             	.LBB5123:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 7528                             		.loc 6 33 3 is_stmt 0
 7529 06a0 05 00 00 00             		bsr	_abort
 7530                             	.LVL592:
 7531                             	.L383:
 7532                             	.LBE5123:
 7533                             	.LBE5124:
 7534                             	.LBE6014:
 7535                             	.LBB6015:
 7536                             	.LBB6001:
 7537                             	.LBB5969:
 7538                             	.LBB5694:
 7539                             	.LBB5682:
 7540                             	.LBB5674:
 7541                             	.LBB5573:
 7542                             	.LBB5567:
 7543                             		.loc 8 492 5 is_stmt 1
 7544                             	.LBB5537:
 7545                             	.LBB5506:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7546                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7547                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7548                             		.loc 8 198 5
 7549                             	.LBE5506:
 7550                             	.LBE5537:
 7551                             	.LBB5538:
 7552                             	.LBB5520:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7553                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7554                             		.loc 8 197 5
 7555                             	.LBE5520:
 7556                             	.LBE5538:
 7557                             		.loc 8 492 5 is_stmt 0
 7558 06a4 EC 51                   		mov.L	[r5], r1
 7559 06a6 06 84 31                		cmp	[r3].L, r1
 7560 06a9 21 F7                   		bne	.L338
 7561                             	.LVL593:
 7562                             		.loc 8 492 5 is_stmt 1
 7563                             	.LBB5539:
 7564                             	.LBB5507:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7565                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7566                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7567                             		.loc 8 198 5
 7568                             	.LBE5507:
 7569                             	.LBE5539:
 7570                             	.LBB5540:
 7571                             	.LBB5521:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7572                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7573                             		.loc 8 197 5
 7574                             	.LBE5521:
 7575                             	.LBE5540:
 7576                             		.loc 8 492 5 is_stmt 0
 7577 06ab A8 59                   		mov.L	4[r5], r1
 7578 06ad 06 85 31 01             		cmp	4[r3].L, r1
 7579 06b1 21 EF                   		bne	.L338
 7580                             	.LVL594:
 7581                             		.loc 8 492 5 is_stmt 1
 7582                             	.LBB5541:
 7583                             	.LBB5508:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7584                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7585                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7586                             		.loc 8 198 5
 7587                             	.LBE5508:
 7588                             	.LBE5541:
 7589                             	.LBB5542:
 7590                             	.LBB5522:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7591                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7592                             		.loc 8 197 5
 7593                             	.LBE5522:
 7594                             	.LBE5542:
 7595                             		.loc 8 492 5 is_stmt 0
 7596 06b3 A8 D1                   		mov.L	8[r5], r1
 7597 06b5 06 85 31 02             		cmp	8[r3].L, r1
 7598 06b9 21 E7                   		bne	.L338
 7599                             	.LVL595:
 7600                             		.loc 8 492 5 is_stmt 1
 7601                             	.LBB5543:
 7602                             	.LBB5509:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7603                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7604                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7605                             		.loc 8 198 5
 7606                             	.LBE5509:
 7607                             	.LBE5543:
 7608                             	.LBB5544:
 7609                             	.LBB5523:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7610                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7611                             		.loc 8 197 5
 7612                             	.LBE5523:
 7613                             	.LBE5544:
 7614                             		.loc 8 492 5 is_stmt 0
 7615 06bb A8 D9                   		mov.L	12[r5], r1
 7616 06bd 06 85 31 03             		cmp	12[r3].L, r1
 7617 06c1 21 DF                   		bne	.L338
 7618                             	.LVL596:
 7619                             		.loc 8 492 5 is_stmt 1
 7620                             	.LBB5545:
 7621                             	.LBB5510:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7622                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7623                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7624                             		.loc 8 198 5
 7625                             	.LBE5510:
 7626                             	.LBE5545:
 7627                             	.LBB5546:
 7628                             	.LBB5524:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7629                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7630                             		.loc 8 197 5
 7631                             	.LBE5524:
 7632                             	.LBE5546:
 7633                             		.loc 8 492 5 is_stmt 0
 7634 06c3 A9 51                   		mov.L	16[r5], r1
 7635 06c5 06 85 31 04             		cmp	16[r3].L, r1
 7636 06c9 21 D7                   		bne	.L338
 7637                             	.LVL597:
 7638                             		.loc 8 492 5 is_stmt 1
 7639                             	.LBB5547:
 7640                             	.LBB5511:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7641                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7642                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7643                             		.loc 8 198 5
 7644                             	.LBE5511:
 7645                             	.LBE5547:
 7646                             	.LBB5548:
 7647                             	.LBB5525:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7648                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7649                             		.loc 8 197 5
 7650                             	.LBE5525:
 7651                             	.LBE5548:
 7652                             		.loc 8 492 5 is_stmt 0
 7653 06cb A9 59                   		mov.L	20[r5], r1
 7654 06cd 06 85 31 05             		cmp	20[r3].L, r1
 7655 06d1 21 CF                   		bne	.L338
 7656                             	.LVL598:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7657                             		.loc 8 491 21
 7658 06d3 61 64                   		cmp	#6, r4
 7659 06d5 3A C0 FC                		beq	.L384
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7660                             		.loc 8 491 3
 7661 06d8 66 61                   		mov.L	#6, r1
 7662                             	.LVL599:
 7663                             		.balign 8,3,3
 7664                             	.L385:
 7665                             		.loc 8 492 5 is_stmt 1
 7666                             	.LBB5549:
 7667                             	.LBB5512:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7668                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7669                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7670                             		.loc 8 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7671                             		.loc 8 198 34 is_stmt 0
 7672 06da FE 61 3A                		mov.L	[r1,r3], r10
 7673                             	.LVL600:
 7674                             	.LBE5512:
 7675                             	.LBE5549:
 7676                             	.LBB5550:
 7677                             	.LBB5526:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7678                             		.loc 8 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7679                             		.loc 8 197 5
 7680 06dd 47 18                   		cmp	r1, r8
 7681 06df 20 C1                   		beq	.L338
 7682                             	.LVL601:
 7683                             	.LBE5526:
 7684                             	.LBE5550:
 7685                             		.loc 8 492 5 is_stmt 0
 7686 06e1 FE 61 52                		mov.L	[r1,r5], r2
 7687 06e4 47 A2                   		cmp	r10, r2
 7688 06e6 21 BA                   		bne	.L338
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7689                             		.loc 8 491 3
 7690 06e8 62 11                   		add	#1, r1
 7691                             	.LVL602:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7692                             		.loc 8 491 21
 7693 06ea 47 14                   		cmp	r1, r4
 7694 06ec 21 EE                   		bne	.L385
 7695 06ee 38 A7 FC                		bra	.L384
 7696                             	.LVL603:
 7697                             	.L347:
 7698                             	.LBE5567:
 7699                             	.LBE5573:
 7700                             	.LBE5674:
 7701                             	.LBE5682:
 7702                             	.LBE5694:
 7703                             	.LBE5969:
 7704                             	.LBB5970:
 7705                             	.LBB5478:
 7706                             	.LBB5472:
 7707                             	.LBB5460:
 7708                             	.LBB5455:
 7709                             		.loc 8 492 5 is_stmt 1
 7710                             	.LBB5425:
 7711                             	.LBB5393:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7712                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7713                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7714                             		.loc 8 198 5
 7715                             	.LBE5393:
 7716                             	.LBE5425:
 7717                             	.LBB5426:
 7718                             	.LBB5407:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7719                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7720                             		.loc 8 197 5
 7721                             	.LBE5407:
 7722                             	.LBE5426:
 7723                             		.loc 8 492 5 is_stmt 0
 7724 06f1 EC 8A                   		mov.L	[r8], r10
 7725                             	.LVL604:
 7726 06f3 06 84 BA                		cmp	[r11].L, r10
 7727 06f6 21 AA                   		bne	.L338
 7728                             	.LVL605:
 7729                             		.loc 8 492 5 is_stmt 1
 7730                             	.LBB5427:
 7731                             	.LBB5394:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7732                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7733                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7734                             		.loc 8 198 5
 7735                             	.LBE5394:
 7736                             	.LBE5427:
 7737                             	.LBB5428:
 7738                             	.LBB5408:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7739                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7740                             		.loc 8 197 5
 7741                             	.LBE5408:
 7742                             	.LBE5428:
 7743                             		.loc 8 492 5 is_stmt 0
 7744 06f8 ED 8A 01                		mov.L	4[r8], r10
 7745 06fb 06 85 BA 01             		cmp	4[r11].L, r10
 7746 06ff 21 A1                   		bne	.L338
 7747                             	.LVL606:
 7748                             		.loc 8 492 5 is_stmt 1
 7749                             	.LBB5429:
 7750                             	.LBB5395:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7751                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7752                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7753                             		.loc 8 198 5
 7754                             	.LBE5395:
 7755                             	.LBE5429:
 7756                             	.LBB5430:
 7757                             	.LBB5409:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7758                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7759                             		.loc 8 197 5
 7760                             	.LBE5409:
 7761                             	.LBE5430:
 7762                             		.loc 8 492 5 is_stmt 0
 7763 0701 ED 8A 02                		mov.L	8[r8], r10
 7764 0704 06 85 BA 02             		cmp	8[r11].L, r10
 7765 0708 21 98                   		bne	.L338
 7766                             	.LVL607:
 7767                             		.loc 8 492 5 is_stmt 1
 7768                             	.LBB5431:
 7769                             	.LBB5396:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7770                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7771                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7772                             		.loc 8 198 5
 7773                             	.LBE5396:
 7774                             	.LBE5431:
 7775                             	.LBB5432:
 7776                             	.LBB5410:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7777                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7778                             		.loc 8 197 5
 7779                             	.LBE5410:
 7780                             	.LBE5432:
 7781                             		.loc 8 492 5 is_stmt 0
 7782 070a ED BA 03                		mov.L	12[r11], r10
 7783 070d 06 85 8A 03             		cmp	12[r8].L, r10
 7784 0711 21 8F                   		bne	.L338
 7785                             	.LVL608:
 7786                             		.loc 8 492 5 is_stmt 1
 7787                             	.LBB5433:
 7788                             	.LBB5397:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7789                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7790                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7791                             		.loc 8 198 5
 7792                             	.LBE5397:
 7793                             	.LBE5433:
 7794                             	.LBB5434:
 7795                             	.LBB5411:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7796                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7797                             		.loc 8 197 5
 7798                             	.LBE5411:
 7799                             	.LBE5434:
 7800                             		.loc 8 492 5 is_stmt 0
 7801 0713 ED 8A 04                		mov.L	16[r8], r10
 7802 0716 06 85 BA 04             		cmp	16[r11].L, r10
 7803 071a 21 86                   		bne	.L338
 7804                             	.LVL609:
 7805                             		.loc 8 492 5 is_stmt 1
 7806                             	.LBB5435:
 7807                             	.LBB5398:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7808                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7809                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7810                             		.loc 8 198 5
 7811                             	.LBE5398:
 7812                             	.LBE5435:
 7813                             	.LBB5436:
 7814                             	.LBB5412:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7815                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7816                             		.loc 8 197 5
 7817                             	.LBE5412:
 7818                             	.LBE5436:
 7819                             		.loc 8 492 5 is_stmt 0
 7820 071c ED 8A 05                		mov.L	20[r8], r10
 7821 071f 06 85 BA 05             		cmp	20[r11].L, r10
 7822 0723 3B 7D FF                		bne	.L338
 7823                             	.LVL610:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7824                             		.loc 8 491 21
 7825 0726 61 69                   		cmp	#6, r9
 7826 0728 3A CE FA                		beq	.L348
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7827                             		.loc 8 491 3
 7828 072b 66 6A                   		mov.L	#6, r10
 7829                             	.LVL611:
 7830 072d FC 13 00                		.balign 8,3,3
 7831                             	.L350:
 7832                             		.loc 8 492 5 is_stmt 1
 7833                             	.LBB5437:
 7834                             	.LBB5399:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7835                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7836                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7837                             		.loc 8 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7838                             		.loc 8 198 34 is_stmt 0
 7839 0730 FE 6A B5                		mov.L	[r10,r11], r5
 7840                             	.LVL612:
 7841                             	.LBE5399:
 7842                             	.LBE5437:
 7843                             	.LBB5438:
 7844                             	.LBB5413:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7845                             		.loc 8 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7846                             		.loc 8 197 5
 7847 0733 47 AC                   		cmp	r10, r12
 7848 0735 3A 6B FF                		beq	.L338
 7849                             	.LVL613:
 7850                             	.LBE5413:
 7851                             	.LBE5438:
 7852                             		.loc 8 492 5 is_stmt 0
 7853 0738 FE 6A 84                		mov.L	[r10,r8], r4
 7854 073b 47 54                   		cmp	r5, r4
 7855 073d 3B 63 FF                		bne	.L338
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7856                             		.loc 8 491 3
 7857 0740 62 1A                   		add	#1, r10
 7858                             	.LVL614:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7859                             		.loc 8 491 21
 7860 0742 47 A9                   		cmp	r10, r9
 7861 0744 21 EC                   		bne	.L350
 7862 0746 38 B0 FA                		bra	.L348
 7863                             	.LVL615:
 7864                             	.L363:
 7865                             	.LBE5455:
 7866                             	.LBE5460:
 7867                             	.LBE5472:
 7868                             	.LBE5478:
 7869                             	.LBE5970:
 7870                             	.LBB5971:
 7871                             	.LBB5958:
 7872                             	.LBB5945:
 7873                             	.LBB5934:
 7874                             	.LBB5791:
 7875                             	.LBB5784:
 7876                             		.loc 8 492 5 is_stmt 1
 7877                             	.LBB5751:
 7878                             	.LBB5720:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7879                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7880                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7881                             		.loc 8 198 5
 7882                             	.LBE5720:
 7883                             	.LBE5751:
 7884                             	.LBB5752:
 7885                             	.LBB5734:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7886                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7887                             		.loc 8 197 5
 7888                             	.LBE5734:
 7889                             	.LBE5752:
 7890                             		.loc 8 492 5 is_stmt 0
 7891 0749 EC A4                   		mov.L	[r10], r4
 7892 074b 06 84 34                		cmp	[r3].L, r4
 7893 074e 3B 52 FF                		bne	.L338
 7894                             	.LVL616:
 7895                             		.loc 8 492 5 is_stmt 1
 7896                             	.LBB5753:
 7897                             	.LBB5721:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7898                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7899                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7900                             		.loc 8 198 5
 7901                             	.LBE5721:
 7902                             	.LBE5753:
 7903                             	.LBB5754:
 7904                             	.LBB5735:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7905                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7906                             		.loc 8 197 5
 7907                             	.LBE5735:
 7908                             	.LBE5754:
 7909                             		.loc 8 492 5 is_stmt 0
 7910 0751 ED A4 01                		mov.L	4[r10], r4
 7911 0754 06 85 34 01             		cmp	4[r3].L, r4
 7912 0758 3B 48 FF                		bne	.L338
 7913                             	.LVL617:
 7914                             		.loc 8 492 5 is_stmt 1
 7915                             	.LBB5755:
 7916                             	.LBB5722:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7917                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7918                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7919                             		.loc 8 198 5
 7920                             	.LBE5722:
 7921                             	.LBE5755:
 7922                             	.LBB5756:
 7923                             	.LBB5736:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7924                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7925                             		.loc 8 197 5
 7926                             	.LBE5736:
 7927                             	.LBE5756:
 7928                             		.loc 8 492 5 is_stmt 0
 7929 075b ED A4 02                		mov.L	8[r10], r4
 7930 075e 06 85 34 02             		cmp	8[r3].L, r4
 7931 0762 3B 3E FF                		bne	.L338
 7932                             	.LVL618:
 7933                             		.loc 8 492 5 is_stmt 1
 7934                             	.LBB5757:
 7935                             	.LBB5723:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7936                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7937                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7938                             		.loc 8 198 5
 7939                             	.LBE5723:
 7940                             	.LBE5757:
 7941                             	.LBB5758:
 7942                             	.LBB5737:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7943                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7944                             		.loc 8 197 5
 7945                             	.LBE5737:
 7946                             	.LBE5758:
 7947                             		.loc 8 492 5 is_stmt 0
 7948 0765 ED A4 03                		mov.L	12[r10], r4
 7949 0768 06 85 34 03             		cmp	12[r3].L, r4
 7950 076c 3B 34 FF                		bne	.L338
 7951                             	.LVL619:
 7952                             		.loc 8 492 5 is_stmt 1
 7953                             	.LBB5759:
 7954                             	.LBB5724:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7955                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7956                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7957                             		.loc 8 198 5
 7958                             	.LBE5724:
 7959                             	.LBE5759:
 7960                             	.LBB5760:
 7961                             	.LBB5738:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7962                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7963                             		.loc 8 197 5
 7964                             	.LBE5738:
 7965                             	.LBE5760:
 7966                             		.loc 8 492 5 is_stmt 0
 7967 076f A9 34                   		mov.L	16[r3], r4
 7968 0771 06 85 A4 04             		cmp	16[r10].L, r4
 7969 0775 3B 2B FF                		bne	.L338
 7970                             	.LVL620:
 7971                             		.loc 8 492 5 is_stmt 1
 7972                             	.LBB5761:
 7973                             	.LBB5725:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7974                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7975                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 7976                             		.loc 8 198 5
 7977                             	.LBE5725:
 7978                             	.LBE5761:
 7979                             	.LBB5762:
 7980                             	.LBB5739:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 7981                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 7982                             		.loc 8 197 5
 7983                             	.LBE5739:
 7984                             	.LBE5762:
 7985                             		.loc 8 492 5 is_stmt 0
 7986 0778 ED A4 05                		mov.L	20[r10], r4
 7987 077b 06 85 34 05             		cmp	20[r3].L, r4
 7988 077f 3B 21 FF                		bne	.L338
 7989                             	.LVL621:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7990                             		.loc 8 491 21
 7991 0782 61 65                   		cmp	#6, r5
 7992 0784 3A FC FD                		beq	.L364
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 7993                             		.loc 8 491 3
 7994 0787 66 64                   		mov.L	#6, r4
 7995                             	.LVL622:
 7996                             		.balign 8,3,3
 7997                             	.L366:
 7998                             		.loc 8 492 5 is_stmt 1
 7999                             	.LBB5763:
 8000                             	.LBB5726:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 8001                             		.loc 8 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 8002                             		.loc 8 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 8003                             		.loc 8 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 8004                             		.loc 8 198 34 is_stmt 0
 8005 0789 FE 64 32                		mov.L	[r4,r3], r2
 8006                             	.LVL623:
 8007                             	.LBE5726:
 8008                             	.LBE5763:
 8009                             	.LBB5764:
 8010                             	.LBB5740:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 8011                             		.loc 8 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 8012                             		.loc 8 197 5
 8013 078c 47 41                   		cmp	r4, r1
 8014 078e 3A 12 FF                		beq	.L338
 8015                             	.LVL624:
 8016                             	.LBE5740:
 8017                             	.LBE5764:
 8018                             		.loc 8 492 5 is_stmt 0
 8019 0791 FE 64 AB                		mov.L	[r4,r10], r11
 8020 0794 47 2B                   		cmp	r2, r11
 8021 0796 3B 0A FF                		bne	.L338
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 8022                             		.loc 8 491 3
 8023 0799 62 14                   		add	#1, r4
 8024                             	.LVL625:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 8025                             		.loc 8 491 21
 8026 079b 47 45                   		cmp	r4, r5
 8027 079d 21 EC                   		bne	.L366
 8028 079f 38 E1 FD                		bra	.L364
 8029                             	.LVL626:
 8030                             	.L544:
 8031                             	.LBE5784:
 8032                             	.LBE5791:
 8033                             	.LBE5934:
 8034                             	.LBE5945:
 8035                             	.LBE5958:
 8036                             	.LBE5971:
 8037                             	.LBB5972:
 8038                             	.LBB5362:
 8039                             	.LBB5351:
 8040                             	.LBB5343:
 8041                             	.LBB5335:
 8042                             	.LBB5327:
 8043                             	.LBB5320:
 8044                             	.LBB5314:
 8045                             	.LBB5259:
 8046                             	.LBB5253:
 8047                             	.LBB5248:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 8048                             		.loc 4 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 8049                             		.loc 4 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 8050                             		.loc 4 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 8051                             		.loc 4 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 8052                             		.loc 4 346 35 is_stmt 0
 8053 07a2 61 04                   		cmp	#0, r4
 8054 07a4 FB 62 01 00 00 C0       		mov.L	#-1073741823, r6
 8055 07aa 29 08                   		blt 1f
 8056 07ac FB 62 00 00 00 40       		mov #0x40000000, r6
 8057                             	1:
 8058 07b2 FB A6 FF                		mov.L	#-1, r10
 8059 07b5 29 04                   		blt 1f
 8060 07b7 66 0A                   		mov #0, r10
 8061                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 8062                             		.loc 4 347 3 is_stmt 1
 8063                             	.LVL627:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8064                             		.loc 4 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8065                             		.loc 4 349 19 is_stmt 0
 8066 07b9 74 0D 00 00 00 80       		cmp	#-2147483648, r13
 8067 07bf 3B B2 FA                		bne	.L436
 8068 07c2 FB 62 FF FF FF 7F       		mov.L	#0x7fffffff, r6
 8069                             	.LVL628:
 8070 07c8 38 C2 FA                		bra	.L416
 8071                             	.LVL629:
 8072                             	.L368:
 8073                             	.LBE5248:
 8074                             	.LBE5253:
 8075                             	.LBE5259:
 8076                             	.LBE5314:
 8077                             	.LBE5320:
 8078                             	.LBE5327:
 8079                             	.LBE5335:
 8080                             	.LBE5343:
 8081                             	.LBE5351:
 8082                             	.LBE5362:
 8083                             	.LBE5972:
 8084                             	.LBB5973:
 8085                             	.LBB5959:
 8086                             	.LBB5946:
 8087                             	.LBB5935:
 8088                             	.LBB5841:
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F3 input = F3::FromRaw(
 8089                             		.loc 10 74 23
 8090 07cb 61 08                   		cmp	#0, r8
 8091 07cd 2A 05 38 17 FE          		ble	.L369
 8092                             	.LVL630:
 8093                             		.balign 8,3,2
 8094                             	.L433:
 8095 07d2 FF 24 88                		add	r8, r8, r4
 8096 07d5 EF 7B                   		mov.L	r7, r11
 8097 07d7 FF 26 49                		add	r4, r9, r6
 8098                             	.LVL631:
 8099                             	.LBB5842:
 8100                             	.LBB5843:
 8101                             	.LBB5844:
 8102                             	.LBB5845:
 8103                             	.LBB5846:
 8104                             	.LBB5847:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 8105                             		.loc 4 133 35
 8106 07da FB 76 FF                		mov	#-1, r7
 8107                             	.LVL632:
 8108 07dd FC 13 00                		.balign 8,3,5
 8109                             	.L378:
 8110                             	.LBE5847:
 8111                             	.LBE5846:
 8112                             	.LBE5845:
 8113                             	.LBE5844:
 8114                             	.LBE5843:
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****           gemmlowp::SaturatingRoundingMultiplyByPOT<1>(input_data[i]));
 8115                             		.loc 10 75 7 is_stmt 1
 8116 07e0 FD 29 9A                		mov.W	[r9+], r10
 8117                             	.LVL633:
 8118 07e3 FD BF A3                		shar	#31, r10, r3
 8119 07e6 FF 24 AA                		add	r10, r10, r4
 8120 07e9 FC 0B 33                		adc	r3, r3
 8121                             	.LBB5874:
 8122                             	.LBB5869:
 8123                             	.LBB5864:
 8124                             	.LBB5853:
 8125                             	.LBB5854:
 8126                             	.LBB5855:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8127                             		.loc 4 159 12 is_stmt 0
 8128 07ec 76 0A FF 3F             		cmp	#0x3fff, r10
 8129 07f0 2B 05 38 E0 00          		bgt	.L372
 8130                             	.LVL634:
 8131                             	.LBE5855:
 8132                             	.LBE5854:
 8133                             	.LBE5853:
 8134                             	.LBB5856:
 8135                             	.LBB5857:
 8136                             	.LBB5858:
 8137 07f5 76 0A 01 C0             		cmp	#-16383, r10
 8138 07f9 FC DB A9                		sclt.L	r10
 8139                             	.LVL635:
 8140 07fc FC 07 A2                		neg	r10, r2
 8141 07ff 71 A5 FF                		add	#-1, r10, r5
 8142                             	.LVL636:
 8143 0802 76 22 00 80             		and #-32768, r2
 8144                             	.LBE5858:
 8145                             	.LBE5857:
 8146                             	.LBE5856:
 8147                             	.LBB5859:
 8148                             	.LBB5848:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 8149                             		.loc 4 132 14
 8150 0806 75 03 FF                		cmp	#-1, r3
 8151 0809 29 60                   		blt	.L473
 8152 080b 20 58                   		beq	.L552
 8153                             		.balign 8,3,1
 8154                             	.L449:
 8155 080d DF 71                   		mov.W	r7, r1
 8156 080f 66 03                   		mov	#0, r3
 8157                             	.LVL637:
 8158                             		.balign 8,3,4
 8159                             	.L373:
 8160 0811 FF 4A 14                		and	r1, r4, r10
 8161 0814 FC 37 3A                		xor	r3, r10
 8162 0817 53 5A                   		and	r5, r10
 8163 0819 FC 37 2A                		xor	r2, r10
 8164 081c DF AC                   		mov.W	r10, r12
 8165 081e FC 07 A5                		neg	r10, r5
 8166                             	.LVL638:
 8167                             	.LBE5848:
 8168                             	.LBE5859:
 8169                             	.LBE5864:
 8170                             	.LBE5869:
 8171                             	.LBE5874:
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       output_data[i] = output.raw();
 8172                             		.loc 10 77 7 is_stmt 1
 8173                             	.LBB5875:
 8174                             	.LBB5876:
 8175                             	.LBB5877:
 8176                             	.LBB5878:
 8177                             	.LBB5879:
 8178                             	.LBB5880:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8179                             		.loc 4 159 12 is_stmt 0
 8180 0821 7C FA                   		btst	#15, r10
 8181 0823 3B 17 01                		bne	.L553
 8182                             	.LVL639:
 8183                             		.balign 8,3,1
 8184                             	.L376:
 8185                             	.LBE5880:
 8186                             	.LBE5879:
 8187                             	.LBE5878:
 8188                             	.LBE5877:
 8189                             	.LBB5890:
 8190                             	.LBB5891:
 8191                             	.LBB5892:
 8192                             	.LBB5893:
 8193 0826 DF CC                   		mov.W	r12, r12
 8194 0828 DF 7D                   		mov.W	r7, r13
 8195 082a 61 0C                   		cmp	#0, r12
 8196 082c FC DB C0                		sceq.L	r12
 8197                             	.LVL640:
 8198 082f 60 1C                   		sub	#1, r12
 8199                             	.LBE5893:
 8200                             	.LBE5892:
 8201                             	.LBE5891:
 8202                             	.LBE5890:
 8203                             	.LBB5894:
 8204                             	.LBB5887:
 8205                             	.LBB5884:
 8206                             	.LBB5881:
 8207 0831 66 08                   		mov	#0, r8
 8208                             	.LVL641:
 8209                             		.balign 8,3,1
 8210                             	.L375:
 8211                             	.LBE5881:
 8212                             	.LBE5884:
 8213                             	.LBE5887:
 8214                             	.LBE5894:
 8215                             	.LBB5895:
 8216                             	.LBB5896:
 8217                             		.loc 4 833 50
 8218 0833 D3 05                   		mov.W	r5, [r0]
 8219 0835 75 4F CC                		mov.L	#0xcc, r15
 8220 0838 4B 0F                   		add	r0, r15
 8221 083a 05 00 00 00             		bsr	__ZN8gemmlowp22exp_on_negative_valuesIsLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 8222                             	.LVL642:
 8223 083e D1 00 66                		mov.W	204[r0], [r0]
 8224 0841 75 4F CC                		mov.L	#0xcc, r15
 8225 0844 4B 0F                   		add	r0, r15
 8226 0846 05 00 00 00             		bsr	__ZN8gemmlowp40one_minus_x_over_one_plus_x_for_x_in_0_1IsEENS_10FixedPointIT_Li0EEES3_
 8227                             	.LVL643:
 8228 084a DD 05 66                		mov.W	204[r0], r5
 8229                             	.LBE5896:
 8230                             	.LBE5895:
 8231                             	.LBE5876:
 8232                             	.LBE5875:
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     }
 8233                             		.loc 10 78 7 is_stmt 1
 8234                             	.LVL644:
 8235                             	.LBB5917:
 8236                             	.LBB5914:
 8237                             	.LBB5897:
 8238                             	.LBB5898:
 8239                             	.LBB5899:
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8240                             		.loc 4 113 11 is_stmt 0
 8241 084d FC 07 5A                		neg	r5, r10
 8242                             	.LBE5899:
 8243                             	.LBE5898:
 8244                             	.LBE5897:
 8245                             	.LBB5900:
 8246                             	.LBB5901:
 8247                             	.LBB5902:
 8248                             	.LBB5903:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8249                             		.loc 4 71 14
 8250 0850 53 5D                   		and	r5, r13
 8251                             	.LBE5903:
 8252                             	.LBE5902:
 8253                             	.LBB5904:
 8254                             	.LBB5905:
 8255 0852 53 8A                   		and	r8, r10
 8256                             	.LBE5905:
 8257                             	.LBE5904:
 8258                             	.LBB5906:
 8259                             	.LBB5907:
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8260                             		.loc 4 83 14
 8261 0854 FC 37 DA                		xor	r13, r10
 8262                             	.LBE5907:
 8263                             	.LBE5906:
 8264                             	.LBE5901:
 8265                             	.LBE5900:
 8266                             	.LBB5908:
 8267                             	.LBB5909:
 8268                             	.LBB5910:
 8269                             	.LBB5911:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8270                             		.loc 4 71 14
 8271 0857 53 AC                   		and	r10, r12
 8272                             	.LBE5911:
 8273                             	.LBE5910:
 8274                             	.LBE5909:
 8275                             	.LBE5908:
 8276                             	.LBE5914:
 8277                             	.LBE5917:
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     }
 8278                             		.loc 10 78 22
 8279 0859 FD 21 BC                		mov.W	r12, [r11+]
 8280                             	.LBE5842:
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****       F3 input = F3::FromRaw(
 8281                             		.loc 10 74 23
 8282 085c 47 69                   		cmp	r6, r9
 8283 085e 21 82                   		bne	.L378
 8284 0860 38 84 FD                		bra	.L538
 8285                             	.LVL645:
 8286                             	.L552:
 8287                             	.LBB5924:
 8288                             	.LBB5918:
 8289                             	.LBB5870:
 8290                             	.LBB5865:
 8291                             	.LBB5860:
 8292                             	.LBB5849:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 8293                             		.loc 4 132 14
 8294 0863 76 04 00 80             		cmp	#-32768, r4
 8295 0867 22 A6                   		bgeu	.L449
 8296                             		.balign 8,3,1
 8297                             	.L473:
 8298 0869 DF 7C                   		mov.W	r7, r12
 8299 086b FB 5A 00 80             		mov	#-32768, r5
 8300 086f 66 0D                   		mov	#0, r13
 8301                             	.LBE5849:
 8302                             	.LBE5860:
 8303                             	.LBE5865:
 8304                             	.LBE5870:
 8305                             	.LBE5918:
 8306                             	.LBB5919:
 8307                             	.LBB5915:
 8308                             	.LBB5912:
 8309                             	.LBB5888:
 8310                             	.LBB5885:
 8311                             	.LBB5882:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8312                             		.loc 4 159 20
 8313 0871 DF 78                   		mov.W	r7, r8
 8314 0873 2E C0                   		bra	.L375
 8315                             	.LVL646:
 8316                             	.L408:
 8317                             	.LBE5882:
 8318                             	.LBE5885:
 8319                             	.LBE5888:
 8320                             	.LBE5912:
 8321                             	.LBE5915:
 8322                             	.LBE5919:
 8323                             	.LBE5924:
 8324                             	.LBE5841:
 8325                             	.LBE5935:
 8326                             	.LBE5946:
 8327                             	.LBE5959:
 8328                             	.LBE5973:
 8329                             	.LBB5974:
 8330                             	.LBB5363:
 8331                             	.LBB5352:
 8332                             	.LBB5344:
 8333                             	.LBB5336:
 8334                             	.LBB5328:
 8335                             	.LBB5321:
 8336                             	.LBB5315:
 8337                             	.LBB5260:
 8338                             	.LBB5254:
 8339                             	.LBB5242:
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType zero = Dup<IntegerType>(0);
 8340                             		.loc 4 371 50
 8341 0875 66 15                   		mov.L	#1, r5
 8342 0877 FD 62 C5                		shll	r12, r5
 8343 087a 38 81 F8                		bra	.L409
 8344                             	.LVL647:
 8345                             	.L545:
 8346                             	.LBE5242:
 8347                             	.LBE5254:
 8348                             	.LBB5255:
 8349                             	.LBB5249:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 8350                             		.loc 4 348 49
 8351 087d 70 16 FF FF FF 7F       		add	#0x7fffffff, r1, r6
 8352 0883 FD 74 2A 00             		adc	#0, r10
 8353 0887 EF 61                   		mov.L	r6, r1
 8354 0889 38 FA F9                		bra	.L417
 8355                             	.LVL648:
 8356                             	.L462:
 8357                             	.LBE5249:
 8358                             	.LBE5255:
 8359                             	.LBE5260:
 8360                             	.LBE5315:
 8361                             	.LBE5321:
 8362                             	.LBE5328:
 8363                             	.LBE5336:
 8364                             	.LBE5344:
 8365                             	.LBE5352:
 8366                             	.LBE5363:
 8367                             	.LBE5974:
 8368                             	.LBB5975:
 8369                             	.LBB5695:
 8370                             	.LBB5683:
 8371                             	.LBB5675:
 8372                             	.LBB5669:
 8373                             	.LBB5663:
 8374                             	.LBB5659:
 8375                             	.LBB5656:
 8376                             	.LBB5653:
 8377                             	.LBB5637:
 8378                             	.LBB5635:
 8379                             	.LBB5611:
 8380                             	.LBB5608:
 8381                             	.LBB5605:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8382                             		.loc 4 159 12
 8383 088c EF A1                   		mov.L	r10, r1
 8384 088e EF CA                   		mov.L	r12, r10
 8385                             	.LVL649:
 8386 0890 66 07                   		mov.L	#0, r7
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8387                             		.loc 4 159 20
 8388 0892 EF C8                   		mov.L	r12, r8
 8389 0894 38 7C FB                		bra	.L393
 8390                             	.LVL650:
 8391                             	.L346:
 8392                             	.LBE5605:
 8393                             	.LBE5608:
 8394                             	.LBE5611:
 8395                             	.LBE5635:
 8396                             	.LBE5637:
 8397                             	.LBE5653:
 8398                             	.LBE5656:
 8399                             	.LBE5659:
 8400                             	.LBE5663:
 8401                             	.LBE5669:
 8402                             	.LBE5675:
 8403                             	.LBE5683:
 8404                             	.LBE5695:
 8405                             	.LBE5975:
 8406                             	.LBB5976:
 8407                             	.LBB5479:
 8408                             	.LBB5473:
 8409                             	.LBB5461:
 493:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 494:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return shape.FlatSize();
 8410                             		.loc 8 494 3 is_stmt 1
 8411                             	.LBB5456:
 8412                             	.LBB5451:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 8413                             		.loc 8 272 5
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 8414                             		.loc 8 273 5
 8415                             	.LBB5448:
 8416                             	.LBB5444:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 8417                             		.loc 8 214 5
 8418                             	.LBE5444:
 8419                             	.LBE5448:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 8420                             		.loc 8 274 5
 8421                             	.LBE5451:
 8422                             	.LBE5456:
 8423                             	.LBE5461:
 8424                             	.LBE5473:
 8425                             	.LBB5474:
 8426                             	.LBB5471:
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     float result = std::tanh(val);
 8427                             		.loc 10 34 5
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     output_data[i] = result;
 8428                             		.loc 10 35 5
 8429                             	.LBB5470:
 8430                             	.LBB5469:
 8431                             		.loc 11 502 5
 8432                             		.loc 11 502 27 is_stmt 0
 8433 0897 EC 61                   		mov.L	[r6], r1
 8434 0899 05 00 00 00             		bsr	_tanhf
 8435                             	.LVL651:
 8436                             	.LBE5469:
 8437                             	.LBE5470:
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   }
 8438                             		.loc 10 36 5 is_stmt 1
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   }
 8439                             		.loc 10 36 20 is_stmt 0
 8440 089d E3 71                   		mov.L	r1, [r7]
 8441                             	.LVL652:
 8442                             	.LBE5471:
 8443                             	.LBE5474:
 8444                             	.LBE5479:
 8445                             	.LBE5976:
 8446                             	.LBB5977:
 8447                             	.LBB5485:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 8448                             		.loc 8 185 5 is_stmt 1
 8449 089f 38 91 F9                		bra	.L353
 8450                             	.LVL653:
 8451                             	.L362:
 8452                             	.LBE5485:
 8453                             	.LBE5977:
 8454                             	.LBB5978:
 8455                             	.LBB5960:
 8456                             	.LBB5947:
 8457                             	.LBB5936:
 8458                             	.LBB5792:
 8459                             		.loc 8 494 3
 8460                             	.LBB5785:
 8461                             	.LBB5778:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 8462                             		.loc 8 272 5
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 8463                             		.loc 8 273 5
 8464                             	.LBB5774:
 8465                             	.LBB5770:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 8466                             		.loc 8 214 5
 8467                             	.LBE5770:
 8468                             	.LBE5774:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 8469                             		.loc 8 274 5
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 8470                             		.loc 8 277 5
 8471                             	.LBE5778:
 8472                             	.LBE5785:
 8473                             	.LBE5792:
 8474                             	.LBE5936:
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****   // F3 uses 3 integer bits, range [-8, 8], the input range expected here.
 8475                             		.loc 10 63 3
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h **** 
 8476                             		.loc 10 65 3
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     for (int i = 0; i < flat_size; i++) {
 8477                             		.loc 10 67 3
 8478                             	.LBB5937:
 8479                             	.LBB5793:
 8480                             	.LBB5786:
 8481                             	.LBB5779:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 8482                             		.loc 8 272 9 is_stmt 0
 8483 08a2 66 18                   		mov.L	#1, r8
 8484                             	.LVL654:
 8485                             	.LBE5779:
 8486                             	.LBE5786:
 8487                             	.LBE5793:
 8488                             	.LBE5937:
 8489                             	.LBB5938:
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\tanh.h ****     for (int i = 0; i < flat_size; i++) {
 8490                             		.loc 10 67 3
 8491 08a4 61 06                   		cmp	#0, r6
 8492 08a6 3A F2 FC                		beq	.L432
 8493 08a9 38 29 FF                		bra	.L433
 8494                             	.LVL655:
 8495                             	.L441:
 8496                             	.LBE5938:
 8497                             	.LBE5947:
 8498                             	.LBE5960:
 8499                             	.LBE5978:
 8500                             	.LBB5979:
 8501                             	.LBB5480:
 8502                             	.LBB5475:
 8503                             	.LBB5462:
 8504                             	.LBB5457:
 8505                             	.LBB5452:
 8506                             	.LBB5449:
 8507                             	.LBB5445:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 8508                             		.loc 8 214 34
 8509 08ac 72 03 B8 00             		add	#0xb8, r0, r3
 8510 08b0 38 46 F9                		bra	.L348
 8511                             	.LVL656:
 8512                             	.L467:
 8513                             	.LBE5445:
 8514                             	.LBE5449:
 8515                             	.LBE5452:
 8516                             	.LBE5457:
 8517                             	.LBE5462:
 8518                             	.LBE5475:
 8519                             	.LBE5480:
 8520                             	.LBE5979:
 8521                             	.LBB5980:
 8522                             	.LBB5364:
 8523                             	.LBB5353:
 8524                             	.LBB5214:
 8525                             	.LBB5209:
 8526                             	.LBB5204:
 8527                             	.LBB5202:
 8528                             	.LBB5199:
 8529 08b3 71 01 28                		add	#40, r0, r1
 8530 08b6 38 1E F8                		bra	.L403
 8531                             	.LVL657:
 8532                             	.L446:
 8533                             	.LBE5199:
 8534                             	.LBE5202:
 8535                             	.LBE5204:
 8536                             	.LBE5209:
 8537                             	.LBE5214:
 8538                             	.LBE5353:
 8539                             	.LBE5364:
 8540                             	.LBE5980:
 8541                             	.LBB5981:
 8542                             	.LBB5961:
 8543                             	.LBB5948:
 8544                             	.LBB5939:
 8545                             	.LBB5794:
 8546                             	.LBB5787:
 8547                             	.LBB5780:
 8548                             	.LBB5775:
 8549                             	.LBB5771:
 8550 08b9 72 03 88 00             		add	#0x88, r0, r3
 8551 08bd 38 C3 FC                		bra	.L364
 8552                             	.LVL658:
 8553                             	.L456:
 8554                             	.LBE5771:
 8555                             	.LBE5775:
 8556                             	.LBE5780:
 8557                             	.LBE5787:
 8558                             	.LBE5794:
 8559                             	.LBE5939:
 8560                             	.LBE5948:
 8561                             	.LBE5961:
 8562                             	.LBE5981:
 8563                             	.LBB5982:
 8564                             	.LBB5696:
 8565                             	.LBB5684:
 8566                             	.LBB5676:
 8567                             	.LBB5574:
 8568                             	.LBB5568:
 8569                             	.LBB5562:
 8570                             	.LBB5559:
 8571                             	.LBB5556:
 8572 08c0 71 03 58                		add	#0x58, r0, r3
 8573 08c3 38 D2 FA                		bra	.L384
 8574                             	.LVL659:
 8575                             	.L448:
 8576                             	.LBE5556:
 8577                             	.LBE5559:
 8578                             	.LBE5562:
 8579                             	.LBE5568:
 8580                             	.LBE5574:
 8581                             	.LBE5676:
 8582                             	.LBE5684:
 8583                             	.LBE5696:
 8584                             	.LBE5982:
 8585                             	.LBB5983:
 8586                             	.LBB5962:
 8587                             	.LBB5949:
 8588                             	.LBB5940:
 8589                             	.LBB5928:
 8590                             	.LBB5839:
 8591                             	.LBB5838:
 8592                             	.LBB5836:
 8593                             	.LBB5834:
 8594                             	.LBB5811:
 8595                             	.LBB5809:
 8596                             	.LBB5807:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8597                             		.loc 4 159 12
 8598 08c6 DF 54                   		mov.W	r5, r4
 8599 08c8 FB B6 FF                		mov	#-1, r11
 8600 08cb 66 0D                   		mov	#0, r13
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8601                             		.loc 4 159 20
 8602 08cd DF BC                   		mov.W	r11, r12
 8603 08cf 38 E5 FC                		bra	.L370
 8604                             	.LVL660:
 8605                             	.L372:
 8606                             	.LBE5807:
 8607                             	.LBE5809:
 8608                             	.LBE5811:
 8609                             	.LBE5834:
 8610                             	.LBE5836:
 8611                             	.LBE5838:
 8612                             	.LBE5839:
 8613                             	.LBE5928:
 8614                             	.LBB5929:
 8615                             	.LBB5925:
 8616                             	.LBB5920:
 8617                             	.LBB5871:
 8618                             	.LBB5866:
 8619                             	.LBB5861:
 8620                             	.LBB5850:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 8621                             		.loc 4 132 14
 8622 08d2 75 03 FF                		cmp	#-1, r3
 8623 08d5 29 0B                   		blt	.L450
 8624 08d7 20 2C                   		beq	.L554
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 8625                             		.loc 4 133 35
 8626 08d9 61 03                   		cmp	#0, r3
 8627 08db 2B 55                   		ble	.L555
 8628 08dd FC 13 00                		.balign 8,3,3
 8629                             	.L450:
 8630 08e0 FB 5A 01 80             		mov	#-32767, r5
 8631                             	.LVL661:
 8632 08e4 FB CA FF 7F             		mov	#0x7fff, r12
 8633 08e8 38 3E FF                		bra	.L376
 8634                             	.LVL662:
 8635                             	.L452:
 8636                             	.LBE5850:
 8637                             	.LBE5861:
 8638                             	.LBE5866:
 8639                             	.LBE5871:
 8640                             	.LBE5920:
 8641                             	.LBE5925:
 8642                             	.LBE5929:
 8643                             	.LBE5940:
 8644                             	.LBE5949:
 8645                             	.LBE5962:
 8646                             	.LBE5983:
 8647                             	.LBB5984:
 8648                             	.LBB5697:
 8649                             	.LBB5685:
 8650                             	.LBB5677:
 8651                             	.LBB5575:
 8652                             	.LBB5569:
 8653                             	.LBB5563:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 8654                             		.loc 8 272 9
 8655 08eb 66 16                   		mov.L	#1, r6
 8656 08ed 38 BE FA                		bra	.L382
 8657                             	.LVL663:
 8658                             	.L463:
 8659                             	.LBE5563:
 8660                             	.LBE5569:
 8661                             	.LBE5575:
 8662                             	.LBE5677:
 8663                             	.LBE5685:
 8664                             	.LBE5697:
 8665                             	.LBE5984:
 8666                             	.LBB5985:
 8667                             	.LBB5365:
 8668                             	.LBB5354:
 8669                             	.LBB5215:
 8670                             	.LBB5210:
 8671                             	.LBB5205:
 8672 08f0 66 1A                   		mov.L	#1, r10
 8673                             	.LVL664:
 8674 08f2 38 F6 F7                		bra	.L401
 8675                             	.LVL665:
 8676                             	.L471:
 8677                             	.LBE5205:
 8678                             	.LBE5210:
 8679                             	.LBE5215:
 8680                             	.LBE5354:
 8681                             	.LBB5355:
 8682                             	.LBB5345:
 8683                             	.LBB5337:
 8684                             	.LBB5329:
 8685                             	.LBB5322:
 8686                             	.LBB5316:
 8687                             	.LBB5298:
 8688                             	.LBB5297:
 8689                             	.LBB5274:
 8690                             	.LBB5272:
 8691                             	.LBB5270:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8692                             		.loc 4 159 12
 8693 08f5 EF 61                   		mov.L	r6, r1
 8694 08f7 FB 66 FF                		mov.L	#-1, r6
 8695                             	.LVL666:
 8696 08fa F9 06 34 00             		mov.L	#0, 208[r0]
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8697                             		.loc 4 159 20
 8698 08fe EF 6A                   		mov.L	r6, r10
 8699 0900 38 C0 F9                		bra	.L419
 8700                             	.LVL667:
 8701                             	.L554:
 8702                             	.LBE5270:
 8703                             	.LBE5272:
 8704                             	.LBE5274:
 8705                             	.LBE5297:
 8706                             	.LBE5298:
 8707                             	.LBE5316:
 8708                             	.LBE5322:
 8709                             	.LBE5329:
 8710                             	.LBE5337:
 8711                             	.LBE5345:
 8712                             	.LBE5355:
 8713                             	.LBE5365:
 8714                             	.LBE5985:
 8715                             	.LBB5986:
 8716                             	.LBB5963:
 8717                             	.LBB5950:
 8718                             	.LBB5941:
 8719                             	.LBB5930:
 8720                             	.LBB5926:
 8721                             	.LBB5921:
 8722                             	.LBB5872:
 8723                             	.LBB5867:
 8724                             	.LBB5862:
 8725                             	.LBB5851:
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 8726                             		.loc 4 132 14
 8727 0903 76 04 00 80             		cmp	#-32768, r4
 8728 0907 23 D9                   		bltu	.L450
 8729                             		.balign 8,3,1
 8730                             	.L474:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 8731                             		.loc 4 133 35
 8732 0909 DF 75                   		mov.W	r7, r5
 8733                             	.LVL668:
 8734 090b 66 02                   		mov	#0, r2
 8735 090d 66 01                   		mov	#0, r1
 8736 090f FB 3A FF 7F             		mov	#0x7fff, r3
 8737 0913 38 FE FE                		bra	.L373
 8738                             	.LVL669:
 8739                             	.L546:
 8740                             	.LBE5851:
 8741                             	.LBE5862:
 8742                             	.LBE5867:
 8743                             	.LBE5872:
 8744                             	.LBE5921:
 8745                             	.LBE5926:
 8746                             	.LBE5930:
 8747                             	.LBE5941:
 8748                             	.LBE5950:
 8749                             	.LBE5963:
 8750                             	.LBE5986:
 8751                             	.LBB5987:
 8752                             	.LBB5366:
 8753                             	.LBB5356:
 8754                             	.LBB5346:
 8755                             	.LBB5338:
 8756                             	.LBB5330:
 8757                             	.LBB5323:
 8758                             	.LBB5317:
 8759                             	.LBB5261:
 8760                             	.LBB5256:
 8761                             	.LBB5243:
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 8762                             		.loc 4 370 3
 8763 0916 FB 42 00 00 00 00       		mov.L	#.LC12, r4
 8764 091c FB 32 00 00 00 00       		mov.L	#.LANCHOR1, r3
 8765 0922 FB 2A 72 01             		mov.L	#0x172, r2
 8766 0926 FB 12 0F 00 00 00       		mov.L	#.LC13, r1
 8767 092c 05 00 00 00             		bsr	___assert_func
 8768                             	.LVL670:
 8769                             	.L555:
 8770                             	.LBE5243:
 8771                             	.LBE5256:
 8772                             	.LBE5261:
 8773                             	.LBE5317:
 8774                             	.LBE5323:
 8775                             	.LBE5330:
 8776                             	.LBE5338:
 8777                             	.LBE5346:
 8778                             	.LBE5356:
 8779                             	.LBE5366:
 8780                             	.LBE5987:
 8781                             	.LBB5988:
 8782                             	.LBB5964:
 8783                             	.LBB5951:
 8784                             	.LBB5942:
 8785                             	.LBB5931:
 8786                             	.LBB5927:
 8787                             	.LBB5922:
 8788                             	.LBB5873:
 8789                             	.LBB5868:
 8790                             	.LBB5863:
 8791                             	.LBB5852:
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 8792                             		.loc 4 133 35
 8793 0930 21 D9                   		bne	.L474
 8794 0932 76 04 FF 7F             		cmp	#0x7fff, r4
 8795 0936 24 AA                   		bgtu	.L450
 8796 0938 2E D1                   		bra	.L474
 8797                             	.LVL671:
 8798                             	.L553:
 8799                             	.LBE5852:
 8800                             	.LBE5863:
 8801                             	.LBE5868:
 8802                             	.LBE5873:
 8803                             	.LBE5922:
 8804                             	.LBB5923:
 8805                             	.LBB5916:
 8806                             	.LBB5913:
 8807                             	.LBB5889:
 8808                             	.LBB5886:
 8809                             	.LBB5883:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8810                             		.loc 4 159 12
 8811 093a DF A5                   		mov.W	r10, r5
 8812 093c DF 7C                   		mov.W	r7, r12
 8813 093e 66 0D                   		mov	#0, r13
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 8814                             		.loc 4 159 20
 8815 0940 DF 78                   		mov.W	r7, r8
 8816 0942 38 F1 FE                		bra	.L375
 8817                             	.LBE5883:
 8818                             	.LBE5886:
 8819                             	.LBE5889:
 8820                             	.LBE5913:
 8821                             	.LBE5916:
 8822                             	.LBE5923:
 8823                             	.LBE5927:
 8824                             	.LBE5931:
 8825                             	.LBE5942:
 8826                             	.LBE5951:
 8827                             	.LBE5964:
 8828                             	.LBE5988:
 8829                             	.LBE6001:
 8830                             	.LBE6015:
 8831                             	.LFE2236:
 8833 0945 FC 13 00                		.section C,"a",@progbits
 8834                             		.p2align 2
 8835                             		.balign 4
 8836                             		.set	.LANCHOR0,. + 0
 8837                             	.LC0:
 8838 0000 00 00 00 00             		.long	__ZN6tflite3ops5micro11activations12_GLOBAL__N_18TanhInitEP13TfLiteContextPKcm
 8839 0004 00 00 00 00             		.long	0
 8840 0008 00 00 00 00             		.long	__ZN6tflite3ops5micro11activations12_GLOBAL__N_111TanhPrepareEP13TfLiteContextP10TfLiteNode
 8841 000c 00 00 00 00             		.long	__ZN6tflite3ops5micro11activations8TanhEvalEP13TfLiteContextP10TfLiteNode
 8842 0010 00 00 00 00             		.long	0
 8843 0014 00 00 00 00             		.long	0
 8844 0018 00 00 00 00             		.long	0
 8845 001c 00 00 00 00             		.long	0
 8846                             		.section	.rodata._ZN6tflite3ops5micro11activations12_GLOBAL__N_111TanhPrepareEP13TfLiteContextP10T
 8847                             	.LC1:
 8848 0000 69 6E 70 75 74 20 21 3D 		.string	"input != nullptr"
 8848      20 6E 75 6C 6C 70 74 72 
 8848      00 
 8849                             	.LC2:
 8850 0011 2E 2E 2F 73 72 63 2F 74 		.string	"../src/tensorflow/lite/micro/kernels/tanh.cc"
 8850      65 6E 73 6F 72 66 6C 6F 
 8850      77 2F 6C 69 74 65 2F 6D 
 8850      69 63 72 6F 2F 6B 65 72 
 8850      6E 65 6C 73 2F 74 61 6E 
 8851                             	.LC3:
 8852 003e 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s was not true."
 8852      20 77 61 73 20 6E 6F 74 
 8852      20 74 72 75 65 2E 00 
 8853                             	.LC4:
 8854 0055 31 00                   		.string	"1"
 8855                             	.LC5:
 8856 0057 4E 75 6D 49 6E 70 75 74 		.string	"NumInputs(node)"
 8856      73 28 6E 6F 64 65 29 00 
 8857                             	.LC6:
 8858 0067 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s != %s (%d != %d)"
 8858      20 21 3D 20 25 73 20 28 
 8858      25 64 20 21 3D 20 25 64 
 8858      29 00 
 8859                             	.LC7:
 8860 0081 4E 75 6D 4F 75 74 70 75 		.string	"NumOutputs(node)"
 8860      74 73 28 6E 6F 64 65 29 
 8860      00 
 8861                             	.LC8:
 8862 0092 6F 75 74 70 75 74 20 21 		.string	"output != nullptr"
 8862      3D 20 6E 75 6C 6C 70 74 
 8862      72 00 
 8863                             	.LC9:
 8864 00a4 6F 75 74 70 75 74 2D 3E 		.string	"output->type"
 8864      74 79 70 65 00 
 8865                             	.LC10:
 8866 00b1 69 6E 70 75 74 2D 3E 74 		.string	"input->type"
 8866      79 70 65 00 
 8867                             	.LC11:
 8868 00bd 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s != %s (%s != %s)"
 8868      20 21 3D 20 25 73 20 28 
 8868      25 73 20 21 3D 20 25 73 
 8868      29 00 
 8869                             		.section	.rodata._ZN6tflite3ops5micro11activations8TanhEvalEP13TfLiteContextP10TfLiteNode.str1.1,"
 8870                             	.LC12:
 8871 0000 65 78 70 6F 6E 65 6E 74 		.string	"exponent <= 31"
 8871      20 3C 3D 20 33 31 00 
 8872                             	.LC13:
 8873 000f 43 3A 5C 55 73 65 72 73 		.string	"C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\thi
 8873      5C 61 35 31 31 36 39 33 
 8873      38 5C 44 65 73 6B 74 6F 
 8873      70 5C 65 32 5F 73 74 75 
 8873      64 69 6F 5F 77 6F 72 6B 
 8874                             	.LC14:
 8875 008a 49 6E 70 75 74 20 25 73 		.string	"Input %s, output %s not supported."
 8875      2C 20 6F 75 74 70 75 74 
 8875      20 25 73 20 6E 6F 74 20 
 8875      73 75 70 70 6F 72 74 65 
 8875      64 2E 00 
 8876                             		.section	.rodata._ZZN8gemmlowp19RoundingDivideByPOTIliEET_S1_T0_E19__PRETTY_FUNCTION__,"a"
 8877                             		.set	.LANCHOR1,. + 0
 8880                             	__ZZN8gemmlowp19RoundingDivideByPOTIliEET_S1_T0_E19__PRETTY_FUNCTION__:
 8881 0000 49 6E 74 65 67 65 72 54 		.string	"IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, ExponentType) [with IntegerType = 
 8881      79 70 65 20 67 65 6D 6D 
 8881      6C 6F 77 70 3A 3A 52 6F 
 8881      75 6E 64 69 6E 67 44 69 
 8881      76 69 64 65 42 79 50 4F 
 9112                             	.Letext0:
 9113                             		.file 12 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9114                             		.file 13 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9115                             		.file 14 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9116                             		.file 15 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9117                             		.file 16 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9118                             		.file 17 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9119                             		.file 18 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9120                             		.file 19 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9121                             		.file 20 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9122                             		.file 21 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9123                             		.file 22 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9124                             		.file 23 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9125                             		.file 24 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9126                             		.file 25 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9127                             		.file 26 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9128                             		.file 27 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9129                             		.file 28 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9130                             		.file 29 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9131                             		.file 30 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9132                             		.file 31 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9133                             		.file 32 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 9134                             		.file 33 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 9135                             		.file 34 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\
 9136                             		.file 35 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\loc
 9137                             		.file 36 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_ty
 9138                             		.file 37 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\ree
 9139                             		.file 38 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdlib.h
 9140                             		.file 39 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
 9141                             		.file 40 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_st
 9142                             		.file 41 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdint.h
 9143                             		.file 42 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 9144                             		.file 43 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\wchar.h"
 9145                             		.file 44 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\locale.h
 9146                             		.file 45 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\ctype.h"
 9147                             		.file 46 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdio.h"
 9148                             		.file 47 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\err
 9149                             		.file 48 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\string.h
 9150                             		.file 49 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 9151                             		.file 50 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 9152                             		.file 51 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\assert.h
 9153                             		.file 52 "<built-in>"
