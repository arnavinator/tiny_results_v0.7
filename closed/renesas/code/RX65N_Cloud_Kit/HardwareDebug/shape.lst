   1                             		.file	"shape.cc"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode,"ax",@progbits
   6                             	__ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:
   7                             	.LFB6771:
   8                             		.file 1 "../src/tensorflow/lite/micro/kernels/shape.cc"
   1:../src/tensorflow/lite/micro/kernels/shape.cc **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow/lite/micro/kernels/shape.cc **** 
   3:../src/tensorflow/lite/micro/kernels/shape.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow/lite/micro/kernels/shape.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow/lite/micro/kernels/shape.cc **** You may obtain a copy of the License at
   6:../src/tensorflow/lite/micro/kernels/shape.cc **** 
   7:../src/tensorflow/lite/micro/kernels/shape.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow/lite/micro/kernels/shape.cc **** 
   9:../src/tensorflow/lite/micro/kernels/shape.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow/lite/micro/kernels/shape.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow/lite/micro/kernels/shape.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow/lite/micro/kernels/shape.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow/lite/micro/kernels/shape.cc **** limitations under the License.
  14:../src/tensorflow/lite/micro/kernels/shape.cc **** ==============================================================================*/
  15:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  16:../src/tensorflow/lite/micro/kernels/shape.cc **** #include "tensorflow/lite/c/builtin_op_data.h"
  17:../src/tensorflow/lite/micro/kernels/shape.cc **** #include "tensorflow/lite/c/common.h"
  18:../src/tensorflow/lite/micro/kernels/shape.cc **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  19:../src/tensorflow/lite/micro/kernels/shape.cc **** #include "tensorflow/lite/kernels/kernel_util.h"
  20:../src/tensorflow/lite/micro/kernels/shape.cc **** #include "tensorflow/lite/kernels/op_macros.h"
  21:../src/tensorflow/lite/micro/kernels/shape.cc **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  22:../src/tensorflow/lite/micro/kernels/shape.cc **** #include "tensorflow/lite/micro/memory_helpers.h"
  23:../src/tensorflow/lite/micro/kernels/shape.cc **** #include "tensorflow/lite/micro/micro_utils.h"
  24:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  25:../src/tensorflow/lite/micro/kernels/shape.cc **** namespace tflite {
  26:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  27:../src/tensorflow/lite/micro/kernels/shape.cc **** namespace {
  28:../src/tensorflow/lite/micro/kernels/shape.cc **** constexpr int kInputTensor = 0;
  29:../src/tensorflow/lite/micro/kernels/shape.cc **** constexpr int kOutputTensor = 0;
  30:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  31:../src/tensorflow/lite/micro/kernels/shape.cc **** void ExtractShape(const TfLiteEvalTensor* input, int32_t* output_data) {
  32:../src/tensorflow/lite/micro/kernels/shape.cc ****   for (int i = 0; i < input->dims->size; ++i) {
  33:../src/tensorflow/lite/micro/kernels/shape.cc ****     output_data[i] = input->dims->data[i];
  34:../src/tensorflow/lite/micro/kernels/shape.cc ****   }
  35:../src/tensorflow/lite/micro/kernels/shape.cc **** }
  36:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  37:../src/tensorflow/lite/micro/kernels/shape.cc **** TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {
  38:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);
  39:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  40:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  41:../src/tensorflow/lite/micro/kernels/shape.cc ****   return kTfLiteOk;
  42:../src/tensorflow/lite/micro/kernels/shape.cc **** }
  43:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  44:../src/tensorflow/lite/micro/kernels/shape.cc **** TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
   9                             		.loc 1 44 61
  10                             	.LVL0:
  11 0000 6E 6A                   		pushm	r6-r10
  12                             	.LCFI0:
  13 0002 60 C0                   		sub	#12, r0
  14                             	.LCFI1:
  45:../src/tensorflow/lite/micro/kernels/shape.cc ****   const TfLiteEvalTensor* input =
  15                             		.loc 1 45 3
  16                             	.LVL1:
  17                             		.file 2 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
  18                             		.loc 2 41 3
  19                             	.LBB36:
  20                             	.LBB37:
  21                             	.LBB38:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  22                             		.loc 2 33 3
  23 0004 61 01                   		cmp	#0, r1
  24 0006 20 64                   		beq	.L3
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
  25                             		.loc 2 34 3 is_stmt 0
  26 0008 71 2A 00                		add	#0, r2, r10
  27 000b 20 5F                   		beq	.L3
  28 000d EF 17                   		mov.L	r1, r7
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  29                             		.loc 2 35 3 is_stmt 1
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  30                             		.loc 2 35 32 is_stmt 0
  31 000f EC A4                   		mov.L	[r10], r4
  32 0011 AD 1D                   		mov.L	84[r1], r5
  33 0013 A8 4A                   		mov.L	4[r4], r2
  34                             	.LVL2:
  35 0015 7F 15                   		jsr	r5
  36                             	.LVL3:
  37 0017 EF 16                   		mov.L	r1, r6
  38                             	.LVL4:
  39                             	.LBE38:
  40                             	.LBE37:
  41                             	.LBE36:
  46:../src/tensorflow/lite/micro/kernels/shape.cc ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
  47:../src/tensorflow/lite/micro/kernels/shape.cc ****   TfLiteEvalTensor* output =
  42                             		.loc 1 47 3 is_stmt 1
  43                             	.LBB41:
  44                             	.LBB42:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  45                             		.loc 2 47 3
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  46                             		.loc 2 48 3
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
  47                             		.loc 2 49 3
  48                             		.loc 2 49 32 is_stmt 0
  49 0019 ED A5 01                		mov.L	4[r10], r5
  50 001c ED 7A 15                		mov.L	84[r7], r10
  51                             	.LVL5:
  52 001f EF 71                   		mov.L	r7, r1
  53                             	.LVL6:
  54 0021 A8 5A                   		mov.L	4[r5], r2
  55 0023 7F 1A                   		jsr	r10
  56                             	.LVL7:
  57 0025 EF 1A                   		mov.L	r1, r10
  58                             	.LVL8:
  59                             	.LBE42:
  60                             	.LBE41:
  48:../src/tensorflow/lite/micro/kernels/shape.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
  49:../src/tensorflow/lite/micro/kernels/shape.cc ****   if (output->type != kTfLiteInt32) {
  61                             		.loc 1 49 3 is_stmt 1
  62                             		.loc 1 49 15 is_stmt 0
  63 0027 A8 91                   		mov.L	8[r1], r1
  64                             	.LVL9:
  65                             		.loc 1 49 3
  66 0029 61 21                   		cmp	#2, r1
  67 002b 21 24                   		bne	.L14
  50:../src/tensorflow/lite/micro/kernels/shape.cc ****     TF_LITE_KERNEL_LOG(context, "Output type %s (%d) not supported.",
  51:../src/tensorflow/lite/micro/kernels/shape.cc ****                        TfLiteTypeGetName(output->type), output->type);
  52:../src/tensorflow/lite/micro/kernels/shape.cc ****     return kTfLiteError;
  53:../src/tensorflow/lite/micro/kernels/shape.cc ****   } else {
  54:../src/tensorflow/lite/micro/kernels/shape.cc ****     ExtractShape(input, tflite::micro::GetTensorData<int32_t>(output));
  68                             		.loc 1 54 5 is_stmt 1
  69                             	.LVL10:
  70                             		.loc 1 54 17 is_stmt 0
  71 002d A8 6D                   		mov.L	4[r6], r5
  72                             	.LBB43:
  73                             	.LBB44:
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  74                             		.loc 2 55 28
  75 002f EC A4                   		mov.L	[r10], r4
  76                             	.LVL11:
  77                             	.LBE44:
  78                             	.LBE43:
  79                             	.LBB45:
  80                             	.LBB46:
  32:../src/tensorflow/lite/micro/kernels/shape.cc ****     output_data[i] = input->dims->data[i];
  81                             		.loc 1 32 36
  82 0031 EC 53                   		mov.L	[r5], r3
  32:../src/tensorflow/lite/micro/kernels/shape.cc ****     output_data[i] = input->dims->data[i];
  83                             		.loc 1 32 21
  84 0033 61 03                   		cmp	#0, r3
  85 0035 2B 15                   		ble	.L6
  86 0037 62 45                   		add	#4, r5
  87 0039 6C 23                   		shll	#2, r3
  88 003b 4B 53                   		add	r5, r3
  89                             	.LVL12:
  90 003d FC 13 00                		.balign 8,3,3
  91                             	.L7:
  33:../src/tensorflow/lite/micro/kernels/shape.cc ****   }
  92                             		.loc 1 33 5 is_stmt 1
  33:../src/tensorflow/lite/micro/kernels/shape.cc ****   }
  93                             		.loc 1 33 20 is_stmt 0
  94 0040 FD 2A 57                		mov.L	[r5+], r7
  95 0043 FD 22 47                		mov.L	r7, [r4+]
  32:../src/tensorflow/lite/micro/kernels/shape.cc ****     output_data[i] = input->dims->data[i];
  96                             		.loc 1 32 21
  97 0046 47 35                   		cmp	r3, r5
  98 0048 21 F8                   		bne	.L7
  99                             		.balign 8,3,1
 100                             	.L6:
 101                             	.LBE46:
 102                             	.LBE45:
  55:../src/tensorflow/lite/micro/kernels/shape.cc ****   }
  56:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  57:../src/tensorflow/lite/micro/kernels/shape.cc ****   return kTfLiteOk;
 103                             		.loc 1 57 10
 104 004a 66 01                   		mov.L	#0, r1
  58:../src/tensorflow/lite/micro/kernels/shape.cc **** }
 105                             		.loc 1 58 1
 106 004c 3F 6A 08                		rtsd	#32, r6-r10
 107                             	.LVL13:
 108                             	.L14:
  50:../src/tensorflow/lite/micro/kernels/shape.cc ****                        TfLiteTypeGetName(output->type), output->type);
 109                             		.loc 1 50 5 is_stmt 1
  50:../src/tensorflow/lite/micro/kernels/shape.cc ****                        TfLiteTypeGetName(output->type), output->type);
 110                             		.loc 1 50 5
 111 004f A9 7E                   		mov.L	20[r7], r6
 112                             	.LVL14:
 113 0051 05 00 00 00             		bsr	_TfLiteTypeGetName
 114                             	.LVL15:
 115 0055 E5 A0 02 02             		mov.L	8[r10], 8[r0]
 116 0059 A0 09                   		mov.L	r1, 4[r0]
 117 005b EF 71                   		mov.L	r7, r1
 118 005d F8 02 00 00 00 00       		mov.L	#.LC1, [r0]
 119 0063 7F 16                   		jsr	r6
 120                             	.LVL16:
  52:../src/tensorflow/lite/micro/kernels/shape.cc ****   } else {
 121                             		.loc 1 52 5
  52:../src/tensorflow/lite/micro/kernels/shape.cc ****   } else {
 122                             		.loc 1 52 12 is_stmt 0
 123 0065 66 11                   		mov.L	#1, r1
 124                             		.loc 1 58 1
 125 0067 3F 6A 08                		rtsd	#32, r6-r10
 126                             	.LVL17:
 127                             	.L3:
 128                             	.LBB47:
 129                             	.LBB40:
 130                             	.LBB39:
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 131                             		.loc 2 33 3
 132 006a 05 00 00 00             		bsr	_abort
 133                             	.LVL18:
 134                             	.LBE39:
 135                             	.LBE40:
 136                             	.LBE47:
 137                             	.LFE6771:
 139 006e EF 00                   		.section	.text._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode,"ax",@progbits
 141                             	__ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode:
 142                             	.LFB6770:
  37:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);
 143                             		.loc 1 37 64 is_stmt 1
 144                             	.LVL19:
 145 0000 7E A7                   		push.l	r7
 146                             	.LCFI2:
 147 0002 71 00 E4                		add	#-28, r0
 148                             	.LCFI3:
  38:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 149                             		.loc 1 38 3
  38:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 150                             		.loc 1 38 3
 151                             	.LVL20:
 152                             	.LBB60:
 153                             	.LBB61:
 154                             		.file 3 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
 155                             		.loc 3 152 48
 156                             		.loc 3 152 69 is_stmt 0
 157 0005 EC 27                   		mov.L	[r2], r7
 158 0007 EC 77                   		mov.L	[r7], r7
 159                             	.LBE61:
 160                             	.LBE60:
  38:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 161                             		.loc 1 38 3
 162 0009 61 17                   		cmp	#1, r7
 163 000b 20 2E                   		beq	.L16
  38:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 164                             		.loc 1 38 3 is_stmt 1 discriminator 1
  38:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 165                             		.loc 1 38 3 discriminator 1
 166                             	.LVL21:
 167                             		.loc 3 152 48 discriminator 1
  38:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 168                             		.loc 1 38 3 is_stmt 0 discriminator 1
 169 000d A9 1D                   		mov.L	20[r1], r5
 170 000f 3E 06 01                		mov.L	#1, 24[r0]
 171 0012 A1 0F                   		mov.L	r7, 20[r0]
 172 0014 F9 02 04 00 00 00 00    		mov.L	#.LC2, 16[r0]
 173 001b F9 02 03 02 00 00 00    		mov.L	#.LC3, 12[r0]
 174 0022 3E 02 26                		mov.L	#38, 8[r0]
 175 0025 F9 02 01 12 00 00 00    		mov.L	#.LC4, 4[r0]
 176 002c F8 02 40 00 00 00       		mov.L	#.LC5, [r0]
 177 0032 7F 15                   		jsr	r5
 178                             	.LVL22:
  38:../src/tensorflow/lite/micro/kernels/shape.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 179                             		.loc 1 38 3 is_stmt 1 discriminator 1
 180 0034 66 11                   		mov.L	#1, r1
  42:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 181                             		.loc 1 42 1 is_stmt 0 discriminator 1
 182 0036 3F 77 08                		rtsd	#32, r7-r7
 183                             	.LVL23:
 184                             	.L16:
 185                             	.LBB62:
 186                             	.LBB63:
  39:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 187                             		.loc 1 39 3 is_stmt 1
  39:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 188                             		.loc 1 39 3
 189                             	.LBB64:
 190                             	.LBB65:
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 191                             		.loc 3 153 49
 192                             		.loc 3 153 71 is_stmt 0
 193 0039 A8 2C                   		mov.L	4[r2], r4
 194 003b EC 44                   		mov.L	[r4], r4
 195                             	.LBE65:
 196                             	.LBE64:
  39:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 197                             		.loc 1 39 3
 198 003d 61 14                   		cmp	#1, r4
 199 003f 20 2D                   		beq	.L18
  39:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 200                             		.loc 1 39 3 is_stmt 1
  39:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 201                             		.loc 1 39 3
 202                             	.LVL24:
 203                             	.LBE63:
 204                             	.LBE62:
 205                             		.loc 3 153 49
 206                             	.LBB68:
 207                             	.LBB66:
  39:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 208                             		.loc 1 39 3 is_stmt 0
 209 0041 A9 1D                   		mov.L	20[r1], r5
 210 0043 A1 87                   		mov.L	r7, 24[r0]
 211 0045 A1 0C                   		mov.L	r4, 20[r0]
 212 0047 F9 02 04 00 00 00 00    		mov.L	#.LC2, 16[r0]
 213 004e F9 02 03 5A 00 00 00    		mov.L	#.LC6, 12[r0]
 214 0055 3E 02 27                		mov.L	#39, 8[r0]
 215 0058 F9 02 01 12 00 00 00    		mov.L	#.LC4, 4[r0]
 216 005f F8 02 40 00 00 00       		mov.L	#.LC5, [r0]
 217 0065 7F 15                   		jsr	r5
 218                             	.LVL25:
  39:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 219                             		.loc 1 39 3 is_stmt 1
 220 0067 EF 71                   		mov.L	r7, r1
 221                             	.LBE66:
 222                             	.LBE68:
  42:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 223                             		.loc 1 42 1 is_stmt 0
 224 0069 3F 77 08                		rtsd	#32, r7-r7
 225                             	.LVL26:
 226                             	.L18:
 227                             	.LBB69:
 228                             	.LBB67:
  41:../src/tensorflow/lite/micro/kernels/shape.cc **** }
 229                             		.loc 1 41 10
 230 006c 66 01                   		mov.L	#0, r1
 231                             	.LVL27:
 232                             	.LBE67:
 233                             	.LBE69:
  42:../src/tensorflow/lite/micro/kernels/shape.cc **** 
 234                             		.loc 1 42 1
 235 006e 3F 77 08                		rtsd	#32, r7-r7
 236                             	.LFE6770:
 238                             		.section	.text._ZN6tflite14Register_SHAPEEv,"ax",@progbits
 239                             		.global	__ZN6tflite14Register_SHAPEEv
 241                             	__ZN6tflite14Register_SHAPEEv:
 242                             	.LFB6772:
  59:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  60:../src/tensorflow/lite/micro/kernels/shape.cc **** }  // namespace
  61:../src/tensorflow/lite/micro/kernels/shape.cc **** 
  62:../src/tensorflow/lite/micro/kernels/shape.cc **** TfLiteRegistration Register_SHAPE() {
 243                             		.loc 1 62 37 is_stmt 1
  63:../src/tensorflow/lite/micro/kernels/shape.cc ****   return {/*init=*/nullptr,
 244                             		.loc 1 63 3
  64:../src/tensorflow/lite/micro/kernels/shape.cc ****           /*free=*/nullptr,
  65:../src/tensorflow/lite/micro/kernels/shape.cc ****           /*prepare=*/Prepare,
  66:../src/tensorflow/lite/micro/kernels/shape.cc ****           /*invoke=*/Eval,
  67:../src/tensorflow/lite/micro/kernels/shape.cc ****           /*profiling_string=*/nullptr,
  68:../src/tensorflow/lite/micro/kernels/shape.cc ****           /*builtin_code=*/0,
  69:../src/tensorflow/lite/micro/kernels/shape.cc ****           /*custom_name=*/nullptr,
  70:../src/tensorflow/lite/micro/kernels/shape.cc ****           /*version=*/0};
 245                             		.loc 1 70 24 is_stmt 0
 246 0000 FB 22 00 00 00 00       		mov.L	#.LANCHOR0, r2
 247 0006 EF F1                   		mov.L	r15, r1
 248 0008 75 43 20                		mov.L	#32, r3
 249 000b 7F 8F                   		smovf
  71:../src/tensorflow/lite/micro/kernels/shape.cc **** }
 250                             		.loc 1 71 1
 251 000d EF F1                   		mov.L	r15, r1
 252 000f 02                      		rts
 253                             	.LFE6772:
 255                             		.weak	__ZN11flatbuffers25flatbuffer_version_stringE
 256                             		.section C,"a",@progbits
 257                             		.p2align 2
 258                             		.balign 4
 259                             		.set	.LANCHOR0,. + 0
 260                             	.LC0:
 261 0000 00 00 00 00             		.long	0
 262 0004 00 00 00 00             		.long	0
 263 0008 00 00 00 00             		.long	__ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode
 264 000c 00 00 00 00             		.long	__ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode
 265 0010 00 00 00 00             		.long	0
 266 0014 00 00 00 00             		.long	0
 267 0018 00 00 00 00             		.long	0
 268 001c 00 00 00 00             		.long	0
 269                             		.section	.data._ZN11flatbuffers25flatbuffer_version_stringE,"aw"
 270                             		.balign 4
 273                             	__ZN11flatbuffers25flatbuffer_version_stringE:
 274 0000 00 00 00 00             		.long	.LC7
 275                             		.section	.rodata._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode.str1.1,"aMS",@progbit
 276                             	.LC1:
 277 0000 4F 75 74 70 75 74 20 74 		.string	"Output type %s (%d) not supported."
 277      79 70 65 20 25 73 20 28 
 277      25 64 29 20 6E 6F 74 20 
 277      73 75 70 70 6F 72 74 65 
 277      64 2E 00 
 278                             		.section	.rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.1,"aMS",@prog
 279                             	.LC2:
 280 0000 31 00                   		.string	"1"
 281                             	.LC3:
 282 0002 4E 75 6D 49 6E 70 75 74 		.string	"NumInputs(node)"
 282      73 28 6E 6F 64 65 29 00 
 283                             	.LC4:
 284 0012 2E 2E 2F 73 72 63 2F 74 		.string	"../src/tensorflow/lite/micro/kernels/shape.cc"
 284      65 6E 73 6F 72 66 6C 6F 
 284      77 2F 6C 69 74 65 2F 6D 
 284      69 63 72 6F 2F 6B 65 72 
 284      6E 65 6C 73 2F 73 68 61 
 285                             	.LC5:
 286 0040 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s != %s (%d != %d)"
 286      20 21 3D 20 25 73 20 28 
 286      25 64 20 21 3D 20 25 64 
 286      29 00 
 287                             	.LC6:
 288 005a 4E 75 6D 4F 75 74 70 75 		.string	"NumOutputs(node)"
 288      74 73 28 6E 6F 64 65 29 
 288      00 
 289                             		.section	.rodata.str1.1,"aMS",@progbits,1
 290                             	.LC7:
 291 0000 46 6C 61 74 42 75 66 66 		.string	"FlatBuffers 1.12.0"
 291      65 72 73 20 31 2E 31 32 
 291      2E 30 00 
 362                             	.Letext0:
 363                             		.file 4 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\\
 364                             		.file 5 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_std
 365                             		.file 6 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdint.h"
 366                             		.file 7 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.20
 367                             		.file 8 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
 368                             		.file 9 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3.
 369                             		.file 10 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 370                             		.file 11 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 371                             		.file 12 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 372                             		.file 13 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 373                             		.file 14 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 374                             		.file 15 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 375                             		.file 16 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 376                             		.file 17 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 377                             		.file 18 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 378                             		.file 19 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 379                             		.file 20 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 380                             		.file 21 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 381                             		.file 22 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 382                             		.file 23 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 383                             		.file 24 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 384                             		.file 25 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 385                             		.file 26 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 386                             		.file 27 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 387                             		.file 28 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 388                             		.file 29 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 389                             		.file 30 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 390                             		.file 31 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 391                             		.file 32 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 392                             		.file 33 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 393                             		.file 34 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 394                             		.file 35 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\loc
 395                             		.file 36 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_ty
 396                             		.file 37 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\ree
 397                             		.file 38 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdlib.h
 398                             		.file 39 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\string.h
 399                             		.file 40 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 400                             		.file 41 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdio.h"
 401                             		.file 42 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 402                             		.file 43 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\wchar.h"
 403                             		.file 44 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\locale.h
 404                             		.file 45 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\ctype.h"
 405                             		.file 46 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\err
 406                             		.file 47 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\wctype.h
 407                             		.file 48 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\th
 408                             		.file 49 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\th
 409                             		.file 50 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\th
 410                             		.file 51 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
 411                             		.file 52 "<built-in>"
