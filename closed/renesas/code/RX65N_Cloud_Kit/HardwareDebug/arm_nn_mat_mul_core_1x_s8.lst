   1                             		.file	"arm_nn_mat_mul_core_1x_s8.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.arm_nn_mat_mul_core_1x_s8,"ax",@progbits
   5                             		.global	_arm_nn_mat_mul_core_1x_s8
   7                             	_arm_nn_mat_mul_core_1x_s8:
   8                             	.LFB82:
   9                             		.file 1 "../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c"
   1:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** /*
   2:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * Copyright (C) 2010-2020 Arm Limited or its affiliates. All rights reserved.
   3:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  *
   4:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * SPDX-License-Identifier: Apache-2.0
   5:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  *
   6:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * not use this file except in compliance with the License.
   8:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * You may obtain a copy of the License at
   9:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  *
  10:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * www.apache.org/licenses/LICENSE-2.0
  11:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  *
  12:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * Unless required by applicable law or agreed to in writing, software
  13:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * See the License for the specific language governing permissions and
  16:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * limitations under the License.
  17:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  */
  18:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  19:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** /* ----------------------------------------------------------------------
  20:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * Project:      CMSIS NN Library
  21:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * Title:        arm_nn_mat_mul_core_1x_s8.c
  22:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * Description:  General Matrix-multiplication function
  23:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  *
  24:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * $Date:        09. October 2020
  25:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * $Revision:    V.1.0.2
  26:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  *
  27:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * Target Processor:  Cortex-M cores
  28:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * -------------------------------------------------------------------- */
  29:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  30:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** #include "arm_nnsupportfunctions.h"
  31:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  32:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** /**
  33:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * @ingroup groupSupport
  34:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  */
  35:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  36:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** /**
  37:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * @addtogroup NNBasicMath
  38:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * @{
  39:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  */
  40:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  41:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** /*
  42:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * s8 matrix multiplication to process 1 row
  43:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  *
  44:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  * Refer header file for details.
  45:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  *
  46:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****  */
  47:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  48:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** arm_status arm_nn_mat_mul_core_1x_s8(int32_t row_elements,
  49:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                                      const int8_t *row_base,
  50:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                                      const int8_t *col_base,
  51:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                                      int32_t *const sum_col,
  52:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                                      int32_t *const output)
  53:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** {
  10                             		.loc 1 53 1
  11                             	.LVL0:
  12 0000 6E 7A                   		pushm	r7-r10
  13                             	.LCFI0:
  14 0002 60 40                   		sub	#4, r0
  15                             	.LCFI1:
  54:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     int32_t acc_n0 = 0;
  16                             		.loc 1 54 5
  17                             	.LVL1:
  55:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     int32_t sum_tmp = 0;
  18                             		.loc 1 55 5
  56:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  57:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** #if defined(ARM_MATH_MVEI) && !defined(ARM_MATH_AUTOVECTORIZE)
  58:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  59:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     __ASM volatile("   vldrb.8         q0, [%[col]], 16     \n"
  60:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    "   wlstp.8         lr, %[cnt], 1f       \n"
  61:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    "2:                                      \n"
  62:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    "   vaddva.s8      %[sum], q0            \n"
  63:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    "   vldrb.8         q1, [%[row0]], 16    \n"
  64:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    "   vmladava.s8    %[out0], q0, q1       \n"
  65:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    "   vldrb.8         q0, [%[col]], 16     \n"
  66:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    "   letp            lr, 2b               \n"
  67:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    "1:                                      \n"
  68:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    : [col] "+r"(col_base), [sum] "+Te"(sum_tmp), [row0] "+r"(row_base), [out0] "+Te
  69:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    : [cnt] "r"(row_elements)
  70:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****                    : "q0", "q1", "memory", "r14");
  71:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** #else
  72:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     for (int i = 0; i < row_elements; i++)
  19                             		.loc 1 72 5
  20                             	.LBB2:
  21                             		.loc 1 72 10
  22                             	.LBE2:
  53:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     int32_t acc_n0 = 0;
  23                             		.loc 1 53 1 is_stmt 0
  24 0004 ED 0A 06                		mov.L	24[r0], r10
  25                             	.LBB3:
  26                             		.loc 1 72 5
  27 0007 61 01                   		cmp	#0, r1
  28 0009 2B 21                   		ble	.L4
  29 000b 4B 31                   		add	r3, r1
  30                             	.LVL2:
  31                             	.LBE3:
  55:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     int32_t sum_tmp = 0;
  32                             		.loc 1 55 13
  33 000d 66 07                   		mov.L	#0, r7
  54:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     int32_t sum_tmp = 0;
  34                             		.loc 1 54 13
  35 000f 66 0F                   		mov.L	#0, r15
  36                             	.LVL3:
  37                             		.balign 8,3,5
  38                             	.L3:
  39                             	.LBB4:
  73:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     {
  74:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****         sum_tmp += col_base[i];
  40                             		.loc 1 74 9 is_stmt 1 discriminator 3
  41                             		.loc 1 74 28 is_stmt 0 discriminator 3
  42 0011 FD 28 3E                		mov.B	[r3+], r14
  43                             	.LVL4:
  75:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****         acc_n0 += row_base[i] * col_base[i];
  44                             		.loc 1 75 27 discriminator 3
  45 0014 FD 28 25                		mov.B	[r2+], r5
  74:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****         acc_n0 += row_base[i] * col_base[i];
  46                             		.loc 1 74 17 discriminator 3
  47 0017 4B E7                   		add	r14, r7
  48                             	.LVL5:
  49                             		.loc 1 75 9 is_stmt 1 discriminator 3
  50                             		.loc 1 75 31 is_stmt 0 discriminator 3
  51 0019 4F E5                   		mul	r14, r5
  52                             		.loc 1 75 16 discriminator 3
  53 001b 4B 5F                   		add	r5, r15
  54                             	.LVL6:
  72:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     {
  55                             		.loc 1 72 5 discriminator 3
  56 001d 47 31                   		cmp	r3, r1
  57 001f 21 F2                   		bne	.L3
  58                             	.LBE4:
  76:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     }
  77:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** #endif
  78:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  79:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     *sum_col = sum_tmp;
  59                             		.loc 1 79 5 is_stmt 1
  60                             		.loc 1 79 14 is_stmt 0
  61 0021 E3 47                   		mov.L	r7, [r4]
  80:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     *output = acc_n0;
  62                             		.loc 1 80 5 is_stmt 1
  81:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     return ARM_MATH_SUCCESS;
  82:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** }
  63                             		.loc 1 82 1 is_stmt 0
  64 0023 66 01                   		mov.L	#0, r1
  80:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     *output = acc_n0;
  65                             		.loc 1 80 13
  66 0025 E3 AF                   		mov.L	r15, [r10]
  81:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     return ARM_MATH_SUCCESS;
  67                             		.loc 1 81 5 is_stmt 1
  68                             		.loc 1 82 1 is_stmt 0
  69 0027 3F 7A 05                		rtsd	#20, r7-r10
  70                             	.LVL7:
  71                             	.L4:
  55:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** 
  72                             		.loc 1 55 13
  73 002a 66 07                   		mov.L	#0, r7
  54:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     int32_t sum_tmp = 0;
  74                             		.loc 1 54 13
  75 002c 66 0F                   		mov.L	#0, r15
  79:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     *output = acc_n0;
  76                             		.loc 1 79 5 is_stmt 1
  79:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     *output = acc_n0;
  77                             		.loc 1 79 14 is_stmt 0
  78 002e E3 47                   		mov.L	r7, [r4]
  80:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     return ARM_MATH_SUCCESS;
  79                             		.loc 1 80 5 is_stmt 1
  80                             		.loc 1 82 1 is_stmt 0
  81 0030 66 01                   		mov.L	#0, r1
  82                             	.LVL8:
  80:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c ****     return ARM_MATH_SUCCESS;
  83                             		.loc 1 80 13
  84 0032 E3 AF                   		mov.L	r15, [r10]
  81:../src/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c **** }
  85                             		.loc 1 81 5 is_stmt 1
  86                             		.loc 1 82 1 is_stmt 0
  87 0034 3F 7A 05                		rtsd	#20, r7-r10
  88                             	.LFE82:
 132                             	.Letext0:
 133                             		.file 2 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\\
 134                             		.file 3 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_std
 135                             		.file 4 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\lock
 136                             		.file 5 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_typ
 137                             		.file 6 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.20
 138                             		.file 7 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\reen
 139                             		.file 8 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
 140                             		.file 9 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CMS
 141                             		.file 10 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\CM
