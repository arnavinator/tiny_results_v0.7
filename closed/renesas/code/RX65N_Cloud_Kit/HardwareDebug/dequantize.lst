   1                             		.file	"dequantize.cc"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text._ZN6tflite3ops5micro10dequantize4InitEP13TfLiteContextPKcm,"ax",@progbits
   5                             		.global	__ZN6tflite3ops5micro10dequantize4InitEP13TfLiteContextPKcm
   7                             	__ZN6tflite3ops5micro10dequantize4InitEP13TfLiteContextPKcm:
   8                             	.LFB2557:
   9                             		.file 1 "../src/tensorflow/lite/micro/kernels/dequantize.cc"
   1:../src/tensorflow/lite/micro/kernels/dequantize.cc **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
   3:../src/tensorflow/lite/micro/kernels/dequantize.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow/lite/micro/kernels/dequantize.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow/lite/micro/kernels/dequantize.cc **** You may obtain a copy of the License at
   6:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
   7:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
   9:../src/tensorflow/lite/micro/kernels/dequantize.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow/lite/micro/kernels/dequantize.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow/lite/micro/kernels/dequantize.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow/lite/micro/kernels/dequantize.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow/lite/micro/kernels/dequantize.cc **** limitations under the License.
  14:../src/tensorflow/lite/micro/kernels/dequantize.cc **** ==============================================================================*/
  15:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  16:../src/tensorflow/lite/micro/kernels/dequantize.cc **** #include "tensorflow/lite/kernels/internal/reference/dequantize.h"
  17:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  18:../src/tensorflow/lite/micro/kernels/dequantize.cc **** #include "tensorflow/lite/c/builtin_op_data.h"
  19:../src/tensorflow/lite/micro/kernels/dequantize.cc **** #include "tensorflow/lite/c/common.h"
  20:../src/tensorflow/lite/micro/kernels/dequantize.cc **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  21:../src/tensorflow/lite/micro/kernels/dequantize.cc **** #include "tensorflow/lite/kernels/internal/reference/quantize.h"
  22:../src/tensorflow/lite/micro/kernels/dequantize.cc **** #include "tensorflow/lite/kernels/internal/reference/requantize.h"
  23:../src/tensorflow/lite/micro/kernels/dequantize.cc **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  24:../src/tensorflow/lite/micro/kernels/dequantize.cc **** #include "tensorflow/lite/kernels/kernel_util.h"
  25:../src/tensorflow/lite/micro/kernels/dequantize.cc **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  26:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  27:../src/tensorflow/lite/micro/kernels/dequantize.cc **** namespace tflite {
  28:../src/tensorflow/lite/micro/kernels/dequantize.cc **** namespace ops {
  29:../src/tensorflow/lite/micro/kernels/dequantize.cc **** namespace micro {
  30:../src/tensorflow/lite/micro/kernels/dequantize.cc **** namespace dequantize {
  31:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  32:../src/tensorflow/lite/micro/kernels/dequantize.cc **** struct OpData {
  33:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   tflite::DequantizationParams quantization_params;
  34:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   // The scaling factor from input to output (aka the 'real multiplier') can
  35:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   // be represented as a fixed point multiplier plus a left shift.
  36:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   int32_t output_multiplier;
  37:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   int output_shift;
  38:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   int32_t output_zero_point;
  39:../src/tensorflow/lite/micro/kernels/dequantize.cc **** };
  40:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  41:../src/tensorflow/lite/micro/kernels/dequantize.cc **** void* Init(TfLiteContext* context, const char* buffer, size_t length) {
  10                             		.loc 1 41 71
  11                             	.LVL0:
  42:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  12                             		.loc 1 42 3
  13 0000 AB 95                   		mov.L	56[r1], r5
  14 0002 61 05                   		cmp	#0, r5
  15 0004 17                      		beq	.L4
  43:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   return context->AllocatePersistentBuffer(context, sizeof(OpData));
  16                             		.loc 1 43 3
  17                             		.loc 1 43 43 is_stmt 0
  18 0005 75 42 14                		mov.L	#20, r2
  19                             	.LVL1:
  20 0008 7F 15                   		jsr	r5
  21                             	.LVL2:
  44:../src/tensorflow/lite/micro/kernels/dequantize.cc **** }
  22                             		.loc 1 44 1
  23 000a 02                      		rts
  24                             	.LVL3:
  25                             	.L4:
  42:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  26                             		.loc 1 42 3 discriminator 1
  27 000b 05 00 00 00             		bsr	_abort
  28                             	.LVL4:
  29                             	.LFE2557:
  31                             		.section	.text._ZN6tflite3ops5micro10dequantize7PrepareEP13TfLiteContextP10TfLiteNode,"ax",@progbi
  32                             		.global	__ZN6tflite3ops5micro10dequantize7PrepareEP13TfLiteContextP10TfLiteNode
  34                             	__ZN6tflite3ops5micro10dequantize7PrepareEP13TfLiteContextP10TfLiteNode:
  35                             	.LFB2558:
  45:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  46:../src/tensorflow/lite/micro/kernels/dequantize.cc **** TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {
  36                             		.loc 1 46 64 is_stmt 1
  37                             	.LVL5:
  38 0000 6E 6C                   		pushm	r6-r12
  39                             	.LCFI0:
  40 0002 71 00 E4                		add	#-28, r0
  41                             	.LCFI1:
  47:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
  42                             		.loc 1 47 3
  43 0005 ED 2B 04                		mov.L	16[r2], r11
  44 0008 61 0B                   		cmp	#0, r11
  45 000a 3A 17 01                		beq	.L23
  46 000d EF 2A                   		mov.L	r2, r10
  47 000f EF 16                   		mov.L	r1, r6
  48:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
  48                             		.loc 1 48 3
  49                             	.LVL6:
  49:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  50:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);
  50                             		.loc 1 50 3
  51                             		.loc 1 50 3
  52                             	.LBB138:
  53                             	.LBB139:
  54                             		.file 2 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
  55                             		.loc 2 152 48
  56                             		.loc 2 152 69 is_stmt 0
  57 0011 EC 27                   		mov.L	[r2], r7
  58 0013 EC 77                   		mov.L	[r7], r7
  59                             	.LBE139:
  60                             	.LBE138:
  61                             		.loc 1 50 3
  62 0015 61 17                   		cmp	#1, r7
  63 0017 21 37                   		bne	.L24
  51:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  64                             		.loc 1 51 3 is_stmt 1
  65                             		.loc 1 51 3
  66                             	.LVL7:
  67                             	.LBB140:
  68                             	.LBB141:
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
  69                             		.loc 2 153 49
  70                             		.loc 2 153 71 is_stmt 0
  71 0019 A8 2D                   		mov.L	4[r2], r5
  72 001b EC 5C                   		mov.L	[r5], r12
  73                             	.LBE141:
  74                             	.LBE140:
  75                             		.loc 1 51 3
  76 001d 61 1C                   		cmp	#1, r12
  77 001f 20 5C                   		beq	.L9
  78                             		.loc 1 51 3 is_stmt 1 discriminator 1
  79                             		.loc 1 51 3 discriminator 1
  80                             	.LVL8:
  81                             		.loc 2 153 49 discriminator 1
  82                             		.loc 1 51 3 is_stmt 0 discriminator 1
  83 0021 ED 1A 05                		mov.L	20[r1], r10
  84 0024 A1 87                   		mov.L	r7, 24[r0]
  85 0026 E7 0C 05                		mov.L	r12, 20[r0]
  86 0029 F9 02 04 00 00 00 00    		mov.L	#.LC1, 16[r0]
  87 0030 F9 02 03 5F 00 00 00    		mov.L	#.LC5, 12[r0]
  88 0037 3E 02 33                		mov.L	#51, 8[r0]
  89 003a F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
  90 0041 F8 02 45 00 00 00       		mov.L	#.LC4, [r0]
  91 0047 7F 1A                   		jsr	r10
  92                             	.LVL9:
  93                             		.loc 1 51 3 is_stmt 1 discriminator 1
  94 0049 EF 71                   		mov.L	r7, r1
  52:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  53:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   // TODO(b/140515557): Add cached dequant to improve hybrid model performance.
  54:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   const TfLiteTensor* input = GetInput(context, node, 0);
  55:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE(context, input != nullptr);
  56:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TfLiteTensor* output = GetOutput(context, node, 0);
  57:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE(context, output != nullptr);
  58:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  59:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE(context, input->type == kTfLiteUInt8 ||
  60:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                               input->type == kTfLiteInt8 ||
  61:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                               input->type == kTfLiteInt16);
  62:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE(
  63:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       context, output->type == kTfLiteFloat32 || output->type == kTfLiteInt32);
  64:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  65:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   if (output->type == kTfLiteInt32) {
  66:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     const double effective_output_scale =
  67:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         static_cast<double>(input->params.scale) /
  68:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         static_cast<double>(output->params.scale);
  69:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     QuantizeMultiplier(effective_output_scale, &data->output_multiplier,
  70:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                        &data->output_shift);
  71:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   }
  72:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  73:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   data->quantization_params.zero_point = input->params.zero_point;
  74:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   data->quantization_params.scale = static_cast<double>(input->params.scale);
  75:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   data->output_zero_point = output->params.zero_point;
  76:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   return kTfLiteOk;
  77:../src/tensorflow/lite/micro/kernels/dequantize.cc **** }
  95                             		.loc 1 77 1 is_stmt 0 discriminator 1
  96 004b 3F 6C 0E                		rtsd	#56, r6-r12
  97                             	.LVL10:
  98                             	.L24:
  50:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  99                             		.loc 1 50 3 is_stmt 1 discriminator 1
  50:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 100                             		.loc 1 50 3 discriminator 1
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 101                             		.loc 2 152 48 discriminator 1
  50:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 102                             		.loc 1 50 3 is_stmt 0 discriminator 1
 103 004e ED 1A 05                		mov.L	20[r1], r10
 104 0051 3E 06 01                		mov.L	#1, 24[r0]
 105 0054 A1 0F                   		mov.L	r7, 20[r0]
 106 0056 F9 02 04 00 00 00 00    		mov.L	#.LC1, 16[r0]
 107 005d F9 02 03 02 00 00 00    		mov.L	#.LC2, 12[r0]
 108 0064 3E 02 32                		mov.L	#50, 8[r0]
 109 0067 F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 110 006e F8 02 45 00 00 00       		mov.L	#.LC4, [r0]
 111 0074 7F 1A                   		jsr	r10
 112                             	.LVL11:
  50:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 113                             		.loc 1 50 3 is_stmt 1 discriminator 1
 114 0076 66 11                   		mov.L	#1, r1
 115                             		.loc 1 77 1 is_stmt 0 discriminator 1
 116 0078 3F 6C 0E                		rtsd	#56, r6-r12
 117                             	.LVL12:
 118                             	.L9:
  54:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE(context, input != nullptr);
 119                             		.loc 1 54 3 is_stmt 1
  54:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE(context, input != nullptr);
 120                             		.loc 1 54 39 is_stmt 0
 121 007b 66 03                   		mov.L	#0, r3
 122 007d 05 00 00 00             		bsr	__ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 123                             	.LVL13:
  55:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TfLiteTensor* output = GetOutput(context, node, 0);
 124                             		.loc 1 55 3
 125 0081 71 17 00                		add	#0, r1, r7
 126 0084 20 4B                   		beq	.L25
  56:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE(context, output != nullptr);
 127                             		.loc 1 56 3 is_stmt 1
  56:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TF_LITE_ENSURE(context, output != nullptr);
 128                             		.loc 1 56 35 is_stmt 0
 129 0086 66 03                   		mov.L	#0, r3
 130 0088 EF A2                   		mov.L	r10, r2
 131 008a EF 61                   		mov.L	r6, r1
 132 008c 05 00 00 00             		bsr	__ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
 133                             	.LVL14:
  57:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
 134                             		.loc 1 57 3
 135 0090 71 1A 00                		add	#0, r1, r10
 136                             	.LVL15:
 137 0093 20 6C                   		beq	.L26
  59:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                               input->type == kTfLiteInt8 ||
 138                             		.loc 1 59 3 is_stmt 1
  59:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                               input->type == kTfLiteInt8 ||
 139                             		.loc 1 59 3
 140 0095 EC 75                   		mov.L	[r7], r5
 141 0097 EF 54                   		mov.L	r5, r4
 142 0099 7A 24                   		bclr	#2, r4
 143 009b 61 34                   		cmp	#3, r4
 144 009d 20 14                   		beq	.L12
  59:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                               input->type == kTfLiteInt8 ||
 145                             		.loc 1 59 3 is_stmt 0 discriminator 1
 146 009f 61 95                   		cmp	#9, r5
 147 00a1 20 10                   		beq	.L12
  59:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                               input->type == kTfLiteInt8 ||
 148                             		.loc 1 59 3 is_stmt 1 discriminator 3
  59:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                               input->type == kTfLiteInt8 ||
 149                             		.loc 1 59 3 discriminator 3
 150 00a3 A9 6F                   		mov.L	20[r6], r7
 151 00a5 F9 02 03 AA 00 00 00    		mov.L	#.LC9, 12[r0]
 152 00ac 3E 02 3D                		mov.L	#61, 8[r0]
 153 00af 2E 2C                   		bra	.L22
 154                             	.L12:
  62:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       context, output->type == kTfLiteFloat32 || output->type == kTfLiteInt32);
 155                             		.loc 1 62 3
  62:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       context, output->type == kTfLiteFloat32 || output->type == kTfLiteInt32);
 156                             		.loc 1 62 3
 157 00b1 EC A5                   		mov.L	[r10], r5
 158 00b3 71 54 FF                		add	#-1, r5, r4
 159 00b6 61 14                   		cmp	#1, r4
 160 00b8 24 39                   		bgtu	.L27
  65:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     const double effective_output_scale =
 161                             		.loc 1 65 3
 162 00ba A8 F9                   		mov.L	12[r7], r1
 163                             	.LBB142:
 164 00bc 61 25                   		cmp	#2, r5
 165 00be 20 4F                   		beq	.L28
 166                             		.balign 8,3,1
 167                             	.L14:
 168                             	.LBE142:
  73:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   data->quantization_params.scale = static_cast<double>(input->params.scale);
 169                             		.loc 1 73 3
  73:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   data->quantization_params.scale = static_cast<double>(input->params.scale);
 170                             		.loc 1 73 40 is_stmt 0
 171 00c0 E5 7B 04 01             		mov.L	16[r7], 4[r11]
  74:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   data->output_zero_point = output->params.zero_point;
 172                             		.loc 1 74 3 is_stmt 1
  75:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   return kTfLiteOk;
 173                             		.loc 1 75 27 is_stmt 0
 174 00c4 E5 AB 04 04             		mov.L	16[r10], 16[r11]
  74:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   data->output_zero_point = output->params.zero_point;
 175                             		.loc 1 74 35
 176 00c8 E3 B1                   		mov.L	r1, [r11]
  75:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   return kTfLiteOk;
 177                             		.loc 1 75 3 is_stmt 1
  76:../src/tensorflow/lite/micro/kernels/dequantize.cc **** }
 178                             		.loc 1 76 3
  76:../src/tensorflow/lite/micro/kernels/dequantize.cc **** }
 179                             		.loc 1 76 10 is_stmt 0
 180 00ca 66 01                   		mov.L	#0, r1
 181                             		.loc 1 77 1
 182 00cc 3F 6C 0E                		rtsd	#56, r6-r12
 183                             	.LVL16:
 184                             	.L25:
  55:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TfLiteTensor* output = GetOutput(context, node, 0);
 185                             		.loc 1 55 3 is_stmt 1 discriminator 1
  55:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TfLiteTensor* output = GetOutput(context, node, 0);
 186                             		.loc 1 55 3 discriminator 1
 187 00cf A9 6F                   		mov.L	20[r6], r7
 188 00d1 F9 02 03 70 00 00 00    		mov.L	#.LC6, 12[r0]
 189 00d8 3E 02 37                		mov.L	#55, 8[r0]
 190                             	.LVL17:
 191                             	.L22:
  62:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       context, output->type == kTfLiteFloat32 || output->type == kTfLiteInt32);
 192                             		.loc 1 62 3 is_stmt 0 discriminator 1
 193 00db F9 02 01 12 00 00 00    		mov.L	#.LC3, 4[r0]
 194 00e2 EF 61                   		mov.L	r6, r1
 195 00e4 F8 02 81 00 00 00       		mov.L	#.LC7, [r0]
 196 00ea 7F 17                   		jsr	r7
 197                             	.LVL18:
  62:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       context, output->type == kTfLiteFloat32 || output->type == kTfLiteInt32);
 198                             		.loc 1 62 3 is_stmt 1 discriminator 1
 199 00ec 66 11                   		mov.L	#1, r1
 200                             		.loc 1 77 1 is_stmt 0 discriminator 1
 201 00ee 3F 6C 0E                		rtsd	#56, r6-r12
 202                             	.LVL19:
 203                             	.L27:
  62:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       context, output->type == kTfLiteFloat32 || output->type == kTfLiteInt32);
 204                             		.loc 1 62 3 is_stmt 1 discriminator 1
  62:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       context, output->type == kTfLiteFloat32 || output->type == kTfLiteInt32);
 205                             		.loc 1 62 3 discriminator 1
 206 00f1 A9 6F                   		mov.L	20[r6], r7
 207 00f3 F9 02 03 03 01 00 00    		mov.L	#.LC10, 12[r0]
 208 00fa 3E 02 3F                		mov.L	#63, 8[r0]
 209 00fd 2E DE                   		bra	.L22
 210                             	.L26:
  57:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
 211                             		.loc 1 57 3 discriminator 1
  57:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
 212                             		.loc 1 57 3 discriminator 1
 213 00ff A9 6F                   		mov.L	20[r6], r7
 214 0101 F9 02 03 98 00 00 00    		mov.L	#.LC8, 12[r0]
 215 0108 3E 02 39                		mov.L	#57, 8[r0]
 216 010b 2E D0                   		bra	.L22
 217                             	.L28:
 218                             	.LBB144:
 219                             	.LBB143:
  66:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         static_cast<double>(input->params.scale) /
 220                             		.loc 1 66 5
 221                             	.LVL20:
  69:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                        &data->output_shift);
 222                             		.loc 1 69 5
  66:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         static_cast<double>(input->params.scale) /
 223                             		.loc 1 66 18 is_stmt 0
 224 010d ED A5 03                		mov.L	12[r10], r5
  69:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                        &data->output_shift);
 225                             		.loc 1 69 23
 226 0110 71 B3 0C                		add	#12, r11, r3
 227 0113 71 B2 08                		add	#8, r11, r2
 228 0116 FC 93 51                		fdiv	r5, r1
 229                             	.LVL21:
 230 0119 05 00 00 00             		bsr	__ZN6tflite18QuantizeMultiplierEdPlPi
 231                             	.LVL22:
 232 011d A8 F9                   		mov.L	12[r7], r1
 233                             	.LBE143:
 234 011f 2E A1                   		bra	.L14
 235                             	.LVL23:
 236                             	.L23:
 237                             	.LBE144:
  47:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 238                             		.loc 1 47 3 discriminator 1
 239 0121 05 00 00 00             		bsr	_abort
 240                             	.LVL24:
 241                             	.LFE2558:
 243 0125 FC 13 00                		.section	.text._ZN6tflite3ops5micro10dequantize4EvalEP13TfLiteContextP10TfLiteNode,"ax",@progbits
 244                             		.global	__ZN6tflite3ops5micro10dequantize4EvalEP13TfLiteContextP10TfLiteNode
 246                             	__ZN6tflite3ops5micro10dequantize4EvalEP13TfLiteContextP10TfLiteNode:
 247                             	.LFB2559:
  78:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  79:../src/tensorflow/lite/micro/kernels/dequantize.cc **** TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
 248                             		.loc 1 79 61 is_stmt 1
 249                             	.LVL25:
 250 0000 6E 6D                   		pushm	r6-r13
 251                             	.LCFI2:
 252 0002 72 00 20 FF             		add	#-224, r0
 253                             	.LCFI3:
  80:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TFLITE_DCHECK(node->user_data != nullptr);
 254                             		.loc 1 80 3
 255 0006 ED 2D 04                		mov.L	16[r2], r13
 256 0009 61 0D                   		cmp	#0, r13
 257 000b 3A 2D 02                		beq	.L31
 258                             	.LBB310:
 259                             	.LBB311:
 260                             	.LBB312:
 261                             		.file 3 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
 262                             		.loc 3 33 3 is_stmt 0
 263 000e 71 17 00                		add	#0, r1, r7
 264 0011 3A 27 02                		beq	.L31
 265 0014 EF 2A                   		mov.L	r2, r10
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 266                             		.loc 3 34 3 is_stmt 1
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 267                             		.loc 3 35 3
 268                             		.loc 3 35 32 is_stmt 0
 269 0016 EC 24                   		mov.L	[r2], r4
 270 0018 AD 7D                   		mov.L	84[r7], r5
 271 001a A8 4A                   		mov.L	4[r4], r2
 272                             	.LVL26:
 273 001c 7F 15                   		jsr	r5
 274                             	.LVL27:
 275 001e EF 16                   		mov.L	r1, r6
 276                             	.LVL28:
 277                             	.LBE312:
 278                             	.LBE311:
 279                             	.LBE310:
  81:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
  82:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  83:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   const TfLiteEvalTensor* input = tflite::micro::GetEvalInput(context, node, 0);
  84:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   TfLiteEvalTensor* output = tflite::micro::GetEvalOutput(context, node, 0);
 280                             		.loc 1 84 3 is_stmt 1
 281                             	.LBB313:
 282                             	.LBB314:
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
 283                             		.loc 3 47 3
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 284                             		.loc 3 48 3
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
 285                             		.loc 3 49 3
 286                             		.loc 3 49 32 is_stmt 0
 287 0020 ED A5 01                		mov.L	4[r10], r5
 288 0023 ED 7A 15                		mov.L	84[r7], r10
 289                             	.LVL29:
 290 0026 EF 71                   		mov.L	r7, r1
 291                             	.LVL30:
 292 0028 A8 5A                   		mov.L	4[r5], r2
 293 002a 7F 1A                   		jsr	r10
 294                             	.LVL31:
 295 002c EF 1C                   		mov.L	r1, r12
 296                             	.LVL32:
 297                             	.LBE314:
 298                             	.LBE313:
  85:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
  86:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   if (output->type == kTfLiteFloat32) {
 299                             		.loc 1 86 3 is_stmt 1
 300                             	.LBB315:
 301                             		.loc 1 86 15 is_stmt 0
 302 002e ED 1A 02                		mov.L	8[r1], r10
 303                             		.loc 1 86 3
 304 0031 61 1A                   		cmp	#1, r10
 305 0033 3A AE 01                		beq	.L194
 306                             	.LBE315:
  87:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     switch (input->type) {
  88:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       case kTfLiteUInt8:
  89:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Dequantize(data->quantization_params,
  90:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(input),
  91:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<uint8_t>(input),
  92:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(output),
  93:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<float>(output));
  94:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         break;
  95:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       case kTfLiteInt8:
  96:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Dequantize(data->quantization_params,
  97:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(input),
  98:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<int8_t>(input),
  99:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(output),
 100:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<float>(output));
 101:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         break;
 102:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       case kTfLiteInt16:
 103:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Dequantize(data->quantization_params,
 104:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(input),
 105:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<int16_t>(input),
 106:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(output),
 107:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<float>(output));
 108:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         break;
 109:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       default:
 110:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 111:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                            TfLiteTypeGetName(input->type),
 112:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                            TfLiteTypeGetName(output->type));
 113:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         return kTfLiteError;
 114:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     }
 115:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   } else if (output->type == kTfLiteInt32) {
 307                             		.loc 1 115 10 is_stmt 1
 308                             	.LBB854:
 309                             	.LBB316:
 310 0036 61 2A                   		cmp	#2, r10
 311 0038 3B 80 01                		bne	.L78
 312                             	.LBB317:
 116:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     int flat_size = MatchingFlatSize(tflite::micro::GetTensorShape(input),
 313                             		.loc 1 116 5
 314                             		.loc 1 116 67 is_stmt 0
 315 003b 71 0F 24                		add	#36, r0, r15
 316 003e EF 61                   		mov.L	r6, r1
 317                             	.LVL33:
 318 0040 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 319                             	.LVL34:
 117:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                      tflite::micro::GetTensorShape(output));
 320                             		.loc 1 117 67
 321 0044 66 CF                   		mov.L	#12, r15
 322 0046 4B 0F                   		add	r0, r15
 323 0048 EF C1                   		mov.L	r12, r1
 324 004a 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 325                             	.LVL35:
 326                             	.LBB318:
 327                             	.LBB319:
 328                             		.file 4 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <algorithm>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstdint>
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <cstring>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include <initializer_list>
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FusedActivationFunctionType : uint8_t {
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kNone,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu6,
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu1,
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kRelu
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class PaddingType : uint8_t { kNone, kSame, kValid };
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct PaddingValues {
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // This enumeration allows for non-default formats for the weights array
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // of a fully-connected operator, allowing the use of special optimized
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // runtime paths.
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** enum class FullyConnectedWeightsFormat : uint8_t {
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Default format (flat 2D layout, the inner contiguous dimension
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // is input_depth, the outer non-contiguous dimension is output_depth)
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kDefault,
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Summary: optimized layout for fast CPU runtime implementation,
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // aimed specifically at ARM CPUs at the moment, and specialized for
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // 8-bit quantized layers.
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The use case we're concerned with here is: 8-bit quantization,
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // large weights matrix that doesn't fit in cache (e.g. 4096x2048 in
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // a key application that drove this), very small batch size (e.g. 1 -- 4).
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Even with 8-bit quantization of weights, the performance of memory
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses to the weights can become the dominant issue when
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the batch size is small, so each weight value is used in only a few
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // arithmetic ops, i.e. the fully-connected node has a low arithmetic
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // intensity. The specific issues that arise are of three kinds:
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (1) One may, ideally, max out DRAM bandwidth, i.e. be truly memory
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     bound. That's the "good" issue to run into.
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (2) One may run into sub-optimal pre-fetching: the data hasn't been
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     prefetched into the cache by the time we need it.
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (3) One may run into cache aliasing: multiple values that are
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     pre-fetched, alias each other in the L1 cache (which typically
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     has only 4-way set associativity in ARM CPUs) and thus evict
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     each other before we get to using them.
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The point of this shuffling is to avoid issues (2) and (3) so that
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // we get as fast as possible given only the hard constraint (1).
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This is achieved by turning the difficulty into a solution: the
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // difficulty, that each value loaded from memory is used only in
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // one kernel iteration, making this operation memory-intensive, hints at
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // the solution, of shuffling the weights so that they are stored in the
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // exact order as the kernel needs to load them, so that the memory
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // accesses made by the kernel are trivial. This solves (2) because the
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // trivial memory access pattern allows the CPU's automatic prefetching
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to perform very well (no need even for preload instructions), and this
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // solves (3) because the values being loaded concurrently are now
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // contiguous in the address space, thus don't alias each other in the cache.
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // On ARM, we typically want our kernel to process a 4x16 block of weights
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // at a time, because:
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 16 is the number of bytes in a NEON register.
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   - 4 is how many rows we need to handle concurrently in the kernel in
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     order to have sufficient mutual independence of instructions to
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //     maximize arithmetic throughput.
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Finally, the 'Int8' part in the name refers to the fact that this
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // weights format has each weights value encoded as a signed int8_t value,
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // even if the data type of the weights buffer is uint8_t.  This is intended
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // to save runtime kernels the effort to have to XOR the top bit of these
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // bytes before using them in signed arithmetic, see this file for more
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // explanations on the 'signed int8_t trick' in matrix multiplication kernels:
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //   tensorflow/lite/toco/graph_transformations/ensure_uint8_weights_safe_for_fast_int8_kernels.c
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   //
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   kShuffled4x16Int8,
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Quantization parameters, determining the mapping of quantized values
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // to real values (i.e. determining how quantized values are mathematically
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // interpreted).
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // The correspondence is as follows:
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //   real_value = scale * (quantized_value - zero_point);
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // In other words, zero_point designates which quantized value corresponds to
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // the real 0 value, and scale designates the difference between the real values
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // corresponding to consecutive quantized values differing by 1.
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct QuantizationParams {
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t zero_point = 0;
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   double scale = 0.0;
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool operator==(const QuantizationParams& qp1,
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const QuantizationParams& qp2) {
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return qp1.zero_point == qp2.zero_point && qp1.scale == qp2.scale;
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** struct Dims {
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int sizes[N];
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int strides[N];
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** class RuntimeShape {
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  public:
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Shapes with dimensions up to 5 are stored directly in the structure, while
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // larger shapes are separately allocated.
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   static constexpr int kMaxSmallSize = 5;
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape& operator=(RuntimeShape const&) = delete;
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape() : size_(0) {}
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   explicit RuntimeShape(int dimensions_count) : size_(dimensions_count) {
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int shape_size, int32_t value) : size_(0) {
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(shape_size);
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < shape_size; ++i) {
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, value);
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int dimensions_count, const int32_t* dims_data) : size_(0) {
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     ReplaceWith(dimensions_count, dims_data);
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(const std::initializer_list<int> init_list) : size_(0) {
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom(init_list);
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Avoid using this constructor.  We should be able to delete it when C++17
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // rolls out.
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(RuntimeShape const& other) : size_(other.DimensionsCount()) {
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[size_];
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData(), other.DimsData(), sizeof(int32_t) * size_);
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator==(const RuntimeShape& comp) const {
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return this->size_ == comp.size_ &&
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****            std::memcmp(DimsData(), comp.DimsData(), size_ * sizeof(int32_t)) ==
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                0;
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   ~RuntimeShape() {
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t DimensionsCount() const { return size_; }
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void SetDim(int i, int32_t val) {
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_[i] = val;
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_[i] = val;
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t* DimsData() {
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsData() const {
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // The caller must ensure that the shape is no bigger than 5-D.
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsDataUpTo5D() const { return dims_; }
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void Resize(int dimensions_count) {
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     size_ = dimensions_count;
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void ReplaceWith(int dimensions_count, const int32_t* dims_data) {
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   template <typename T>
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const T& src_iterable) {
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int dimensions_count =
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         std::distance(src_iterable.begin(), src_iterable.end());
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* data = DimsData();
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (auto it : src_iterable) {
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       *data = it;
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       ++data;
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This will probably be factored out. Old code made substantial use of 4-D
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // shapes, and so this function is used to extend smaller shapes. Note that
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // (a) as Dims<4>-dependent code is eliminated, the reliance on this should be
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // reduced, and (b) some kernels are stricly 4-D, but then the shapes of their
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // inputs should already be 4-D, so this function should not be needed.
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline static RuntimeShape ExtendedShape(int new_shape_size,
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                            const RuntimeShape& shape) {
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return RuntimeShape(new_shape_size, shape, 1);
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const std::initializer_list<int> init_list) {
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom<const std::initializer_list<int>>(init_list);
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // Returns the total count of elements, that is the size when flattened into a
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // vector.
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int FlatSize() const {
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int buffer_size = 1;
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return buffer_size;
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   bool operator!=(const RuntimeShape& comp) const { return !((*this) == comp); }
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****  private:
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // For use only by ExtendedShape(), written to guarantee (return-value) copy
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // elision in C++17.
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   // This creates a shape padded to the desired size with the specified value.
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int new_shape_size, const RuntimeShape& shape, int pad_value)
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       : size_(0) {
 288:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // If the following check fails, it is likely because a 4D-only kernel is
 289:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // being used with an array of larger dimension count.
 290:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_CHECK_GE(new_shape_size, shape.DimensionsCount());
 291:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     Resize(new_shape_size);
 292:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int size_increase = new_shape_size - shape.DimensionsCount();
 293:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_increase; ++i) {
 294:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, pad_value);
 295:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 296:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData() + size_increase, shape.DimsData(),
 297:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                 sizeof(int32_t) * shape.DimensionsCount());
 298:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 299:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 300:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int32_t size_;
 301:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   union {
 302:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t dims_[kMaxSmallSize];
 303:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dims_pointer_;
 304:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   };
 305:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** };
 306:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 307:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Converts inference-style shape to legacy tflite::Dims<4>.
 308:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline tflite::Dims<4> ToRuntimeDims(const tflite::RuntimeShape& array_shape) {
 309:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   tflite::Dims<4> result;
 310:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dimensions_count = array_shape.DimensionsCount();
 311:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_LE(dimensions_count, 4);
 312:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int cum_prod = 1;
 313:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < 4; i++) {
 314:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int new_dim =
 315:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         (i < dimensions_count) ? array_shape.Dims(dimensions_count - 1 - i) : 1;
 316:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.sizes[i] = new_dim;
 317:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     result.strides[i] = cum_prod;
 318:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     cum_prod *= new_dim;
 319:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 320:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return result;
 321:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 322:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 323:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(b/80418076): Move to legacy ops file, update invocations.
 324:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline RuntimeShape DimsToShape(const tflite::Dims<4>& dims) {
 325:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return RuntimeShape(
 326:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       {dims.sizes[3], dims.sizes[2], dims.sizes[1], dims.sizes[0]});
 327:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 328:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 329:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets next index to iterate through a multidimensional array.
 330:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline bool NextIndex(const int num_dims, const int* dims, int* current) {
 331:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 332:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return false;
 333:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 334:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 335:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(current != nullptr);
 336:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int carry = 1;
 337:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = num_dims - 1; idx >= 0; --idx) {
 338:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     int current_val = current[idx] + carry;
 339:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(dims[idx], current_val);
 340:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (dims[idx] == current_val) {
 341:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = 0;
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     } else {
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = current_val;
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       carry = 0;
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       break;
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return (carry == 0);
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 350:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 351:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Gets offset of index if reducing on axis. When reducing, the flattened offset
 352:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // will not change, if the input index changes on the given axis. For example,
 353:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // if you have a 3D tensor and you are reducing to 2D by eliminating axis 0,
 354:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // then index (0, 1, 2) and index (1, 1, 2) will map to the same flattened
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // offset.
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // TODO(kanlig): uses Dims to represent dimensions.
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline size_t ReducedOutputOffset(const int num_dims, const int* dims,
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* index, const int num_axis,
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                   const int* axis) {
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return 0;
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 363:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 364:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index != nullptr);
 365:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   size_t offset = 0;
 366:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = 0; idx < num_dims; ++idx) {
 367:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     // if we need to skip this axis
 368:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     bool is_axis = false;
 369:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (axis != nullptr) {
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       for (int axis_idx = 0; axis_idx < num_axis; ++axis_idx) {
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         if (idx == axis[axis_idx]) {
 372:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           is_axis = true;
 373:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****           break;
 374:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****         }
 375:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       }
 376:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 377:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     if (!is_axis) {
 378:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       offset = offset * static_cast<size_t>(dims[idx]) +
 379:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                static_cast<size_t>(index[idx]);
 380:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 381:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 382:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return offset;
 383:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 384:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 385:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int i0, int i1, int i2, int i3) {
 386:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), 4);
 387:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 388:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 389:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 390:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 391:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 392:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 393:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 394:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 395:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int i0, int i1, int i2, int i3) {
 396:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims.sizes[0]);
 397:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims.sizes[1]);
 398:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims.sizes[2]);
 399:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims.sizes[3]);
 400:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return i0 * dims.strides[0] + i1 * dims.strides[1] + i2 * dims.strides[2] +
 401:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****          i3 * dims.strides[3];
 402:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 403:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 404:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int* index) {
 405:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(dims, index[0], index[1], index[2], index[3]);
 406:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 407:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 408:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int* index) {
 409:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return Offset(shape, index[0], index[1], index[2], index[3]);
 410:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 411:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 412:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get array size, DCHECKing that the dim index is in range.
 413:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** //
 414:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Note that this will be phased out with Dims<4>, since RuntimeShape::Dims()
 415:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // already performs this check.
 416:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 417:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int ArraySize(const Dims<N>& array, int index) {
 418:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index >= 0 && index < N);
 419:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return array.sizes[index];
 420:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 421:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 422:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common array size, DCHECKing that they all agree.
 423:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2>
 424:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 425:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2) {
 426:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 427:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return ArraySize(array1, index1);
 428:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 429:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 430:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2, typename... Args>
 431:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 432:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2, Args... args) {
 433:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 434:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingArraySize(array1, index1, args...);
 435:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 436:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 437:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Get common shape dim, DCHECKing that they all agree.
 438:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingDim(const RuntimeShape& shape1, int index1,
 439:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                        const RuntimeShape& shape2, int index2) {
 440:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 441:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 442:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 443:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 444:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <typename... Args>
 445:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** int MatchingDim(const RuntimeShape& shape1, int index1,
 446:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                 const RuntimeShape& shape2, int index2, Args... args) {
 447:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 448:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return MatchingDim(shape1, index1, args...);
 449:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 450:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 451:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Will be phased out with Dims<4>, replaced by RuntimeShape::FlatSize().
 452:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 453:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int FlatSize(const Dims<N>& dims) {
 454:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 455:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 456:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= dims.sizes[i];
 457:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 458:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return flat_size;
 459:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 460:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 461:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** TFLITE_DEPRECATED("Prefer FlatSize.")
 462:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int RequiredBufferSizeForDims(const Dims<4>& dims) {
 463:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return FlatSize(dims);
 464:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 465:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 466:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 467:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0) {
 468:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 469:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 470:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 471:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 472:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 473:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 474:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 475:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0,
 476:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_1) {
 477:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 478:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 479:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int size_3 = check_shape_1.FlatSize();
 480:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 481:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_2, size_3);
 482:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 483:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** }
 484:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** 
 485:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // Flat size calculation, checking that dimensions match with one or more other
 486:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** // arrays.
 487:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const RuntimeShape& shape,
 488:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_0) {
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), check_shape_0.DimensionsCount());
 329                             		.loc 4 489 3 is_stmt 1
 330 004e AA 0D                   		mov.L	36[r0], r5
 331                             	.LVL36:
 332                             	.LBE319:
 333                             	.LBE318:
 334                             	.LBE317:
 335                             	.LBE316:
 336                             	.LBE854:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 337                             		.loc 4 194 44
 338                             	.LBB855:
 339                             	.LBB514:
 340                             	.LBB508:
 341                             	.LBB392:
 342                             	.LBB388:
 343                             		.loc 4 489 3 is_stmt 0
 344 0050 A8 8A                   		mov.L	12[r0], r2
 345                             	.LVL37:
 346                             	.LBE388:
 347                             	.LBE392:
 348                             	.LBE508:
 349                             	.LBE514:
 350                             	.LBE855:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 351                             		.loc 4 194 44 is_stmt 1
 352                             	.LBB856:
 353                             	.LBB515:
 354                             	.LBB509:
 355                             	.LBB393:
 356                             	.LBB389:
 357                             		.loc 4 489 3 is_stmt 0
 358 0052 47 25                   		cmp	r2, r5
 359 0054 3B E4 01                		bne	.L31
 360                             	.LVL38:
 361                             	.LBB320:
 490:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 362                             		.loc 4 491 21
 363 0057 61 05                   		cmp	#0, r5
 364 0059 2A 05 38 A5 06          		ble	.L134
 365                             	.LBB321:
 366                             	.LBB322:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 367                             		.loc 4 198 36
 368 005e AA 84                   		mov.L	40[r0], r4
 369                             	.LBE322:
 370                             	.LBE321:
 371                             	.LBB335:
 372                             	.LBB336:
 373 0060 ED 0A 04                		mov.L	16[r0], r10
 374 0063 61 55                   		cmp	#5, r5
 375 0065 2A 05 38 8F 01          		ble	.L195
 376                             	.LBE336:
 377                             	.LBE335:
 492:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 378                             		.loc 4 492 5 is_stmt 1
 379                             	.LVL39:
 380                             	.LBB349:
 381                             	.LBB323:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 382                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 383                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 384                             		.loc 4 198 5
 385                             	.LBE323:
 386                             	.LBE349:
 387                             	.LBB350:
 388                             	.LBB337:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 389                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 390                             		.loc 4 197 5
 391                             	.LBE337:
 392                             	.LBE350:
 393                             		.loc 4 492 5 is_stmt 0
 394 006a EC A3                   		mov.L	[r10], r3
 395 006c 06 84 43                		cmp	[r4].L, r3
 396 006f 3B C9 01                		bne	.L31
 397                             	.LVL40:
 398                             		.loc 4 492 5 is_stmt 1
 399                             	.LBB351:
 400                             	.LBB324:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 401                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 402                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 403                             		.loc 4 198 5
 404                             	.LBE324:
 405                             	.LBE351:
 406                             	.LBB352:
 407                             	.LBB338:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 408                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 409                             		.loc 4 197 5
 410                             	.LBE338:
 411                             	.LBE352:
 412                             		.loc 4 492 5 is_stmt 0
 413 0072 ED A3 01                		mov.L	4[r10], r3
 414 0075 06 85 43 01             		cmp	4[r4].L, r3
 415 0079 3B BF 01                		bne	.L31
 416                             	.LVL41:
 417                             		.loc 4 492 5 is_stmt 1
 418                             	.LBB353:
 419                             	.LBB325:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 420                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 421                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 422                             		.loc 4 198 5
 423                             	.LBE325:
 424                             	.LBE353:
 425                             	.LBB354:
 426                             	.LBB339:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 427                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 428                             		.loc 4 197 5
 429                             	.LBE339:
 430                             	.LBE354:
 431                             		.loc 4 492 5 is_stmt 0
 432 007c ED A3 02                		mov.L	8[r10], r3
 433 007f 06 85 43 02             		cmp	8[r4].L, r3
 434 0083 3B B5 01                		bne	.L31
 435                             	.LVL42:
 436                             		.loc 4 492 5 is_stmt 1
 437                             	.LBB355:
 438                             	.LBB326:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 439                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 440                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 441                             		.loc 4 198 5
 442                             	.LBE326:
 443                             	.LBE355:
 444                             	.LBB356:
 445                             	.LBB340:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 446                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 447                             		.loc 4 197 5
 448                             	.LBE340:
 449                             	.LBE356:
 450                             		.loc 4 492 5 is_stmt 0
 451 0086 ED A3 03                		mov.L	12[r10], r3
 452 0089 06 85 43 03             		cmp	12[r4].L, r3
 453 008d 3B AB 01                		bne	.L31
 454                             	.LVL43:
 455                             		.loc 4 492 5 is_stmt 1
 456                             	.LBB357:
 457                             	.LBB327:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 458                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 459                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 460                             		.loc 4 198 5
 461                             	.LBE327:
 462                             	.LBE357:
 463                             	.LBB358:
 464                             	.LBB341:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 465                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 466                             		.loc 4 197 5
 467                             	.LBE341:
 468                             	.LBE358:
 469                             		.loc 4 492 5 is_stmt 0
 470 0090 A9 43                   		mov.L	16[r4], r3
 471 0092 06 85 A3 04             		cmp	16[r10].L, r3
 472 0096 3B A2 01                		bne	.L31
 473                             	.LVL44:
 474                             		.loc 4 492 5 is_stmt 1
 475                             	.LBB359:
 476                             	.LBB328:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 477                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 478                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 479                             		.loc 4 198 5
 480                             	.LBE328:
 481                             	.LBE359:
 482                             	.LBB360:
 483                             	.LBB342:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 484                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 485                             		.loc 4 197 5
 486                             	.LBE342:
 487                             	.LBE360:
 488                             		.loc 4 492 5 is_stmt 0
 489 0099 A9 4B                   		mov.L	20[r4], r3
 490 009b 06 85 A3 05             		cmp	20[r10].L, r3
 491 009f 3B 99 01                		bne	.L31
 492                             	.LVL45:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 493                             		.loc 4 491 21
 494 00a2 61 65                   		cmp	#6, r5
 495 00a4 20 1A                   		beq	.L81
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 496                             		.loc 4 491 3
 497 00a6 66 63                   		mov.L	#6, r3
 498                             	.LVL46:
 499                             		.balign 8,3,3
 500                             	.L82:
 501                             		.loc 4 492 5 is_stmt 1
 502                             	.LBB361:
 503                             	.LBB329:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 504                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 505                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 506                             		.loc 4 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 507                             		.loc 4 198 34 is_stmt 0
 508 00a8 FE 63 41                		mov.L	[r3,r4], r1
 509                             	.LVL47:
 510                             	.LBE329:
 511                             	.LBE361:
 512                             	.LBB362:
 513                             	.LBB343:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 514                             		.loc 4 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 515                             		.loc 4 197 5
 516 00ab 47 23                   		cmp	r2, r3
 517 00ad 3A 8B 01                		beq	.L31
 518                             	.LVL48:
 519                             	.LBE343:
 520                             	.LBE362:
 521                             		.loc 4 492 5 is_stmt 0
 522 00b0 FE 63 AB                		mov.L	[r3,r10], r11
 523 00b3 47 1B                   		cmp	r1, r11
 524 00b5 3B 83 01                		bne	.L31
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 525                             		.loc 4 491 3
 526 00b8 62 13                   		add	#1, r3
 527                             	.LVL49:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 528                             		.loc 4 491 21
 529 00ba 47 35                   		cmp	r3, r5
 530 00bc 21 EC                   		bne	.L82
 531                             	.LVL50:
 532                             		.balign 8,3,1
 533                             	.L81:
 534                             	.LBE320:
 535                             	.LBB373:
 536                             	.LBB374:
 537                             	.LBB375:
 538                             	.LBB376:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 539                             		.loc 4 214 34
 540 00be 66 1B                   		mov.L	#1, r11
 541 00c0 66 0A                   		mov.L	#0, r10
 542                             		.balign 8,3,3
 543                             	.L83:
 544                             	.LVL51:
 545                             	.LBE376:
 546                             	.LBE375:
 547                             	.LBB379:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 548                             		.loc 4 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 549                             		.loc 4 275 19 is_stmt 0
 550 00c2 FE 6A 43                		mov.L	[r10,r4], r3
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 551                             		.loc 4 274 5
 552 00c5 62 1A                   		add	#1, r10
 553                             	.LVL52:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 554                             		.loc 4 275 19
 555 00c7 4F 3B                   		mul	r3, r11
 556                             	.LVL53:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 557                             		.loc 4 274 23
 558 00c9 47 A5                   		cmp	r10, r5
 559 00cb 2A F7                   		bgt	.L83
 560                             	.LVL54:
 561                             		.balign 8,3,1
 562                             	.L79:
 563                             	.LBE379:
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 564                             		.loc 4 277 5 is_stmt 1
 565                             	.LBE374:
 566                             	.LBE373:
 567                             	.LBE389:
 568                             	.LBE393:
 569                             	.LBB394:
 570                             	.LBB395:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 571                             		.loc 4 185 5
 572 00cd 61 52                   		cmp	#5, r2
 573 00cf 2B 0F                   		ble	.L84
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 574                             		.loc 4 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 575                             		.loc 4 189 16 is_stmt 0
 576 00d1 A9 01                   		mov.L	16[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 577                             		.loc 4 189 29
 578 00d3 61 01                   		cmp	#0, r1
 579 00d5 3A FD 01                		beq	.L118
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 580                             		.loc 4 189 16
 581 00d8 05 00 00 00             		bsr	__ZdaPv
 582                             	.LVL55:
 583 00dc AA 0D                   		mov.L	36[r0], r5
 584                             		.balign 8,3,1
 585                             	.L84:
 586                             	.LVL56:
 587                             	.LBE395:
 588                             	.LBE394:
 589                             	.LBB396:
 590                             	.LBB397:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 591                             		.loc 4 185 5 is_stmt 1
 592 00de 61 55                   		cmp	#5, r5
 593 00e0 2B 05 38 F0 01          		bgt	.L118
 594                             	.LVL57:
 595                             		.balign 8,3,1
 596                             	.L86:
 597                             	.LBE397:
 598                             	.LBE396:
 118:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     switch (input->type) {
 599                             		.loc 1 118 5
 600                             		.loc 1 118 20 is_stmt 0
 601 00e5 A8 E1                   		mov.L	8[r6], r1
 602                             		.loc 1 118 5
 603 00e7 61 71                   		cmp	#7, r1
 604 00e9 3A F7 01                		beq	.L87
 605 00ec 61 91                   		cmp	#9, r1
 606 00ee 3B CC 00                		bne	.L189
 119:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       case kTfLiteInt16: {
 120:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Requantize(
 121:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), flat_size,
 122:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             data->output_multiplier, data->output_shift,
 123:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             data->quantization_params.zero_point, data->output_zero_point,
 124:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             tflite::micro::GetTensorData<int32_t>(output));
 125:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         break;
 126:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       }
 127:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       case kTfLiteInt8: {
 607                             		.loc 1 127 7 is_stmt 1
 608                             		.loc 1 127 25
 128:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Requantize(
 609                             		.loc 1 128 9
 610                             	.LVL58:
 611                             	.LBB399:
 612                             	.LBB400:
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns const data for a TfLiteEvalTensor struct.
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** const T* GetTensorData(const TfLiteEvalTensor* tensor) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(tensor != nullptr);
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 613                             		.loc 3 62 53 is_stmt 0
 614 00f1 EC 65                   		mov.L	[r6], r5
 615                             	.LVL59:
 616                             	.LBE400:
 617                             	.LBE399:
 618                             		.loc 1 128 34
 619 00f3 ED D3 02                		mov.L	8[r13], r3
 129:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             tflite::micro::GetTensorData<int8_t>(input), flat_size,
 130:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             data->output_multiplier, data->output_shift,
 620                             		.loc 1 130 44
 621 00f6 ED D6 03                		mov.L	12[r13], r6
 622                             	.LVL60:
 128:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             tflite::micro::GetTensorData<int8_t>(input), flat_size,
 623                             		.loc 1 128 34
 624 00f9 ED D8 01                		mov.L	4[r13], r8
 625 00fc ED DD 04                		mov.L	16[r13], r13
 626                             	.LVL61:
 627                             	.LBB401:
 628                             	.LBB402:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 629                             		.loc 3 55 28
 630 00ff EC C2                   		mov.L	[r12], r2
 631                             	.LVL62:
 632                             	.LBE402:
 633                             	.LBE401:
 634                             	.LBB403:
 635                             	.LBB404:
 636                             	.LBB405:
 637                             		.file 5 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_REQUANTIZE_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_REQUANTIZE_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** //#include "ruy/profiler/instrumentation.h"  // from @ruy
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** #include "tensorflow/lite/kernels/internal/common.h"
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** #include "tensorflow/lite/kernels/internal/types.h"
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** namespace tflite {
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** namespace reference_ops {
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** template <typename input_type, typename output_type>
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h **** inline void Requantize(const input_type* input_data, int32_t size,
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****                        int32_t effective_scale_multiplier,
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****                        int32_t effective_scale_shift, int32_t input_zeropoint,
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****                        int32_t output_zeropoint, output_type* output_data) {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   //ruy::profiler::ScopeLabel label("Requantize");
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   const bool same_scale =
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****       (effective_scale_multiplier == 1 << 30 && effective_scale_shift == 1);
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   if (same_scale) {
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const bool mixed_type_int8_uint8 =
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::is_same<input_type, int8_t>::value &&
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::is_same<output_type, uint8_t>::value;
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const bool mixed_type_uint8_int8 =
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::is_same<input_type, uint8_t>::value &&
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::is_same<output_type, int8_t>::value;
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t zero_point_diff = input_zeropoint - output_zeropoint;
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     // Fast path to do requantization for the case when just a shift of 128 is
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     // needed.
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     if ((mixed_type_int8_uint8 && zero_point_diff == -128) ||
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         (mixed_type_uint8_int8 && zero_point_diff == 128)) {
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****       for (int i = 0; i < size; ++i) {
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         output_data[i] = input_data[i] ^ 0x80;
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****       }
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     }
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   }
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   static constexpr int32_t kMinOutput = std::numeric_limits<output_type>::min();
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   static constexpr int32_t kMaxOutput = std::numeric_limits<output_type>::max();
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****   for (int i = 0; i < size; ++i) {
 638                             		.loc 5 52 21
 639 0101 61 0B                   		cmp	#0, r11
 640 0103 2A 05 38 85 01          		ble	.L103
 641                             	.LBB406:
 642                             	.LBB407:
 643                             	.LBB408:
 644                             		.file 6 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifndef ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifdef GEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #define ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include <functional>
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "fixedpoint/fixedpoint.h"
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/types.h"
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** namespace tflite {
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** constexpr int kReverseShift = -1;
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline void GetActivationMinMax(FusedActivationFunctionType ac,
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_min,
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_max) {
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   switch (ac) {
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kNone:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = std::numeric_limits<float>::lowest();
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu:
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu1:
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = -1.f;
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 1.f;
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu6:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 6.f;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       break;
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** template <typename T>
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline T ActivationFunctionWithMinMax(T x, T output_activation_min,
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                       T output_activation_max) {
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using std::max;
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using std::min;
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return min(max(x, output_activation_min), output_activation_max);
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** // Legacy function, left for compatibility only.
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** template <FusedActivationFunctionType Ac>
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** float ActivationFunction(float x) {
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float output_activation_min, output_activation_max;
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   GetActivationMinMax(Ac, &output_activation_min, &output_activation_max);
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return ActivationFunctionWithMinMax(x, output_activation_min,
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                       output_activation_max);
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                          const float* bias_data, int array_size,
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                          float* array_data) {
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // Note: see b/132215220: in May 2019 we thought it would be OK to replace
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // this with the Eigen one-liner:
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   //   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // This turned out to severely regress performance: +4ms (i.e. 8%) on
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   // MobileNet v2 / 1.0 / 224. So we keep custom NEON code for now.
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   TFLITE_DCHECK_EQ((array_size % bias_size), 0);
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #ifdef USE_NEON
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float* array_ptr = array_data;
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   float* array_end_ptr = array_ptr + array_size;
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_min_vec = vdupq_n_f32(clamp_min);
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_max_vec = vdupq_n_f32(clamp_max);
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   for (; array_ptr != array_end_ptr; array_ptr += bias_size) {
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int i = 0;
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 16; i += 16) {
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b0 = vld1q_f32(bias_data + i);
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b1 = vld1q_f32(bias_data + i + 4);
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b2 = vld1q_f32(bias_data + i + 8);
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b3 = vld1q_f32(bias_data + i + 12);
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a0 = vld1q_f32(array_ptr + i);
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a1 = vld1q_f32(array_ptr + i + 4);
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a2 = vld1q_f32(array_ptr + i + 8);
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a3 = vld1q_f32(array_ptr + i + 12);
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x0 = vaddq_f32(a0, b0);
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x1 = vaddq_f32(a1, b1);
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x2 = vaddq_f32(a2, b2);
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x3 = vaddq_f32(a3, b3);
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x0 = vmaxq_f32(clamp_min_vec, x0);
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x1 = vmaxq_f32(clamp_min_vec, x1);
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x2 = vmaxq_f32(clamp_min_vec, x2);
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x3 = vmaxq_f32(clamp_min_vec, x3);
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x0 = vminq_f32(clamp_max_vec, x0);
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x1 = vminq_f32(clamp_max_vec, x1);
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x2 = vminq_f32(clamp_max_vec, x2);
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x3 = vminq_f32(clamp_max_vec, x3);
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x0);
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 4, x1);
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 8, x2);
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 12, x3);
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 4; i += 4) {
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto b = vld1q_f32(bias_data + i);
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto a = vld1q_f32(array_ptr + i);
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       auto x = vaddq_f32(a, b);
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x = vmaxq_f32(clamp_min_vec, x);
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       x = vminq_f32(clamp_max_vec, x);
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x);
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (; i < bias_size; i++) {
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       array_ptr[i] = ActivationFunctionWithMinMax(array_ptr[i] + bias_data[i],
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                                   clamp_min, clamp_max);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #else  // not NEON
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   for (int array_offset = 0; array_offset < array_size;
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****        array_offset += bias_size) {
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     for (int i = 0; i < bias_size; i++) {
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       array_data[array_offset + i] = ActivationFunctionWithMinMax(
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****           array_data[array_offset + i] + bias_data[i], clamp_min, clamp_max);
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     }
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   }
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** #endif
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierSmallerThanOneExp(
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****       SaturatingRoundingDoublingHighMul(x, quantized_multiplier), -left_shift);
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierGreaterThanOne(
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return SaturatingRoundingDoublingHighMul(x * (1 << left_shift),
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                            quantized_multiplier);
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** }
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** 
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplier(int32_t x,
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                              int32_t quantized_multiplier,
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****                                              int shift) {
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 645                             		.loc 6 162 31
 646 0108 FC 07 61                		neg	r6, r1
 647 010b 61 06                   		cmp	#0, r6
 648 010d 2B 04                   		ble 1f
 649 010f 66 01                   		mov #0, r1
 650                             	1:
 651                             	.LBB409:
 652                             	.LBB410:
 653                             		.file 7 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\thi
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Copyright 2015 The Gemmlowp Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // fixedpoint.h: fixed-point arithmetic, with basic operations and
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // a few math functions such as tanh.
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #ifndef GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <algorithm>
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cassert>
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cmath>
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <cstdint>
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include <limits>
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** #include "../internal/detect_platform.h"
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** namespace gemmlowp {
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Part 1: Low-level integer-arithmetic primitives.
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The implementations here are generic implementations valid for
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // scalar types (e.g. std::int32_t). Architecture-specific SIMD types
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // (e.g. NEON int32x4_t) may be supported by providing
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // specializations for them in separate files.
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The purpose of these primitives is two-fold:
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be used to implement higher-level fixed-point
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    abstractions, namely the FixedPoint class and its arithmetic
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    operators.
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be directly used to implement some more involved
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    fixed-point computations, e.g. the fixed-point implementation
  43:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //    of math functions such as tanh.
  44:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  45:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Some compile-time traits around raw types to handle SIMD aspects:
  46:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // number of lanes, underlying scalar type.
  47:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  48:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits {};
  49:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  50:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
  51:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int32_t> {
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int32_t ScalarRawType;
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int16_t> {
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int16_t ScalarRawType;
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
  61:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  62:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns a SIMD value duplicating a scalar value across all lanes.
  63:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
  64:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tRawType Dup(typename FixedPointRawTypeTraits<tRawType>::ScalarRawType x) {
  65:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return x;
  66:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  67:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  68:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise AND
  69:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  70:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitAnd(tIntegerType a, tIntegerType b) {
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a & b;
  72:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  73:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  74:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise OR
  75:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  76:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitOr(tIntegerType a, tIntegerType b) {
  77:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a | b;
  78:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  79:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  80:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise XOR
  81:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  82:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitXor(tIntegerType a, tIntegerType b) {
  83:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a ^ b;
  84:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  85:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  86:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise NOT
  87:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  88:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitNot(tIntegerType a) {
  89:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return ~a;
  90:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  91:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  92:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer addition. Not saturating. Overflow is undefined behavior.
  93:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  94:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Add(tIntegerType a, tIntegerType b) {
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a + b;
  96:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
  97:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
  98:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer multiplication. Not saturating. Overflow is undefined behavior.
  99:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 100:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Mul(tIntegerType a, tIntegerType b) {
 101:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a * b;
 102:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 103:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 104:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer subtraction. Not saturating. Overflow is undefined behavior.
 105:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 106:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Sub(tIntegerType a, tIntegerType b) {
 107:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a - b;
 108:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 109:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 110:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer unary negative. Not saturating. Overflow is undefined behavior.
 111:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 112:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Neg(tIntegerType a) {
 113:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return -a;
 114:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 115:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 116:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic left-shift, equivalent to multiplying with a power of two.
 117:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Negative values are OK. In case of overflow, no Undefined
 118:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Behavior, but the results are implementation-defined (in practice,
 119:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // they currently are saturated, but we make no commitment to that). The idea
 120:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // is that the caller will want to implement the overflowing cases with
 121:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // saturation with compare-and-mask, so we don't care about the results
 122:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // in the overflow case, we just want to avoid undefined behavior.
 123:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 124:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerType may be int32 or any narrower signed type.
 125:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType, typename OffsetType>
 126:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftLeft(tIntegerType a, OffsetType offset) {
 127:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_a = static_cast<std::int64_t>(a);
 128:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_shifted = wide_a * (1 << offset);
 129:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 130:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const auto max = std::numeric_limits<tIntegerType>::max();
 131:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return wide_shifted < min
 132:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              ? min
 133:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 134:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 135:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 136:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 137:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic right-shift. Not rounding.
 138:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Relying on implementation-defined, but in-practice-consistent,
 139:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // C++ compiler behavior.
 140:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 141:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftRight(tIntegerType a, int offset) {
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a >> offset;
 143:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 144:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 145:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Each bit of the result is set to the corresponding bit of either then_val or
 146:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // else_val depending on whether the corresponding bit of if_mask is set.
 147:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to the VBSL instruction in ARM NEON.
 148:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 149:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType SelectUsingMask(tIntegerType if_mask, tIntegerType then_val,
 150:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                              tIntegerType else_val) {
 151:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return BitXor(BitAnd(if_mask, then_val), BitAnd(BitNot(if_mask), else_val));
 152:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 153:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 154:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 155:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is non-zero.
 156:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 157:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNonZero(tIntegerType a) {
 158:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr tIntegerType zero = 0;
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a ? BitNot(zero) : zero;
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is zero.
 164:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 165:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfZero(tIntegerType a) {
 166:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(!a);
 167:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 168:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 169:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 170:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are equal.
 171:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 172:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfEqual(tIntegerType a, tIntegerType b) {
 173:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a == b);
 174:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 175:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 176:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 177:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are not equal.
 178:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 179:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNotEqual(tIntegerType a, tIntegerType b) {
 180:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a != b);
 181:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 182:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 183:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 184:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a > b.
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 186:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThan(tIntegerType a, tIntegerType b) {
 187:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a > b);
 188:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 190:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 191:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a >= b.
 192:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 193:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThanOrEqual(tIntegerType a, tIntegerType b) {
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a >= b);
 195:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a < b.
 199:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 200:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThan(tIntegerType a, tIntegerType b) {
 201:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a < b);
 202:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 203:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 204:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 205:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a <= b.
 206:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 207:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThanOrEqual(tIntegerType a, tIntegerType b) {
 208:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a <= b);
 209:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 210:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 211:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if all of the input scalars are nonzero.
 212:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 213:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 215:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool All(tIntegerType a) {
 216:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 217:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 218:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 219:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if any of the input scalars are nonzero.
 220:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 221:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 222:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 223:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** bool Any(tIntegerType a) {
 224:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 225:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 226:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 227:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns (a+b)/2, rounded to the nearest integer.
 228:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to VRHADD in the ARM NEON instruction set.
 229:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 230:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType RoundingHalfSum(IntegerType a, IntegerType b) {
 231:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 232:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 233:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 234:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 235:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 236:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 237:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t RoundingHalfSum(std::int32_t a, std::int32_t b) {
 238:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a64 = a;
 239:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 240:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sum = a64 + b64;
 241:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sign = sum >= 0 ? 1 : -1;
 242:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 243:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 244:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 245:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 246:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t RoundingHalfSum(std::int16_t a, std::int16_t b) {
 247:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 248:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 249:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 250:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sign = sum >= 0 ? 1 : -1;
 251:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 252:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 253:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 254:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 255:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingAdd(IntegerType a, IntegerType b) {
 256:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 257:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 258:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 259:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 260:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 261:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // So far this is only needed for int16.
 262:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 263:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingAdd(std::int16_t a, std::int16_t b) {
 264:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 265:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 266:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 267:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 268:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 269:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                std::max(static_cast<std::int32_t>(-32768), sum)));
 270:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 271:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int8_t SaturatingAdd(std::int8_t a, std::int8_t b) {
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t a16 = a;
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t b16 = b;
 276:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t sum = a16 + b16;
 277:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int8_t>(std::min(
 278:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<int16_t>(std::numeric_limits<int8_t>::max()),
 279:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       std::max(static_cast<int16_t>(std::numeric_limits<int8_t>::min()), sum)));
 280:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 281:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 282:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns a+b, saturating if the integers are 16bit or narrower,
 283:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // otherwise just a plain addition.
 284:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, bool Is16Bit>
 285:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl {
 286:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) { return Add(a, b); }
 287:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 288:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 289:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl<IntegerType, true> {
 290:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) {
 291:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****     return SaturatingAdd(a, b);
 292:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   }
 293:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** };
 294:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 295:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType AddSaturatingIf16Bit(IntegerType a, IntegerType b) {
 296:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   using ScalarType =
 297:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 298:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16BitImpl<IntegerType, sizeof(ScalarType) == 2>::Run(a,
 299:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                                              b);
 300:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 301:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 302:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Returns the integer that represents the product of two fixed-point
 303:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // numbers, interpreting all integers as fixed-point values in the
 304:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1), rounding to the nearest value, and saturating
 305:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // -1 * -1 to the maximum value (since 1 is not in the half-open
 306:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1)).
 307:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 308:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // [The explanation below specializes to std::int32_t for example purpose.]
 309:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 310:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The mapping between IntegerType and the interval [-1, 1) is unique and
 311:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // implied by IntegerType, which is assumed to be signed. For example,
 312:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // for IntegerType==std::int32_t, the mapping is
 313:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   real_value = integer_value / 2^31.
 314:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // So in this case, and leaving aside rounding and saturating, this
 315:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // function computes ((a / 2^31) * (b / 2^31)) * 2^31, which simplifies to
 316:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^31.
 317:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 318:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The 'doubling' part in the name of this function comes from the fact that
 319:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // this operation is very close to a "multiply-high" operation, keeping only
 320:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // the top half bits, except that that would be effectively computing
 321:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^32,
 322:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // so here we are computing 2x that, since
 323:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //   1/2^31 = 2 * 1/2^32.
 324:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // The idea is to use all of the available 32 bits in the destination int32
 325:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // value.
 326:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 327:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // [End of the explanation specializing to int32.]
 328:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** //
 329:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This is equivalent to the VQRDMULH instruction in ARM NEON.
 330:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 331:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingDoublingHighMul(IntegerType a, IntegerType b) {
 332:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 333:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 334:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 335:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 336:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 337:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // This function implements the same computation as the ARMv7 NEON VQRDMULH
 338:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // instruction.
 339:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 340:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t SaturatingRoundingDoublingHighMul(std::int32_t a,
 341:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int32_t b) {
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int32_t>::min();
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 350:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 351:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 352:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <>
 353:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingRoundingDoublingHighMul(std::int16_t a,
 354:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int16_t b) {
 355:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int16_t>::min();
 356:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 357:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 358:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 359:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 360:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 361:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 362:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 363:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 364:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** 
 365:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Correctly-rounded-to-nearest division by a power-of-two.
 366:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** // Also known as a rounding arithmetic right shift.
 367:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, typename ExponentType>
 368:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** inline IntegerType RoundingDivideByPOT(IntegerType x, ExponentType exponent) {
 369:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent >= 0);
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 371:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 654                             		.loc 7 371 50
 655 0111 71 17 E0                		add	#-32, r1, r7
 656                             	.LVL63:
 657 0114 26 05 38 D4 05          		bn	.L104
 658 0119 66 0C                   		mov.L	#0, r12
 659                             	.LVL64:
 660                             		.balign 8,3,3
 661                             	.L105:
 662 011b FD 74 46 00             		max	#0, r6
 663                             	.LVL65:
 664                             		.loc 7 371 63
 665 011f 60 1C                   		sub	#1, r12
 666                             	.LBB411:
 667                             	.LBB412:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 668                             		.loc 7 142 15
 669 0121 FD A1 CE                		shar	#1, r12, r14
 670 0124 75 51 1F                		cmp	#31, r1
 671 0127 2B 05 38 16 06          		bgt	.L93
 672 012c FF 24 B5                		add	r11, r5, r4
 673                             	.LBE412:
 674                             	.LBE411:
 675                             	.LBE410:
 676                             	.LBE409:
 677                             	.LBB427:
 678                             	.LBB428:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 679                             		.loc 7 349 19
 680 012f E7 0D 37                		mov.L	r13, 220[r0]
 681 0132 E7 0E 35                		mov.L	r14, 212[r0]
 682 0135 2E 3D                   		bra	.L114
 683                             	.LVL66:
 684                             	.L106:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 685                             		.loc 7 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 686                             		.loc 7 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 687                             		.loc 7 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 688                             		.loc 7 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 689                             		.loc 7 346 35 is_stmt 0
 690 0137 71 ED 00                		add	#0, r14, r13
 691 013a 28 05 38 55 01          		blt	.L145
 692                             	.LVL67:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 693                             		.loc 7 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 694                             		.loc 7 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 695                             		.loc 7 348 40 is_stmt 0
 696 013f EF E7                   		mov.L	r14, r7
 697                             	.LVL68:
 698 0141 70 A9 00 00 00 40       		add	#0x40000000, r10, r9
 699 0147 FD 74 27 00             		adc	#0, r7
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 700                             		.loc 7 348 49
 701 014b 6C 17                   		shll	#1, r7
 702 014d FD 9F 9A                		shlr	#31, r9, r10
 703 0150 57 A7                   		or	r10, r7
 704                             	.LVL69:
 705                             		.balign 8,3,2
 706                             	.L109:
 707                             	.LBE428:
 708                             	.LBE427:
 709                             	.LBB431:
 710                             	.LBB425:
 711                             	.LBB413:
 712                             	.LBB414:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 713                             		.loc 7 71 14
 714 0152 FD 9F 7B                		shlr	#31, r7, r11
 715                             	.LBE414:
 716                             	.LBE413:
 717                             	.LBB415:
 718                             	.LBB416:
 719 0155 FF 4A C7                		and	r12, r7, r10
 720                             	.LVL70:
 721                             	.LBE416:
 722                             	.LBE415:
 723                             	.LBB417:
 724                             	.LBB418:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 725                             		.loc 7 95 14
 726 0158 06 89 0B 35             		add	212[r0], r11
 727                             	.LBE418:
 728                             	.LBE417:
 729                             	.LBB419:
 730                             	.LBB420:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 731                             		.loc 7 142 15
 732 015c FD 61 17                		shar	r1, r7
 733                             	.LVL71:
 734                             	.LBE420:
 735                             	.LBE419:
 736                             	.LBB421:
 737                             	.LBB422:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 738                             		.loc 7 71 14
 739 015f 47 BA                   		cmp	r11, r10
 740 0161 FC DB AA                		scgt.L	r10
 741                             	.LVL72:
 742                             	.LBE422:
 743                             	.LBE421:
 744                             	.LBB423:
 745                             	.LBB424:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 746                             		.loc 7 95 14
 747 0164 4B A7                   		add	r10, r7
 748                             	.LBE424:
 749                             	.LBE423:
 750                             	.LBE425:
 751                             	.LBE431:
 752                             	.LBE408:
 753                             	.LBE407:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
  54:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         MultiplyByQuantizedMultiplier(input, effective_scale_multiplier,
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****                                       effective_scale_shift) +
 754                             		.loc 5 56 62
 755 0166 06 89 07 37             		add	220[r0], r7
  57:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         output_zeropoint;
  58:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t clamped_output =
  59:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         std::max(std::min(output, kMaxOutput), kMinOutput);
  60:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     output_data[i] = static_cast<output_type>(clamped_output);
 756                             		.loc 5 60 5
 757 016a FD 22 27                		mov.L	r7, [r2+]
 758                             	.LVL73:
 759                             	.LBE406:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 760                             		.loc 5 52 21
 761 016d 47 45                   		cmp	r4, r5
 762 016f 3A 1B 01                		beq	.L103
 763                             	.LVL74:
 764                             		.balign 8,3,5
 765                             	.L114:
 766                             	.LBB443:
 767                             	.LBB439:
 768                             	.LBB435:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 769                             		.loc 6 159 3 is_stmt 1
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 770                             		.loc 6 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 771                             		.loc 6 161 3
 772                             		.loc 6 162 3
 163:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 773                             		.loc 6 163 3
 774                             	.LBE435:
 775                             	.LBE439:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 776                             		.loc 5 53 37 is_stmt 0
 777 0172 FD 28 57                		mov.B	[r5+], r7
 778                             	.LVL75:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 779                             		.loc 5 53 19
 780 0175 43 87                   		sub	r8, r7
 781                             	.LVL76:
 782                             	.LBB440:
 783                             	.LBB436:
 784                             		.loc 6 163 29
 785 0177 FD 62 67                		shll	r6, r7
 786                             	.LVL77:
 787                             	.LBB432:
 788                             	.LBB429:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 789                             		.loc 7 342 3 is_stmt 1
 790 017a EF 7D                   		mov.L	r7, r13
 791 017c FC 1B 3D                		emul	r3, r13
 792 017f EF DA                   		mov.L	r13, r10
 793 0181 EF EB                   		mov.L	r14, r11
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 794                             		.loc 7 342 26 is_stmt 0
 795 0183 47 73                   		cmp	r7, r3
 796 0185 21 B2                   		bne	.L106
 797                             	.LVL78:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 798                             		.loc 7 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 799                             		.loc 7 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 800                             		.loc 7 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 801                             		.loc 7 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 802                             		.loc 7 346 35 is_stmt 0
 803 0187 61 0E                   		cmp	#0, r14
 804 0189 FB E2 01 00 00 C0       		mov.L	#-1073741823, r14
 805 018f 29 08                   		blt 1f
 806 0191 FB E2 00 00 00 40       		mov #0x40000000, r14
 807                             	1:
 808 0197 E7 0E 33                		mov.L	r14, 204[r0]
 809 019a 71 BF 00                		add	#0, r11, r15
 810 019d FB F6 FF                		mov.L	#-1, r15
 811 01a0 29 04                   		blt 1f
 812 01a2 66 0F                   		mov #0, r15
 813                             	1:
 814 01a4 E7 0F 36                		mov.L	r15, 216[r0]
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 815                             		.loc 7 347 3 is_stmt 1
 816                             	.LVL79:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 817                             		.loc 7 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 818                             		.loc 7 349 19 is_stmt 0
 819 01a7 74 03 00 00 00 80       		cmp	#-2147483648, r3
 820 01ad 3B EF 00                		bne	.L112
 821 01b0 FB 72 FF FF FF 7F       		mov.L	#0x7fffffff, r7
 822                             	.LVL80:
 823 01b6 2E 9C                   		bra	.L109
 824                             	.LVL81:
 825                             	.L78:
 826                             	.LBE429:
 827                             	.LBE432:
 828                             	.LBE436:
 829                             	.LBE440:
 830                             	.LBE443:
 831                             	.LBE405:
 832                             	.LBE404:
 833                             	.LBE403:
 834                             	.LBE509:
 131:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             data->quantization_params.zero_point, data->output_zero_point,
 132:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             tflite::micro::GetTensorData<int32_t>(output));
 133:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         break;
 134:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       }
 135:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       default:
 136:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 137:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                            TfLiteTypeGetName(input->type),
 138:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                            TfLiteTypeGetName(output->type));
 139:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         return kTfLiteError;
 140:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     }
 141:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   } else {
 142:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 835                             		.loc 1 142 5 is_stmt 1
 836                             		.loc 1 142 5
 837 01b8 A8 E1                   		mov.L	8[r6], r1
 838                             	.LVL82:
 839                             		.balign 8,3,1
 840                             	.L189:
 841 01ba A9 7E                   		mov.L	20[r7], r6
 842                             	.LVL83:
 143:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                        TfLiteTypeGetName(input->type),
 144:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                        TfLiteTypeGetName(output->type));
 145:../src/tensorflow/lite/micro/kernels/dequantize.cc ****     return kTfLiteError;
 843                             		.loc 1 145 12 is_stmt 0
 844 01bc 66 1A                   		mov.L	#1, r10
 845 01be EF 00                   		.balign 8,3,3
 846                             	.L190:
 142:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                        TfLiteTypeGetName(input->type),
 847                             		.loc 1 142 5
 848 01c0 05 00 00 00             		bsr	_TfLiteTypeGetName
 849                             	.LVL84:
 850 01c4 EF 1B                   		mov.L	r1, r11
 851 01c6 ED C1 02                		mov.L	8[r12], r1
 852 01c9 05 00 00 00             		bsr	_TfLiteTypeGetName
 853                             	.LVL85:
 854 01cd A0 81                   		mov.L	r1, 8[r0]
 855 01cf E7 0B 01                		mov.L	r11, 4[r0]
 856 01d2 EF 71                   		mov.L	r7, r1
 857 01d4 F8 02 00 00 00 00       		mov.L	#.LC11, [r0]
 858 01da 7F 16                   		jsr	r6
 859                             	.LVL86:
 860                             		.loc 1 145 5 is_stmt 1
 861                             	.LBE515:
 862                             	.LBE856:
 146:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   }
 147:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
 148:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   return kTfLiteOk;
 149:../src/tensorflow/lite/micro/kernels/dequantize.cc **** }
 863                             		.loc 1 149 1 is_stmt 0
 864 01dc EF A1                   		mov.L	r10, r1
 865 01de 3F 6D 40                		rtsd	#256, r6-r13
 866                             	.LVL87:
 867                             	.L194:
 868                             	.LBB857:
  87:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       case kTfLiteUInt8:
 869                             		.loc 1 87 5 is_stmt 1
  87:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       case kTfLiteUInt8:
 870                             		.loc 1 87 20 is_stmt 0
 871 01e1 A8 E1                   		mov.L	8[r6], r1
 872                             	.LVL88:
  87:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       case kTfLiteUInt8:
 873                             		.loc 1 87 5
 874 01e3 61 71                   		cmp	#7, r1
 875 01e5 3A 5C 03                		beq	.L33
 876 01e8 61 91                   		cmp	#9, r1
 877 01ea 3A 77 02                		beq	.L34
 878 01ed 61 31                   		cmp	#3, r1
 879 01ef 3A DB 01                		beq	.L196
 109:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 880                             		.loc 1 109 7 is_stmt 1
 110:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                            TfLiteTypeGetName(input->type),
 881                             		.loc 1 110 9
 110:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                            TfLiteTypeGetName(input->type),
 882                             		.loc 1 110 9
 883 01f2 A9 7E                   		mov.L	20[r7], r6
 884                             	.LVL89:
 885 01f4 2E CC                   		bra	.L190
 886                             	.LVL90:
 887                             	.L195:
 888                             	.LBB516:
 889                             	.LBB510:
 890                             	.LBB450:
 891                             	.LBB390:
 892                             	.LBB384:
 893                             		.loc 4 492 5
 894                             	.LBB363:
 895                             	.LBB330:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 896                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 897                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 898                             		.loc 4 198 5
 899                             	.LBE330:
 900                             	.LBE363:
 901                             	.LBB364:
 902                             	.LBB344:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 903                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 904                             		.loc 4 197 5
 905                             	.LBE344:
 906                             	.LBE364:
 907                             		.loc 4 492 5 is_stmt 0
 908 01f6 47 A4                   		cmp	r10, r4
 909 01f8 21 40                   		bne	.L31
 910                             	.LVL91:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 911                             		.loc 4 491 21
 912 01fa 61 15                   		cmp	#1, r5
 913 01fc 3A FE 04                		beq	.L138
 914                             		.loc 4 492 5 is_stmt 1
 915                             	.LVL92:
 916                             	.LBB365:
 917                             	.LBB331:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 918                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 919                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 920                             		.loc 4 198 5
 921                             	.LBE331:
 922                             	.LBE365:
 923                             	.LBB366:
 924                             	.LBB345:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 925                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 926                             		.loc 4 197 5
 927                             	.LBE345:
 928                             	.LBE366:
 929                             		.loc 4 492 5 is_stmt 0
 930 01ff ED 0A 05                		mov.L	20[r0], r10
 931 0202 06 85 0A 0B             		cmp	44[r0].L, r10
 932 0206 21 32                   		bne	.L31
 933                             	.LVL93:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 934                             		.loc 4 491 21
 935 0208 61 25                   		cmp	#2, r5
 936 020a 3A F0 04                		beq	.L138
 937                             		.loc 4 492 5 is_stmt 1
 938                             	.LVL94:
 939                             	.LBB367:
 940                             	.LBB332:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 941                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 942                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 943                             		.loc 4 198 5
 944                             	.LBE332:
 945                             	.LBE367:
 946                             	.LBB368:
 947                             	.LBB346:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 948                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 949                             		.loc 4 197 5
 950                             	.LBE346:
 951                             	.LBE368:
 952                             		.loc 4 492 5 is_stmt 0
 953 020d ED 0A 06                		mov.L	24[r0], r10
 954 0210 06 85 0A 0C             		cmp	48[r0].L, r10
 955 0214 21 24                   		bne	.L31
 956                             	.LVL95:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 957                             		.loc 4 491 21
 958 0216 61 35                   		cmp	#3, r5
 959 0218 3A E2 04                		beq	.L138
 960                             		.loc 4 492 5 is_stmt 1
 961                             	.LVL96:
 962                             	.LBB369:
 963                             	.LBB333:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 964                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 965                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 966                             		.loc 4 198 5
 967                             	.LBE333:
 968                             	.LBE369:
 969                             	.LBB370:
 970                             	.LBB347:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 971                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 972                             		.loc 4 197 5
 973                             	.LBE347:
 974                             	.LBE370:
 975                             		.loc 4 492 5 is_stmt 0
 976 021b ED 0A 07                		mov.L	28[r0], r10
 977 021e 06 85 0A 0D             		cmp	52[r0].L, r10
 978 0222 21 16                   		bne	.L31
 979                             	.LVL97:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 980                             		.loc 4 491 21
 981 0224 61 45                   		cmp	#4, r5
 982 0226 3A D4 04                		beq	.L138
 983                             		.loc 4 492 5 is_stmt 1
 984                             	.LVL98:
 985                             	.LBB371:
 986                             	.LBB334:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 987                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 988                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 989                             		.loc 4 198 5
 990                             	.LBE334:
 991                             	.LBE371:
 992                             	.LBB372:
 993                             	.LBB348:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 994                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 995                             		.loc 4 197 5
 996                             	.LBE348:
 997                             	.LBE372:
 998                             		.loc 4 492 5 is_stmt 0
 999 0229 ED 0A 08                		mov.L	32[r0], r10
 1000                             	.LBE384:
 1001                             	.LBB385:
 1002                             	.LBB382:
 1003                             	.LBB380:
 1004                             	.LBB377:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1005                             		.loc 4 214 34
 1006 022c 71 04 28                		add	#40, r0, r4
 1007                             	.LBE377:
 1008                             	.LBE380:
 1009                             	.LBE382:
 1010                             	.LBE385:
 1011                             	.LBB386:
 1012                             		.loc 4 492 5
 1013 022f 06 85 0A 0E             		cmp	56[r0].L, r10
 1014 0233 3A 8B FE                		beq	.L81
 1015                             	.LVL99:
 1016 0236 EF 00                   		.balign 8,3,3
 1017                             	.L31:
 1018                             	.LBE386:
 1019                             	.LBE390:
 1020                             	.LBE450:
 1021                             	.LBE510:
 1022                             	.LBE516:
 1023                             	.LBE857:
  80:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 1024                             		.loc 1 80 3 discriminator 1
 1025 0238 05 00 00 00             		bsr	_abort
 1026                             	.LVL100:
 1027                             	.L122:
 1028                             	.LBB858:
 1029                             	.LBB517:
 1030                             	.LBB518:
 1031                             	.LBB519:
 1032                             	.LBB520:
 1033                             	.LBB521:
 1034                             	.LBB522:
 1035                             	.LBB523:
 1036                             	.LBB524:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1037                             		.loc 4 214 34
 1038 023c 72 08 B8 00             		add	#0xb8, r0, r8
 1039                             		.balign 8,3,1
 1040                             	.L38:
 1041 0240 66 1A                   		mov.L	#1, r10
 1042 0242 66 07                   		mov.L	#0, r7
 1043                             		.balign 8,3,3
 1044                             	.L45:
 1045                             	.LVL101:
 1046                             	.LBE524:
 1047                             	.LBE523:
 1048                             	.LBB527:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1049                             		.loc 4 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1050                             		.loc 4 275 19 is_stmt 0
 1051 0244 FE 67 85                		mov.L	[r7,r8], r5
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1052                             		.loc 4 274 5
 1053 0247 62 17                   		add	#1, r7
 1054                             	.LVL102:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1055                             		.loc 4 275 19
 1056 0249 4F 5A                   		mul	r5, r10
 1057                             	.LVL103:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1058                             		.loc 4 274 23
 1059 024b 47 74                   		cmp	r7, r4
 1060 024d 2A F7                   		bgt	.L45
 1061                             	.LVL104:
 1062                             	.LBE527:
 1063                             	.LBE522:
 1064                             	.LBE521:
 1065                             	.LBE520:
 1066                             	.LBE519:
 1067                             	.LBB596:
 1068                             		.file 8 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/tens
   1:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
   3:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** you may not use this file except in compliance with the License.
   5:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** You may obtain a copy of the License at
   6:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
   7:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
   9:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** Unless required by applicable law or agreed to in writing, software
  10:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** See the License for the specific language governing permissions and
  13:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** limitations under the License.
  14:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** ==============================================================================*/
  15:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_DEQUANTIZE_H_
  16:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_DEQUANTIZE_H_
  17:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
  18:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** #include <limits.h>
  19:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
  20:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** #include <vector>
  21:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
  22:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** #include "tensorflow/lite/kernels/internal/common.h"
  23:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** #include "tensorflow/lite/kernels/internal/types.h"
  24:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
  25:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** namespace tflite {
  26:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
  27:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** namespace reference_ops {
  28:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
  29:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** // Dequantizes into a float without rounding.
  30:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** template <typename InputT, typename OutputT>
  31:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** inline void Dequantize(const tflite::DequantizationParams& op_params,
  32:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****                        const RuntimeShape& input_shape,
  33:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****                        const InputT* input_data,
  34:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****                        const RuntimeShape& output_shape, OutputT* output_data) {
  35:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****   int32_t zero_point = op_params.zero_point;
  36:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****   const double scale = op_params.scale;
  37:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
  38:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h **** 
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****   for (int i = 0; i < flat_size; i++) {
 1069                             		.loc 8 39 21
 1070 024f 61 0A                   		cmp	#0, r10
 1071 0251 2B 1A                   		ble	.L46
 1072 0253 EF 65                   		mov.L	r6, r5
 1073 0255 EF 96                   		mov.L	r9, r6
 1074                             	.LVL105:
 1075 0257 4B 5A                   		add	r5, r10
 1076                             	.LVL106:
 1077                             		.balign 8,3,3
 1078                             	.L47:
 1079                             	.LBB597:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const int32_t val = input_data[i];
 1080                             		.loc 8 40 19
 1081 0259 FD 38 57                		movu.B	[r5+], r7
 1082                             	.LVL107:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const OutputT result = static_cast<OutputT>(scale * (val - zero_point));
 1083                             		.loc 8 41 62
 1084 025c 43 27                   		sub	r2, r7
 1085                             	.LVL108:
 1086                             		.loc 8 41 55
 1087 025e FC 47 77                		itof	r7, r7
 1088                             		.loc 8 41 19
 1089 0261 FC 8F 37                		fmul	r3, r7
 1090                             	.LVL109:
  42:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 1091                             		.loc 8 42 5
 1092 0264 FD 22 67                		mov.L	r7, [r6+]
 1093                             	.LVL110:
 1094                             	.LBE597:
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const int32_t val = input_data[i];
 1095                             		.loc 8 39 21
 1096 0267 47 5A                   		cmp	r5, r10
 1097 0269 21 F0                   		bne	.L47
 1098                             	.LVL111:
 1099                             		.balign 8,3,1
 1100                             	.L46:
 1101                             	.LBE596:
 1102                             	.LBE518:
 1103                             	.LBE517:
 1104                             	.LBB610:
 1105                             	.LBB611:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1106                             		.loc 4 185 5 is_stmt 1
 1107 026b 61 5B                   		cmp	#5, r11
 1108 026d 2B 0F                   		ble	.L43
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1109                             		.loc 4 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1110                             		.loc 4 189 29 is_stmt 0
 1111 026f 61 0C                   		cmp	#0, r12
 1112 0271 20 12                   		beq	.L116
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1113                             		.loc 4 189 16
 1114 0273 EF C1                   		mov.L	r12, r1
 1115 0275 05 00 00 00             		bsr	__ZdaPv
 1116                             	.LVL112:
 1117 0279 ED 04 2D                		mov.L	180[r0], r4
 1118                             	.LVL113:
 1119                             		.balign 8,3,1
 1120                             	.L43:
 1121                             	.LBE611:
 1122                             	.LBE610:
 1123                             	.LBB613:
 1124                             	.LBB614:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1125                             		.loc 4 185 5 is_stmt 1
 1126 027c 61 54                   		cmp	#5, r4
 1127 027e 2B 0C                   		ble	.L103
 1128 0280 ED 01 2E                		mov.L	184[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1129                             		.loc 4 189 7
 1130                             	.LVL114:
 1131                             		.balign 8,3,1
 1132                             	.L116:
 1133                             	.LBE614:
 1134                             	.LBE613:
 1135                             	.LBB615:
 1136                             	.LBB616:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1137                             		.loc 4 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1138                             		.loc 4 189 29 is_stmt 0
 1139 0283 61 01                   		cmp	#0, r1
 1140 0285 15                      		beq	.L103
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1141                             		.loc 4 189 16
 1142 0286 05 00 00 00             		bsr	__ZdaPv
 1143                             	.LVL115:
 1144                             	.LBE616:
 1145                             	.LBE615:
 108:../src/tensorflow/lite/micro/kernels/dequantize.cc ****       default:
 1146                             		.loc 1 108 9 is_stmt 1
 1147                             		.balign 8,3,1
 1148                             	.L103:
 1149                             	.LBE858:
 148:../src/tensorflow/lite/micro/kernels/dequantize.cc **** }
 1150                             		.loc 1 148 10 is_stmt 0
 1151 028a 66 0A                   		mov.L	#0, r10
 1152                             		.loc 1 149 1
 1153 028c EF A1                   		mov.L	r10, r1
 1154 028e 3F 6D 40                		rtsd	#256, r6-r13
 1155                             	.LVL116:
 1156                             	.L145:
 1157                             	.LBB859:
 1158                             	.LBB618:
 1159                             	.LBB511:
 1160                             	.LBB451:
 1161                             	.LBB448:
 1162                             	.LBB446:
 1163                             	.LBB444:
 1164                             	.LBB441:
 1165                             	.LBB437:
 1166                             	.LBB433:
 1167                             	.LBB430:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1168                             		.loc 7 346 35
 1169 0291 F9 02 33 01 00 00 C0    		mov.L	#-1073741823, 204[r0]
 1170 0298 F9 06 36 FF             		mov.L	#-1, 216[r0]
 1171                             	.LVL117:
 1172                             		.balign 8,3,1
 1173                             	.L112:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1174                             		.loc 7 348 49
 1175 029c EF B9                   		mov.L	r11, r9
 1176 029e ED 0D 33                		mov.L	204[r0], r13
 1177 02a1 FF 27 AD                		add	r10, r13, r7
 1178                             	.LVL118:
 1179 02a4 06 A1 02 09 36          		adc 216[r0],r9
 1180 02a9 E7 09 33                		mov.L	r9, 204[r0]
 1181 02ac E7 07 34                		mov.L	r7, 208[r0]
 1182 02af 61 09                   		cmp	#0, r9
 1183 02b1 28 12                   		bge	.L110
 1184 02b3 70 7A FF FF FF 7F       		add	#0x7fffffff, r7, r10
 1185 02b9 FD 74 29 00             		adc	#0, r9
 1186 02bd E7 09 33                		mov.L	r9, 204[r0]
 1187 02c0 E7 0A 34                		mov.L	r10, 208[r0]
 1188                             		.balign 8,3,2
 1189                             	.L110:
 1190 02c3 ED 07 33                		mov.L	204[r0], r7
 1191 02c6 6C 17                   		shll	#1, r7
 1192 02c8 ED 09 34                		mov.L	208[r0], r9
 1193 02cb 69 F9                   		shlr	#31, r9
 1194 02cd 57 97                   		or	r9, r7
 1195 02cf 38 83 FE                		bra	.L109
 1196                             	.LVL119:
 1197                             	.L118:
 1198                             	.LBE430:
 1199                             	.LBE433:
 1200                             	.LBE437:
 1201                             	.LBE441:
 1202                             	.LBE444:
 1203                             	.LBE446:
 1204                             	.LBE448:
 1205                             	.LBE451:
 1206                             	.LBB452:
 1207                             	.LBB398:
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1208                             		.loc 4 189 7 is_stmt 1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1209                             		.loc 4 189 16 is_stmt 0
 1210 02d2 AA 81                   		mov.L	40[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1211                             		.loc 4 189 29
 1212 02d4 61 01                   		cmp	#0, r1
 1213 02d6 3A 0F FE                		beq	.L86
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1214                             		.loc 4 189 16
 1215 02d9 05 00 00 00             		bsr	__ZdaPv
 1216                             	.LVL120:
 1217 02dd 38 08 FE                		bra	.L86
 1218                             	.LVL121:
 1219                             	.L87:
 1220                             	.LBE398:
 1221                             	.LBE452:
 119:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Requantize(
 1222                             		.loc 1 119 7 is_stmt 1
 119:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Requantize(
 1223                             		.loc 1 119 26
 120:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), flat_size,
 1224                             		.loc 1 120 9
 1225                             	.LBB453:
 1226                             	.LBB454:
 1227                             		.loc 3 62 53 is_stmt 0
 1228 02e0 EC 61                   		mov.L	[r6], r1
 1229                             	.LVL122:
 1230                             	.LBE454:
 1231                             	.LBE453:
 120:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), flat_size,
 1232                             		.loc 1 120 34
 1233 02e2 ED DE 02                		mov.L	8[r13], r14
 122:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             data->quantization_params.zero_point, data->output_zero_point,
 1234                             		.loc 1 122 44
 1235 02e5 ED DA 03                		mov.L	12[r13], r10
 120:../src/tensorflow/lite/micro/kernels/dequantize.cc ****             tflite::micro::GetTensorData<int16_t>(input), flat_size,
 1236                             		.loc 1 120 34
 1237 02e8 ED D9 01                		mov.L	4[r13], r9
 1238 02eb ED D8 04                		mov.L	16[r13], r8
 1239                             	.LVL123:
 1240                             	.LBB455:
 1241                             	.LBB456:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1242                             		.loc 3 55 28
 1243 02ee EC CF                   		mov.L	[r12], r15
 1244                             	.LVL124:
 1245                             	.LBE456:
 1246                             	.LBE455:
 1247                             	.LBB457:
 1248                             	.LBB458:
 1249                             	.LBB459:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 1250                             		.loc 5 52 21
 1251 02f0 61 0B                   		cmp	#0, r11
 1252 02f2 2B 98                   		ble	.L103
 1253                             	.LBB460:
 1254                             	.LBB461:
 1255                             	.LBB462:
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 1256                             		.loc 6 162 31
 1257 02f4 FC 07 A7                		neg	r10, r7
 1258 02f7 61 0A                   		cmp	#0, r10
 1259 02f9 2B 04                   		ble 1f
 1260 02fb 66 07                   		mov #0, r7
 1261                             	1:
 1262                             	.LBB463:
 1263                             	.LBB464:
 1264                             		.loc 7 371 50
 1265 02fd 71 75 E0                		add	#-32, r7, r5
 1266 0300 26 05 38 F0 03          		bn	.L91
 1267 0305 66 06                   		mov.L	#0, r6
 1268                             	.LVL125:
 1269 0307 03                      		.balign 8,3,3
 1270                             	.L92:
 1271 0308 FD 74 4A 00             		max	#0, r10
 1272                             	.LVL126:
 1273                             		.loc 7 371 63
 1274 030c 60 16                   		sub	#1, r6
 1275                             	.LBB465:
 1276                             	.LBB466:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1277                             		.loc 7 142 15
 1278 030e FD A1 6D                		shar	#1, r6, r13
 1279                             	.LVL127:
 1280 0311 75 57 1F                		cmp	#31, r7
 1281 0314 2B 05 38 29 04          		bgt	.L93
 1282 0319 4B BB                   		add	r11, r11
 1283                             	.LVL128:
 1284 031b FF 24 B1                		add	r11, r1, r4
 1285 031e E7 0D 35                		mov.L	r13, 212[r0]
 1286 0321 2E 39                   		bra	.L94
 1287                             	.LVL129:
 1288                             	.L95:
 1289                             	.LBE466:
 1290                             	.LBE465:
 1291                             	.LBE464:
 1292                             	.LBE463:
 1293                             	.LBB482:
 1294                             	.LBB483:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 1295                             		.loc 7 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 1296                             		.loc 7 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1297                             		.loc 7 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1298                             		.loc 7 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1299                             		.loc 7 346 35 is_stmt 0
 1300 0323 61 0C                   		cmp	#0, r12
 1301 0325 29 74                   		blt	.L142
 1302                             	.LVL130:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 1303                             		.loc 7 347 3 is_stmt 1
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1304                             		.loc 7 349 3
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1305                             		.loc 7 348 40 is_stmt 0
 1306 0327 EF C5                   		mov.L	r12, r5
 1307                             	.LVL131:
 1308 0329 70 BB 00 00 00 40       		add	#0x40000000, r11
 1309 032f FD 74 25 00             		adc	#0, r5
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1310                             		.loc 7 348 49
 1311 0333 6C 15                   		shll	#1, r5
 1312 0335 FD 9F B3                		shlr	#31, r11, r3
 1313 0338 57 35                   		or	r3, r5
 1314                             	.LVL132:
 1315                             		.balign 8,3,2
 1316                             	.L98:
 1317                             	.LBE483:
 1318                             	.LBE482:
 1319                             	.LBB485:
 1320                             	.LBB479:
 1321                             	.LBB467:
 1322                             	.LBB468:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1323                             		.loc 7 71 14
 1324 033a FD 9F 53                		shlr	#31, r5, r3
 1325                             	.LBE468:
 1326                             	.LBE467:
 1327                             	.LBB469:
 1328                             	.LBB470:
 1329 033d FF 4B 56                		and	r5, r6, r11
 1330                             	.LVL133:
 1331                             	.LBE470:
 1332                             	.LBE469:
 1333                             	.LBB471:
 1334                             	.LBB472:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1335                             		.loc 7 95 14
 1336 0340 06 89 03 35             		add	212[r0], r3
 1337                             	.LBE472:
 1338                             	.LBE471:
 1339                             	.LBB473:
 1340                             	.LBB474:
 142:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1341                             		.loc 7 142 15
 1342 0344 EF 52                   		mov.L	r5, r2
 1343 0346 FD 61 72                		shar	r7, r2
 1344                             	.LBE474:
 1345                             	.LBE473:
 1346                             	.LBB475:
 1347                             	.LBB476:
  71:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1348                             		.loc 7 71 14
 1349 0349 47 B3                   		cmp	r11, r3
 1350 034b FC DB 59                		sclt.L	r5
 1351                             	.LVL134:
 1352                             	.LBE476:
 1353                             	.LBE475:
 1354                             	.LBB477:
 1355                             	.LBB478:
  95:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1356                             		.loc 7 95 14
 1357 034e 4B 25                   		add	r2, r5
 1358                             	.LBE478:
 1359                             	.LBE477:
 1360                             	.LBE479:
 1361                             	.LBE485:
 1362                             	.LBE462:
 1363                             	.LBE461:
  56:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****         output_zeropoint;
 1364                             		.loc 5 56 62
 1365 0350 4B 85                   		add	r8, r5
 1366                             		.loc 5 60 5
 1367 0352 FD 22 F5                		mov.L	r5, [r15+]
 1368                             	.LBE460:
  52:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t input = input_data[i] - input_zeropoint;
 1369                             		.loc 5 52 21
 1370 0355 47 41                   		cmp	r4, r1
 1371 0357 3A 33 FF                		beq	.L103
 1372                             	.LVL135:
 1373                             		.balign 8,3,5
 1374                             	.L94:
 1375                             	.LBB497:
 1376                             	.LBB493:
 1377                             	.LBB489:
 159:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 1378                             		.loc 6 159 3 is_stmt 1
 160:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 1379                             		.loc 6 160 3
 161:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 1380                             		.loc 6 161 3
 162:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 1381                             		.loc 6 162 3
 1382                             		.loc 6 163 3
 1383                             	.LBE489:
 1384                             	.LBE493:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 1385                             		.loc 5 53 37 is_stmt 0
 1386 035a FD 29 15                		mov.W	[r1+], r5
 1387                             	.LVL136:
  53:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\requantize.h ****     const int32_t output =
 1388                             		.loc 5 53 19
 1389 035d 43 95                   		sub	r9, r5
 1390                             	.LVL137:
 1391                             	.LBB494:
 1392                             	.LBB490:
 1393                             		.loc 6 163 29
 1394 035f FD 62 A5                		shll	r10, r5
 1395                             	.LVL138:
 1396                             	.LBB486:
 1397                             	.LBB484:
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1398                             		.loc 7 342 3 is_stmt 1
 1399 0362 EF 5B                   		mov.L	r5, r11
 1400 0364 FC 1B EB                		emul	r14, r11
 1401 0367 EF B2                   		mov.L	r11, r2
 1402 0369 EF C3                   		mov.L	r12, r3
 342:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1403                             		.loc 7 342 26 is_stmt 0
 1404 036b 47 5E                   		cmp	r5, r14
 1405 036d 21 B6                   		bne	.L95
 1406                             	.LVL139:
 343:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 1407                             		.loc 7 343 3 is_stmt 1
 344:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 1408                             		.loc 7 344 3
 345:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1409                             		.loc 7 345 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1410                             		.loc 7 346 3
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1411                             		.loc 7 346 35 is_stmt 0
 1412 036f 61 0C                   		cmp	#0, r12
 1413 0371 FB C2 01 00 00 C0       		mov.L	#-1073741823, r12
 1414 0377 29 08                   		blt 1f
 1415 0379 FB C2 00 00 00 40       		mov #0x40000000, r12
 1416                             	1:
 1417 037f E7 0C 34                		mov.L	r12, 208[r0]
 1418 0382 FB 56 FF                		mov.L	#-1, r5
 1419                             	.LVL140:
 1420 0385 29 04                   		blt 1f
 1421 0387 66 05                   		mov #0, r5
 1422                             	1:
 347:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 1423                             		.loc 7 347 3 is_stmt 1
 1424                             	.LVL141:
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1425                             		.loc 7 349 3
 349:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h **** }
 1426                             		.loc 7 349 19 is_stmt 0
 1427 0389 74 0E 00 00 00 80       		cmp	#-2147483648, r14
 1428 038f 21 14                   		bne	.L101
 1429 0391 FB 52 FF FF FF 7F       		mov.L	#0x7fffffff, r5
 1430                             	.LVL142:
 1431 0397 2E A3                   		bra	.L98
 1432                             	.LVL143:
 1433                             	.L142:
 346:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1434                             		.loc 7 346 35
 1435 0399 F9 02 34 01 00 00 C0    		mov.L	#-1073741823, 208[r0]
 1436 03a0 FB 56 FF                		mov.L	#-1, r5
 1437                             	.LVL144:
 1438                             		.balign 8,3,2
 1439                             	.L101:
 348:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1440                             		.loc 7 348 49
 1441 03a3 ED 0B 34                		mov.L	208[r0], r11
 1442 03a6 FF 2D 2B                		add	r2, r11, r13
 1443 03a9 FC 0B 35                		adc	r3, r5
 1444 03ac E7 0D 33                		mov.L	r13, 204[r0]
 1445 03af 26 0F                   		bpz	.L99
 1446 03b1 70 D2 FF FF FF 7F       		add	#0x7fffffff, r13, r2
 1447 03b7 FD 74 25 00             		adc	#0, r5
 1448 03bb E7 02 33                		mov.L	r2, 204[r0]
 1449                             		.balign 8,3,1
 1450                             	.L99:
 1451 03be 6C 15                   		shll	#1, r5
 1452 03c0 ED 0B 33                		mov.L	204[r0], r11
 1453 03c3 69 FB                   		shlr	#31, r11
 1454 03c5 57 B5                   		or	r11, r5
 1455 03c7 38 73 FF                		bra	.L98
 1456                             	.LVL145:
 1457                             	.L196:
 1458                             	.LBE484:
 1459                             	.LBE486:
 1460                             	.LBE490:
 1461                             	.LBE494:
 1462                             	.LBE497:
 1463                             	.LBE459:
 1464                             	.LBE458:
 1465                             	.LBE457:
 1466                             	.LBE511:
 1467                             	.LBE618:
  88:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Dequantize(data->quantization_params,
 1468                             		.loc 1 88 7 is_stmt 1
  89:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(input),
 1469                             		.loc 1 89 9
  90:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<uint8_t>(input),
 1470                             		.loc 1 90 64 is_stmt 0
 1471 03ca 72 0F B4 00             		add	#0xb4, r0, r15
 1472 03ce EF 61                   		mov.L	r6, r1
 1473 03d0 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1474                             	.LVL146:
  92:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<float>(output));
 1475                             		.loc 1 92 64
 1476 03d4 72 0F 9C 00             		add	#0x9c, r0, r15
 1477 03d8 EF C1                   		mov.L	r12, r1
 1478                             	.LBB619:
 1479                             	.LBB620:
 1480                             		.loc 3 62 53
 1481 03da EC 66                   		mov.L	[r6], r6
 1482                             	.LVL147:
 1483                             	.LBE620:
 1484                             	.LBE619:
  92:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<float>(output));
 1485                             		.loc 1 92 64
 1486 03dc 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1487                             	.LVL148:
 1488                             	.LBB621:
 1489                             	.LBB605:
 1490                             	.LBB599:
 1491                             	.LBB591:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1492                             		.loc 4 489 3
 1493 03e0 ED 04 2D                		mov.L	180[r0], r4
 1494 03e3 ED 0B 27                		mov.L	156[r0], r11
 1495                             	.LBE591:
 1496                             	.LBE599:
 1497                             	.LBE605:
 1498                             	.LBE621:
 1499                             	.LBB622:
 1500                             	.LBB623:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1501                             		.loc 3 55 28
 1502 03e6 EC C9                   		mov.L	[r12], r9
 1503                             	.LVL149:
 1504                             	.LBE623:
 1505                             	.LBE622:
  89:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(input),
 1506                             		.loc 1 89 34
 1507 03e8 EC D3                   		mov.L	[r13], r3
 1508 03ea ED D2 01                		mov.L	4[r13], r2
 1509                             	.LVL150:
 1510                             	.LBB624:
 1511                             	.LBB606:
 1512                             	.LBB600:
 1513                             	.LBB592:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1514                             		.loc 4 489 3 is_stmt 1
 1515                             	.LBE592:
 1516                             	.LBE600:
 1517                             	.LBE606:
 1518                             	.LBE624:
 1519                             	.LBE859:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1520                             		.loc 4 194 44
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1521                             		.loc 4 194 44
 1522                             	.LBB860:
 1523                             	.LBB625:
 1524                             	.LBB607:
 1525                             	.LBB601:
 1526                             	.LBB593:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1527                             		.loc 4 489 3 is_stmt 0
 1528 03ed 47 B4                   		cmp	r11, r4
 1529 03ef 3B 49 FE                		bne	.L31
 1530                             	.LVL151:
 1531                             	.LBB532:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1532                             		.loc 4 491 21
 1533 03f2 61 04                   		cmp	#0, r4
 1534 03f4 2A 05 38 0F 03          		ble	.L36
 1535                             	.LBB533:
 1536                             	.LBB534:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1537                             		.loc 4 198 36
 1538 03f9 ED 01 2E                		mov.L	184[r0], r1
 1539                             	.LBE534:
 1540                             	.LBE533:
 1541                             	.LBB548:
 1542                             	.LBB549:
 1543 03fc ED 0C 28                		mov.L	160[r0], r12
 1544                             	.LVL152:
 1545                             	.LBE549:
 1546                             	.LBE548:
 1547                             	.LBB562:
 1548                             	.LBB535:
 1549 03ff EF 18                   		mov.L	r1, r8
 1550 0401 61 54                   		cmp	#5, r4
 1551 0403 2A 05 38 9C 02          		ble	.L197
 1552                             	.LBE535:
 1553                             	.LBE562:
 1554                             		.loc 4 492 5 is_stmt 1
 1555                             	.LVL153:
 1556                             	.LBB563:
 1557                             	.LBB536:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1558                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1559                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1560                             		.loc 4 198 5
 1561                             	.LBE536:
 1562                             	.LBE563:
 1563                             	.LBB564:
 1564                             	.LBB550:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1565                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1566                             		.loc 4 197 5
 1567                             	.LBE550:
 1568                             	.LBE564:
 1569                             		.loc 4 492 5 is_stmt 0
 1570 0408 EC 17                   		mov.L	[r1], r7
 1571 040a 06 84 C7                		cmp	[r12].L, r7
 1572 040d 3B 2B FE                		bne	.L31
 1573                             	.LVL154:
 1574                             		.loc 4 492 5 is_stmt 1
 1575                             	.LBB565:
 1576                             	.LBB537:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1577                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1578                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1579                             		.loc 4 198 5
 1580                             	.LBE537:
 1581                             	.LBE565:
 1582                             	.LBB566:
 1583                             	.LBB551:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1584                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1585                             		.loc 4 197 5
 1586                             	.LBE551:
 1587                             	.LBE566:
 1588                             		.loc 4 492 5 is_stmt 0
 1589 0410 ED C7 01                		mov.L	4[r12], r7
 1590 0413 06 85 17 01             		cmp	4[r1].L, r7
 1591 0417 3B 21 FE                		bne	.L31
 1592                             	.LVL155:
 1593                             		.loc 4 492 5 is_stmt 1
 1594                             	.LBB567:
 1595                             	.LBB538:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1596                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1597                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1598                             		.loc 4 198 5
 1599                             	.LBE538:
 1600                             	.LBE567:
 1601                             	.LBB568:
 1602                             	.LBB552:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1603                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1604                             		.loc 4 197 5
 1605                             	.LBE552:
 1606                             	.LBE568:
 1607                             		.loc 4 492 5 is_stmt 0
 1608 041a ED C7 02                		mov.L	8[r12], r7
 1609 041d 06 85 17 02             		cmp	8[r1].L, r7
 1610 0421 3B 17 FE                		bne	.L31
 1611                             	.LVL156:
 1612                             		.loc 4 492 5 is_stmt 1
 1613                             	.LBB569:
 1614                             	.LBB539:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1615                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1616                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1617                             		.loc 4 198 5
 1618                             	.LBE539:
 1619                             	.LBE569:
 1620                             	.LBB570:
 1621                             	.LBB553:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1622                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1623                             		.loc 4 197 5
 1624                             	.LBE553:
 1625                             	.LBE570:
 1626                             		.loc 4 492 5 is_stmt 0
 1627 0424 A8 9F                   		mov.L	12[r1], r7
 1628 0426 06 85 C7 03             		cmp	12[r12].L, r7
 1629 042a 3B 0E FE                		bne	.L31
 1630                             	.LVL157:
 1631                             		.loc 4 492 5 is_stmt 1
 1632                             	.LBB571:
 1633                             	.LBB540:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1634                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1635                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1636                             		.loc 4 198 5
 1637                             	.LBE540:
 1638                             	.LBE571:
 1639                             	.LBB572:
 1640                             	.LBB554:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1641                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1642                             		.loc 4 197 5
 1643                             	.LBE554:
 1644                             	.LBE572:
 1645                             		.loc 4 492 5 is_stmt 0
 1646 042d A9 17                   		mov.L	16[r1], r7
 1647 042f 06 85 C7 04             		cmp	16[r12].L, r7
 1648 0433 3B 05 FE                		bne	.L31
 1649                             	.LVL158:
 1650                             		.loc 4 492 5 is_stmt 1
 1651                             	.LBB573:
 1652                             	.LBB541:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1653                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1654                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1655                             		.loc 4 198 5
 1656                             	.LBE541:
 1657                             	.LBE573:
 1658                             	.LBB574:
 1659                             	.LBB555:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1660                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1661                             		.loc 4 197 5
 1662                             	.LBE555:
 1663                             	.LBE574:
 1664                             		.loc 4 492 5 is_stmt 0
 1665 0436 A9 1F                   		mov.L	20[r1], r7
 1666 0438 06 85 C7 05             		cmp	20[r12].L, r7
 1667 043c 3B FC FD                		bne	.L31
 1668                             	.LVL159:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1669                             		.loc 4 491 21
 1670 043f 61 64                   		cmp	#6, r4
 1671 0441 3A FF FD                		beq	.L38
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1672                             		.loc 4 491 3
 1673 0444 66 67                   		mov.L	#6, r7
 1674                             	.LVL160:
 1675 0446 EF 00                   		.balign 8,3,3
 1676                             	.L40:
 1677                             		.loc 4 492 5 is_stmt 1
 1678                             	.LBB575:
 1679                             	.LBB542:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1680                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1681                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1682                             		.loc 4 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1683                             		.loc 4 198 34 is_stmt 0
 1684 0448 FE 67 1A                		mov.L	[r7,r1], r10
 1685                             	.LVL161:
 1686                             	.LBE542:
 1687                             	.LBE575:
 1688                             	.LBB576:
 1689                             	.LBB556:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1690                             		.loc 4 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1691                             		.loc 4 197 5
 1692 044b 47 7B                   		cmp	r7, r11
 1693 044d 3A EB FD                		beq	.L31
 1694                             	.LVL162:
 1695                             	.LBE556:
 1696                             	.LBE576:
 1697                             		.loc 4 492 5 is_stmt 0
 1698 0450 FE 67 C5                		mov.L	[r7,r12], r5
 1699 0453 47 A5                   		cmp	r10, r5
 1700 0455 3B E3 FD                		bne	.L31
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1701                             		.loc 4 491 3
 1702 0458 62 17                   		add	#1, r7
 1703                             	.LVL163:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1704                             		.loc 4 491 21
 1705 045a 47 74                   		cmp	r7, r4
 1706 045c 21 EC                   		bne	.L40
 1707 045e 38 E2 FD                		bra	.L38
 1708                             	.LVL164:
 1709                             	.L34:
 1710                             	.LBE532:
 1711                             	.LBE593:
 1712                             	.LBE601:
 1713                             	.LBE607:
 1714                             	.LBE625:
  95:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Dequantize(data->quantization_params,
 1715                             		.loc 1 95 7 is_stmt 1
  96:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(input),
 1716                             		.loc 1 96 9
  97:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<int8_t>(input),
 1717                             		.loc 1 97 64 is_stmt 0
 1718 0461 72 0F 84 00             		add	#0x84, r0, r15
 1719 0465 EF 61                   		mov.L	r6, r1
 1720 0467 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1721                             	.LVL165:
  99:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<float>(output));
 1722                             		.loc 1 99 64
 1723 046b 71 0F 6C                		add	#0x6c, r0, r15
 1724 046e EF C1                   		mov.L	r12, r1
 1725                             	.LBB626:
 1726                             	.LBB627:
 1727                             		.loc 3 62 53
 1728 0470 EC 66                   		mov.L	[r6], r6
 1729                             	.LVL166:
 1730                             	.LBE627:
 1731                             	.LBE626:
  99:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<float>(output));
 1732                             		.loc 1 99 64
 1733 0472 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1734                             	.LVL167:
 1735                             	.LBB628:
 1736                             	.LBB629:
 1737                             	.LBB630:
 1738                             	.LBB631:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1739                             		.loc 4 489 3
 1740 0476 ED 04 21                		mov.L	132[r0], r4
 1741 0479 ED 0B 1B                		mov.L	108[r0], r11
 1742                             	.LBE631:
 1743                             	.LBE630:
 1744                             	.LBE629:
 1745                             	.LBE628:
 1746                             	.LBB725:
 1747                             	.LBB726:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1748                             		.loc 3 55 28
 1749 047c EC C9                   		mov.L	[r12], r9
 1750                             	.LVL168:
 1751                             	.LBE726:
 1752                             	.LBE725:
  96:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(input),
 1753                             		.loc 1 96 34
 1754 047e EC D3                   		mov.L	[r13], r3
 1755 0480 ED D2 01                		mov.L	4[r13], r2
 1756                             	.LVL169:
 1757                             	.LBB727:
 1758                             	.LBB720:
 1759                             	.LBB711:
 1760                             	.LBB706:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1761                             		.loc 4 489 3 is_stmt 1
 1762                             	.LBE706:
 1763                             	.LBE711:
 1764                             	.LBE720:
 1765                             	.LBE727:
 1766                             	.LBE860:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1767                             		.loc 4 194 44
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 1768                             		.loc 4 194 44
 1769                             	.LBB861:
 1770                             	.LBB728:
 1771                             	.LBB721:
 1772                             	.LBB712:
 1773                             	.LBB707:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1774                             		.loc 4 489 3 is_stmt 0
 1775 0483 47 B4                   		cmp	r11, r4
 1776 0485 3B B3 FD                		bne	.L31
 1777                             	.LVL170:
 1778                             	.LBB632:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1779                             		.loc 4 491 21
 1780 0488 61 04                   		cmp	#0, r4
 1781 048a 2A 05 38 88 02          		ble	.L51
 1782                             	.LBB633:
 1783                             	.LBB634:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1784                             		.loc 4 198 36
 1785 048f ED 01 22                		mov.L	136[r0], r1
 1786                             	.LBE634:
 1787                             	.LBE633:
 1788                             	.LBB648:
 1789                             	.LBB649:
 1790 0492 ED 0C 1C                		mov.L	112[r0], r12
 1791                             	.LVL171:
 1792                             	.LBE649:
 1793                             	.LBE648:
 1794                             	.LBB662:
 1795                             	.LBB635:
 1796 0495 EF 18                   		mov.L	r1, r8
 1797 0497 61 54                   		cmp	#5, r4
 1798 0499 2A 05 38 C0 01          		ble	.L198
 1799                             	.LBE635:
 1800                             	.LBE662:
 1801                             		.loc 4 492 5 is_stmt 1
 1802                             	.LVL172:
 1803                             	.LBB663:
 1804                             	.LBB636:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1805                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1806                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1807                             		.loc 4 198 5
 1808                             	.LBE636:
 1809                             	.LBE663:
 1810                             	.LBB664:
 1811                             	.LBB650:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1812                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1813                             		.loc 4 197 5
 1814                             	.LBE650:
 1815                             	.LBE664:
 1816                             		.loc 4 492 5 is_stmt 0
 1817 049e EC C7                   		mov.L	[r12], r7
 1818 04a0 06 84 17                		cmp	[r1].L, r7
 1819 04a3 3B 95 FD                		bne	.L31
 1820                             	.LVL173:
 1821                             		.loc 4 492 5 is_stmt 1
 1822                             	.LBB665:
 1823                             	.LBB637:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1824                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1825                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1826                             		.loc 4 198 5
 1827                             	.LBE637:
 1828                             	.LBE665:
 1829                             	.LBB666:
 1830                             	.LBB651:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1831                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1832                             		.loc 4 197 5
 1833                             	.LBE651:
 1834                             	.LBE666:
 1835                             		.loc 4 492 5 is_stmt 0
 1836 04a6 ED C7 01                		mov.L	4[r12], r7
 1837 04a9 06 85 17 01             		cmp	4[r1].L, r7
 1838 04ad 3B 8B FD                		bne	.L31
 1839                             	.LVL174:
 1840                             		.loc 4 492 5 is_stmt 1
 1841                             	.LBB667:
 1842                             	.LBB638:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1843                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1844                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1845                             		.loc 4 198 5
 1846                             	.LBE638:
 1847                             	.LBE667:
 1848                             	.LBB668:
 1849                             	.LBB652:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1850                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1851                             		.loc 4 197 5
 1852                             	.LBE652:
 1853                             	.LBE668:
 1854                             		.loc 4 492 5 is_stmt 0
 1855 04b0 ED C7 02                		mov.L	8[r12], r7
 1856 04b3 06 85 17 02             		cmp	8[r1].L, r7
 1857 04b7 3B 81 FD                		bne	.L31
 1858                             	.LVL175:
 1859                             		.loc 4 492 5 is_stmt 1
 1860                             	.LBB669:
 1861                             	.LBB639:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1862                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1863                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1864                             		.loc 4 198 5
 1865                             	.LBE639:
 1866                             	.LBE669:
 1867                             	.LBB670:
 1868                             	.LBB653:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1869                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1870                             		.loc 4 197 5
 1871                             	.LBE653:
 1872                             	.LBE670:
 1873                             		.loc 4 492 5 is_stmt 0
 1874 04ba ED C7 03                		mov.L	12[r12], r7
 1875 04bd 06 85 17 03             		cmp	12[r1].L, r7
 1876 04c1 3B 77 FD                		bne	.L31
 1877                             	.LVL176:
 1878                             		.loc 4 492 5 is_stmt 1
 1879                             	.LBB671:
 1880                             	.LBB640:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1881                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1882                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1883                             		.loc 4 198 5
 1884                             	.LBE640:
 1885                             	.LBE671:
 1886                             	.LBB672:
 1887                             	.LBB654:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1888                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1889                             		.loc 4 197 5
 1890                             	.LBE654:
 1891                             	.LBE672:
 1892                             		.loc 4 492 5 is_stmt 0
 1893 04c4 ED C7 04                		mov.L	16[r12], r7
 1894 04c7 06 85 17 04             		cmp	16[r1].L, r7
 1895 04cb 3B 6D FD                		bne	.L31
 1896                             	.LVL177:
 1897                             		.loc 4 492 5 is_stmt 1
 1898                             	.LBB673:
 1899                             	.LBB641:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1900                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1901                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1902                             		.loc 4 198 5
 1903                             	.LBE641:
 1904                             	.LBE673:
 1905                             	.LBB674:
 1906                             	.LBB655:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1907                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1908                             		.loc 4 197 5
 1909                             	.LBE655:
 1910                             	.LBE674:
 1911                             		.loc 4 492 5 is_stmt 0
 1912 04ce ED C7 05                		mov.L	20[r12], r7
 1913 04d1 06 85 17 05             		cmp	20[r1].L, r7
 1914 04d5 3B 63 FD                		bne	.L31
 1915                             	.LVL178:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1916                             		.loc 4 491 21
 1917 04d8 61 64                   		cmp	#6, r4
 1918 04da 20 1C                   		beq	.L53
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1919                             		.loc 4 491 3
 1920 04dc 66 67                   		mov.L	#6, r7
 1921                             	.LVL179:
 1922 04de EF 00                   		.balign 8,3,3
 1923                             	.L55:
 1924                             		.loc 4 492 5 is_stmt 1
 1925                             	.LBB675:
 1926                             	.LBB642:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1927                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1928                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1929                             		.loc 4 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1930                             		.loc 4 198 34 is_stmt 0
 1931 04e0 FE 67 1A                		mov.L	[r7,r1], r10
 1932                             	.LVL180:
 1933                             	.LBE642:
 1934                             	.LBE675:
 1935                             	.LBB676:
 1936                             	.LBB656:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 1937                             		.loc 4 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1938                             		.loc 4 197 5
 1939 04e3 47 7B                   		cmp	r7, r11
 1940 04e5 3A 53 FD                		beq	.L31
 1941                             	.LVL181:
 1942                             	.LBE656:
 1943                             	.LBE676:
 1944                             		.loc 4 492 5 is_stmt 0
 1945 04e8 FE 67 C5                		mov.L	[r7,r12], r5
 1946 04eb 47 A5                   		cmp	r10, r5
 1947 04ed 3B 4B FD                		bne	.L31
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1948                             		.loc 4 491 3
 1949 04f0 62 17                   		add	#1, r7
 1950                             	.LVL182:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1951                             		.loc 4 491 21
 1952 04f2 47 74                   		cmp	r7, r4
 1953 04f4 21 EC                   		bne	.L55
 1954                             	.LVL183:
 1955                             		.balign 8,3,1
 1956                             	.L53:
 1957                             	.LBE632:
 1958                             	.LBB687:
 1959                             	.LBB688:
 1960                             	.LBB689:
 1961                             	.LBB690:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 1962                             		.loc 4 214 34
 1963 04f6 66 1A                   		mov.L	#1, r10
 1964 04f8 66 07                   		mov.L	#0, r7
 1965                             		.balign 8,3,3
 1966                             	.L60:
 1967                             	.LVL184:
 1968                             	.LBE690:
 1969                             	.LBE689:
 1970                             	.LBB694:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1971                             		.loc 4 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1972                             		.loc 4 275 19 is_stmt 0
 1973 04fa FE 67 85                		mov.L	[r7,r8], r5
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1974                             		.loc 4 274 5
 1975 04fd 62 17                   		add	#1, r7
 1976                             	.LVL185:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 1977                             		.loc 4 275 19
 1978 04ff 4F 5A                   		mul	r5, r10
 1979                             	.LVL186:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1980                             		.loc 4 274 23
 1981 0501 47 74                   		cmp	r7, r4
 1982 0503 2A F7                   		bgt	.L60
 1983                             	.LVL187:
 1984                             	.LBE694:
 1985                             	.LBE688:
 1986                             	.LBE687:
 1987                             	.LBE707:
 1988                             	.LBE712:
 1989                             	.LBB713:
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const int32_t val = input_data[i];
 1990                             		.loc 8 39 21
 1991 0505 61 0A                   		cmp	#0, r10
 1992 0507 2B 1B                   		ble	.L61
 1993 0509 EF 65                   		mov.L	r6, r5
 1994 050b EF 96                   		mov.L	r9, r6
 1995                             	.LVL188:
 1996 050d 4B 5A                   		add	r5, r10
 1997                             	.LVL189:
 1998 050f 03                      		.balign 8,3,5
 1999                             	.L62:
 2000                             	.LBB714:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const OutputT result = static_cast<OutputT>(scale * (val - zero_point));
 2001                             		.loc 8 40 19
 2002 0510 FD 28 57                		mov.B	[r5+], r7
 2003                             	.LVL190:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2004                             		.loc 8 41 62
 2005 0513 43 27                   		sub	r2, r7
 2006                             	.LVL191:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2007                             		.loc 8 41 55
 2008 0515 FC 47 77                		itof	r7, r7
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2009                             		.loc 8 41 19
 2010 0518 FC 8F 37                		fmul	r3, r7
 2011                             	.LVL192:
 2012                             		.loc 8 42 5
 2013 051b FD 22 67                		mov.L	r7, [r6+]
 2014                             	.LVL193:
 2015                             	.LBE714:
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const int32_t val = input_data[i];
 2016                             		.loc 8 39 21
 2017 051e 47 A5                   		cmp	r10, r5
 2018 0520 21 F0                   		bne	.L62
 2019                             	.LVL194:
 2020                             		.balign 8,3,1
 2021                             	.L61:
 2022                             	.LBE713:
 2023                             	.LBE721:
 2024                             	.LBE728:
 2025                             	.LBB729:
 2026                             	.LBB730:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2027                             		.loc 4 185 5 is_stmt 1
 2028 0522 61 5B                   		cmp	#5, r11
 2029 0524 2B 10                   		ble	.L58
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2030                             		.loc 4 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2031                             		.loc 4 189 29 is_stmt 0
 2032 0526 61 0C                   		cmp	#0, r12
 2033 0528 3A 5B FD                		beq	.L116
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2034                             		.loc 4 189 16
 2035 052b EF C1                   		mov.L	r12, r1
 2036 052d 05 00 00 00             		bsr	__ZdaPv
 2037                             	.LVL195:
 2038 0531 ED 04 21                		mov.L	132[r0], r4
 2039                             	.LVL196:
 2040                             		.balign 8,3,1
 2041                             	.L58:
 2042                             	.LBE730:
 2043                             	.LBE729:
 2044                             	.LBB732:
 2045                             	.LBB733:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2046                             		.loc 4 185 5 is_stmt 1
 2047 0534 61 54                   		cmp	#5, r4
 2048 0536 2A 05 38 52 FD          		ble	.L103
 2049 053b ED 01 22                		mov.L	136[r0], r1
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2050                             		.loc 4 189 7
 2051 053e 38 45 FD                		bra	.L116
 2052                             	.LVL197:
 2053                             	.L33:
 2054                             	.LBE733:
 2055                             	.LBE732:
 102:../src/tensorflow/lite/micro/kernels/dequantize.cc ****         reference_ops::Dequantize(data->quantization_params,
 2056                             		.loc 1 102 7
 103:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(input),
 2057                             		.loc 1 103 9
 104:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<int16_t>(input),
 2058                             		.loc 1 104 64 is_stmt 0
 2059 0541 71 0F 54                		add	#0x54, r0, r15
 2060 0544 EF 61                   		mov.L	r6, r1
 2061 0546 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2062                             	.LVL198:
 106:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<float>(output));
 2063                             		.loc 1 106 64
 2064 054a 71 0F 3C                		add	#60, r0, r15
 2065 054d EF C1                   		mov.L	r12, r1
 2066                             	.LBB734:
 2067                             	.LBB735:
 2068                             		.loc 3 62 53
 2069 054f EC 66                   		mov.L	[r6], r6
 2070                             	.LVL199:
 2071                             	.LBE735:
 2072                             	.LBE734:
 106:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorData<float>(output));
 2073                             		.loc 1 106 64
 2074 0551 05 00 00 00             		bsr	__ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 2075                             	.LVL200:
 2076                             	.LBB736:
 2077                             	.LBB737:
 2078                             	.LBB738:
 2079                             	.LBB739:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 2080                             		.loc 4 489 3
 2081 0555 AD 0D                   		mov.L	84[r0], r5
 2082 0557 AB 8A                   		mov.L	60[r0], r2
 2083                             	.LBE739:
 2084                             	.LBE738:
 2085                             	.LBE737:
 2086                             	.LBE736:
 2087                             	.LBB833:
 2088                             	.LBB834:
  55:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2089                             		.loc 3 55 28
 2090 0559 EC CC                   		mov.L	[r12], r12
 2091                             	.LVL201:
 2092                             	.LBE834:
 2093                             	.LBE833:
 103:../src/tensorflow/lite/micro/kernels/dequantize.cc ****                                   tflite::micro::GetTensorShape(input),
 2094                             		.loc 1 103 34
 2095 055b EC D4                   		mov.L	[r13], r4
 2096 055d ED D3 01                		mov.L	4[r13], r3
 2097                             	.LVL202:
 2098                             	.LBB835:
 2099                             	.LBB828:
 2100                             	.LBB819:
 2101                             	.LBB814:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 2102                             		.loc 4 489 3 is_stmt 1
 2103                             	.LBE814:
 2104                             	.LBE819:
 2105                             	.LBE828:
 2106                             	.LBE835:
 2107                             	.LBE861:
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2108                             		.loc 4 194 44
 194:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 2109                             		.loc 4 194 44
 2110                             	.LBB862:
 2111                             	.LBB836:
 2112                             	.LBB829:
 2113                             	.LBB820:
 2114                             	.LBB815:
 489:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 2115                             		.loc 4 489 3 is_stmt 0
 2116 0560 47 25                   		cmp	r2, r5
 2117 0562 3B D6 FC                		bne	.L31
 2118                             	.LVL203:
 2119                             	.LBB740:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2120                             		.loc 4 491 21
 2121 0565 61 05                   		cmp	#0, r5
 2122 0567 2A 05 38 BA 01          		ble	.L65
 2123                             	.LBB741:
 2124                             	.LBB742:
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2125                             		.loc 4 198 36
 2126 056c AD 81                   		mov.L	88[r0], r1
 2127                             	.LBE742:
 2128                             	.LBE741:
 2129                             	.LBB756:
 2130                             	.LBB757:
 2131 056e ED 0B 10                		mov.L	64[r0], r11
 2132                             	.LBE757:
 2133                             	.LBE756:
 2134                             	.LBB770:
 2135                             	.LBB743:
 2136 0571 EF 18                   		mov.L	r1, r8
 2137 0573 61 55                   		cmp	#5, r5
 2138 0575 2A 05 38 A0 00          		ble	.L199
 2139                             	.LBE743:
 2140                             	.LBE770:
 2141                             		.loc 4 492 5 is_stmt 1
 2142                             	.LVL204:
 2143                             	.LBB771:
 2144                             	.LBB744:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2145                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2146                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2147                             		.loc 4 198 5
 2148                             	.LBE744:
 2149                             	.LBE771:
 2150                             	.LBB772:
 2151                             	.LBB758:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2152                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2153                             		.loc 4 197 5
 2154                             	.LBE758:
 2155                             	.LBE772:
 2156                             		.loc 4 492 5 is_stmt 0
 2157 057a EC 17                   		mov.L	[r1], r7
 2158 057c 06 84 B7                		cmp	[r11].L, r7
 2159 057f 3B B9 FC                		bne	.L31
 2160                             	.LVL205:
 2161                             		.loc 4 492 5 is_stmt 1
 2162                             	.LBB773:
 2163                             	.LBB745:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2164                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2165                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2166                             		.loc 4 198 5
 2167                             	.LBE745:
 2168                             	.LBE773:
 2169                             	.LBB774:
 2170                             	.LBB759:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2171                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2172                             		.loc 4 197 5
 2173                             	.LBE759:
 2174                             	.LBE774:
 2175                             		.loc 4 492 5 is_stmt 0
 2176 0582 A8 1F                   		mov.L	4[r1], r7
 2177 0584 06 85 B7 01             		cmp	4[r11].L, r7
 2178 0588 3B B0 FC                		bne	.L31
 2179                             	.LVL206:
 2180                             		.loc 4 492 5 is_stmt 1
 2181                             	.LBB775:
 2182                             	.LBB746:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2183                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2184                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2185                             		.loc 4 198 5
 2186                             	.LBE746:
 2187                             	.LBE775:
 2188                             	.LBB776:
 2189                             	.LBB760:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2190                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2191                             		.loc 4 197 5
 2192                             	.LBE760:
 2193                             	.LBE776:
 2194                             		.loc 4 492 5 is_stmt 0
 2195 058b ED B7 02                		mov.L	8[r11], r7
 2196 058e 06 85 17 02             		cmp	8[r1].L, r7
 2197 0592 3B A6 FC                		bne	.L31
 2198                             	.LVL207:
 2199                             		.loc 4 492 5 is_stmt 1
 2200                             	.LBB777:
 2201                             	.LBB747:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2202                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2203                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2204                             		.loc 4 198 5
 2205                             	.LBE747:
 2206                             	.LBE777:
 2207                             	.LBB778:
 2208                             	.LBB761:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2209                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2210                             		.loc 4 197 5
 2211                             	.LBE761:
 2212                             	.LBE778:
 2213                             		.loc 4 492 5 is_stmt 0
 2214 0595 ED B7 03                		mov.L	12[r11], r7
 2215 0598 06 85 17 03             		cmp	12[r1].L, r7
 2216 059c 3B 9C FC                		bne	.L31
 2217                             	.LVL208:
 2218                             		.loc 4 492 5 is_stmt 1
 2219                             	.LBB779:
 2220                             	.LBB748:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2221                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2222                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2223                             		.loc 4 198 5
 2224                             	.LBE748:
 2225                             	.LBE779:
 2226                             	.LBB780:
 2227                             	.LBB762:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2228                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2229                             		.loc 4 197 5
 2230                             	.LBE762:
 2231                             	.LBE780:
 2232                             		.loc 4 492 5 is_stmt 0
 2233 059f A9 17                   		mov.L	16[r1], r7
 2234 05a1 06 85 B7 04             		cmp	16[r11].L, r7
 2235 05a5 3B 93 FC                		bne	.L31
 2236                             	.LVL209:
 2237                             		.loc 4 492 5 is_stmt 1
 2238                             	.LBB781:
 2239                             	.LBB749:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2240                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2241                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2242                             		.loc 4 198 5
 2243                             	.LBE749:
 2244                             	.LBE781:
 2245                             	.LBB782:
 2246                             	.LBB763:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2247                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2248                             		.loc 4 197 5
 2249                             	.LBE763:
 2250                             	.LBE782:
 2251                             		.loc 4 492 5 is_stmt 0
 2252 05a8 A9 1F                   		mov.L	20[r1], r7
 2253 05aa 06 85 B7 05             		cmp	20[r11].L, r7
 2254 05ae 3B 8A FC                		bne	.L31
 2255                             	.LVL210:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2256                             		.loc 4 491 21
 2257 05b1 61 65                   		cmp	#6, r5
 2258 05b3 20 1B                   		beq	.L67
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2259                             		.loc 4 491 3
 2260 05b5 66 67                   		mov.L	#6, r7
 2261                             	.LVL211:
 2262 05b7 03                      		.balign 8,3,3
 2263                             	.L68:
 2264                             		.loc 4 492 5 is_stmt 1
 2265                             	.LBB783:
 2266                             	.LBB750:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2267                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2268                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2269                             		.loc 4 198 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2270                             		.loc 4 198 34 is_stmt 0
 2271 05b8 FE 67 1A                		mov.L	[r7,r1], r10
 2272                             	.LVL212:
 2273                             	.LBE750:
 2274                             	.LBE783:
 2275                             	.LBB784:
 2276                             	.LBB764:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2277                             		.loc 4 196 5 is_stmt 1
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2278                             		.loc 4 197 5
 2279 05bb 47 72                   		cmp	r7, r2
 2280 05bd 3A 7B FC                		beq	.L31
 2281                             	.LVL213:
 2282                             	.LBE764:
 2283                             	.LBE784:
 2284                             		.loc 4 492 5 is_stmt 0
 2285 05c0 FE 67 B9                		mov.L	[r7,r11], r9
 2286 05c3 47 A9                   		cmp	r10, r9
 2287 05c5 3B 73 FC                		bne	.L31
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2288                             		.loc 4 491 3
 2289 05c8 62 17                   		add	#1, r7
 2290                             	.LVL214:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2291                             		.loc 4 491 21
 2292 05ca 47 75                   		cmp	r7, r5
 2293 05cc 21 EC                   		bne	.L68
 2294                             	.LVL215:
 2295                             		.balign 8,3,1
 2296                             	.L67:
 2297                             	.LBE740:
 2298                             	.LBB795:
 2299                             	.LBB796:
 2300                             	.LBB797:
 2301                             	.LBB798:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2302                             		.loc 4 214 34
 2303 05ce 66 1A                   		mov.L	#1, r10
 2304 05d0 66 07                   		mov.L	#0, r7
 2305                             		.balign 8,3,3
 2306                             	.L73:
 2307                             	.LVL216:
 2308                             	.LBE798:
 2309                             	.LBE797:
 2310                             	.LBB802:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 2311                             		.loc 4 275 7 is_stmt 1
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 2312                             		.loc 4 275 19 is_stmt 0
 2313 05d2 FE 67 89                		mov.L	[r7,r8], r9
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 2314                             		.loc 4 274 5
 2315 05d5 62 17                   		add	#1, r7
 2316                             	.LVL217:
 275:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     }
 2317                             		.loc 4 275 19
 2318 05d7 4F 9A                   		mul	r9, r10
 2319                             	.LVL218:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 2320                             		.loc 4 274 23
 2321 05d9 47 75                   		cmp	r7, r5
 2322 05db 2A F7                   		bgt	.L73
 2323                             	.LVL219:
 2324                             	.LBE802:
 2325                             	.LBE796:
 2326                             	.LBE795:
 2327                             	.LBE815:
 2328                             	.LBE820:
 2329                             	.LBB821:
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const int32_t val = input_data[i];
 2330                             		.loc 8 39 21
 2331 05dd 61 0A                   		cmp	#0, r10
 2332 05df 2B 1B                   		ble	.L74
 2333 05e1 4B AA                   		add	r10, r10
 2334                             	.LVL220:
 2335 05e3 4B 6A                   		add	r6, r10
 2336                             	.LVL221:
 2337 05e5 FC 13 00                		.balign 8,3,5
 2338                             	.L75:
 2339                             	.LBB822:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const OutputT result = static_cast<OutputT>(scale * (val - zero_point));
 2340                             		.loc 8 40 19
 2341 05e8 FD 29 67                		mov.W	[r6+], r7
 2342                             	.LVL222:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2343                             		.loc 8 41 62
 2344 05eb 43 37                   		sub	r3, r7
 2345                             	.LVL223:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2346                             		.loc 8 41 55
 2347 05ed FC 47 77                		itof	r7, r7
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2348                             		.loc 8 41 19
 2349 05f0 FC 8F 47                		fmul	r4, r7
 2350                             	.LVL224:
 2351                             		.loc 8 42 5
 2352 05f3 FD 22 C7                		mov.L	r7, [r12+]
 2353                             	.LBE822:
  39:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const int32_t val = input_data[i];
 2354                             		.loc 8 39 21
 2355 05f6 47 A6                   		cmp	r10, r6
 2356 05f8 21 F0                   		bne	.L75
 2357                             	.LVL225:
 2358                             		.balign 8,3,1
 2359                             	.L74:
 2360                             	.LBE821:
 2361                             	.LBE829:
 2362                             	.LBE836:
 2363                             	.LBB837:
 2364                             	.LBB838:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2365                             		.loc 4 185 5 is_stmt 1
 2366 05fa 61 52                   		cmp	#5, r2
 2367 05fc 2B 0F                   		ble	.L71
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2368                             		.loc 4 189 7
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2369                             		.loc 4 189 29 is_stmt 0
 2370 05fe 61 0B                   		cmp	#0, r11
 2371 0600 3A 83 FC                		beq	.L116
 189:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2372                             		.loc 4 189 16
 2373 0603 EF B1                   		mov.L	r11, r1
 2374 0605 05 00 00 00             		bsr	__ZdaPv
 2375                             	.LVL226:
 2376 0609 AD 0D                   		mov.L	84[r0], r5
 2377                             	.LVL227:
 2378                             		.balign 8,3,1
 2379                             	.L71:
 2380                             	.LBE838:
 2381                             	.LBE837:
 2382                             	.LBB840:
 2383                             	.LBB617:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2384                             		.loc 4 185 5 is_stmt 1
 2385 060b 61 55                   		cmp	#5, r5
 2386 060d 2A 05 38 7B FC          		ble	.L103
 2387 0612 AD 81                   		mov.L	88[r0], r1
 2388 0614 38 6F FC                		bra	.L116
 2389                             	.LVL228:
 2390                             	.L199:
 2391                             	.LBE617:
 2392                             	.LBE840:
 2393                             	.LBB841:
 2394                             	.LBB830:
 2395                             	.LBB824:
 2396                             	.LBB816:
 2397                             	.LBB809:
 2398                             		.loc 4 492 5
 2399                             	.LBB785:
 2400                             	.LBB751:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2401                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2402                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2403                             		.loc 4 198 5
 2404                             	.LBE751:
 2405                             	.LBE785:
 2406                             	.LBB786:
 2407                             	.LBB765:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2408                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2409                             		.loc 4 197 5
 2410                             	.LBE765:
 2411                             	.LBE786:
 2412                             		.loc 4 492 5 is_stmt 0
 2413 0617 47 B1                   		cmp	r11, r1
 2414 0619 3B 1F FC                		bne	.L31
 2415                             	.LVL229:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2416                             		.loc 4 491 21
 2417 061c 61 15                   		cmp	#1, r5
 2418 061e 3A 1B 01                		beq	.L132
 2419                             		.loc 4 492 5 is_stmt 1
 2420                             	.LVL230:
 2421                             	.LBB787:
 2422                             	.LBB752:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2423                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2424                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2425                             		.loc 4 198 5
 2426                             	.LBE752:
 2427                             	.LBE787:
 2428                             	.LBB788:
 2429                             	.LBB766:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2430                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2431                             		.loc 4 197 5
 2432                             	.LBE766:
 2433                             	.LBE788:
 2434                             		.loc 4 492 5 is_stmt 0
 2435 0621 AD 8F                   		mov.L	92[r0], r7
 2436 0623 06 85 07 11             		cmp	68[r0].L, r7
 2437 0627 3B 11 FC                		bne	.L31
 2438                             	.LVL231:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2439                             		.loc 4 491 21
 2440 062a 61 25                   		cmp	#2, r5
 2441 062c 3A 0D 01                		beq	.L132
 2442                             		.loc 4 492 5 is_stmt 1
 2443                             	.LVL232:
 2444                             	.LBB789:
 2445                             	.LBB753:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2446                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2447                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2448                             		.loc 4 198 5
 2449                             	.LBE753:
 2450                             	.LBE789:
 2451                             	.LBB790:
 2452                             	.LBB767:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2453                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2454                             		.loc 4 197 5
 2455                             	.LBE767:
 2456                             	.LBE790:
 2457                             		.loc 4 492 5 is_stmt 0
 2458 062f AE 07                   		mov.L	96[r0], r7
 2459 0631 06 85 07 12             		cmp	72[r0].L, r7
 2460 0635 3B 03 FC                		bne	.L31
 2461                             	.LVL233:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2462                             		.loc 4 491 21
 2463 0638 61 35                   		cmp	#3, r5
 2464 063a 3A FF 00                		beq	.L132
 2465                             		.loc 4 492 5 is_stmt 1
 2466                             	.LVL234:
 2467                             	.LBB791:
 2468                             	.LBB754:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2469                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2470                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2471                             		.loc 4 198 5
 2472                             	.LBE754:
 2473                             	.LBE791:
 2474                             	.LBB792:
 2475                             	.LBB768:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2476                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2477                             		.loc 4 197 5
 2478                             	.LBE768:
 2479                             	.LBE792:
 2480                             		.loc 4 492 5 is_stmt 0
 2481 063d AC 8F                   		mov.L	76[r0], r7
 2482 063f 06 85 07 19             		cmp	100[r0].L, r7
 2483 0643 3B F5 FB                		bne	.L31
 2484                             	.LVL235:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2485                             		.loc 4 491 21
 2486 0646 61 45                   		cmp	#4, r5
 2487 0648 3A F1 00                		beq	.L132
 2488                             		.loc 4 492 5 is_stmt 1
 2489                             	.LVL236:
 2490                             	.LBB793:
 2491                             	.LBB755:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2492                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2493                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2494                             		.loc 4 198 5
 2495                             	.LBE755:
 2496                             	.LBE793:
 2497                             	.LBB794:
 2498                             	.LBB769:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2499                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2500                             		.loc 4 197 5
 2501                             	.LBE769:
 2502                             	.LBE794:
 2503                             		.loc 4 492 5 is_stmt 0
 2504 064b AD 07                   		mov.L	80[r0], r7
 2505                             	.LBE809:
 2506                             	.LBB810:
 2507                             	.LBB806:
 2508                             	.LBB803:
 2509                             	.LBB799:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2510                             		.loc 4 214 34
 2511 064d 71 08 58                		add	#0x58, r0, r8
 2512                             	.LBE799:
 2513                             	.LBE803:
 2514                             	.LBE806:
 2515                             	.LBE810:
 2516                             	.LBB811:
 2517                             		.loc 4 492 5
 2518 0650 06 85 07 1A             		cmp	104[r0].L, r7
 2519 0654 3A 7A FF                		beq	.L67
 2520                             	.LBE811:
 2521                             	.LBE816:
 2522                             	.LBE824:
 2523                             	.LBE830:
 2524                             	.LBE841:
 2525                             	.LBE862:
  80:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 2526                             		.loc 1 80 3
 2527 0657 05 00 00 00             		bsr	_abort
 2528                             	.LVL237:
 2529                             	.L198:
 2530                             	.LBB863:
 2531                             	.LBB842:
 2532                             	.LBB722:
 2533                             	.LBB716:
 2534                             	.LBB708:
 2535                             	.LBB701:
 2536                             		.loc 4 492 5 is_stmt 1
 2537                             	.LBB677:
 2538                             	.LBB643:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2539                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2540                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2541                             		.loc 4 198 5
 2542                             	.LBE643:
 2543                             	.LBE677:
 2544                             	.LBB678:
 2545                             	.LBB657:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2546                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2547                             		.loc 4 197 5
 2548                             	.LBE657:
 2549                             	.LBE678:
 2550                             		.loc 4 492 5 is_stmt 0
 2551 065b 47 1C                   		cmp	r1, r12
 2552 065d 3B DB FB                		bne	.L31
 2553                             	.LVL238:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2554                             		.loc 4 491 21
 2555 0660 61 14                   		cmp	#1, r4
 2556 0662 3A D0 00                		beq	.L127
 2557                             		.loc 4 492 5 is_stmt 1
 2558                             	.LVL239:
 2559                             	.LBB679:
 2560                             	.LBB644:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2561                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2562                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2563                             		.loc 4 198 5
 2564                             	.LBE644:
 2565                             	.LBE679:
 2566                             	.LBB680:
 2567                             	.LBB658:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2568                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2569                             		.loc 4 197 5
 2570                             	.LBE658:
 2571                             	.LBE680:
 2572                             		.loc 4 492 5 is_stmt 0
 2573 0665 AF 0F                   		mov.L	116[r0], r7
 2574 0667 06 85 07 23             		cmp	140[r0].L, r7
 2575 066b 3B CD FB                		bne	.L31
 2576                             	.LVL240:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2577                             		.loc 4 491 21
 2578 066e 61 24                   		cmp	#2, r4
 2579 0670 3A C2 00                		beq	.L127
 2580                             		.loc 4 492 5 is_stmt 1
 2581                             	.LVL241:
 2582                             	.LBB681:
 2583                             	.LBB645:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2584                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2585                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2586                             		.loc 4 198 5
 2587                             	.LBE645:
 2588                             	.LBE681:
 2589                             	.LBB682:
 2590                             	.LBB659:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2591                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2592                             		.loc 4 197 5
 2593                             	.LBE659:
 2594                             	.LBE682:
 2595                             		.loc 4 492 5 is_stmt 0
 2596 0673 AF 87                   		mov.L	120[r0], r7
 2597 0675 06 85 07 24             		cmp	144[r0].L, r7
 2598 0679 3B BF FB                		bne	.L31
 2599                             	.LVL242:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2600                             		.loc 4 491 21
 2601 067c 61 34                   		cmp	#3, r4
 2602 067e 3A B4 00                		beq	.L127
 2603                             		.loc 4 492 5 is_stmt 1
 2604                             	.LVL243:
 2605                             	.LBB683:
 2606                             	.LBB646:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2607                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2608                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2609                             		.loc 4 198 5
 2610                             	.LBE646:
 2611                             	.LBE683:
 2612                             	.LBB684:
 2613                             	.LBB660:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2614                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2615                             		.loc 4 197 5
 2616                             	.LBE660:
 2617                             	.LBE684:
 2618                             		.loc 4 492 5 is_stmt 0
 2619 0681 AF 8F                   		mov.L	124[r0], r7
 2620 0683 06 85 07 25             		cmp	148[r0].L, r7
 2621 0687 3B B1 FB                		bne	.L31
 2622                             	.LVL244:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2623                             		.loc 4 491 21
 2624 068a 61 44                   		cmp	#4, r4
 2625 068c 3A A6 00                		beq	.L127
 2626                             		.loc 4 492 5 is_stmt 1
 2627                             	.LVL245:
 2628                             	.LBB685:
 2629                             	.LBB647:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2630                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2631                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2632                             		.loc 4 198 5
 2633                             	.LBE647:
 2634                             	.LBE685:
 2635                             	.LBB686:
 2636                             	.LBB661:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2637                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2638                             		.loc 4 197 5
 2639                             	.LBE661:
 2640                             	.LBE686:
 2641                             		.loc 4 492 5 is_stmt 0
 2642 068f ED 07 20                		mov.L	128[r0], r7
 2643                             	.LBE701:
 2644                             	.LBB702:
 2645                             	.LBB698:
 2646                             	.LBB695:
 2647                             	.LBB691:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2648                             		.loc 4 214 34
 2649 0692 72 08 88 00             		add	#0x88, r0, r8
 2650                             	.LBE691:
 2651                             	.LBE695:
 2652                             	.LBE698:
 2653                             	.LBE702:
 2654                             	.LBB703:
 2655                             		.loc 4 492 5
 2656 0696 06 85 07 26             		cmp	152[r0].L, r7
 2657 069a 3A 5C FE                		beq	.L53
 2658                             	.LBE703:
 2659                             	.LBE708:
 2660                             	.LBE716:
 2661                             	.LBE722:
 2662                             	.LBE842:
 2663                             	.LBE863:
  80:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 2664                             		.loc 1 80 3
 2665 069d 05 00 00 00             		bsr	_abort
 2666                             	.LVL246:
 2667                             	.L197:
 2668                             	.LBB864:
 2669                             	.LBB843:
 2670                             	.LBB608:
 2671                             	.LBB602:
 2672                             	.LBB594:
 2673                             	.LBB587:
 2674                             		.loc 4 492 5 is_stmt 1
 2675                             	.LBB577:
 2676                             	.LBB543:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2677                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2678                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2679                             		.loc 4 198 5
 2680                             	.LBE543:
 2681                             	.LBE577:
 2682                             	.LBB578:
 2683                             	.LBB557:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2684                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2685                             		.loc 4 197 5
 2686                             	.LBE557:
 2687                             	.LBE578:
 2688                             		.loc 4 492 5 is_stmt 0
 2689 06a1 47 1C                   		cmp	r1, r12
 2690 06a3 3B 95 FB                		bne	.L31
 2691                             	.LVL247:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2692                             		.loc 4 491 21
 2693 06a6 61 14                   		cmp	#1, r4
 2694 06a8 3A 94 FB                		beq	.L122
 2695                             		.loc 4 492 5 is_stmt 1
 2696                             	.LVL248:
 2697                             	.LBB579:
 2698                             	.LBB544:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2699                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2700                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2701                             		.loc 4 198 5
 2702                             	.LBE544:
 2703                             	.LBE579:
 2704                             	.LBB580:
 2705                             	.LBB558:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2706                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2707                             		.loc 4 197 5
 2708                             	.LBE558:
 2709                             	.LBE580:
 2710                             		.loc 4 492 5 is_stmt 0
 2711 06ab ED 07 2F                		mov.L	188[r0], r7
 2712 06ae 06 85 07 29             		cmp	164[r0].L, r7
 2713 06b2 3B 86 FB                		bne	.L31
 2714                             	.LVL249:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2715                             		.loc 4 491 21
 2716 06b5 61 24                   		cmp	#2, r4
 2717 06b7 3A 85 FB                		beq	.L122
 2718                             		.loc 4 492 5 is_stmt 1
 2719                             	.LVL250:
 2720                             	.LBB581:
 2721                             	.LBB545:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2722                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2723                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2724                             		.loc 4 198 5
 2725                             	.LBE545:
 2726                             	.LBE581:
 2727                             	.LBB582:
 2728                             	.LBB559:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2729                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2730                             		.loc 4 197 5
 2731                             	.LBE559:
 2732                             	.LBE582:
 2733                             		.loc 4 492 5 is_stmt 0
 2734 06ba ED 07 30                		mov.L	192[r0], r7
 2735 06bd 06 85 07 2A             		cmp	168[r0].L, r7
 2736 06c1 3B 77 FB                		bne	.L31
 2737                             	.LVL251:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2738                             		.loc 4 491 21
 2739 06c4 61 34                   		cmp	#3, r4
 2740 06c6 3A 76 FB                		beq	.L122
 2741                             		.loc 4 492 5 is_stmt 1
 2742                             	.LVL252:
 2743                             	.LBB583:
 2744                             	.LBB546:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2745                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2746                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2747                             		.loc 4 198 5
 2748                             	.LBE546:
 2749                             	.LBE583:
 2750                             	.LBB584:
 2751                             	.LBB560:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2752                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2753                             		.loc 4 197 5
 2754                             	.LBE560:
 2755                             	.LBE584:
 2756                             		.loc 4 492 5 is_stmt 0
 2757 06c9 ED 07 31                		mov.L	196[r0], r7
 2758 06cc 06 85 07 2B             		cmp	172[r0].L, r7
 2759 06d0 3B 68 FB                		bne	.L31
 2760                             	.LVL253:
 491:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 2761                             		.loc 4 491 21
 2762 06d3 61 44                   		cmp	#4, r4
 2763 06d5 3A 67 FB                		beq	.L122
 2764                             		.loc 4 492 5 is_stmt 1
 2765                             	.LVL254:
 2766                             	.LBB585:
 2767                             	.LBB547:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2768                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2769                             		.loc 4 197 5
 198:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2770                             		.loc 4 198 5
 2771                             	.LBE547:
 2772                             	.LBE585:
 2773                             	.LBB586:
 2774                             	.LBB561:
 196:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 2775                             		.loc 4 196 5
 197:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2776                             		.loc 4 197 5
 2777                             	.LBE561:
 2778                             	.LBE586:
 2779                             		.loc 4 492 5 is_stmt 0
 2780 06d8 ED 07 2C                		mov.L	176[r0], r7
 2781                             	.LBE587:
 2782                             	.LBB588:
 2783                             	.LBB530:
 2784                             	.LBB528:
 2785                             	.LBB525:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2786                             		.loc 4 214 34
 2787 06db 72 08 B8 00             		add	#0xb8, r0, r8
 2788                             	.LBE525:
 2789                             	.LBE528:
 2790                             	.LBE530:
 2791                             	.LBE588:
 2792                             	.LBB589:
 2793                             		.loc 4 492 5
 2794 06df 06 85 07 32             		cmp	200[r0].L, r7
 2795 06e3 3A 5D FB                		beq	.L38
 2796                             	.LBE589:
 2797                             	.LBE594:
 2798                             	.LBE602:
 2799                             	.LBE608:
 2800                             	.LBE843:
 2801                             	.LBE864:
  80:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 2802                             		.loc 1 80 3
 2803 06e6 05 00 00 00             		bsr	_abort
 2804                             	.LVL255:
 2805                             	.L104:
 2806                             	.LBB865:
 2807                             	.LBB844:
 2808                             	.LBB512:
 2809                             	.LBB504:
 2810                             	.LBB449:
 2811                             	.LBB447:
 2812                             	.LBB445:
 2813                             	.LBB442:
 2814                             	.LBB438:
 2815                             	.LBB434:
 2816                             	.LBB426:
 2817                             		.loc 7 371 50
 2818 06ea 66 1C                   		mov.L	#1, r12
 2819                             	.LVL256:
 2820 06ec FD 62 1C                		shll	r1, r12
 2821 06ef 38 2C FA                		bra	.L105
 2822                             	.LVL257:
 2823                             	.L91:
 2824                             	.LBE426:
 2825                             	.LBE434:
 2826                             	.LBE438:
 2827                             	.LBE442:
 2828                             	.LBE445:
 2829                             	.LBE447:
 2830                             	.LBE449:
 2831                             	.LBE504:
 2832                             	.LBB505:
 2833                             	.LBB502:
 2834                             	.LBB500:
 2835                             	.LBB498:
 2836                             	.LBB495:
 2837                             	.LBB491:
 2838                             	.LBB487:
 2839                             	.LBB480:
 2840 06f2 66 16                   		mov.L	#1, r6
 2841                             	.LVL258:
 2842 06f4 FD 62 76                		shll	r7, r6
 2843 06f7 38 11 FC                		bra	.L92
 2844                             	.LVL259:
 2845                             	.L138:
 2846                             	.LBE480:
 2847                             	.LBE487:
 2848                             	.LBE491:
 2849                             	.LBE495:
 2850                             	.LBE498:
 2851                             	.LBE500:
 2852                             	.LBE502:
 2853                             	.LBE505:
 2854                             	.LBB506:
 2855                             	.LBB391:
 2856                             	.LBB387:
 2857                             	.LBB383:
 2858                             	.LBB381:
 2859                             	.LBB378:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2860                             		.loc 4 214 34
 2861 06fa 71 04 28                		add	#40, r0, r4
 2862 06fd 38 C1 F9                		bra	.L81
 2863                             	.LVL260:
 2864                             	.L134:
 2865                             	.LBE378:
 2866                             	.LBE381:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 2867                             		.loc 4 272 9
 2868 0700 66 1B                   		mov.L	#1, r11
 2869 0702 38 CB F9                		bra	.L79
 2870                             	.LVL261:
 2871                             	.L36:
 2872                             	.LBE383:
 2873                             	.LBE387:
 2874                             	.LBE391:
 2875                             	.LBE506:
 2876                             	.LBE512:
 2877                             	.LBE844:
 2878                             	.LBB845:
 2879                             	.LBB609:
 2880                             	.LBB603:
 2881                             	.LBB595:
 493:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 494:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   return shape.FlatSize();
 2882                             		.loc 4 494 3 is_stmt 1
 2883                             	.LBB590:
 2884                             	.LBB531:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 2885                             		.loc 4 272 5
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 2886                             		.loc 4 273 5
 2887                             	.LBB529:
 2888                             	.LBB526:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2889                             		.loc 4 214 5
 2890                             	.LBE526:
 2891                             	.LBE529:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 2892                             		.loc 4 274 5
 2893                             	.LBE531:
 2894                             	.LBE590:
 2895                             	.LBE595:
 2896                             	.LBE603:
 2897                             	.LBB604:
 2898                             	.LBB598:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const OutputT result = static_cast<OutputT>(scale * (val - zero_point));
 2899                             		.loc 8 40 19 is_stmt 0
 2900 0705 58 67                   		movu.B	[r6], r7
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2901                             		.loc 8 41 62
 2902 0707 43 27                   		sub	r2, r7
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2903                             		.loc 8 41 55
 2904 0709 FC 47 77                		itof	r7, r7
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2905                             		.loc 8 41 19
 2906 070c FC 8F 73                		fmul	r7, r3
 2907                             	.LVL262:
 2908                             		.loc 8 42 5
 2909 070f E3 93                   		mov.L	r3, [r9]
 2910                             	.LVL263:
 2911                             	.LBE598:
 2912                             	.LBE604:
 2913                             	.LBE609:
 2914                             	.LBE845:
 2915                             	.LBB846:
 2916                             	.LBB612:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2917                             		.loc 4 185 5 is_stmt 1
 2918 0711 38 6B FB                		bra	.L43
 2919                             	.LVL264:
 2920                             	.L51:
 2921                             	.LBE612:
 2922                             	.LBE846:
 2923                             	.LBB847:
 2924                             	.LBB723:
 2925                             	.LBB717:
 2926                             	.LBB709:
 2927                             		.loc 4 494 3
 2928                             	.LBB704:
 2929                             	.LBB699:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 2930                             		.loc 4 272 5
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 2931                             		.loc 4 273 5
 2932                             	.LBB696:
 2933                             	.LBB692:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2934                             		.loc 4 214 5
 2935                             	.LBE692:
 2936                             	.LBE696:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 2937                             		.loc 4 274 5
 2938                             	.LBE699:
 2939                             	.LBE704:
 2940                             	.LBE709:
 2941                             	.LBE717:
 2942                             	.LBB718:
 2943                             	.LBB715:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const OutputT result = static_cast<OutputT>(scale * (val - zero_point));
 2944                             		.loc 8 40 19 is_stmt 0
 2945 0714 CC 67                   		mov.B	[r6], r7
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2946                             		.loc 8 41 62
 2947 0716 43 27                   		sub	r2, r7
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2948                             		.loc 8 41 55
 2949 0718 FC 47 77                		itof	r7, r7
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2950                             		.loc 8 41 19
 2951 071b FC 8F 73                		fmul	r7, r3
 2952                             	.LVL265:
 2953                             		.loc 8 42 5
 2954 071e E3 93                   		mov.L	r3, [r9]
 2955                             	.LVL266:
 2956                             	.LBE715:
 2957                             	.LBE718:
 2958                             	.LBE723:
 2959                             	.LBE847:
 2960                             	.LBB848:
 2961                             	.LBB731:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2962                             		.loc 4 185 5 is_stmt 1
 2963 0720 38 14 FE                		bra	.L58
 2964                             	.LVL267:
 2965                             	.L65:
 2966                             	.LBE731:
 2967                             	.LBE848:
 2968                             	.LBB849:
 2969                             	.LBB831:
 2970                             	.LBB825:
 2971                             	.LBB817:
 2972                             		.loc 4 494 3
 2973                             	.LBB812:
 2974                             	.LBB807:
 272:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 2975                             		.loc 4 272 5
 273:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 2976                             		.loc 4 273 5
 2977                             	.LBB804:
 2978                             	.LBB800:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 2979                             		.loc 4 214 5
 2980                             	.LBE800:
 2981                             	.LBE804:
 274:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 2982                             		.loc 4 274 5
 2983                             	.LBE807:
 2984                             	.LBE812:
 2985                             	.LBE817:
 2986                             	.LBE825:
 2987                             	.LBB826:
 2988                             	.LBB823:
  40:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     const OutputT result = static_cast<OutputT>(scale * (val - zero_point));
 2989                             		.loc 8 40 19 is_stmt 0
 2990 0723 DC 67                   		mov.W	[r6], r7
 2991                             	.LVL268:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2992                             		.loc 8 41 62
 2993 0725 43 37                   		sub	r3, r7
 2994                             	.LVL269:
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2995                             		.loc 8 41 55
 2996 0727 FC 47 77                		itof	r7, r7
  41:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal/reference\dequantize.h ****     output_data[i] = result;
 2997                             		.loc 8 41 19
 2998 072a FC 8F 74                		fmul	r7, r4
 2999                             	.LVL270:
 3000                             		.loc 8 42 5
 3001 072d E3 C4                   		mov.L	r4, [r12]
 3002                             	.LVL271:
 3003                             	.LBE823:
 3004                             	.LBE826:
 3005                             	.LBE831:
 3006                             	.LBE849:
 3007                             	.LBB850:
 3008                             	.LBB839:
 185:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 3009                             		.loc 4 185 5 is_stmt 1
 3010 072f 38 DC FE                		bra	.L71
 3011                             	.LVL272:
 3012                             	.L127:
 3013                             	.LBE839:
 3014                             	.LBE850:
 3015                             	.LBB851:
 3016                             	.LBB724:
 3017                             	.LBB719:
 3018                             	.LBB710:
 3019                             	.LBB705:
 3020                             	.LBB700:
 3021                             	.LBB697:
 3022                             	.LBB693:
 214:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src/tensorflow/lite/kernels/internal\types.h ****   }
 3023                             		.loc 4 214 34 is_stmt 0
 3024 0732 72 08 88 00             		add	#0x88, r0, r8
 3025 0736 38 C0 FD                		bra	.L53
 3026                             	.LVL273:
 3027                             	.L132:
 3028                             	.LBE693:
 3029                             	.LBE697:
 3030                             	.LBE700:
 3031                             	.LBE705:
 3032                             	.LBE710:
 3033                             	.LBE719:
 3034                             	.LBE724:
 3035                             	.LBE851:
 3036                             	.LBB852:
 3037                             	.LBB832:
 3038                             	.LBB827:
 3039                             	.LBB818:
 3040                             	.LBB813:
 3041                             	.LBB808:
 3042                             	.LBB805:
 3043                             	.LBB801:
 3044 0739 71 08 58                		add	#0x58, r0, r8
 3045 073c 38 92 FE                		bra	.L67
 3046                             	.LVL274:
 3047                             	.L93:
 3048                             	.LBE801:
 3049                             	.LBE805:
 3050                             	.LBE808:
 3051                             	.LBE813:
 3052                             	.LBE818:
 3053                             	.LBE827:
 3054                             	.LBE832:
 3055                             	.LBE852:
 3056                             	.LBB853:
 3057                             	.LBB513:
 3058                             	.LBB507:
 3059                             	.LBB503:
 3060                             	.LBB501:
 3061                             	.LBB499:
 3062                             	.LBB496:
 3063                             	.LBB492:
 3064                             	.LBB488:
 3065                             	.LBB481:
 370:C:\Users\a5116938\Desktop\e2_studio_workspace\EEMBC_final\RX65N_Cloud_Kit\src\third_party\gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 3066                             		.loc 7 370 3
 3067 073f FB 42 23 00 00 00       		mov.L	#.LC12, r4
 3068 0745 FB 32 00 00 00 00       		mov.L	#.LANCHOR0, r3
 3069 074b FB 2A 72 01             		mov.L	#0x172, r2
 3070 074f FB 12 32 00 00 00       		mov.L	#.LC13, r1
 3071 0755 05 00 00 00             		bsr	___assert_func
 3072                             	.LVL275:
 3073                             	.LBE481:
 3074                             	.LBE488:
 3075                             	.LBE492:
 3076                             	.LBE496:
 3077                             	.LBE499:
 3078                             	.LBE501:
 3079                             	.LBE503:
 3080                             	.LBE507:
 3081                             	.LBE513:
 3082                             	.LBE853:
 3083                             	.LBE865:
 3084                             	.LFE2559:
 3086 0759 FD 70 40 00 00 00 80    		.section	.text._ZN6tflite3ops5micro19Register_DEQUANTIZEEv,"ax",@progbits
 3087                             		.global	__ZN6tflite3ops5micro19Register_DEQUANTIZEEv
 3089                             	__ZN6tflite3ops5micro19Register_DEQUANTIZEEv:
 3090                             	.LFB2560:
 150:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
 151:../src/tensorflow/lite/micro/kernels/dequantize.cc **** }  // namespace dequantize
 152:../src/tensorflow/lite/micro/kernels/dequantize.cc **** 
 153:../src/tensorflow/lite/micro/kernels/dequantize.cc **** TfLiteRegistration Register_DEQUANTIZE() {
 3091                             		.loc 1 153 42 is_stmt 1
 154:../src/tensorflow/lite/micro/kernels/dequantize.cc ****   return {/*init=*/dequantize::Init,
 3092                             		.loc 1 154 3
 155:../src/tensorflow/lite/micro/kernels/dequantize.cc ****           /*free=*/nullptr,
 156:../src/tensorflow/lite/micro/kernels/dequantize.cc ****           /*prepare=*/dequantize::Prepare,
 157:../src/tensorflow/lite/micro/kernels/dequantize.cc ****           /*invoke=*/dequantize::Eval,
 158:../src/tensorflow/lite/micro/kernels/dequantize.cc ****           /*profiling_string=*/nullptr,
 159:../src/tensorflow/lite/micro/kernels/dequantize.cc ****           /*builtin_code=*/0,
 160:../src/tensorflow/lite/micro/kernels/dequantize.cc ****           /*custom_name=*/nullptr,
 161:../src/tensorflow/lite/micro/kernels/dequantize.cc ****           /*version=*/0};
 3093                             		.loc 1 161 24 is_stmt 0
 3094 0000 FB 22 00 00 00 00       		mov.L	#.LANCHOR1, r2
 3095 0006 EF F1                   		mov.L	r15, r1
 3096 0008 75 43 20                		mov.L	#32, r3
 3097 000b 7F 8F                   		smovf
 162:../src/tensorflow/lite/micro/kernels/dequantize.cc **** }
 3098                             		.loc 1 162 1
 3099 000d EF F1                   		mov.L	r15, r1
 3100 000f 02                      		rts
 3101                             	.LFE2560:
 3103                             		.section C,"a",@progbits
 3104                             		.p2align 2
 3105                             		.balign 4
 3106                             		.set	.LANCHOR1,. + 0
 3107                             	.LC0:
 3108 0000 00 00 00 00             		.long	__ZN6tflite3ops5micro10dequantize4InitEP13TfLiteContextPKcm
 3109 0004 00 00 00 00             		.long	0
 3110 0008 00 00 00 00             		.long	__ZN6tflite3ops5micro10dequantize7PrepareEP13TfLiteContextP10TfLiteNode
 3111 000c 00 00 00 00             		.long	__ZN6tflite3ops5micro10dequantize4EvalEP13TfLiteContextP10TfLiteNode
 3112 0010 00 00 00 00             		.long	0
 3113 0014 00 00 00 00             		.long	0
 3114 0018 00 00 00 00             		.long	0
 3115 001c 00 00 00 00             		.long	0
 3116                             		.section	.rodata._ZN6tflite3ops5micro10dequantize4EvalEP13TfLiteContextP10TfLiteNode.str1.1,"aMS",
 3117                             	.LC11:
 3118 0000 49 6E 70 75 74 20 25 73 		.string	"Input %s, output %s not supported."
 3118      2C 20 6F 75 74 70 75 74 
 3118      20 25 73 20 6E 6F 74 20 
 3118      73 75 70 70 6F 72 74 65 
 3118      64 2E 00 
 3119                             	.LC12:
 3120 0023 65 78 70 6F 6E 65 6E 74 		.string	"exponent <= 31"
 3120      20 3C 3D 20 33 31 00 
 3121                             	.LC13:
 3122 0032 43 3A 5C 55 73 65 72 73 		.string	"C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src\\thi
 3122      5C 61 35 31 31 36 39 33 
 3122      38 5C 44 65 73 6B 74 6F 
 3122      70 5C 65 32 5F 73 74 75 
 3122      64 69 6F 5F 77 6F 72 6B 
 3123                             		.section	.rodata._ZN6tflite3ops5micro10dequantize7PrepareEP13TfLiteContextP10TfLiteNode.str1.1,"aM
 3124                             	.LC1:
 3125 0000 31 00                   		.string	"1"
 3126                             	.LC2:
 3127 0002 4E 75 6D 49 6E 70 75 74 		.string	"NumInputs(node)"
 3127      73 28 6E 6F 64 65 29 00 
 3128                             	.LC3:
 3129 0012 2E 2E 2F 73 72 63 2F 74 		.string	"../src/tensorflow/lite/micro/kernels/dequantize.cc"
 3129      65 6E 73 6F 72 66 6C 6F 
 3129      77 2F 6C 69 74 65 2F 6D 
 3129      69 63 72 6F 2F 6B 65 72 
 3129      6E 65 6C 73 2F 64 65 71 
 3130                             	.LC4:
 3131 0045 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s != %s (%d != %d)"
 3131      20 21 3D 20 25 73 20 28 
 3131      25 64 20 21 3D 20 25 64 
 3131      29 00 
 3132                             	.LC5:
 3133 005f 4E 75 6D 4F 75 74 70 75 		.string	"NumOutputs(node)"
 3133      74 73 28 6E 6F 64 65 29 
 3133      00 
 3134                             	.LC6:
 3135 0070 69 6E 70 75 74 20 21 3D 		.string	"input != nullptr"
 3135      20 6E 75 6C 6C 70 74 72 
 3135      00 
 3136                             	.LC7:
 3137 0081 25 73 3A 25 64 20 25 73 		.string	"%s:%d %s was not true."
 3137      20 77 61 73 20 6E 6F 74 
 3137      20 74 72 75 65 2E 00 
 3138                             	.LC8:
 3139 0098 6F 75 74 70 75 74 20 21 		.string	"output != nullptr"
 3139      3D 20 6E 75 6C 6C 70 74 
 3139      72 00 
 3140                             	.LC9:
 3141 00aa 69 6E 70 75 74 2D 3E 74 		.string	"input->type == kTfLiteUInt8 || input->type == kTfLiteInt8 || input->type == kTfLiteInt16"
 3141      79 70 65 20 3D 3D 20 6B 
 3141      54 66 4C 69 74 65 55 49 
 3141      6E 74 38 20 7C 7C 20 69 
 3141      6E 70 75 74 2D 3E 74 79 
 3142                             	.LC10:
 3143 0103 6F 75 74 70 75 74 2D 3E 		.string	"output->type == kTfLiteFloat32 || output->type == kTfLiteInt32"
 3143      74 79 70 65 20 3D 3D 20 
 3143      6B 54 66 4C 69 74 65 46 
 3143      6C 6F 61 74 33 32 20 7C 
 3143      7C 20 6F 75 74 70 75 74 
 3144                             		.section	.rodata._ZZN8gemmlowp19RoundingDivideByPOTIliEET_S1_T0_E19__PRETTY_FUNCTION__,"a"
 3145                             		.set	.LANCHOR0,. + 0
 3148                             	__ZZN8gemmlowp19RoundingDivideByPOTIliEET_S1_T0_E19__PRETTY_FUNCTION__:
 3149 0000 49 6E 74 65 67 65 72 54 		.string	"IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, ExponentType) [with IntegerType = 
 3149      79 70 65 20 67 65 6D 6D 
 3149      6C 6F 77 70 3A 3A 52 6F 
 3149      75 6E 64 69 6E 67 44 69 
 3149      76 69 64 65 42 79 50 4F 
 3246                             	.Letext0:
 3247                             		.file 9 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3.
 3248                             		.file 10 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3249                             		.file 11 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3250                             		.file 12 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3251                             		.file 13 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3252                             		.file 14 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3253                             		.file 15 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3254                             		.file 16 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3255                             		.file 17 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3256                             		.file 18 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3257                             		.file 19 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3258                             		.file 20 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3259                             		.file 21 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3260                             		.file 22 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3261                             		.file 23 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3262                             		.file 24 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3263                             		.file 25 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3264                             		.file 26 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3265                             		.file 27 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3266                             		.file 28 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3267                             		.file 29 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3268                             		.file 30 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3269                             		.file 31 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\8.3
 3270                             		.file 32 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 3271                             		.file 33 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\machine\
 3272                             		.file 34 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\loc
 3273                             		.file 35 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_ty
 3274                             		.file 36 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\ree
 3275                             		.file 37 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\8.3.0.2
 3276                             		.file 38 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\wchar.h"
 3277                             		.file 39 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_st
 3278                             		.file 40 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdint.h
 3279                             		.file 41 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\locale.h
 3280                             		.file 42 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\ctype.h"
 3281                             		.file 43 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdlib.h
 3282                             		.file 44 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\stdio.h"
 3283                             		.file 45 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\err
 3284                             		.file 46 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
 3285                             		.file 47 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\string.h
 3286                             		.file 48 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 3287                             		.file 49 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 3288                             		.file 50 "C:\\Users\\a5116938\\Desktop\\e2_studio_workspace\\EEMBC_final\\RX65N_Cloud_Kit\\src/ten
 3289                             		.file 51 "c:\\gcc for renesas rx 8.3.0.202004-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\include\\assert.h
 3290                             		.file 52 "<built-in>"
